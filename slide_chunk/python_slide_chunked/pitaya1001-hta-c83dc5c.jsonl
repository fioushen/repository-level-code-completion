{"filename": "sa/sa/player.py", "chunked_list": ["from .common import *\n\nclass Player:\n    def __init__(self):\n        self.health = 100\n        self.armor = 0\n        self.money = 0\n        self.pos = Vec3(0.0, 0.0, 0.0) # player position as Vec3\n        self.dir = Quat(0.0, 0.0, 0.0, 0.0) # player direction as Quat\n        self.cam_pos = None # camera position as Vec3\n        self.cam_dir = None # camera direction as Vec3(Euler angles)\n        self.skin_id = None\n        self.weapon_id = None # id of the weapon being held\n        self.fighting_style = None\n        self.skill_level = None\n        self.vehicle = None # the vehicle the player is inside(as driver or passenger), or None if not in a vehicle\n        self.seat_id = None # the seat(0=driver, 1=front passenger, 2=back left passenger, 3=back right passenger, 4+=other seats(e.g. coach)) if in a vehicle, or None if not in a vehicle", ""]}
{"filename": "sa/sa/skin.py", "chunked_list": ["import enum\n\n# https://team.sa-mp.com/wiki/Skins_All.html\n# https://wiki.multitheftauto.com/wiki/All_Skins_Page\n# https://www.open.mp/docs/scripting/resources/skins\n\nMAX_SKIN_ID = 311\n\nclass Skin:\n    def __init__(self, id, model, male, description):\n        self.id = id\n        self.model = model\n        self.male = bool(male)\n        self.description = description", "class Skin:\n    def __init__(self, id, model, male, description):\n        self.id = id\n        self.model = model\n        self.male = bool(male)\n        self.description = description\n\nskins = [\n#    id    model      male  description\n#    |      |          |    |", "#    id    model      male  description\n#    |      |          |    |\nSkin(0   , 'cj'      , 1 , 'Carl \"CJ\" Johnson (Main Character)'),\nSkin(1   , 'truth'   , 1 , 'The Truth'),\nSkin(2   , 'maccer'  , 1 , 'Maccer'),\nSkin(3   , 'andre'   , 1 , 'Andre'),\nSkin(4   , 'bbthin'  , 1 , 'Barry \"Big Bear\" Thorne [Thin]'),\nSkin(5   , 'bb'      , 1 , 'Barry \"Big Bear\" Thorne [Big]'),\nSkin(6   , 'emmet'   , 1 , 'Emmet'),\nSkin(7   , 'male01'  , 1 , 'Taxi Driver/Train Driver'),", "Skin(6   , 'emmet'   , 1 , 'Emmet'),\nSkin(7   , 'male01'  , 1 , 'Taxi Driver/Train Driver'),\nSkin(8   , 'janitor' , 1 , 'Janitor'),\nSkin(9   , 'bfori'   , 0 , 'Normal Ped'),\nSkin(10  , 'bfost'   , 0 , 'Old Woman'),\nSkin(11  , 'vbfycrp' , 0 , 'Casino croupier'),\nSkin(12  , 'bfyri'   , 0 , 'Rich Woman'),\nSkin(13  , 'bfyst'   , 0 , 'Street Girl'),\nSkin(14  , 'bmori'   , 1 , 'Normal Ped'),\nSkin(15  , 'bmost'   , 1 , 'Mr.Whittaker (RS Haul Owner)'),", "Skin(14  , 'bmori'   , 1 , 'Normal Ped'),\nSkin(15  , 'bmost'   , 1 , 'Mr.Whittaker (RS Haul Owner)'),\nSkin(16  , 'bmyap'   , 1 , 'Airport Ground Worker'),\nSkin(17  , 'bmybu'   , 1 , 'Businessman'),\nSkin(18  , 'bmybe'   , 1 , 'Beach Visitor'),\nSkin(19  , 'bmydj'   , 1 , 'DJ'),\nSkin(20  , 'bmyri'   , 1 , 'Rich Guy (Madd Dogg\\'s Manager)'),\nSkin(21  , 'bmycr'   , 1 , 'Normal Ped'),\nSkin(22  , 'bmyst'   , 1 , 'Normal Ped'),\nSkin(23  , 'wmybmx'  , 1 , 'BMXer'),", "Skin(22  , 'bmyst'   , 1 , 'Normal Ped'),\nSkin(23  , 'wmybmx'  , 1 , 'BMXer'),\nSkin(24  , 'wbdyg1'  , 1 , 'Madd Dogg Bodyguard'),\nSkin(25  , 'wbdyg2'  , 1 , 'Madd Dogg Bodyguard'),\nSkin(26  , 'wmybp'   , 1 , 'Backpacker'),\nSkin(27  , 'wmycon'  , 1 , 'Construction Worker'),\nSkin(28  , 'bmydrug' , 1 , 'Drug Dealer'),\nSkin(29  , 'wmydrug' , 1 , 'Drug Dealer'),\nSkin(30  , 'hmydrug' , 1 , 'Drug Dealer'),\nSkin(31  , 'dwfolc'  , 0 , 'Farm-Town inhabitant'),", "Skin(30  , 'hmydrug' , 1 , 'Drug Dealer'),\nSkin(31  , 'dwfolc'  , 0 , 'Farm-Town inhabitant'),\nSkin(32  , 'dwmolc1' , 1 , 'Farm-Town inhabitant'),\nSkin(33  , 'dwmolc2' , 1 , 'Farm-Town inhabitant'),\nSkin(34  , 'dwmylc1' , 1 , 'Farm-Town inhabitant'),\nSkin(35  , 'hmogar'  , 1 , 'Gardener'),\nSkin(36  , 'wmygol1' , 1 , 'Golfer'),\nSkin(37  , 'wmygol2' , 1 , 'Golfer'),\nSkin(38  , 'hfori'   , 0 , 'Normal Ped'),\nSkin(39  , 'hfost'   , 0 , 'Normal Ped'),", "Skin(38  , 'hfori'   , 0 , 'Normal Ped'),\nSkin(39  , 'hfost'   , 0 , 'Normal Ped'),\nSkin(40  , 'hfyri'   , 0 , 'Normal Ped'),\nSkin(41  , 'hfyst'   , 0 , 'Normal Ped'),\nSkin(42  , 'jethro'  , 1 , 'Jethro'),\nSkin(43  , 'hmori'   , 1 , 'Normal Ped'),\nSkin(44  , 'hmost'   , 1 , 'Normal Ped'),\nSkin(45  , 'hmybe'   , 1 , 'Beach Visitor'),\nSkin(46  , 'hmyri'   , 1 , 'Normal Ped'),\nSkin(47  , 'hmycr'   , 1 , 'Normal Ped'),", "Skin(46  , 'hmyri'   , 1 , 'Normal Ped'),\nSkin(47  , 'hmycr'   , 1 , 'Normal Ped'),\nSkin(48  , 'hmyst'   , 1 , 'Normal Ped'),\nSkin(49  , 'omokung' , 1 , 'Snakehead (Da Nang)'),\nSkin(50  , 'wmymech' , 1 , 'Mechanic'),\nSkin(51  , 'bmymoun' , 1 , 'Mountain Biker'),\nSkin(52  , 'wmymoun' , 1 , 'Mountain Biker'),\nSkin(53  , 'ofori'   , 0 , 'Unknown'),\nSkin(54  , 'ofost'   , 0 , 'Normal Ped'),\nSkin(55  , 'ofyri'   , 0 , 'Normal Ped'),", "Skin(54  , 'ofost'   , 0 , 'Normal Ped'),\nSkin(55  , 'ofyri'   , 0 , 'Normal Ped'),\nSkin(56  , 'ofyst'   , 0 , 'Normal Ped'),\nSkin(57  , 'omori'   , 1 , 'Oriental Ped'),\nSkin(58  , 'omost'   , 1 , 'Oriental Ped'),\nSkin(59  , 'omyri'   , 1 , 'Normal Ped'),\nSkin(60  , 'omyst'   , 1 , 'Normal Ped'),\nSkin(61  , 'wmyplt'  , 1 , 'Pilot'),\nSkin(62  , 'wmopj'   , 1 , 'Colonel Fuhrberger'),\nSkin(63  , 'bfypro'  , 0 , 'Prostitute'),", "Skin(62  , 'wmopj'   , 1 , 'Colonel Fuhrberger'),\nSkin(63  , 'bfypro'  , 0 , 'Prostitute'),\nSkin(64  , 'hfypro'  , 0 , 'Prostitute'),\nSkin(65  , 'kendl'   , 0 , 'Kendl Johnson'),\nSkin(66  , 'bmypol1' , 1 , 'Pool Player'),\nSkin(67  , 'bmypol2' , 1 , 'Pool Player'),\nSkin(68  , 'wmoprea' , 1 , 'Priest/Preacher'),\nSkin(69  , 'sbfyst'  , 0 , 'Normal Ped'),\nSkin(70  , 'wmosci'  , 1 , 'Scientist'),\nSkin(71  , 'wmysgrd' , 1 , 'Security Guard'),", "Skin(70  , 'wmosci'  , 1 , 'Scientist'),\nSkin(71  , 'wmysgrd' , 1 , 'Security Guard'),\nSkin(72  , 'swmyhp1' , 1 , 'Hippy'),\nSkin(73  , 'swmyhp2' , 1 , 'Hippy'),\nSkin(75  , 'swfopro' , 0 , 'Prostitute'),\nSkin(76  , 'wfystew' , 0 , 'Stewardess'),\nSkin(77  , 'swmotr1' , 0 , 'Homeless'),\nSkin(78  , 'wmotr1'  , 1 , 'Homeless'),\nSkin(79  , 'bmotr1'  , 1 , 'Homeless'),\nSkin(80  , 'vbmybox' , 1 , 'Boxer'),", "Skin(79  , 'bmotr1'  , 1 , 'Homeless'),\nSkin(80  , 'vbmybox' , 1 , 'Boxer'),\nSkin(81  , 'vwmybox' , 1 , 'Boxer'),\nSkin(82  , 'vhmyelv' , 1 , 'Black Elvis'),\nSkin(83  , 'vbmyelv' , 1 , 'White Elvis'),\nSkin(84  , 'vimyelv' , 1 , 'Blue Elvis'),\nSkin(85  , 'vwfypro' , 0 , 'Prostitute'),\nSkin(86  , 'ryder3'  , 1 , 'Ryder with robbery mask'),\nSkin(87  , 'vwfyst1' , 0 , 'Stripper'),\nSkin(88  , 'wfori'   , 0 , 'Normal Ped'),", "Skin(87  , 'vwfyst1' , 0 , 'Stripper'),\nSkin(88  , 'wfori'   , 0 , 'Normal Ped'),\nSkin(89  , 'wfost'   , 0 , 'Normal Ped'),\nSkin(90  , 'wfyjg'   , 0 , 'Jogger'),\nSkin(91  , 'wfyri'   , 0 , 'Rich Woman'),\nSkin(92  , 'wfyro'   , 0 , 'Rollerskater'),\nSkin(93  , 'wfyst'   , 0 , 'Normal Ped'),\nSkin(94  , 'wmori'   , 1 , 'Normal Ped'),\nSkin(95  , 'wmost'   , 1 , 'Normal Ped, Works at or owns Dillimore Gas Station'),\nSkin(96  , 'wmyjg'   , 1 , 'Jogger'),", "Skin(95  , 'wmost'   , 1 , 'Normal Ped, Works at or owns Dillimore Gas Station'),\nSkin(96  , 'wmyjg'   , 1 , 'Jogger'),\nSkin(97  , 'wmylg'   , 1 , 'Lifeguard'),\nSkin(98  , 'wmyri'   , 1 , 'Normal Ped'),\nSkin(99  , 'wmyro'   , 1 , 'Rollerskater'),\nSkin(100 , 'wmycr'   , 1 , 'Biker'),\nSkin(101 , 'wmyst'   , 1 , 'Normal Ped'),\nSkin(102 , 'ballas1' , 1 , 'Balla'),\nSkin(103 , 'ballas2' , 1 , 'Balla'),\nSkin(104 , 'ballas3' , 1 , 'Balla'),", "Skin(103 , 'ballas2' , 1 , 'Balla'),\nSkin(104 , 'ballas3' , 1 , 'Balla'),\nSkin(105 , 'fam1'    , 1 , 'Grove Street Families'),\nSkin(106 , 'fam2'    , 1 , 'Grove Street Families'),\nSkin(107 , 'fam3'    , 1 , 'Grove Street Families'),\nSkin(108 , 'lsv1'    , 1 , 'Los Santos Vagos'),\nSkin(109 , 'lsv2'    , 1 , 'Los Santos Vagos'),\nSkin(110 , 'lsv3'    , 1 , 'Los Santos Vagos'),\nSkin(111 , 'maffa'   , 1 , 'The Russian Mafia'),\nSkin(112 , 'maffb'   , 1 , 'The Russian Mafia'),", "Skin(111 , 'maffa'   , 1 , 'The Russian Mafia'),\nSkin(112 , 'maffb'   , 1 , 'The Russian Mafia'),\nSkin(113 , 'mafboss' , 1 , 'The Russian Mafia'),\nSkin(114 , 'vla1'    , 1 , 'Varios Los Aztecas'),\nSkin(115 , 'vla2'    , 1 , 'Varios Los Aztecas'),\nSkin(116 , 'vla3'    , 1 , 'Varios Los Aztecas'),\nSkin(117 , 'triada'  , 1 , 'Triad'),\nSkin(118 , 'triadb'  , 1 , 'Triad'),\nSkin(119 , 'sindaco' , 1 , 'Johhny Sindacco'),\nSkin(120 , 'triboss' , 1 , 'Triad Boss'),", "Skin(119 , 'sindaco' , 1 , 'Johhny Sindacco'),\nSkin(120 , 'triboss' , 1 , 'Triad Boss'),\nSkin(121 , 'dnb1'    , 1 , 'Da Nang Boy'),\nSkin(122 , 'dnb2'    , 1 , 'Da Nang Boy'),\nSkin(123 , 'dnb3'    , 1 , 'Da Nang Boy'),\nSkin(124 , 'vmaff1'  , 1 , 'The Mafia'),\nSkin(125 , 'vmaff2'  , 1 , 'The Mafia'),\nSkin(126 , 'vmaff3'  , 1 , 'The Mafia'),\nSkin(127 , 'vmaff4'  , 1 , 'The Mafia'),\nSkin(128 , 'dnmylc'  , 1 , 'Farm Inhabitant'),", "Skin(127 , 'vmaff4'  , 1 , 'The Mafia'),\nSkin(128 , 'dnmylc'  , 1 , 'Farm Inhabitant'),\nSkin(129 , 'dnfolc1' , 0 , 'Farm Inhabitant'),\nSkin(130 , 'dnfolc2' , 0 , 'Farm Inhabitant'),\nSkin(131 , 'dnfylc'  , 0 , 'Farm Inhabitant'),\nSkin(132 , 'dnmolc1' , 1 , 'Farm Inhabitant'),\nSkin(133 , 'dnmolc2' , 1 , 'Farm Inhabitant'),\nSkin(134 , 'sbmotr2' , 1 , 'Homeless'),\nSkin(135 , 'swmotr2' , 1 , 'Homeless'),\nSkin(136 , 'sbmytr3' , 1 , 'Normal Ped'),", "Skin(135 , 'swmotr2' , 1 , 'Homeless'),\nSkin(136 , 'sbmytr3' , 1 , 'Normal Ped'),\nSkin(137 , 'swmotr3' , 1 , 'Homeless'),\nSkin(138 , 'wfybe'   , 0 , 'Beach Visitor'),\nSkin(139 , 'bfybe'   , 0 , 'Beach Visitor'),\nSkin(140 , 'hfybe'   , 0 , 'Beach Visitor'),\nSkin(141 , 'sofybu'  , 0 , 'Businesswoman'),\nSkin(142 , 'sbmyst'  , 1 , 'Taxi Driver'),\nSkin(143 , 'sbmycr'  , 1 , 'Crack Maker'),\nSkin(144 , 'bmycg'   , 1 , 'Crack Maker'),", "Skin(143 , 'sbmycr'  , 1 , 'Crack Maker'),\nSkin(144 , 'bmycg'   , 1 , 'Crack Maker'),\nSkin(145 , 'wfycrk'  , 0 , 'Crack Maker'),\nSkin(146 , 'hmycm'   , 1 , 'Crack Maker'),\nSkin(147 , 'wmybu'   , 1 , 'Businessman'),\nSkin(148 , 'bfybu'   , 0 , 'Businesswoman'),\nSkin(149 , 'smokev'  , 1 , 'Big Smoke Armored'),\nSkin(150 , 'wfybu'   , 0 , 'Businesswoman'),\nSkin(151 , 'dwfylc1' , 0 , 'Normal Ped'),\nSkin(152 , 'wfypro'  , 0 , 'Prostitute'),", "Skin(151 , 'dwfylc1' , 0 , 'Normal Ped'),\nSkin(152 , 'wfypro'  , 0 , 'Prostitute'),\nSkin(153 , 'wmyconb' , 1 , 'Construction Worker'),\nSkin(154 , 'wmybe'   , 1 , 'Beach Visitor'),\nSkin(155 , 'wmypizz' , 1 , 'Well Stacked Pizza Worker'),\nSkin(156 , 'bmobar'  , 1 , 'Barber'),\nSkin(157 , 'cwfyhb'  , 0 , 'Hillbilly'),\nSkin(158 , 'cwmofr'  , 1 , 'Farmer'),\nSkin(159 , 'cwmohb1' , 1 , 'Hillbilly'),\nSkin(160 , 'cwmohb2' , 1 , 'Hillbilly'),", "Skin(159 , 'cwmohb1' , 1 , 'Hillbilly'),\nSkin(160 , 'cwmohb2' , 1 , 'Hillbilly'),\nSkin(161 , 'cwmyfr'  , 1 , 'Farmer'),\nSkin(162 , 'cwmyhb1' , 1 , 'Hillbilly'),\nSkin(163 , 'bmyboun' , 1 , 'Black Bouncer'),\nSkin(164 , 'wmyboun' , 1 , 'White Bouncer'),\nSkin(165 , 'wmomib'  , 1 , 'White MIB agent'),\nSkin(166 , 'bmymib'  , 1 , 'Black MIB agent'),\nSkin(167 , 'wmybell' , 1 , 'Cluckin\\' Bell Worker'),\nSkin(168 , 'bmochil' , 1 , 'Hotdog/Chilli Dog Vendor'),", "Skin(167 , 'wmybell' , 1 , 'Cluckin\\' Bell Worker'),\nSkin(168 , 'bmochil' , 1 , 'Hotdog/Chilli Dog Vendor'),\nSkin(169 , 'sofyri'  , 0 , 'Normal Ped'),\nSkin(170 , 'somyst'  , 1 , 'Normal Ped'),\nSkin(171 , 'vwmybjd' , 1 , 'Blackjack Dealer'),\nSkin(172 , 'vwfycrp' , 0 , 'Casino croupier'),\nSkin(173 , 'sfr1'    , 1 , 'San Fierro Rifa'),\nSkin(174 , 'sfr2'    , 1 , 'San Fierro Rifa'),\nSkin(175 , 'sfr3'    , 1 , 'San Fierro Rifa'),\nSkin(176 , 'bmybar'  , 1 , 'Barber'),", "Skin(175 , 'sfr3'    , 1 , 'San Fierro Rifa'),\nSkin(176 , 'bmybar'  , 1 , 'Barber'),\nSkin(177 , 'wmybar'  , 1 , 'Barber'),\nSkin(178 , 'wfysex'  , 0 , 'Whore'),\nSkin(179 , 'wmyammo' , 1 , 'Ammunation Salesman'),\nSkin(180 , 'bmytatt' , 1 , 'Tattoo Artist'),\nSkin(181 , 'vwmycr'  , 1 , 'Punk'),\nSkin(182 , 'vbmocd'  , 1 , 'Cab Driver'),\nSkin(183 , 'vbmycr'  , 1 , 'Normal Ped'),\nSkin(184 , 'vhmycr'  , 1 , 'Normal Ped'),", "Skin(183 , 'vbmycr'  , 1 , 'Normal Ped'),\nSkin(184 , 'vhmycr'  , 1 , 'Normal Ped'),\nSkin(185 , 'sbmyri'  , 1 , 'Normal Ped'),\nSkin(186 , 'somyri'  , 1 , 'Normal Ped'),\nSkin(187 , 'somybu'  , 1 , 'Businessman'),\nSkin(188 , 'swmyst'  , 1 , 'Normal Ped'),\nSkin(189 , 'wmyva'   , 1 , 'Valet'),\nSkin(190 , 'copgrl3' , 0 , 'Barbara Schternvart'),\nSkin(191 , 'gungrl3' , 0 , 'Helena Wankstein'),\nSkin(192 , 'mecgrl3' , 0 , 'Michelle Cannes'),", "Skin(191 , 'gungrl3' , 0 , 'Helena Wankstein'),\nSkin(192 , 'mecgrl3' , 0 , 'Michelle Cannes'),\nSkin(193 , 'nurgrl3' , 0 , 'Katie Zhan'),\nSkin(194 , 'crogrl3' , 0 , 'Millie Perkins'),\nSkin(195 , 'gangrl3' , 0 , 'Denise Robinson'),\nSkin(196 , 'cwfofr'  , 0 , 'Farm-Town inhabitant'),\nSkin(197 , 'cwfohb'  , 0 , 'Hillbilly'),\nSkin(198 , 'cwfyfr1' , 0 , 'Farm-Town inhabitant'),\nSkin(199 , 'cwfyfr2' , 0 , 'Farm-Town inhabitant'),\nSkin(200 , 'cwmyhb2' , 1 , 'Hillbilly'),", "Skin(199 , 'cwfyfr2' , 0 , 'Farm-Town inhabitant'),\nSkin(200 , 'cwmyhb2' , 1 , 'Hillbilly'),\nSkin(201 , 'dwfylc2' , 0 , 'Farmer'),\nSkin(202 , 'dwmylc2' , 1 , 'Farmer'),\nSkin(203 , 'omykara' , 1 , 'Karate Teacher'),\nSkin(204 , 'wmykara' , 1 , 'Karate Teacher'),\nSkin(205 , 'wfyburg' , 0 , 'Burger Shot Cashier'),\nSkin(206 , 'vwmycd'  , 1 , 'Cab Driver'),\nSkin(207 , 'vhfypro' , 0 , 'Prostitute'),\nSkin(208 , 'suzie'   , 1 , 'Su Xi Mu (Suzie)'),", "Skin(207 , 'vhfypro' , 0 , 'Prostitute'),\nSkin(208 , 'suzie'   , 1 , 'Su Xi Mu (Suzie)'),\nSkin(209 , 'omonood' , 1 , 'Oriental Noodle stand vendor'),\nSkin(210 , 'omoboat' , 1 , 'Oriental Boating School Instructor'),\nSkin(211 , 'wfyclot' , 0 , 'Clothes shop staff'),\nSkin(212 , 'vwmotr1' , 1 , 'Homeless'),\nSkin(213 , 'vwmotr2' , 1 , 'Weird old man'),\nSkin(214 , 'vwfywai' , 0 , 'Waitress (Maria Latore)'),\nSkin(215 , 'sbfori'  , 0 , 'Normal Ped'),\nSkin(216 , 'swfyri'  , 0 , 'Normal Ped'),", "Skin(215 , 'sbfori'  , 0 , 'Normal Ped'),\nSkin(216 , 'swfyri'  , 0 , 'Normal Ped'),\nSkin(217 , 'wmyclot' , 1 , 'Clothes shop staff'),\nSkin(218 , 'sbfost'  , 0 , 'Normal Ped'),\nSkin(219 , 'sbfyri'  , 0 , 'Rich Woman'),\nSkin(220 , 'sbmocd'  , 1 , 'Cab Driver'),\nSkin(221 , 'sbmori'  , 1 , 'Normal Ped'),\nSkin(222 , 'sbmost'  , 1 , 'Normal Ped'),\nSkin(223 , 'shmycr'  , 1 , 'Normal Ped'),\nSkin(224 , 'sofori'  , 0 , 'Normal Ped'),", "Skin(223 , 'shmycr'  , 1 , 'Normal Ped'),\nSkin(224 , 'sofori'  , 0 , 'Normal Ped'),\nSkin(225 , 'sofost'  , 0 , 'Normal Ped'),\nSkin(226 , 'sofyst'  , 0 , 'Normal Ped'),\nSkin(227 , 'somobu'  , 1 , 'Oriental Businessman'),\nSkin(228 , 'somori'  , 1 , 'Oriental Ped'),\nSkin(229 , 'somost'  , 1 , 'Oriental Ped'),\nSkin(230 , 'swmotr5' , 1 , 'Homeless'),\nSkin(231 , 'swfori'  , 0 , 'Normal Ped'),\nSkin(232 , 'swfost'  , 0 , 'Normal Ped'),", "Skin(231 , 'swfori'  , 0 , 'Normal Ped'),\nSkin(232 , 'swfost'  , 0 , 'Normal Ped'),\nSkin(233 , 'swfyst'  , 0 , 'Normal Ped'),\nSkin(234 , 'swmocd'  , 1 , 'Cab Driver'),\nSkin(235 , 'swmori'  , 1 , 'Normal Ped'),\nSkin(236 , 'swmost'  , 1 , 'Normal Ped'),\nSkin(237 , 'shfypro' , 0 , 'Prostitute'),\nSkin(238 , 'sbfypro' , 0 , 'Prostitute'),\nSkin(239 , 'swmotr4' , 1 , 'Homeless'),\nSkin(240 , 'swmyri'  , 1 , 'The D.A'),", "Skin(239 , 'swmotr4' , 1 , 'Homeless'),\nSkin(240 , 'swmyri'  , 1 , 'The D.A'),\nSkin(241 , 'smyst'   , 1 , 'Afro-American'),\nSkin(242 , 'smyst2'  , 1 , 'Mexican'),\nSkin(243 , 'sfypro'  , 0 , 'Prostitute'),\nSkin(244 , 'vbfyst2' , 0 , 'Stripper'),\nSkin(245 , 'vbfypro' , 0 , 'Prostitute'),\nSkin(246 , 'vhfyst3' , 0 , 'Stripper'),\nSkin(247 , 'bikera'  , 1 , 'Biker'),\nSkin(248 , 'bikerb'  , 1 , 'Biker'),", "Skin(247 , 'bikera'  , 1 , 'Biker'),\nSkin(248 , 'bikerb'  , 1 , 'Biker'),\nSkin(249 , 'bmypimp' , 1 , 'Pimp'),\nSkin(250 , 'swmycr'  , 1 , 'Normal Ped'),\nSkin(251 , 'wfylg'   , 0 , 'Lifeguard'),\nSkin(252 , 'wmyva2'  , 1 , 'Naked Valet'),\nSkin(253 , 'bmosec'  , 1 , 'Bus Driver'),\nSkin(254 , 'bikdrug' , 1 , 'Biker Drug Dealer'),\nSkin(255 , 'wmych'   , 1 , 'Chauffeur (Limo Driver)'),\nSkin(256 , 'sbfystr' , 0 , 'Stripper'),", "Skin(255 , 'wmych'   , 1 , 'Chauffeur (Limo Driver)'),\nSkin(256 , 'sbfystr' , 0 , 'Stripper'),\nSkin(257 , 'swfystr' , 0 , 'Stripper'),\nSkin(258 , 'heck1'   , 1 , 'Heckler'),\nSkin(259 , 'heck2'   , 1 , 'Heckler'),\nSkin(260 , 'bmycon'  , 1 , 'Construction Worker'),\nSkin(261 , 'wmycd1'  , 1 , 'Cab driver'),\nSkin(262 , 'bmocd'   , 1 , 'Cab driver'),\nSkin(263 , 'vwfywa2' , 0 , 'Normal Ped'),\nSkin(264 , 'wmoice'  , 1 , 'Clown (Ice-cream Van Driver)'),", "Skin(263 , 'vwfywa2' , 0 , 'Normal Ped'),\nSkin(264 , 'wmoice'  , 1 , 'Clown (Ice-cream Van Driver)'),\nSkin(265 , 'tenpen'  , 1 , 'Officer Frank Tenpenny (Corrupt Cop)'),\nSkin(266 , 'pulaski' , 1 , 'Officer Eddie Pulaski (Corrupt Cop)'),\nSkin(267 , 'hern'    , 1 , 'Officer Jimmy Hernandez'),\nSkin(268 , 'dwayne'  , 1 , 'Dwaine/Dwayne'),\nSkin(269 , 'smoke'   , 1 , 'Melvin \"Big Smoke\" Harris (Mission)'),\nSkin(270 , 'sweet'   , 1 , 'Sean \\'Sweet\\' Johnson'),\nSkin(271 , 'ryder'   , 1 , 'Lance \\'Ryder\\' Wilson'),\nSkin(272 , 'forelli' , 1 , 'Mafia Boss'),", "Skin(271 , 'ryder'   , 1 , 'Lance \\'Ryder\\' Wilson'),\nSkin(272 , 'forelli' , 1 , 'Mafia Boss'),\nSkin(273 , 'tbone'   , 1 , 'T-Bone Mendez'),\nSkin(274 , 'laemt1'  , 1 , 'Paramedic (Emergency Medical Technician)'),\nSkin(275 , 'lvemt1'  , 1 , 'Paramedic (Emergency Medical Technician)'),\nSkin(276 , 'sfemt1'  , 1 , 'Paramedic (Emergency Medical Technician)'),\nSkin(277 , 'lafd1'   , 1 , 'Firefighter'),\nSkin(278 , 'lvfd1'   , 1 , 'Firefighter'),\nSkin(279 , 'sffd1'   , 1 , 'Firefighter'),\nSkin(280 , 'lapd1'   , 1 , 'Los Santos Police Officer'),", "Skin(279 , 'sffd1'   , 1 , 'Firefighter'),\nSkin(280 , 'lapd1'   , 1 , 'Los Santos Police Officer'),\nSkin(281 , 'sfpd1'   , 1 , 'San Fierro Police Officer'),\nSkin(282 , 'lvpd1'   , 1 , 'Las Venturas Police Officer'),\nSkin(283 , 'csher'   , 1 , 'County Sheriff'),\nSkin(284 , 'lapdm1'  , 1 , 'LSPD Motorbike Cop'),\nSkin(285 , 'swat'    , 1 , 'S.W.A.T Special Forces'),\nSkin(286 , 'fbi'     , 1 , 'Federal Agent'),\nSkin(287 , 'army'    , 1 , 'San Andreas Army'),\nSkin(288 , 'dsher'   , 1 , 'Desert Sheriff'),", "Skin(287 , 'army'    , 1 , 'San Andreas Army'),\nSkin(288 , 'dsher'   , 1 , 'Desert Sheriff'),\nSkin(289 , 'zero'    , 1 , 'Zero'),\nSkin(290 , 'rose'    , 1 , 'Ken Rosenberg'),\nSkin(291 , 'paul'    , 1 , 'Kent Paul'),\nSkin(292 , 'cesar'   , 1 , 'Cesar Vialpando'),\nSkin(293 , 'ogloc'   , 1 , 'Jeffery \"OG Loc\" Martin/Cross'),\nSkin(294 , 'wuzimu'  , 1 , 'Wu Zi Mu (Woozie)'),\nSkin(295 , 'torino'  , 1 , 'Michael Toreno'),\nSkin(296 , 'jizzy'   , 1 , 'Jizzy B.'),", "Skin(295 , 'torino'  , 1 , 'Michael Toreno'),\nSkin(296 , 'jizzy'   , 1 , 'Jizzy B.'),\nSkin(297 , 'maddogg' , 1 , 'Madd Dogg'),\nSkin(298 , 'cat'     , 0 , 'Catalina'),\nSkin(299 , 'claude'  , 1 , 'Claude Speed'),\nSkin(300 , 'lapdna'  , 1 , 'Los Santos Police Officer (Without gun holster)'),\nSkin(301 , 'sfpdna'  , 1 , 'San Fierro Police Officer (Without gun holster)'),\nSkin(302 , 'lvpdna'  , 1 , 'Las Venturas Police Officer (Without gun holster)'),\nSkin(303 , 'lapdpc'  , 1 , 'Los Santos Police Officer (Without uniform)'),\nSkin(304 , 'lapdpd'  , 1 , 'Los Santos Police Officer (Without uniform)'),", "Skin(303 , 'lapdpc'  , 1 , 'Los Santos Police Officer (Without uniform)'),\nSkin(304 , 'lapdpd'  , 1 , 'Los Santos Police Officer (Without uniform)'),\nSkin(305 , 'lvpdpc'  , 1 , 'Las Venturas Police Officer (Without uniform)'),\nSkin(306 , 'wfyclpd' , 0 , 'Los Santos Police Officer'),\nSkin(307 , 'vbfycpd' , 0 , 'San Fierro Police Officer'),\nSkin(308 , 'wfyclem' , 0 , 'San Fierro Paramedic (Emergency Medical Technician)'),\nSkin(309 , 'wfycllv' , 0 , 'Las Venturas Police Officer'),\nSkin(310 , 'csherna' , 1 , 'Country Sheriff (Without hat)'),\nSkin(311 , 'dsherna' , 1 , 'Desert Sheriff (Without hat)'),\n]", "Skin(311 , 'dsherna' , 1 , 'Desert Sheriff (Without hat)'),\n]\n\n# enum makes code more readable\n# e.g. SKIN.CJ returns cj skin id(0)\nSKIN = enum.IntEnum('SKIN', {skins.model.upper():skins.id for skins in skins})\n"]}
{"filename": "sa/sa/__init__.py", "chunked_list": ["from .vehicle import VEHICLE\nfrom .skin import SKIN\nfrom .weapon import WEAPON\nfrom .common import Vec2, Vec3, Quat\nfrom . import samp\n"]}
{"filename": "sa/sa/vehicle.py", "chunked_list": ["import enum\n\n# https://sampwiki.blast.hk/wiki/Vehicles:All\n# https://team.sa-mp.com/wiki/Category_Vehicle.html\n# https://www.open.mp/docs/scripting/resources/vehicleid\n# https://wiki.multitheftauto.com/wiki/Vehicle_IDs\n\nMIN_VEHICLE_MODEL_ID = 400\nMAX_VEHICLE_MODEL_ID = 611\n\nclass VehicleModel:\n    def __init__(self, model_id, name, model, seat_count, category, mod_shop):\n        self.model_id = model_id\n        self.name = name\n        self.model = model\n        self.seat_count = seat_count\n        self.category = category\n        self.mod_shop = mod_shop", "MAX_VEHICLE_MODEL_ID = 611\n\nclass VehicleModel:\n    def __init__(self, model_id, name, model, seat_count, category, mod_shop):\n        self.model_id = model_id\n        self.name = name\n        self.model = model\n        self.seat_count = seat_count\n        self.category = category\n        self.mod_shop = mod_shop", "\n# table indexable by model id\n# e.g. vehicle_models[408] returns VehicleModel(408, 'Trashmaster', 'trash', 2, 'Industrial', 'None')\n# e.g. vehicle_models[VEHICLE.RHINO] returns VehicleModel(432, 'Rhino', 'rhino', 1, 'Public Service', 'None'),\nvehicle_models = [None] * 400 + [\n#        model_id    name                model  seat_count  category        mod_shop\n#             |       |                    |          |      |                 |\nVehicleModel(400 , 'Landstalker'       , 'landstal' , 4 , 'Off Road'        , 'Transfender'),\nVehicleModel(401 , 'Bravura'           , 'bravura'  , 2 , 'Saloons'         , 'Transfender'),\nVehicleModel(402 , 'Buffalo'           , 'buffalo'  , 2 , 'Sport Vehicles'  , 'Transfender'),", "VehicleModel(401 , 'Bravura'           , 'bravura'  , 2 , 'Saloons'         , 'Transfender'),\nVehicleModel(402 , 'Buffalo'           , 'buffalo'  , 2 , 'Sport Vehicles'  , 'Transfender'),\nVehicleModel(403 , 'Linerunner'        , 'linerun'  , 2 , 'Industrial'      , 'None'),\nVehicleModel(404 , 'Perennial'         , 'peren'    , 4 , 'Station Wagons'  , 'Transfender'),\nVehicleModel(405 , 'Sentinel'          , 'sentinel' , 4 , 'Saloons'         , 'Transfender'),\nVehicleModel(406 , 'Dumper'            , 'dumper'   , 1 , 'Unique Vehicles' , 'None'),\nVehicleModel(407 , 'Firetruck'         , 'firetruk' , 2 , 'Public Service'  , 'None'),\nVehicleModel(408 , 'Trashmaster'       , 'trash'    , 2 , 'Industrial'      , 'None'),\nVehicleModel(409 , 'Stretch'           , 'stretch'  , 4 , 'Unique Vehicles' , 'Transfender'),\nVehicleModel(410 , 'Manana'            , 'manana'   , 2 , 'Saloons'         , 'Transfender'),", "VehicleModel(409 , 'Stretch'           , 'stretch'  , 4 , 'Unique Vehicles' , 'Transfender'),\nVehicleModel(410 , 'Manana'            , 'manana'   , 2 , 'Saloons'         , 'Transfender'),\nVehicleModel(411 , 'Infernus'          , 'infernus' , 2 , 'Sport Vehicles'  , 'Transfender'),\nVehicleModel(412 , 'Voodoo'            , 'voodoo'   , 2 , 'Lowriders'       , 'Loco Low Co'),\nVehicleModel(413 , 'Pony'              , 'pony'     , 4 , 'Industrial'      , 'None'),\nVehicleModel(414 , 'Mule'              , 'mule'     , 2 , 'Industrial'      , 'None'),\nVehicleModel(415 , 'Cheetah'           , 'cheetah'  , 2 , 'Sport Vehicles'  , 'Transfender'),\nVehicleModel(416 , 'Ambulance'         , 'ambulan'  , 4 , 'Public Service'  , 'None'),\nVehicleModel(417 , 'Leviathan'         , 'leviathn' , 2 , 'Helicopters'     , 'None'),\nVehicleModel(418 , 'Moonbeam'          , 'moonbeam' , 4 , 'Station Wagons'  , 'Transfender'),", "VehicleModel(417 , 'Leviathan'         , 'leviathn' , 2 , 'Helicopters'     , 'None'),\nVehicleModel(418 , 'Moonbeam'          , 'moonbeam' , 4 , 'Station Wagons'  , 'Transfender'),\nVehicleModel(419 , 'Esperanto'         , 'esperant' , 2 , 'Saloons'         , 'Transfender'),\nVehicleModel(420 , 'Taxi'              , 'taxi'     , 4 , 'Public Service'  , 'Transfender'),\nVehicleModel(421 , 'Washington'        , 'washing'  , 4 , 'Saloons'         , 'Transfender'),\nVehicleModel(422 , 'Bobcat'            , 'bobcat'   , 2 , 'Industrial'      , 'Transfender'),\nVehicleModel(423 , 'Mr. Whoopee'       , 'mrwhoop'  , 2 , 'Unique Vehicles' , 'None'),\nVehicleModel(424 , 'BF Injection'      , 'bfinject' , 2 , 'Off Road'        , 'None'),\nVehicleModel(425 , 'Hunter'            , 'hunter'   , 1 , 'Helicopters'     , 'None'),\nVehicleModel(426 , 'Premier'           , 'premier'  , 4 , 'Saloons'         , 'Transfender'),", "VehicleModel(425 , 'Hunter'            , 'hunter'   , 1 , 'Helicopters'     , 'None'),\nVehicleModel(426 , 'Premier'           , 'premier'  , 4 , 'Saloons'         , 'Transfender'),\nVehicleModel(427 , 'Enforcer'          , 'enforcer' , 4 , 'Public Service'  , 'None'),\nVehicleModel(428 , 'Securicar'         , 'securica' , 4 , 'Unique Vehicles' , 'None'),\nVehicleModel(429 , 'Banshee'           , 'banshee'  , 2 , 'Sport Vehicles'  , 'Transfender'),\nVehicleModel(430 , 'Predator'          , 'predator' , 1 , 'Boats'           , 'None'),\nVehicleModel(431 , 'Bus'               , 'bus'      , 9 , 'Public Service'  , 'None'),\nVehicleModel(432 , 'Rhino'             , 'rhino'    , 1 , 'Public Service'  , 'None'),\nVehicleModel(433 , 'Barracks'          , 'barracks' , 2 , 'Public Service'  , 'None'),\nVehicleModel(434 , 'Hotknife'          , 'hotknife' , 2 , 'Unique Vehicles' , 'None'),", "VehicleModel(433 , 'Barracks'          , 'barracks' , 2 , 'Public Service'  , 'None'),\nVehicleModel(434 , 'Hotknife'          , 'hotknife' , 2 , 'Unique Vehicles' , 'None'),\nVehicleModel(435 , 'Trailer'           , 'artict1'  , 0 , 'Trailers'        , 'None'),\nVehicleModel(436 , 'Previon'           , 'previon'  , 2 , 'Saloons'         , 'Transfender'),\nVehicleModel(437 , 'Coach'             , 'coach'    , 9 , 'Public Service'  , 'None'),\nVehicleModel(438 , 'Cabbie'            , 'cabbie'   , 4 , 'Public Service'  , 'Transfender'),\nVehicleModel(439 , 'Stallion'          , 'stallion' , 2 , 'Convertibles'    , 'Transfender'),\nVehicleModel(440 , 'Rumpo'             , 'rumpo'    , 4 , 'Industrial'      , 'None'),\nVehicleModel(441 , 'RC Bandit'         , 'rcbandit' , 1 , 'RC Vehicles'     , 'None'),\nVehicleModel(442 , 'Romero'            , 'romero'   , 2 , 'Unique Vehicles' , 'Transfender'),", "VehicleModel(441 , 'RC Bandit'         , 'rcbandit' , 1 , 'RC Vehicles'     , 'None'),\nVehicleModel(442 , 'Romero'            , 'romero'   , 2 , 'Unique Vehicles' , 'Transfender'),\nVehicleModel(443 , 'Packer'            , 'packer'   , 2 , 'Industrial'      , 'None'),\nVehicleModel(444 , 'Monster'           , 'monster'  , 2 , 'Off Road'        , 'None'),\nVehicleModel(445 , 'Admiral'           , 'admiral'  , 4 , 'Saloons'         , 'Transfender'),\nVehicleModel(446 , 'Squalo'            , 'squalo'   , 1 , 'Boats'           , 'None'),\nVehicleModel(447 , 'Seasparrow'        , 'seaspar'  , 2 , 'Helicopters'     , 'None'),\nVehicleModel(448 , 'PizzaBoy'          , 'pizzaboy' , 1 , 'Bikes'           , 'None'),\nVehicleModel(449 , 'Tram'              , 'tram'     , 2 , 'Unique Vehicles' , 'None'),\nVehicleModel(450 , 'Trailer 2'         , 'artict2'  , 0 , 'Trailers'        , 'None'),", "VehicleModel(449 , 'Tram'              , 'tram'     , 2 , 'Unique Vehicles' , 'None'),\nVehicleModel(450 , 'Trailer 2'         , 'artict2'  , 0 , 'Trailers'        , 'None'),\nVehicleModel(451 , 'Turismo'           , 'turismo'  , 2 , 'Sport Vehicles'  , 'Transfender'),\nVehicleModel(452 , 'Speeder'           , 'speeder'  , 1 , 'Boats'           , 'None'),\nVehicleModel(453 , 'Reefer'            , 'reefer'   , 1 , 'Boats'           , 'None'),\nVehicleModel(454 , 'Tropic'            , 'tropic'   , 1 , 'Boats'           , 'None'),\nVehicleModel(455 , 'Flatbed'           , 'flatbed'  , 2 , 'Industrial'      , 'None'),\nVehicleModel(456 , 'Yankee'            , 'yankee'   , 2 , 'Industrial'      , 'None'),\nVehicleModel(457 , 'Caddy'             , 'caddy'    , 2 , 'Unique Vehicles' , 'None'),\nVehicleModel(458 , 'Solair'            , 'solair'   , 4 , 'Station Wagons'  , 'Transfender'),", "VehicleModel(457 , 'Caddy'             , 'caddy'    , 2 , 'Unique Vehicles' , 'None'),\nVehicleModel(458 , 'Solair'            , 'solair'   , 4 , 'Station Wagons'  , 'Transfender'),\nVehicleModel(459 , 'RC Van'            , 'topfun'   , 4 , 'Industrial'      , 'None'),\nVehicleModel(460 , 'Skimmer'           , 'skimmer'  , 2 , 'Airplane'        , 'None'),\nVehicleModel(461 , 'PCJ-600'           , 'pcj600'   , 2 , 'Bikes'           , 'None'),\nVehicleModel(462 , 'Faggio'            , 'faggio'   , 2 , 'Bikes'           , 'None'),\nVehicleModel(463 , 'Freeway'           , 'freeway'  , 2 , 'Bikes'           , 'None'),\nVehicleModel(464 , 'RC Baron'          , 'rcbaron'  , 2 , 'RC Vehicles'     , 'None'),\nVehicleModel(465 , 'RC Raider'         , 'rcraider' , 2 , 'RC Vehicles'     , 'None'),\nVehicleModel(466 , 'Glendale'          , 'glendale' , 4 , 'Saloons'         , 'Transfender'),", "VehicleModel(465 , 'RC Raider'         , 'rcraider' , 2 , 'RC Vehicles'     , 'None'),\nVehicleModel(466 , 'Glendale'          , 'glendale' , 4 , 'Saloons'         , 'Transfender'),\nVehicleModel(467 , 'Oceanic'           , 'oceanic'  , 4 , 'Saloons'         , 'Transfender'),\nVehicleModel(468 , 'Sanchez'           , 'sanchez'  , 2 , 'Bikes'           , 'None'),\nVehicleModel(469 , 'Sparrow'           , 'sparrow'  , 2 , 'Helicopters'     , 'None'),\nVehicleModel(470 , 'Patriot'           , 'patriot'  , 4 , 'Off Road'        , 'None'),\nVehicleModel(471 , 'Quad'              , 'quad'     , 2 , 'Bikes'           , 'None'),\nVehicleModel(472 , 'Coastguard'        , 'coastg'   , 1 , 'Boats'           , 'None'),\nVehicleModel(473 , 'Dinghy'            , 'dinghy'   , 1 , 'Boats'           , 'None'),\nVehicleModel(474 , 'Hermes'            , 'hermes'   , 2 , 'Saloons'         , 'Transfender'),", "VehicleModel(473 , 'Dinghy'            , 'dinghy'   , 1 , 'Boats'           , 'None'),\nVehicleModel(474 , 'Hermes'            , 'hermes'   , 2 , 'Saloons'         , 'Transfender'),\nVehicleModel(475 , 'Sabre'             , 'sabre'    , 2 , 'Sport Vehicles'  , 'Transfender'),\nVehicleModel(476 , 'Rustler'           , 'rustler'  , 1 , 'Airplane'        , 'None'),\nVehicleModel(477 , 'ZR-350'            , 'zr350'    , 2 , 'Sport Vehicles'  , 'Transfender'),\nVehicleModel(478 , 'Walton'            , 'walton'   , 2 , 'Industrial'      , 'Transfender'),\nVehicleModel(479 , 'Regina'            , 'regina'   , 4 , 'Station Wagons'  , 'Transfender'),\nVehicleModel(480 , 'Comet'             , 'comet'    , 2 , 'Convertibles'    , 'Transfender'),\nVehicleModel(481 , 'BMX'               , 'bmx'      , 1 , 'Bikes'           , 'None'),\nVehicleModel(482 , 'Burrito'           , 'burrito'  , 4 , 'Industrial'      , 'None'),", "VehicleModel(481 , 'BMX'               , 'bmx'      , 1 , 'Bikes'           , 'None'),\nVehicleModel(482 , 'Burrito'           , 'burrito'  , 4 , 'Industrial'      , 'None'),\nVehicleModel(483 , 'Camper'            , 'camper'   , 3 , 'Unique Vehicles' , 'None'),\nVehicleModel(484 , 'Marquis'           , 'marquis'  , 1 , 'Boats'           , 'None'),\nVehicleModel(485 , 'Baggage'           , 'baggage'  , 1 , 'Unique Vehicles' , 'None'),\nVehicleModel(486 , 'Dozer'             , 'dozer'    , 1 , 'Unique Vehicles' , 'None'),\nVehicleModel(487 , 'Maverick'          , 'maverick' , 4 , 'Helicopters'     , 'None'),\nVehicleModel(488 , 'News Chopper'      , 'vcnmav'   , 2 , 'Helicopters'     , 'None'),\nVehicleModel(489 , 'Rancher'           , 'rancher'  , 2 , 'Off Road'        , 'Transfender'),\nVehicleModel(490 , 'FBI Rancher'       , 'fbiranch' , 4 , 'Public Service'  , 'None'),", "VehicleModel(489 , 'Rancher'           , 'rancher'  , 2 , 'Off Road'        , 'Transfender'),\nVehicleModel(490 , 'FBI Rancher'       , 'fbiranch' , 4 , 'Public Service'  , 'None'),\nVehicleModel(491 , 'Virgo'             , 'virgo'    , 2 , 'Saloons'         , 'Transfender'),\nVehicleModel(492 , 'Greenwood'         , 'greenwoo' , 4 , 'Saloons'         , 'Transfender'),\nVehicleModel(493 , 'Jetmax'            , 'jetmax'   , 1 , 'Boats'           , 'None'),\nVehicleModel(494 , 'Hotring C'         , 'hotring'  , 2 , 'Sport Vehicles'  , 'None'),\nVehicleModel(495 , 'Sandking'          , 'sandking' , 2 , 'Off Road'        , 'None'),\nVehicleModel(496 , 'Blista Compact'    , 'blistac'  , 2 , 'Sport Vehicles'  , 'Transfender'),\nVehicleModel(497 , 'Police Maverick'   , 'polmav'   , 4 , 'Helicopters'     , 'None'),\nVehicleModel(498 , 'Boxville'          , 'boxville' , 4 , 'Industrial'      , 'None'),", "VehicleModel(497 , 'Police Maverick'   , 'polmav'   , 4 , 'Helicopters'     , 'None'),\nVehicleModel(498 , 'Boxville'          , 'boxville' , 4 , 'Industrial'      , 'None'),\nVehicleModel(499 , 'Benson'            , 'benson'   , 2 , 'Industrial'      , 'None'),\nVehicleModel(500 , 'Mesa'              , 'mesa'     , 2 , 'Off Road'        , 'Transfender'),\nVehicleModel(501 , 'RC Goblin'         , 'rcgoblin' , 2 , 'RC Vehicles'     , 'None'),\nVehicleModel(502 , 'Hotring A'         , 'hotrina'  , 2 , 'Sport Vehicles'  , 'None'),\nVehicleModel(503 , 'Hotring B'         , 'hotrinb'  , 2 , 'Sport Vehicles'  , 'None'),\nVehicleModel(504 , 'Bloodring Banger'  , 'bloodra'  , 2 , 'Saloons'         , 'None'),\nVehicleModel(504 , 'Bloodring Banger'  , 'bloodrb'  , 2 , 'Saloons'         , 'None'),\nVehicleModel(505 , 'Rancher Lure'      , 'rnchlure' , 2 , 'Off Road'        , 'None'),", "VehicleModel(504 , 'Bloodring Banger'  , 'bloodrb'  , 2 , 'Saloons'         , 'None'),\nVehicleModel(505 , 'Rancher Lure'      , 'rnchlure' , 2 , 'Off Road'        , 'None'),\nVehicleModel(506 , 'Super GT'          , 'supergt'  , 2 , 'Sport Vehicles'  , 'Transfender'),\nVehicleModel(507 , 'Elegant'           , 'elegant'  , 4 , 'Saloons'         , 'Transfender'),\nVehicleModel(508 , 'Journey'           , 'journey'  , 2 , 'Unique Vehicles' , 'None'),\nVehicleModel(509 , 'Bike'              , 'bike'     , 1 , 'Bikes'           , 'None'),\nVehicleModel(510 , 'Mountain Bike'     , 'mtbike'   , 1 , 'Bikes'           , 'None'),\nVehicleModel(511 , 'Beagle'            , 'beagle'   , 2 , 'Airplane'        , 'None'),\nVehicleModel(512 , 'Cropduster'        , 'cropdust' , 1 , 'Airplane'        , 'None'),\nVehicleModel(513 , 'Stuntplane'        , 'stunt'    , 1 , 'Airplane'        , 'None'),", "VehicleModel(512 , 'Cropduster'        , 'cropdust' , 1 , 'Airplane'        , 'None'),\nVehicleModel(513 , 'Stuntplane'        , 'stunt'    , 1 , 'Airplane'        , 'None'),\nVehicleModel(514 , 'Tanker'            , 'petro'    , 2 , 'Industrial'      , 'None'),\nVehicleModel(515 , 'RoadTrain'         , 'rdtrain'  , 2 , 'Industrial'      , 'None'),\nVehicleModel(516 , 'Nebula'            , 'nebula'   , 4 , 'Saloons'         , 'Transfender'),\nVehicleModel(517 , 'Majestic'          , 'majestic' , 2 , 'Saloons'         , 'Transfender'),\nVehicleModel(518 , 'Buccaneer'         , 'buccanee' , 2 , 'Saloons'         , 'Transfender'),\nVehicleModel(519 , 'Shamal'            , 'shamal'   , 1 , 'Airplane'        , 'None'),\nVehicleModel(520 , 'Hydra'             , 'hydra'    , 1 , 'Airplane'        , 'None'),\nVehicleModel(521 , 'FCR-900'           , 'fcr900'   , 2 , 'Bikes'           , 'None'),", "VehicleModel(520 , 'Hydra'             , 'hydra'    , 1 , 'Airplane'        , 'None'),\nVehicleModel(521 , 'FCR-900'           , 'fcr900'   , 2 , 'Bikes'           , 'None'),\nVehicleModel(522 , 'NRG-500'           , 'nrg500'   , 2 , 'Bikes'           , 'None'),\nVehicleModel(523 , 'HPV1000'           , 'copbike'  , 2 , 'Public Service'  , 'None'),\nVehicleModel(524 , 'Cement Truck'      , 'cement'   , 2 , 'Industrial'      , 'None'),\nVehicleModel(525 , 'Towtruck'          , 'towtruck' , 2 , 'Unique Vehicles' , 'None'),\nVehicleModel(526 , 'Fortune'           , 'fortune'  , 2 , 'Saloons'         , 'Transfender'),\nVehicleModel(527 , 'Cadrona'           , 'cadrona'  , 2 , 'Saloons'         , 'Transfender'),\nVehicleModel(528 , 'FBI Truck'         , 'fbitruck' , 2 , 'Public Service'  , 'None'),\nVehicleModel(529 , 'Willard'           , 'willard'  , 4 , 'Saloons'         , 'Transfender'),", "VehicleModel(528 , 'FBI Truck'         , 'fbitruck' , 2 , 'Public Service'  , 'None'),\nVehicleModel(529 , 'Willard'           , 'willard'  , 4 , 'Saloons'         , 'Transfender'),\nVehicleModel(530 , 'Forklift'          , 'forklift' , 1 , 'Unique Vehicles' , 'None'),\nVehicleModel(531 , 'Tractor'           , 'tractor'  , 1 , 'Industrial'      , 'None'),\nVehicleModel(532 , 'Combine Harvester' , 'combine'  , 1 , 'Unique Vehicles' , 'None'),\nVehicleModel(533 , 'Feltzer'           , 'feltzer'  , 2 , 'Convertibles'    , 'Transfender'),\nVehicleModel(534 , 'Remington'         , 'remingtn' , 2 , 'Lowriders'       , 'Loco Low Co'),\nVehicleModel(535 , 'Slamvan'           , 'slamvan'  , 2 , 'Lowriders'       , 'Loco Low Co'),\nVehicleModel(536 , 'Blade'             , 'blade'    , 2 , 'Lowriders'       , 'Loco Low Co'),\nVehicleModel(537 , 'Freight'           , 'freight'  , 2 , 'Unique Vehicles' , 'None'),", "VehicleModel(536 , 'Blade'             , 'blade'    , 2 , 'Lowriders'       , 'Loco Low Co'),\nVehicleModel(537 , 'Freight'           , 'freight'  , 2 , 'Unique Vehicles' , 'None'),\nVehicleModel(538 , 'Brownstreak'       , 'streak'   , 2 , 'Unique Vehicles' , 'None'),\nVehicleModel(539 , 'Vortex'            , 'vortex'   , 1 , 'Unique Vehicles' , 'None'),\nVehicleModel(540 , 'Vincent'           , 'vincent'  , 4 , 'Saloons'         , 'Transfender'),\nVehicleModel(541 , 'Bullet'            , 'bullet'   , 2 , 'Sport Vehicles'  , 'Transfender'),\nVehicleModel(542 , 'Clover'            , 'clover'   , 2 , 'Saloons'         , 'Transfender'),\nVehicleModel(543 , 'Sadler'            , 'sadler'   , 2 , 'Industrial'      , 'None'),\nVehicleModel(544 , 'FiretruckLA'       , 'firela'   , 2 , 'Public Service'  , 'None'),\nVehicleModel(545 , 'Hustler'           , 'hustler'  , 2 , 'Unique Vehicles' , 'Transfender'),", "VehicleModel(544 , 'FiretruckLA'       , 'firela'   , 2 , 'Public Service'  , 'None'),\nVehicleModel(545 , 'Hustler'           , 'hustler'  , 2 , 'Unique Vehicles' , 'Transfender'),\nVehicleModel(546 , 'Intruder'          , 'intruder' , 4 , 'Saloons'         , 'Transfender'),\nVehicleModel(547 , 'Primo'             , 'primo'    , 4 , 'Saloons'         , 'Transfender'),\nVehicleModel(548 , 'Cargobob'          , 'cargobob' , 2 , 'Helicopters'     , 'None'),\nVehicleModel(549 , 'Tampa'             , 'tampa'    , 2 , 'Saloons'         , 'Transfender'),\nVehicleModel(550 , 'Sunrise'           , 'sunrise'  , 4 , 'Saloons'         , 'Transfender'),\nVehicleModel(551 , 'Merit'             , 'merit'    , 4 , 'Saloons'         , 'Transfender'),\nVehicleModel(552 , 'Utility Van'       , 'utility'  , 2 , 'Industrial'      , 'None'),\nVehicleModel(553 , 'Nevada'            , 'nevada'   , 1 , 'Airplane'        , 'None'),", "VehicleModel(552 , 'Utility Van'       , 'utility'  , 2 , 'Industrial'      , 'None'),\nVehicleModel(553 , 'Nevada'            , 'nevada'   , 1 , 'Airplane'        , 'None'),\nVehicleModel(554 , 'Yosemite'          , 'yosemite' , 2 , 'Industrial'      , 'None'),\nVehicleModel(555 , 'Windsor'           , 'windsor'  , 2 , 'Convertibles'    , 'Transfender'),\nVehicleModel(556 , 'Monster A'         , 'monstera' , 2 , 'Off Road'        , 'None'),\nVehicleModel(557 , 'Monster B'         , 'monsterb' , 2 , 'Off Road'        , 'None'),\nVehicleModel(558 , 'Uranus'            , 'uranus'   , 2 , 'Sport Vehicles'  , 'Wheel Arch Angels'),\nVehicleModel(559 , 'Jester'            , 'jester'   , 2 , 'Sport Vehicles'  , 'Wheel Arch Angels'),\nVehicleModel(560 , 'Sultan'            , 'sultan'   , 4 , 'Saloons'         , 'Wheel Arch Angels'),\nVehicleModel(561 , 'Stratum'           , 'stratum'  , 4 , 'Station Wagons'  , 'Wheel Arch Angels'),", "VehicleModel(560 , 'Sultan'            , 'sultan'   , 4 , 'Saloons'         , 'Wheel Arch Angels'),\nVehicleModel(561 , 'Stratum'           , 'stratum'  , 4 , 'Station Wagons'  , 'Wheel Arch Angels'),\nVehicleModel(562 , 'Elegy'             , 'elegy'    , 2 , 'Saloons'         , 'Wheel Arch Angels'),\nVehicleModel(563 , 'Raindance'         , 'raindanc' , 2 , 'Helicopters'     , 'None'),\nVehicleModel(564 , 'RC Tiger'          , 'rctiger'  , 1 , 'RC Vehicles'     , 'None'),\nVehicleModel(565 , 'Flash'             , 'flash'    , 2 , 'Sport Vehicles'  , 'Wheel Arch Angels'),\nVehicleModel(566 , 'Tahoma'            , 'tahoma'   , 4 , 'Lowriders'       , 'Loco Low Co'),\nVehicleModel(567 , 'Savanna'           , 'savanna'  , 4 , 'Lowriders'       , 'Loco Low Co'),\nVehicleModel(568 , 'Bandito'           , 'bandito'  , 1 , 'Off Road'        , 'None'),\nVehicleModel(569 , 'Freight Trailer'   , 'freiflat' , 2 , 'Trailers'        , 'None'),", "VehicleModel(568 , 'Bandito'           , 'bandito'  , 1 , 'Off Road'        , 'None'),\nVehicleModel(569 , 'Freight Trailer'   , 'freiflat' , 2 , 'Trailers'        , 'None'),\nVehicleModel(570 , 'Streak Trailer'    , 'streakc'  , 6 , 'Trailers'        , 'None'),\nVehicleModel(571 , 'Kart'              , 'kart'     , 1 , 'Unique Vehicles' , 'None'),\nVehicleModel(572 , 'Mower'             , 'mower'    , 1 , 'Unique Vehicles' , 'None'),\nVehicleModel(573 , 'Dune'              , 'duneride' , 2 , 'Off Road'        , 'None'),\nVehicleModel(574 , 'Sweeper'           , 'sweeper'  , 1 , 'Unique Vehicles' , 'None'),\nVehicleModel(575 , 'Broadway'          , 'broadway' , 2 , 'Lowriders'       , 'Loco Low Co'),\nVehicleModel(576 , 'Tornado'           , 'tornado'  , 2 , 'Lowriders'       , 'Loco Low Co'),\nVehicleModel(577 , 'AT400'             , 'at400'    , 2 , 'Airplane'        , 'None'),", "VehicleModel(576 , 'Tornado'           , 'tornado'  , 2 , 'Lowriders'       , 'Loco Low Co'),\nVehicleModel(577 , 'AT400'             , 'at400'    , 2 , 'Airplane'        , 'None'),\nVehicleModel(578 , 'DFT-30'            , 'dft30'    , 2 , 'Industrial'      , 'None'),\nVehicleModel(579 , 'Huntley'           , 'huntley'  , 4 , 'Off Road'        , 'Transfender'),\nVehicleModel(580 , 'Stafford'          , 'stafford' , 4 , 'Saloons'         , 'Transfender'),\nVehicleModel(581 , 'BF-400'            , 'bf400'    , 2 , 'Bikes'           , 'None'),\nVehicleModel(582 , 'Newsvan'           , 'newsvan'  , 4 , 'Industrial'      , 'None'),\nVehicleModel(583 , 'Tug'               , 'tug'      , 1 , 'Unique Vehicles' , 'None'),\nVehicleModel(584 , 'Petrol Trailer'    , 'petrotr'  , 0 , 'Trailers'        , 'None'),\nVehicleModel(585 , 'Emperor'           , 'emperor'  , 4 , 'Saloons'         , 'Transfender'),", "VehicleModel(584 , 'Petrol Trailer'    , 'petrotr'  , 0 , 'Trailers'        , 'None'),\nVehicleModel(585 , 'Emperor'           , 'emperor'  , 4 , 'Saloons'         , 'Transfender'),\nVehicleModel(586 , 'Wayfarer'          , 'wayfarer' , 2 , 'Bikes'           , 'None'),\nVehicleModel(587 , 'Euros'             , 'euros'    , 2 , 'Sport Vehicles'  , 'Transfender'),\nVehicleModel(588 , 'Hotdog'            , 'hotdog'   , 2 , 'Unique Vehicles' , 'None'),\nVehicleModel(589 , 'Club'              , 'club'     , 2 , 'Sport Vehicles'  , 'Transfender'),\nVehicleModel(590 , 'Freight Trailer'   , 'freibox'  , 0 , 'Trailers'        , 'None'),\nVehicleModel(591 , 'Trailer 3'         , 'artict3'  , 0 , 'Trailers'        , 'None'),\nVehicleModel(592 , 'Andromada'         , 'androm'   , 2 , 'Airplane'        , 'None'),\nVehicleModel(593 , 'Dodo'              , 'dodo'     , 2 , 'Airplane'        , 'None'),", "VehicleModel(592 , 'Andromada'         , 'androm'   , 2 , 'Airplane'        , 'None'),\nVehicleModel(593 , 'Dodo'              , 'dodo'     , 2 , 'Airplane'        , 'None'),\nVehicleModel(594 , 'RC Cam'            , 'rccam'    , 2 , 'RC Vehicles'     , 'None'),\nVehicleModel(595 , 'Launch'            , 'launch'   , 1 , 'Boats'           , 'None'),\nVehicleModel(596 , 'LSPD car'          , 'copcarla' , 4 , 'Public Service'  , 'None'),\nVehicleModel(597 , 'SFPD car'          , 'copcarsf' , 4 , 'Public Service'  , 'None'),\nVehicleModel(598 , 'LVPD car'          , 'copcarvg' , 4 , 'Public Service'  , 'None'),\nVehicleModel(599 , 'Ranger'            , 'copcarru' , 2 , 'Public Service'  , 'None'),\nVehicleModel(600 , 'Picador'           , 'picador'  , 2 , 'Industrial'      , 'Transfender'),\nVehicleModel(601 , 'SWAT'              , 'swatvan'  , 2 , 'Public Service'  , 'None'),", "VehicleModel(600 , 'Picador'           , 'picador'  , 2 , 'Industrial'      , 'Transfender'),\nVehicleModel(601 , 'SWAT'              , 'swatvan'  , 2 , 'Public Service'  , 'None'),\nVehicleModel(602 , 'Alpha'             , 'alpha'    , 2 , 'Sport Vehicles'  , 'Transfender'),\nVehicleModel(603 , 'Phoenix'           , 'phoenix'  , 2 , 'Sport Vehicles'  , 'Transfender'),\nVehicleModel(604 , 'Glendale damaged'  , 'glenshit' , 4 , 'Saloons'         , 'None'),\nVehicleModel(605 , 'Sadler damaged'    , 'sadlshit' , 2 , 'Industrial'      , 'None'),\nVehicleModel(606 , 'Baggage Trailer A' , 'bagboxa'  , 0 , 'Trailers'        , 'None'),\nVehicleModel(607 , 'Baggage Trailer B' , 'bagboxb'  , 0 , 'Trailers'        , 'None'),\nVehicleModel(608 , 'Stairs Trailer'    , 'tugstair' , 0 , 'Trailers'        , 'None'),\nVehicleModel(609 , 'Boxville'          , 'boxburg'  , 4 , 'Industrial'      , 'None'),", "VehicleModel(608 , 'Stairs Trailer'    , 'tugstair' , 0 , 'Trailers'        , 'None'),\nVehicleModel(609 , 'Boxville'          , 'boxburg'  , 4 , 'Industrial'      , 'None'),\nVehicleModel(610 , 'Farm Trailer'      , 'farmtr1'  , 0 , 'Trailers'        , 'None'),\nVehicleModel(611 , 'Utility Trailer'   , 'utiltr1'  , 0 , 'Trailers'        , 'None'),\n]\n\n# enum makes code more readable\n# e.g. VEHICLE.HYDRA returns hydra model id(520)\nVEHICLE = enum.IntEnum('VEHICLE', {m.model.upper():m.model_id for m in vehicle_models if m != None})\n\nclass Vehicle(VehicleModel):\n    def __init__(self, id, model_id):\n        m = vehicle_models[model_id]\n        super().__init__(model_id, m.name, m.model, m.seat_count, m.category, m.mod_shop)\n        self.id = id\n        self.pos = None # vehicle position as Vec3\n        self.dir = None # vehicle direction as Quat\n        self.health = None\n        self.seats = [None] * self.seat_count # references to players", "VEHICLE = enum.IntEnum('VEHICLE', {m.model.upper():m.model_id for m in vehicle_models if m != None})\n\nclass Vehicle(VehicleModel):\n    def __init__(self, id, model_id):\n        m = vehicle_models[model_id]\n        super().__init__(model_id, m.name, m.model, m.seat_count, m.category, m.mod_shop)\n        self.id = id\n        self.pos = None # vehicle position as Vec3\n        self.dir = None # vehicle direction as Quat\n        self.health = None\n        self.seats = [None] * self.seat_count # references to players", ""]}
{"filename": "sa/sa/weapon.py", "chunked_list": ["import enum\n\n# https://team.sa-mp.com/wiki/Weapons.html\n# https://www.open.mp/docs/scripting/resources/weaponids\n\nclass WEAPON(enum.IntEnum):\n    FIST              = 0\n    BRASS_KNUCKLE     = 1\n    GOLF_CLUB         = 2\n    NITE_STICK        = 3\n    KNIFE             = 4\n    BASEBALL_BAT      = 5\n    SHOVEL            = 6\n    POOL_STICK        = 7\n    KATANA            = 8\n    CHAINSAW          = 9\n    DILDO             = 10\n    DILDO2            = 11\n    VIBRATOR          = 12\n    VIBRATOR2         = 13\n    FLOWERS           = 14\n    CANE              = 15\n    GRENADE           = 16\n    TEAR_GAS          = 17\n    MOLOTOV           = 18\n    COLT45            = 22\n    SILENCED_PISTOL   = 23\n    DESERT_EAGLE      = 24\n    SHOTGUN           = 25\n    SAWEDOFF_SHOTGUN  = 26\n    COMBAT_SHOTGUN    = 27\n    UZI               = 28\n    MP5               = 29\n    AK47              = 30\n    M4                = 31\n    TEC9              = 32\n    RIFLE             = 33\n    SNIPER            = 34\n    RPG               = 35\n    HEAT_SEEKING_RPG  = 36\n    FLAMETHROWER      = 37\n    MINIGUN           = 38\n    SATCHEL           = 39\n    BOMB              = 40\n    SPRAY_CAN         = 41\n    FIRE_EXTINGUISHER = 42\n    CAMERA            = 43\n    NIGHT_VISION      = 44\n    THERMAL_GOGGLES   = 45\n    PARACHUTE         = 46\n    FAKE_PISTOL       = 47\n    VEHICLE           = 49\n    HELICOPTER_BLADES = 50\n    EXPLOSION         = 51\n    DROWNED           = 53\n    SPLAT             = 54\n    CONNECT           = 200\n    DISCONNECT        = 201\n    SUICIDE           = 255", ""]}
{"filename": "sa/sa/common.py", "chunked_list": ["class Vec2:\n    def __init__(self, x, y):\n        self.x = x\n        self.y = y\n\n    def __str__(self):\n        return f'({self.x:.2f}, {self.y:.2f})'\n\n    def distance(self, other):\n        return ((self.x - other.x) ** 2 + (self.y - other.y) ** 2) ** 0.5", "\nclass Vec3:\n    def __init__(self, x, y, z):\n        self.x = x\n        self.y = y\n        self.z = z\n\n    def __str__(self):\n        return f'({self.x:.2f}, {self.y:.2f}, {self.z:.2f})'\n    \n    def distance2d(self, other):\n        return ((self.x - other.x) ** 2 + (self.y - other.y) ** 2) ** 0.5", "\nclass Quat:\n    def __init__(self, w, x, y, z):\n        self.w = w\n        self.x = x\n        self.y = y\n        self.z = z\n\n    def __str__(self):\n        return f'({self.w:.2f}, {self.x:.2f}, {self.y:.2f}, {self.z:.2f})'", ""]}
{"filename": "sa/sa/samp/anim.py", "chunked_list": ["from .bitstream import *\n\n# https://www.open.mp/docs/scripting/resources/animations\n\nclass Anim:\n    def __init__(self, index, lib, name, frame_count, duration, description):\n        self.index = index\n        self.lib = lib\n        self.name = name\n        self.frame_count = frame_count\n        self.duration = duration\n        self.description = description", "\nanim_table = [\nAnim(1    , 'AIRPORT'      , 'thrw_barl_thrw'        , 120 , 2.00  , 'Opening a door with two hands'),\nAnim(2    , 'Attractors'   , 'Stepsit_in'            , 100 , 1.67  , 'Sitting on the ground'),\nAnim(3    , 'Attractors'   , 'Stepsit_loop'          , 200 , 3.33  , 'Sitting on the ground loop'),\nAnim(4    , 'Attractors'   , 'Stepsit_out'           , 100 , 1.67  , 'Standing up after sitting'),\nAnim(5    , 'BAR'          , 'Barcustom_get'         , 180 , 3.00  , 'Receiving a drink'),\nAnim(6    , 'BAR'          , 'Barcustom_loop'        , 120 , 2.00  , 'Waiting for a drink'),\nAnim(7    , 'BAR'          , 'Barcustom_order'       , 220 , 3.67  , 'Ordering a drink'),\nAnim(8    , 'BAR'          , 'BARman_idle'           , 500 , 8.33  , 'Male bartender idling'),", "Anim(7    , 'BAR'          , 'Barcustom_order'       , 220 , 3.67  , 'Ordering a drink'),\nAnim(8    , 'BAR'          , 'BARman_idle'           , 500 , 8.33  , 'Male bartender idling'),\nAnim(9    , 'BAR'          , 'Barserve_bottle'       , 180 , 3.00  , 'Grabbing a bottle from the bottom shelf'),\nAnim(10   , 'BAR'          , 'Barserve_give'         , 140 , 2.33  , 'Serving a bottle'),\nAnim(11   , 'BAR'          , 'Barserve_glass'        , 220 , 3.67  , 'Pouring liquid into a glass'),\nAnim(12   , 'BAR'          , 'Barserve_in'           , 100 , 1.67  , 'Female bartender lean start'),\nAnim(13   , 'BAR'          , 'Barserve_loop'         , 140 , 2.33  , 'Female bartender idling'),\nAnim(14   , 'BAR'          , 'Barserve_order'        , 220 , 3.67  , 'Bartender taking order'),\nAnim(15   , 'BAR'          , 'dnk_stndF_loop'        , 140 , 2.33  , 'Female drinking animation'),\nAnim(16   , 'BAR'          , 'dnk_stndM_loop'        , 140 , 2.33  , 'Male drinking animation'),", "Anim(15   , 'BAR'          , 'dnk_stndF_loop'        , 140 , 2.33  , 'Female drinking animation'),\nAnim(16   , 'BAR'          , 'dnk_stndM_loop'        , 140 , 2.33  , 'Male drinking animation'),\nAnim(17   , 'BASEBALL'     , 'Bat_1'                 , 54  , 0.90  , 'First bat swing'),\nAnim(18   , 'BASEBALL'     , 'Bat_2'                 , 68  , 1.13  , 'Second bat swing'),\nAnim(19   , 'BASEBALL'     , 'Bat_3'                 , 72  , 1.20  , 'Third bat swing'),\nAnim(20   , 'BASEBALL'     , 'Bat_4'                 , 60  , 1.00  , 'Bat swing on downed enemy'),\nAnim(21   , 'BASEBALL'     , 'Bat_block'             , 28  , 0.47  , 'Bat block'),\nAnim(22   , 'BASEBALL'     , 'Bat_Hit_1'             , 50  , 0.83  , 'Getting hit by a baseball bat'),\nAnim(23   , 'BASEBALL'     , 'Bat_Hit_2'             , 64  , 1.07  , 'Getting hit by a baseball bat'),\nAnim(24   , 'BASEBALL'     , 'Bat_Hit_3'             , 68  , 1.13  , 'Getting hit by a baseball bat'),", "Anim(23   , 'BASEBALL'     , 'Bat_Hit_2'             , 64  , 1.07  , 'Getting hit by a baseball bat'),\nAnim(24   , 'BASEBALL'     , 'Bat_Hit_3'             , 68  , 1.13  , 'Getting hit by a baseball bat'),\nAnim(25   , 'BASEBALL'     , 'Bat_IDLE'              , 56  , 0.93  , 'Baseball bat idle'),\nAnim(26   , 'BASEBALL'     , 'Bat_M'                 , 32  , 0.53  , 'Bat running attack'),\nAnim(27   , 'BASEBALL'     , 'BAT_PART'              , 32  , 0.53  , 'Bat running attack'),\nAnim(28   , 'BD_FIRE'      , 'BD_Fire1'              , 110 , 1.83  , '[missing animation]'),\nAnim(29   , 'BD_FIRE'      , 'BD_Fire2'              , 100 , 1.67  , '[missing animation]'),\nAnim(30   , 'BD_FIRE'      , 'BD_Fire3'              , 110 , 1.83  , '[missing animation]'),\nAnim(31   , 'BD_FIRE'      , 'BD_GF_Wave'            , 304 , 5.07  , 'Girlfriend wave'),\nAnim(32   , 'BD_FIRE'      , 'BD_Panic_01'           , 200 , 3.33  , 'Window panic animation'),", "Anim(31   , 'BD_FIRE'      , 'BD_GF_Wave'            , 304 , 5.07  , 'Girlfriend wave'),\nAnim(32   , 'BD_FIRE'      , 'BD_Panic_01'           , 200 , 3.33  , 'Window panic animation'),\nAnim(33   , 'BD_FIRE'      , 'BD_Panic_02'           , 200 , 3.33  , 'Window panic animation'),\nAnim(34   , 'BD_FIRE'      , 'BD_Panic_03'           , 200 , 3.33  , 'Window panic animation'),\nAnim(35   , 'BD_FIRE'      , 'BD_Panic_04'           , 200 , 3.33  , 'Window panic animation'),\nAnim(36   , 'BD_FIRE'      , 'BD_Panic_Loop'         , 200 , 3.33  , 'Window panic animation loop'),\nAnim(37   , 'BD_FIRE'      , 'Grlfrd_Kiss_03'        , 420 , 7.00  , 'Girlfriend kiss'),\nAnim(38   , 'BD_FIRE'      , 'M_smklean_loop'        , 300 , 5.00  , 'Male lean and smoking animation loop'),\nAnim(39   , 'BD_FIRE'      , 'Playa_Kiss_03'         , 420 , 7.00  , 'Player kiss animation'),\nAnim(40   , 'BD_FIRE'      , 'wash_up'               , 180 , 3.00  , 'Wash animation'),", "Anim(39   , 'BD_FIRE'      , 'Playa_Kiss_03'         , 420 , 7.00  , 'Player kiss animation'),\nAnim(40   , 'BD_FIRE'      , 'wash_up'               , 180 , 3.00  , 'Wash animation'),\nAnim(41   , 'BEACH'        , 'bather'                , 252 , 4.20  , 'Female sunbathing animation'),\nAnim(42   , 'BEACH'        , 'Lay_Bac_Loop'          , 160 , 2.67  , 'Male sunbathing animation'),\nAnim(43   , 'BEACH'        , 'ParkSit_M_loop'        , 220 , 3.67  , 'Male beach sitting'),\nAnim(44   , 'BEACH'        , 'ParkSit_W_loop'        , 200 , 3.33  , 'Female beach sitting'),\nAnim(45   , 'BEACH'        , 'SitnWait_loop_W'       , 80  , 1.33  , 'Alternative male beach sitting'),\nAnim(46   , 'benchpress'   , 'gym_bp_celebrate'      , 300 , 5.00  , 'Gym after workout animation'),\nAnim(47   , 'benchpress'   , 'gym_bp_down'           , 60  , 1.00  , 'Benchpress lowering'),\nAnim(48   , 'benchpress'   , 'gym_bp_getoff'         , 520 , 8.67  , 'Finishing benchpress workout'),", "Anim(47   , 'benchpress'   , 'gym_bp_down'           , 60  , 1.00  , 'Benchpress lowering'),\nAnim(48   , 'benchpress'   , 'gym_bp_getoff'         , 520 , 8.67  , 'Finishing benchpress workout'),\nAnim(49   , 'benchpress'   , 'gym_bp_geton'          , 320 , 5.33  , 'Starting benchpress workout'),\nAnim(50   , 'benchpress'   , 'gym_bp_up_A'           , 140 , 2.33  , 'Benchpress lifting'),\nAnim(51   , 'benchpress'   , 'gym_bp_up_B'           , 160 , 2.67  , 'Benchpress lifting'),\nAnim(52   , 'benchpress'   , 'gym_bp_up_smooth'      , 80  , 1.33  , 'Benchpress lifting'),\nAnim(53   , 'BF_injection' , 'BF_getin_LHS'          , 60  , 1.00  , 'Entering a bf injection from the left'),\nAnim(54   , 'BF_injection' , 'BF_getin_RHS'          , 60  , 1.00  , 'Entering a bf injection from the right'),\nAnim(55   , 'BF_injection' , 'BF_getout_LHS'         , 68  , 1.13  , 'Exiting a bf injection from the left'),\nAnim(56   , 'BF_injection' , 'BF_getout_RHS'         , 68  , 1.13  , 'Exiting a bf injection from the right'),", "Anim(55   , 'BF_injection' , 'BF_getout_LHS'         , 68  , 1.13  , 'Exiting a bf injection from the left'),\nAnim(56   , 'BF_injection' , 'BF_getout_RHS'         , 68  , 1.13  , 'Exiting a bf injection from the right'),\nAnim(57   , 'BIKED'        , 'BIKEd_Back'            , 6   , 0.10  , 'Sanchez lean back'),\nAnim(58   , 'BIKED'        , 'BIKEd_drivebyFT'       , 12  , 0.20  , 'Sanchez drive by front'),\nAnim(59   , 'BIKED'        , 'BIKEd_drivebyLHS'      , 12  , 0.20  , 'Sanchez drive by left'),\nAnim(60   , 'BIKED'        , 'BIKEd_drivebyRHS'      , 12  , 0.20  , 'Sanchez drive by right'),\nAnim(61   , 'BIKED'        , 'BIKEd_Fwd'             , 12  , 0.20  , 'Sanchez lean front'),\nAnim(62   , 'BIKED'        , 'BIKEd_getoffBACK'      , 88  , 1.47  , 'Jumping off a Sanchez at high speed'),\nAnim(63   , 'BIKED'        , 'BIKEd_getoffLHS'       , 60  , 1.00  , 'Getting off a Sanchez from the left'),\nAnim(64   , 'BIKED'        , 'BIKEd_getoffRHS'       , 60  , 1.00  , 'Getting off a Sanchez from the right'),", "Anim(63   , 'BIKED'        , 'BIKEd_getoffLHS'       , 60  , 1.00  , 'Getting off a Sanchez from the left'),\nAnim(64   , 'BIKED'        , 'BIKEd_getoffRHS'       , 60  , 1.00  , 'Getting off a Sanchez from the right'),\nAnim(65   , 'BIKED'        , 'BIKEd_hit'             , 2   , 0.03  , 'Sanchez hit'),\nAnim(66   , 'BIKED'        , 'BIKEd_jumponL'         , 58  , 0.97  , 'Sanchez enter from the left'),\nAnim(67   , 'BIKED'        , 'BIKEd_jumponR'         , 58  , 0.97  , 'Sanchez enter from the right'),\nAnim(68   , 'BIKED'        , 'BIKEd_kick'            , 64  , 1.07  , 'Sanchez kick from the front'),\nAnim(69   , 'BIKED'        , 'BIKEd_Left'            , 6   , 0.10  , 'Sanchez sway left'),\nAnim(70   , 'BIKED'        , 'BIKEd_passenger'       , 2   , 0.03  , 'Sanchez passenger flinch'),\nAnim(71   , 'BIKED'        , 'BIKEd_pushes'          , 48  , 0.80  , 'Sanchez reverse'),\nAnim(72   , 'BIKED'        , 'BIKEd_Ride'            , 2   , 0.03  , 'Sanchez riding'),", "Anim(71   , 'BIKED'        , 'BIKEd_pushes'          , 48  , 0.80  , 'Sanchez reverse'),\nAnim(72   , 'BIKED'        , 'BIKEd_Ride'            , 2   , 0.03  , 'Sanchez riding'),\nAnim(73   , 'BIKED'        , 'BIKEd_Right'           , 6   , 0.10  , 'Sanchez sway right'),\nAnim(74   , 'BIKED'        , 'BIKEd_shuffle'         , 26  , 0.43  , 'Get on bike from back'),\nAnim(75   , 'BIKED'        , 'BIKEd_Still'           , 2   , 0.03  , 'Sanchez still riding'),\nAnim(76   , 'BIKEH'        , 'BIKEh_Back'            , 6   , 0.10  , 'Freeway lean back'),\nAnim(77   , 'BIKEH'        , 'BIKEh_drivebyFT'       , 12  , 0.20  , 'Freeway lean back'),\nAnim(78   , 'BIKEH'        , 'BIKEh_drivebyLHS'      , 12  , 0.20  , 'Freeway drive by left'),\nAnim(79   , 'BIKEH'        , 'BIKEh_drivebyRHS'      , 12  , 0.20  , 'Freeway drive by right'),\nAnim(80   , 'BIKEH'        , 'BIKEh_Fwd'             , 12  , 0.20  , 'Freeway  lean front'),", "Anim(79   , 'BIKEH'        , 'BIKEh_drivebyRHS'      , 12  , 0.20  , 'Freeway drive by right'),\nAnim(80   , 'BIKEH'        , 'BIKEh_Fwd'             , 12  , 0.20  , 'Freeway  lean front'),\nAnim(81   , 'BIKEH'        , 'BIKEh_getoffBACK'      , 102 , 1.70  , 'Freeway bail at high speed'),\nAnim(82   , 'BIKEH'        , 'BIKEh_getoffLHS'       , 46  , 0.77  , 'Getting off a Freeway from the left'),\nAnim(83   , 'BIKEH'        , 'BIKEh_getoffRHS'       , 44  , 0.73  , 'Getting off a Freeway from the right'),\nAnim(84   , 'BIKEH'        , 'BIKEh_hit'             , 2   , 0.03  , 'Freeway hit'),\nAnim(85   , 'BIKEH'        , 'BIKEh_jumponL'         , 88  , 1.47  , 'Getting on a Freeway from the left'),\nAnim(86   , 'BIKEH'        , 'BIKEh_jumponR'         , 90  , 1.50  , 'Getting on a Freeway from the right'),\nAnim(87   , 'BIKEH'        , 'BIKEh_kick'            , 64  , 1.07  , 'Jumping on a Freeway from the front'),\nAnim(88   , 'BIKEH'        , 'BIKEh_Left'            , 8   , 0.13  , 'Freeway sway left'),", "Anim(87   , 'BIKEH'        , 'BIKEh_kick'            , 64  , 1.07  , 'Jumping on a Freeway from the front'),\nAnim(88   , 'BIKEH'        , 'BIKEh_Left'            , 8   , 0.13  , 'Freeway sway left'),\nAnim(89   , 'BIKEH'        , 'BIKEh_passenger'       , 2   , 0.03  , 'Freeway Passenger flinch'),\nAnim(90   , 'BIKEH'        , 'BIKEh_pushes'          , 58  , 0.97  , 'Freeway reversing'),\nAnim(91   , 'BIKEH'        , 'BIKEh_Ride'            , 2   , 0.03  , 'Freeway riding'),\nAnim(92   , 'BIKEH'        , 'BIKEh_Right'           , 8   , 0.13  , 'Freeway sway right'),\nAnim(93   , 'BIKEH'        , 'BIKEh_Still'           , 2   , 0.03  , 'Freeway still riding'),\nAnim(94   , 'BIKELEAP'     , 'bk_blnce_in'           , 114 , 1.90  , 'Balance in while standing on a bike'),\nAnim(95   , 'BIKELEAP'     , 'bk_blnce_out'          , 60  , 1.00  , 'Getting back to bike\\'s seat after standing'),\nAnim(96   , 'BIKELEAP'     , 'bk_jmp'                , 24  , 0.40  , 'Jumping from a bike'),", "Anim(95   , 'BIKELEAP'     , 'bk_blnce_out'          , 60  , 1.00  , 'Getting back to bike\\'s seat after standing'),\nAnim(96   , 'BIKELEAP'     , 'bk_jmp'                , 24  , 0.40  , 'Jumping from a bike'),\nAnim(97   , 'BIKELEAP'     , 'bk_rdy_in'             , 30  , 0.50  , 'Getting ready to jump from a bike'),\nAnim(98   , 'BIKELEAP'     , 'bk_rdy_out'            , 24  , 0.40  , 'Cancelling a jump from a bike'),\nAnim(99   , 'BIKELEAP'     , 'struggle_cesar'        , 28  , 0.47  , 'Fighting a truck\\'s driver'),\nAnim(100  , 'BIKELEAP'     , 'struggle_driver'       , 28  , 0.47  , 'Truck driver struggling with an attacker'),\nAnim(101  , 'BIKELEAP'     , 'truck_driver'          , 44  , 0.73  , 'Truck driver getting thrown out'),\nAnim(102  , 'BIKELEAP'     , 'truck_getin'           , 150 , 2.50  , 'Truck hijacker steals a truck'),\nAnim(103  , 'BIKES'        , 'BIKEs_Back'            , 6   , 0.10  , 'PCJ lean back'),\nAnim(104  , 'BIKES'        , 'BIKEs_drivebyFT'       , 12  , 0.20  , 'PCJ drive by front'),", "Anim(103  , 'BIKES'        , 'BIKEs_Back'            , 6   , 0.10  , 'PCJ lean back'),\nAnim(104  , 'BIKES'        , 'BIKEs_drivebyFT'       , 12  , 0.20  , 'PCJ drive by front'),\nAnim(105  , 'BIKES'        , 'BIKEs_drivebyLHS'      , 12  , 0.20  , 'PCJ drive by left'),\nAnim(106  , 'BIKES'        , 'BIKEs_drivebyRHS'      , 12  , 0.20  , 'PCJ drive by right'),\nAnim(107  , 'BIKES'        , 'BIKEs_Fwd'             , 12  , 0.20  , 'PCJ lean front'),\nAnim(108  , 'BIKES'        , 'BIKEs_getoffBACK'      , 146 , 2.43  , 'Bailing from a PCJ at high speed'),\nAnim(109  , 'BIKES'        , 'BIKEs_getoffLHS'       , 66  , 1.10  , 'Getting off a PCJ from the left'),\nAnim(110  , 'BIKES'        , 'BIKEs_getoffRHS'       , 66  , 1.10  , 'Getting off a PCJ from the right'),\nAnim(111  , 'BIKES'        , 'BIKEs_hit'             , 2   , 0.03  , 'Getting hit on a PCJ'),\nAnim(112  , 'BIKES'        , 'BIKEs_jumponL'         , 54  , 0.90  , 'Getting on a PCJ from the left'),", "Anim(111  , 'BIKES'        , 'BIKEs_hit'             , 2   , 0.03  , 'Getting hit on a PCJ'),\nAnim(112  , 'BIKES'        , 'BIKEs_jumponL'         , 54  , 0.90  , 'Getting on a PCJ from the left'),\nAnim(113  , 'BIKES'        , 'BIKEs_jumponR'         , 54  , 0.90  , 'Getting on a PCJ from the right'),\nAnim(114  , 'BIKES'        , 'BIKEs_kick'            , 60  , 1.00  , 'Getting on a PCJ from the front'),\nAnim(115  , 'BIKES'        , 'BIKEs_Left'            , 6   , 0.10  , 'PCJ sway left'),\nAnim(116  , 'BIKES'        , 'BIKEs_passenger'       , 2   , 0.03  , 'PCJ passanger anim'),\nAnim(117  , 'BIKES'        , 'BIKEs_pushes'          , 44  , 0.73  , 'PCJ reverse animation'),\nAnim(118  , 'BIKES'        , 'BIKEs_Ride'            , 2   , 0.03  , 'PCJ riding'),\nAnim(119  , 'BIKES'        , 'BIKEs_Right'           , 6   , 0.10  , 'PCJ sway right'),\nAnim(120  , 'BIKES'        , 'BIKEs_Snatch_L'        , 26  , 0.43  , 'Snatching from the left while riding a PCJ'),", "Anim(119  , 'BIKES'        , 'BIKEs_Right'           , 6   , 0.10  , 'PCJ sway right'),\nAnim(120  , 'BIKES'        , 'BIKEs_Snatch_L'        , 26  , 0.43  , 'Snatching from the left while riding a PCJ'),\nAnim(121  , 'BIKES'        , 'BIKEs_Snatch_R'        , 26  , 0.43  , 'Snatching from the right while riding a PCJ'),\nAnim(122  , 'BIKES'        , 'BIKEs_Still'           , 2   , 0.03  , 'PCJ still riding'),\nAnim(123  , 'BIKEV'        , 'BIKEv_Back'            , 10  , 0.17  , 'Faggio lean back'),\nAnim(124  , 'BIKEV'        , 'BIKEv_drivebyFT'       , 10  , 0.17  , 'Faggio drive by front'),\nAnim(125  , 'BIKEV'        , 'BIKEv_drivebyLHS'      , 14  , 0.23  , 'Faggio drive by left'),\nAnim(126  , 'BIKEV'        , 'BIKEv_drivebyRHS'      , 12  , 0.20  , 'Faggio drive by right'),\nAnim(127  , 'BIKEV'        , 'BIKEv_Fwd'             , 12  , 0.20  , 'Faggio lean front'),\nAnim(128  , 'BIKEV'        , 'BIKEv_getoffBACK'      , 102 , 1.70  , 'Bailing from a Faggio at high speed'),", "Anim(127  , 'BIKEV'        , 'BIKEv_Fwd'             , 12  , 0.20  , 'Faggio lean front'),\nAnim(128  , 'BIKEV'        , 'BIKEv_getoffBACK'      , 102 , 1.70  , 'Bailing from a Faggio at high speed'),\nAnim(129  , 'BIKEV'        , 'BIKEv_getoffLHS'       , 40  , 0.67  , 'Getting off a Faggio from the left'),\nAnim(130  , 'BIKEV'        , 'BIKEv_getoffRHS'       , 40  , 0.67  , 'Getting off a Faggio from the right'),\nAnim(131  , 'BIKEV'        , 'BIKEv_hit'             , 2   , 0.03  , 'Getting hit on a Faggio'),\nAnim(132  , 'BIKEV'        , 'BIKEv_jumponL'         , 40  , 0.67  , 'Getting on a Faggio from the left'),\nAnim(133  , 'BIKEV'        , 'BIKEv_jumponR'         , 40  , 0.67  , 'Getting on a Faggio from the right'),\nAnim(134  , 'BIKEV'        , 'BIKEv_kick'            , 60  , 1.00  , 'Getting on a Faggio from the front'),\nAnim(135  , 'BIKEV'        , 'BIKEv_Left'            , 6   , 0.10  , 'Faggio sway left'),\nAnim(136  , 'BIKEV'        , 'BIKEv_passenger'       , 2   , 0.03  , 'Faggio passanger anim'),", "Anim(135  , 'BIKEV'        , 'BIKEv_Left'            , 6   , 0.10  , 'Faggio sway left'),\nAnim(136  , 'BIKEV'        , 'BIKEv_passenger'       , 2   , 0.03  , 'Faggio passanger anim'),\nAnim(137  , 'BIKEV'        , 'BIKEv_pushes'          , 44  , 0.73  , 'Faggio reverse'),\nAnim(138  , 'BIKEV'        , 'BIKEv_Ride'            , 2   , 0.03  , 'Faggio riding'),\nAnim(139  , 'BIKEV'        , 'BIKEv_Right'           , 6   , 0.10  , 'Faggio sway right'),\nAnim(140  , 'BIKEV'        , 'BIKEv_Still'           , 2   , 0.03  , 'Faggio still riding'),\nAnim(141  , 'BIKE_DBZ'     , 'Pass_Driveby_BWD'      , 50  , 0.83  , 'Bike passanger drive bying back'),\nAnim(142  , 'BIKE_DBZ'     , 'Pass_Driveby_FWD'      , 50  , 0.83  , 'Bike passanger drive bying front'),\nAnim(143  , 'BIKE_DBZ'     , 'Pass_Driveby_LHS'      , 50  , 0.83  , 'Bike passanger drive bying left'),\nAnim(144  , 'BIKE_DBZ'     , 'Pass_Driveby_RHS'      , 50  , 0.83  , 'Bike passanger drive bying right'),", "Anim(143  , 'BIKE_DBZ'     , 'Pass_Driveby_LHS'      , 50  , 0.83  , 'Bike passanger drive bying left'),\nAnim(144  , 'BIKE_DBZ'     , 'Pass_Driveby_RHS'      , 50  , 0.83  , 'Bike passanger drive bying right'),\nAnim(None , 'BLOWJOBZ'     , 'BJ_Car_End_P'          , 248 , 4.13  , 'Finish getting pumped in car'),\nAnim(None , 'BLOWJOBZ'     , 'BJ_Car_End_W'          , 220 , 3.67  , 'Finish pumping in car'),\nAnim(None , 'BLOWJOBZ'     , 'BJ_Car_Loop_P'         , 40  , 0.67  , 'Getting pumped in car'),\nAnim(None , 'BLOWJOBZ'     , 'BJ_Car_Loop_W'         , 40  , 0.67  , 'Pumping in car'),\nAnim(None , 'BLOWJOBZ'     , 'BJ_Car_Start_P'        , 140 , 2.33  , 'Start getting pumped in car'),\nAnim(None , 'BLOWJOBZ'     , 'BJ_Car_Start_W'        , 140 , 2.33  , 'Start pumping in car'),\nAnim(None , 'BLOWJOBZ'     , 'BJ_Couch_End_P'        , 460 , 7.67  , 'Finish getting pumped on couch'),\nAnim(None , 'BLOWJOBZ'     , 'BJ_Couch_End_W'        , 460 , 7.67  , 'Finish pumping on couch'),", "Anim(None , 'BLOWJOBZ'     , 'BJ_Couch_End_P'        , 460 , 7.67  , 'Finish getting pumped on couch'),\nAnim(None , 'BLOWJOBZ'     , 'BJ_Couch_End_W'        , 460 , 7.67  , 'Finish pumping on couch'),\nAnim(None , 'BLOWJOBZ'     , 'BJ_Couch_Loop_P'       , 120 , 2.00  , 'Getting pumped on couch'),\nAnim(None , 'BLOWJOBZ'     , 'BJ_Couch_Loop_W'       , 120 , 2.00  , 'Pumping on couch'),\nAnim(None , 'BLOWJOBZ'     , 'BJ_Couch_Start_P'      , 320 , 5.33  , 'Start getting pumped on couch'),\nAnim(None , 'BLOWJOBZ'     , 'BJ_Couch_Start_W'      , 320 , 5.33  , 'Start pumping on couch'),\nAnim(None , 'BLOWJOBZ'     , 'BJ_Stand_End_P'        , 292 , 4.87  , 'Finish getting pumped up'),\nAnim(None , 'BLOWJOBZ'     , 'BJ_Stand_End_W'        , 320 , 5.33  , 'Finish pumping up'),\nAnim(None , 'BLOWJOBZ'     , 'BJ_Stand_Loop_P'       , 40  , 0.67  , 'Getting pumped up'),\nAnim(None , 'BLOWJOBZ'     , 'BJ_Stand_Loop_W'       , 40  , 0.67  , 'Pumping up'),", "Anim(None , 'BLOWJOBZ'     , 'BJ_Stand_Loop_P'       , 40  , 0.67  , 'Getting pumped up'),\nAnim(None , 'BLOWJOBZ'     , 'BJ_Stand_Loop_W'       , 40  , 0.67  , 'Pumping up'),\nAnim(None , 'BLOWJOBZ'     , 'BJ_Stand_Start_P'      , 120 , 2.00  , 'Start getting pumped up'),\nAnim(None , 'BLOWJOBZ'     , 'BJ_Stand_Start_W'      , 120 , 2.00  , 'Start pumping up'),\nAnim(145  , 'BMX'          , 'BMX_back'              , 6   , 0.10  , 'BMX lean back'),\nAnim(146  , 'BMX'          , 'BMX_bunnyhop'          , 20  , 0.33  , 'BMX bunnyhop'),\nAnim(147  , 'BMX'          , 'BMX_drivebyFT'         , 12  , 0.20  , 'BMX drive by front'),\nAnim(148  , 'BMX'          , 'BMX_driveby_LHS'       , 12  , 0.20  , 'BMX drive by left'),\nAnim(149  , 'BMX'          , 'BMX_driveby_RHS'       , 12  , 0.20  , 'BMX drive by right'),\nAnim(150  , 'BMX'          , 'BMX_fwd'               , 8   , 0.13  , 'BMX lean front'),", "Anim(149  , 'BMX'          , 'BMX_driveby_RHS'       , 12  , 0.20  , 'BMX drive by right'),\nAnim(150  , 'BMX'          , 'BMX_fwd'               , 8   , 0.13  , 'BMX lean front'),\nAnim(151  , 'BMX'          , 'BMX_getoffBACK'        , 82  , 1.37  , 'BMX bail out at high speed'),\nAnim(152  , 'BMX'          , 'BMX_getoffLHS'         , 44  , 0.73  , 'Getting off a BMX from the left'),\nAnim(153  , 'BMX'          , 'BMX_getoffRHS'         , 38  , 0.63  , 'Getting off a BMX from the right'),\nAnim(154  , 'BMX'          , 'BMX_jumponL'           , 54  , 0.90  , 'Getting on a BMX from the left'),\nAnim(155  , 'BMX'          , 'BMX_jumponR'           , 54  , 0.90  , 'Getting on a BMX from the right'),\nAnim(156  , 'BMX'          , 'BMX_Left'              , 8   , 0.13  , 'BMX sway left'),\nAnim(157  , 'BMX'          , 'BMX_pedal'             , 44  , 0.73  , 'BMX pedal'),\nAnim(158  , 'BMX'          , 'BMX_pushes'            , 48  , 0.80  , 'BMX reversing'),", "Anim(157  , 'BMX'          , 'BMX_pedal'             , 44  , 0.73  , 'BMX pedal'),\nAnim(158  , 'BMX'          , 'BMX_pushes'            , 48  , 0.80  , 'BMX reversing'),\nAnim(159  , 'BMX'          , 'BMX_Ride'              , 2   , 0.03  , 'BMX riding'),\nAnim(160  , 'BMX'          , 'BMX_Right'             , 8   , 0.13  , 'BMX sway right'),\nAnim(161  , 'BMX'          , 'BMX_sprint'            , 40  , 0.67  , 'BMX sprinting'),\nAnim(162  , 'BMX'          , 'BMX_still'             , 2   , 0.03  , 'BMX still riding'),\nAnim(163  , 'BOMBER'       , 'BOM_Plant'             , 160 , 2.67  , 'Bomb planting'),\nAnim(164  , 'BOMBER'       , 'BOM_Plant_2Idle'       , 60  , 1.00  , 'Bomb planting idle'),\nAnim(165  , 'BOMBER'       , 'BOM_Plant_Crouch_In'   , 48  , 0.80  , 'Crouching to plant a bomb'),\nAnim(166  , 'BOMBER'       , 'BOM_Plant_Crouch_Out'  , 48  , 0.80  , 'Standing up after planting a bomb'),", "Anim(165  , 'BOMBER'       , 'BOM_Plant_Crouch_In'   , 48  , 0.80  , 'Crouching to plant a bomb'),\nAnim(166  , 'BOMBER'       , 'BOM_Plant_Crouch_Out'  , 48  , 0.80  , 'Standing up after planting a bomb'),\nAnim(167  , 'BOMBER'       , 'BOM_Plant_In'          , 52  , 0.87  , 'Planting a bomb'),\nAnim(168  , 'BOMBER'       , 'BOM_Plant_Loop'        , 48  , 0.80  , 'Bomb planting loop'),\nAnim(169  , 'BOX'          , 'boxhipin'              , 392 , 6.53  , 'Putting a box down'),\nAnim(170  , 'BOX'          , 'boxhipup'              , 300 , 5.00  , 'Putting a box down'),\nAnim(171  , 'BOX'          , 'boxshdwn'              , 366 , 6.10  , 'Putting a box down'),\nAnim(172  , 'BOX'          , 'boxshup'               , 312 , 5.20  , 'Putting a box up'),\nAnim(173  , 'BOX'          , 'bxhipwlk'              , 90  , 1.50  , 'Walking with a box to the hip'),\nAnim(174  , 'BOX'          , 'bxhwlki'               , 58  , 0.97  , 'Box walking'),", "Anim(173  , 'BOX'          , 'bxhipwlk'              , 90  , 1.50  , 'Walking with a box to the hip'),\nAnim(174  , 'BOX'          , 'bxhwlki'               , 58  , 0.97  , 'Box walking'),\nAnim(175  , 'BOX'          , 'bxshwlk'               , 150 , 2.50  , 'Box walking'),\nAnim(176  , 'BOX'          , 'bxshwlki'              , 58  , 0.97  , 'Box walking'),\nAnim(177  , 'BOX'          , 'bxwlko'                , 32  , 0.53  , 'Box walking'),\nAnim(178  , 'BOX'          , 'catch_box'             , 90  , 1.50  , 'Catching a box'),\nAnim(179  , 'BSKTBALL'     , 'BBALL_def_jump_shot'   , 70  , 1.17  , 'Basktball defense block shot while jumping'),\nAnim(180  , 'BSKTBALL'     , 'BBALL_def_loop'        , 60  , 1.00  , 'Basketball defense loop'),\nAnim(181  , 'BSKTBALL'     , 'BBALL_def_stepL'       , 36  , 0.60  , 'Basketball defense step left'),\nAnim(182  , 'BSKTBALL'     , 'BBALL_def_stepR'       , 36  , 0.60  , 'Basketball defense step right'),", "Anim(181  , 'BSKTBALL'     , 'BBALL_def_stepL'       , 36  , 0.60  , 'Basketball defense step left'),\nAnim(182  , 'BSKTBALL'     , 'BBALL_def_stepR'       , 36  , 0.60  , 'Basketball defense step right'),\nAnim(183  , 'BSKTBALL'     , 'BBALL_Dnk'             , 84  , 1.40  , 'Basketball dunking animation'),\nAnim(184  , 'BSKTBALL'     , 'BBALL_Dnk_Gli'         , 22  , 0.37  , 'Basketball dunking animation'),\nAnim(185  , 'BSKTBALL'     , 'BBALL_Dnk_Gli_O'       , 22  , 0.37  , 'Missing animation'),\nAnim(186  , 'BSKTBALL'     , 'BBALL_Dnk_Lnch'        , 12  , 0.20  , 'Basketball dunking animation'),\nAnim(187  , 'BSKTBALL'     , 'BBALL_Dnk_Lnch_O'      , 12  , 0.20  , 'Missing animation'),\nAnim(188  , 'BSKTBALL'     , 'BBALL_Dnk_Lnd'         , 56  , 0.93  , 'Landing on the ground after dunking'),\nAnim(189  , 'BSKTBALL'     , 'BBALL_Dnk_O'           , 6   , 0.10  , 'Missing animation'),\nAnim(190  , 'BSKTBALL'     , 'BBALL_idle'            , 146 , 2.43  , 'Basketball trick animation'),", "Anim(189  , 'BSKTBALL'     , 'BBALL_Dnk_O'           , 6   , 0.10  , 'Missing animation'),\nAnim(190  , 'BSKTBALL'     , 'BBALL_idle'            , 146 , 2.43  , 'Basketball trick animation'),\nAnim(191  , 'BSKTBALL'     , 'BBALL_idle2'           , 160 , 2.67  , 'Basketball trick animation'),\nAnim(192  , 'BSKTBALL'     , 'BBALL_idle2_O'         , 160 , 2.67  , 'Missing animation'),\nAnim(193  , 'BSKTBALL'     , 'BBALL_idleloop'        , 40  , 0.67  , 'Basketball idle animation'),\nAnim(194  , 'BSKTBALL'     , 'BBALL_idleloop_O'      , 40  , 0.67  , 'Missing animation'),\nAnim(195  , 'BSKTBALL'     , 'BBALL_idle_O'          , 146 , 2.43  , 'Missing animation'),\nAnim(196  , 'BSKTBALL'     , 'BBALL_Jump_Cancel'     , 64  , 1.07  , 'Basketball jump cancelling'),\nAnim(197  , 'BSKTBALL'     , 'BBALL_Jump_Cancel_O'   , 64  , 1.07  , 'Missing animation'),\nAnim(198  , 'BSKTBALL'     , 'BBALL_Jump_End'        , 56  , 0.93  , 'Landing on the ground after shooting'),", "Anim(197  , 'BSKTBALL'     , 'BBALL_Jump_Cancel_O'   , 64  , 1.07  , 'Missing animation'),\nAnim(198  , 'BSKTBALL'     , 'BBALL_Jump_End'        , 56  , 0.93  , 'Landing on the ground after shooting'),\nAnim(199  , 'BSKTBALL'     , 'BBALL_Jump_Shot'       , 100 , 1.67  , 'Basketball shooting'),\nAnim(200  , 'BSKTBALL'     , 'BBALL_Jump_Shot_O'     , 40  , 0.67  , 'Missing animation'),\nAnim(201  , 'BSKTBALL'     , 'BBALL_Net_Dnk_O'       , 110 , 1.83  , 'Missing animation'),\nAnim(202  , 'BSKTBALL'     , 'BBALL_pickup'          , 110 , 1.83  , 'Picking up a basketball'),\nAnim(203  , 'BSKTBALL'     , 'BBALL_pickup_O'        , 110 , 1.83  , 'Missing animation'),\nAnim(204  , 'BSKTBALL'     , 'BBALL_react_miss'      , 48  , 0.80  , 'Basketball reaction to missing the shot'),\nAnim(205  , 'BSKTBALL'     , 'BBALL_react_score'     , 66  , 1.10  , 'Basketball reaction to scoring the shot'),\nAnim(206  , 'BSKTBALL'     , 'BBALL_run'             , 54  , 0.90  , 'Basketball run and dribble'),", "Anim(205  , 'BSKTBALL'     , 'BBALL_react_score'     , 66  , 1.10  , 'Basketball reaction to scoring the shot'),\nAnim(206  , 'BSKTBALL'     , 'BBALL_run'             , 54  , 0.90  , 'Basketball run and dribble'),\nAnim(207  , 'BSKTBALL'     , 'BBALL_run_O'           , 54  , 0.90  , 'Missing animation'),\nAnim(208  , 'BSKTBALL'     , 'BBALL_SkidStop_L'      , 30  , 0.50  , 'Skid stop left'),\nAnim(209  , 'BSKTBALL'     , 'BBALL_SkidStop_L_O'    , 30  , 0.50  , 'Missing animation'),\nAnim(210  , 'BSKTBALL'     , 'BBALL_SkidStop_R'      , 30  , 0.50  , 'Skid stop right'),\nAnim(211  , 'BSKTBALL'     , 'BBALL_SkidStop_R_O'    , 30  , 0.50  , 'Missing animation'),\nAnim(212  , 'BSKTBALL'     , 'BBALL_walk'            , 64  , 1.07  , 'Walking with a basketball while dribbling'),\nAnim(213  , 'BSKTBALL'     , 'BBALL_WalkStop_L'      , 30  , 0.50  , 'Walk stop left'),\nAnim(214  , 'BSKTBALL'     , 'BBALL_WalkStop_L_O'    , 30  , 0.50  , 'Missing animation'),", "Anim(213  , 'BSKTBALL'     , 'BBALL_WalkStop_L'      , 30  , 0.50  , 'Walk stop left'),\nAnim(214  , 'BSKTBALL'     , 'BBALL_WalkStop_L_O'    , 30  , 0.50  , 'Missing animation'),\nAnim(215  , 'BSKTBALL'     , 'BBALL_WalkStop_R'      , 30  , 0.50  , 'Walk stop right'),\nAnim(216  , 'BSKTBALL'     , 'BBALL_WalkStop_R_O'    , 30  , 0.50  , 'Missing animation'),\nAnim(217  , 'BSKTBALL'     , 'BBALL_walk_O'          , 64  , 1.07  , 'Missing animation'),\nAnim(218  , 'BSKTBALL'     , 'BBALL_walk_start'      , 12  , 0.20  , 'Basketball walk start'),\nAnim(219  , 'BSKTBALL'     , 'BBALL_walk_start_O'    , 12  , 0.20  , 'Missing animation'),\nAnim(220  , 'BUDDY'        , 'buddy_crouchfire'      , 52  , 0.87  , 'Combat shotgun crouch fire'),\nAnim(221  , 'BUDDY'        , 'buddy_crouchreload'    , 66  , 1.10  , 'Combat shotgun crouch reload'),\nAnim(222  , 'BUDDY'        , 'buddy_fire'            , 48  , 0.80  , 'Combat shotgun fire'),", "Anim(221  , 'BUDDY'        , 'buddy_crouchreload'    , 66  , 1.10  , 'Combat shotgun crouch reload'),\nAnim(222  , 'BUDDY'        , 'buddy_fire'            , 48  , 0.80  , 'Combat shotgun fire'),\nAnim(223  , 'BUDDY'        , 'buddy_fire_poor'       , 80  , 1.33  , 'Combat shotgun fire with poor skills'),\nAnim(224  , 'BUDDY'        , 'buddy_reload'          , 78  , 1.30  , 'Combat shotgun reload'),\nAnim(225  , 'BUS'          , 'BUS_close'             , 24  , 0.40  , 'Bus door close'),\nAnim(226  , 'BUS'          , 'BUS_getin_LHS'         , 20  , 0.33  , 'Getting into a bus from the left'),\nAnim(227  , 'BUS'          , 'BUS_getin_RHS'         , 130 , 2.17  , 'Getting into a bus from the right'),\nAnim(228  , 'BUS'          , 'BUS_getout_LHS'        , 48  , 0.80  , 'Getting out of a bus from the right'),\nAnim(229  , 'BUS'          , 'BUS_getout_RHS'        , 112 , 1.87  , 'Getting out of a bus from the left'),\nAnim(230  , 'BUS'          , 'BUS_jacked_LHS'        , 68  , 1.13  , 'Getting thrown off a bus'),", "Anim(229  , 'BUS'          , 'BUS_getout_RHS'        , 112 , 1.87  , 'Getting out of a bus from the left'),\nAnim(230  , 'BUS'          , 'BUS_jacked_LHS'        , 68  , 1.13  , 'Getting thrown off a bus'),\nAnim(231  , 'BUS'          , 'BUS_open'              , 88  , 1.47  , 'Bus door opening'),\nAnim(232  , 'BUS'          , 'BUS_open_RHS'          , 72  , 1.20  , 'Bus door opening from the right'),\nAnim(233  , 'BUS'          , 'BUS_pullout_LHS'       , 48  , 0.80  , 'Pulling out a bus\\' driver'),\nAnim(234  , 'CAMERA'       , 'camcrch_cmon'          , 140 , 2.33  , 'Crouching with a camera and signalling to move'),\nAnim(235  , 'CAMERA'       , 'camcrch_idleloop'      , 120 , 2.00  , 'Crouching with a camera idle loop'),\nAnim(236  , 'CAMERA'       , 'camcrch_stay'          , 120 , 2.00  , 'Signalling to stay with a camera'),\nAnim(237  , 'CAMERA'       , 'camcrch_to_camstnd'    , 80  , 1.33  , 'Standing up with a camera'),\nAnim(238  , 'CAMERA'       , 'camstnd_cmon'          , 180 , 3.00  , 'Signalling to move with a camera'),", "Anim(237  , 'CAMERA'       , 'camcrch_to_camstnd'    , 80  , 1.33  , 'Standing up with a camera'),\nAnim(238  , 'CAMERA'       , 'camstnd_cmon'          , 180 , 3.00  , 'Signalling to move with a camera'),\nAnim(239  , 'CAMERA'       , 'camstnd_idleloop'      , 120 , 2.00  , 'Standing with a camera'),\nAnim(240  , 'CAMERA'       , 'camstnd_lkabt'         , 260 , 4.33  , 'Looking around with a camera'),\nAnim(241  , 'CAMERA'       , 'camstnd_to_camcrch'    , 60  , 1.00  , 'Crouching with a camera'),\nAnim(242  , 'CAMERA'       , 'piccrch_in'            , 80  , 1.33  , 'Priming camera to take a picture while crouching'),\nAnim(243  , 'CAMERA'       , 'piccrch_out'           , 120 , 2.00  , 'After picture while crouched'),\nAnim(244  , 'CAMERA'       , 'piccrch_take'          , 60  , 1.00  , 'Taking a picture while crouched'),\nAnim(245  , 'CAMERA'       , 'picstnd_in'            , 60  , 1.00  , 'Priming camera to take picture while standing'),\nAnim(246  , 'CAMERA'       , 'picstnd_out'           , 40  , 0.67  , 'After picture while standing'),", "Anim(245  , 'CAMERA'       , 'picstnd_in'            , 60  , 1.00  , 'Priming camera to take picture while standing'),\nAnim(246  , 'CAMERA'       , 'picstnd_out'           , 40  , 0.67  , 'After picture while standing'),\nAnim(247  , 'CAMERA'       , 'picstnd_take'          , 60  , 1.00  , 'Taking a picture while standing'),\nAnim(248  , 'CAR'          , 'Fixn_Car_Loop'         , 300 , 5.00  , 'Fixing a car loop'),\nAnim(249  , 'CAR'          , 'Fixn_Car_Out'          , 140 , 2.33  , 'Standing up after fixing a car'),\nAnim(250  , 'CAR'          , 'flag_drop'             , 270 , 4.50  , 'Race flag drop'),\nAnim(251  , 'CAR'          , 'Sit_relaxed'           , 2   , 0.03  , 'Relaxed sitting in a car'),\nAnim(252  , 'CAR'          , 'Tap_hand'              , 20  , 0.33  , 'Tapping hand on the window'),\nAnim(253  , 'CAR'          , 'Tyd2car_bump'          , 50  , 0.83  , 'Tied to a car hood bump'),\nAnim(254  , 'CAR'          , 'Tyd2car_high'          , 480 , 8.00  , 'Tied to a car hood with high stress'),", "Anim(253  , 'CAR'          , 'Tyd2car_bump'          , 50  , 0.83  , 'Tied to a car hood bump'),\nAnim(254  , 'CAR'          , 'Tyd2car_high'          , 480 , 8.00  , 'Tied to a car hood with high stress'),\nAnim(255  , 'CAR'          , 'Tyd2car_low'           , 400 , 6.67  , 'Tied to a car hood with low stress'),\nAnim(256  , 'CAR'          , 'Tyd2car_med'           , 400 , 6.67  , 'Tied to a car hood with medium stress'),\nAnim(257  , 'CAR'          , 'Tyd2car_TurnL'         , 60  , 1.00  , 'Tied to a car hood sway left'),\nAnim(258  , 'CAR'          , 'Tyd2car_TurnR'         , 60  , 1.00  , 'Tied to a car hood sway right'),\nAnim(259  , 'CARRY'        , 'crry_prtial'           , 2   , 0.03  , 'Start carry animation'),\nAnim(260  , 'CARRY'        , 'liftup'                , 92  , 1.53  , 'Lift up item'),\nAnim(261  , 'CARRY'        , 'liftup05'              , 38  , 0.63  , 'Lift up item from medium height'),\nAnim(262  , 'CARRY'        , 'liftup105'             , 40  , 0.67  , 'Lift up item from high surface'),", "Anim(261  , 'CARRY'        , 'liftup05'              , 38  , 0.63  , 'Lift up item from medium height'),\nAnim(262  , 'CARRY'        , 'liftup105'             , 40  , 0.67  , 'Lift up item from high surface'),\nAnim(263  , 'CARRY'        , 'putdwn'                , 68  , 1.13  , 'Put down item'),\nAnim(264  , 'CARRY'        , 'putdwn05'              , 40  , 0.67  , 'Put down item on medium height surface'),\nAnim(265  , 'CARRY'        , 'putdwn105'             , 32  , 0.53  , 'Put down item on high surface'),\nAnim(266  , 'CAR_CHAT'     , 'carfone_in'            , 360 , 6.00  , 'Starting to talk on phone inside a car'),\nAnim(267  , 'CAR_CHAT'     , 'carfone_loopA'         , 240 , 4.00  , 'Phone conversation inside a car loop'),\nAnim(268  , 'CAR_CHAT'     , 'carfone_loopA_to_B'    , 60  , 1.00  , 'Phone conversation inside a car transition'),\nAnim(269  , 'CAR_CHAT'     , 'carfone_loopB'         , 300 , 5.00  , 'Phone conversation inside a car loop'),\nAnim(270  , 'CAR_CHAT'     , 'carfone_loopB_to_A'    , 40  , 0.67  , 'Phone conversation insie a car transition'),", "Anim(269  , 'CAR_CHAT'     , 'carfone_loopB'         , 300 , 5.00  , 'Phone conversation inside a car loop'),\nAnim(270  , 'CAR_CHAT'     , 'carfone_loopB_to_A'    , 40  , 0.67  , 'Phone conversation insie a car transition'),\nAnim(271  , 'CAR_CHAT'     , 'carfone_out'           , 180 , 3.00  , 'Hanging up inside a car'),\nAnim(272  , 'CAR_CHAT'     , 'CAR_Sc1_BL'            , 700 , 11.67 , 'Chatting inside a car'),\nAnim(273  , 'CAR_CHAT'     , 'CAR_Sc1_BR'            , 700 , 11.67 , 'Chatting inside a car'),\nAnim(274  , 'CAR_CHAT'     , 'CAR_Sc1_FL'            , 700 , 11.67 , 'Chatting inside a car'),\nAnim(275  , 'CAR_CHAT'     , 'CAR_Sc1_FR'            , 700 , 11.67 , 'Chatting inside a car'),\nAnim(276  , 'CAR_CHAT'     , 'CAR_Sc2_FL'            , 300 , 5.00  , 'Chatting inside a car'),\nAnim(277  , 'CAR_CHAT'     , 'CAR_Sc3_BR'            , 650 , 10.83 , 'Chatting inside a car'),\nAnim(278  , 'CAR_CHAT'     , 'CAR_Sc3_FL'            , 650 , 10.83 , 'Chatting inside a car'),", "Anim(277  , 'CAR_CHAT'     , 'CAR_Sc3_BR'            , 650 , 10.83 , 'Chatting inside a car'),\nAnim(278  , 'CAR_CHAT'     , 'CAR_Sc3_FL'            , 650 , 10.83 , 'Chatting inside a car'),\nAnim(279  , 'CAR_CHAT'     , 'CAR_Sc3_FR'            , 650 , 10.83 , 'Chatting inside a car'),\nAnim(280  , 'CAR_CHAT'     , 'CAR_Sc4_BL'            , 264 , 4.40  , 'Chatting inside a car'),\nAnim(281  , 'CAR_CHAT'     , 'CAR_Sc4_BR'            , 392 , 6.53  , 'Chatting inside a car'),\nAnim(282  , 'CAR_CHAT'     , 'CAR_Sc4_FL'            , 600 , 10.00 , 'Chatting inside a car'),\nAnim(283  , 'CAR_CHAT'     , 'CAR_Sc4_FR'            , 600 , 10.00 , 'Chatting inside a car'),\nAnim(284  , 'CAR_CHAT'     , 'car_talkm_in'          , 100 , 1.67  , 'Starting a chat inside a car'),\nAnim(285  , 'CAR_CHAT'     , 'car_talkm_loop'        , 260 , 4.33  , 'Chatting inside a car loop'),\nAnim(286  , 'CAR_CHAT'     , 'car_talkm_out'         , 440 , 7.33  , 'Ending a chat inside a car'),", "Anim(285  , 'CAR_CHAT'     , 'car_talkm_loop'        , 260 , 4.33  , 'Chatting inside a car loop'),\nAnim(286  , 'CAR_CHAT'     , 'car_talkm_out'         , 440 , 7.33  , 'Ending a chat inside a car'),\nAnim(287  , 'CASINO'       , 'cards_in'              , 40  , 0.67  , 'Entering a game of cards'),\nAnim(288  , 'CASINO'       , 'cards_loop'            , 200 , 3.33  , 'Card table game loop animation'),\nAnim(289  , 'CASINO'       , 'cards_lose'            , 200 , 3.33  , 'Losing at cards'),\nAnim(290  , 'CASINO'       , 'cards_out'             , 40  , 0.67  , 'Exiting a game of cards'),\nAnim(291  , 'CASINO'       , 'cards_pick_01'         , 280 , 4.67  , 'Picking a card'),\nAnim(292  , 'CASINO'       , 'cards_pick_02'         , 320 , 5.33  , 'Picking a card'),\nAnim(293  , 'CASINO'       , 'cards_raise'           , 100 , 1.67  , 'Raising the stakes at cards'),\nAnim(294  , 'CASINO'       , 'cards_win'             , 180 , 3.00  , 'Winning at cards'),", "Anim(293  , 'CASINO'       , 'cards_raise'           , 100 , 1.67  , 'Raising the stakes at cards'),\nAnim(294  , 'CASINO'       , 'cards_win'             , 180 , 3.00  , 'Winning at cards'),\nAnim(295  , 'CASINO'       , 'dealone'               , 48  , 0.80  , 'Dealer deals one card'),\nAnim(296  , 'CASINO'       , 'manwinb'               , 90  , 1.50  , 'Male winning animation'),\nAnim(297  , 'CASINO'       , 'manwind'               , 100 , 1.67  , 'Male winning animation'),\nAnim(298  , 'CASINO'       , 'Roulette_bet'          , 140 , 2.33  , 'Betting on roulette table'),\nAnim(299  , 'CASINO'       , 'Roulette_in'           , 40  , 0.67  , 'Entering a game of roulette'),\nAnim(300  , 'CASINO'       , 'Roulette_loop'         , 220 , 3.67  , 'Waiting for roulette to stop loop'),\nAnim(301  , 'CASINO'       , 'Roulette_lose'         , 160 , 2.67  , 'Lose at a roulette table'),\nAnim(302  , 'CASINO'       , 'Roulette_out'          , 40  , 0.67  , 'Leaving roulette table'),", "Anim(301  , 'CASINO'       , 'Roulette_lose'         , 160 , 2.67  , 'Lose at a roulette table'),\nAnim(302  , 'CASINO'       , 'Roulette_out'          , 40  , 0.67  , 'Leaving roulette table'),\nAnim(303  , 'CASINO'       , 'Roulette_win'          , 140 , 2.33  , 'Roulette winning animation'),\nAnim(304  , 'CASINO'       , 'Slot_bet_01'           , 280 , 4.67  , 'Slot betting animation'),\nAnim(305  , 'CASINO'       , 'Slot_bet_02'           , 120 , 2.00  , 'Slot betting animation'),\nAnim(306  , 'CASINO'       , 'Slot_in'               , 220 , 3.67  , 'Slot machine start animation'),\nAnim(307  , 'CASINO'       , 'Slot_lose_out'         , 240 , 4.00  , 'End of Slot machine lose'),\nAnim(308  , 'CASINO'       , 'Slot_Plyr'             , 80  , 1.33  , 'Using a slot machine'),\nAnim(309  , 'CASINO'       , 'Slot_wait'             , 220 , 3.67  , 'Waiting for a slot machine to stop'),\nAnim(310  , 'CASINO'       , 'Slot_win_out'          , 560 , 9.33  , 'End of slot machine win'),", "Anim(309  , 'CASINO'       , 'Slot_wait'             , 220 , 3.67  , 'Waiting for a slot machine to stop'),\nAnim(310  , 'CASINO'       , 'Slot_win_out'          , 560 , 9.33  , 'End of slot machine win'),\nAnim(311  , 'CASINO'       , 'wof'                   , 88  , 1.47  , 'Wheel of fortune spin'),\nAnim(312  , 'CHAINSAW'     , 'CSAW_1'                , 60  , 1.00  , 'Chainsaw swing'),\nAnim(313  , 'CHAINSAW'     , 'CSAW_2'                , 62  , 1.03  , 'Chainsaw swing'),\nAnim(314  , 'CHAINSAW'     , 'CSAW_3'                , 52  , 0.87  , 'Chainsaw swing'),\nAnim(315  , 'CHAINSAW'     , 'CSAW_G'                , 70  , 1.17  , 'Chainsaw hit on the ground'),\nAnim(316  , 'CHAINSAW'     , 'CSAW_Hit_1'            , 50  , 0.83  , 'Getting hit by a chainsaw'),\nAnim(317  , 'CHAINSAW'     , 'CSAW_Hit_2'            , 64  , 1.07  , 'Getting hit by a chainsaw'),\nAnim(318  , 'CHAINSAW'     , 'CSAW_Hit_3'            , 68  , 1.13  , 'Getting hit by a chainsaw'),", "Anim(317  , 'CHAINSAW'     , 'CSAW_Hit_2'            , 64  , 1.07  , 'Getting hit by a chainsaw'),\nAnim(318  , 'CHAINSAW'     , 'CSAW_Hit_3'            , 68  , 1.13  , 'Getting hit by a chainsaw'),\nAnim(319  , 'CHAINSAW'     , 'csaw_part'             , 8   , 0.13  , 'Chainsaw holding'),\nAnim(320  , 'CHAINSAW'     , 'IDLE_csaw'             , 90  , 1.50  , 'Idle with a chainsaw'),\nAnim(321  , 'CHAINSAW'     , 'WEAPON_csaw'           , 80  , 1.33  , 'VC chainsaw swing animation'),\nAnim(322  , 'CHAINSAW'     , 'WEAPON_csawlo'         , 114 , 1.90  , 'VC chainsaw ground swing animation'),\nAnim(323  , 'CHOPPA'       , 'CHOPPA_back'           , 6   , 0.10  , 'Chopper bicycle lean back'),\nAnim(324  , 'CHOPPA'       , 'CHOPPA_bunnyhop'       , 20  , 0.33  , 'Chopper bicycle bunny hop'),\nAnim(325  , 'CHOPPA'       , 'CHOPPA_drivebyFT'      , 12  , 0.20  , 'Chopper bicycle drive by front'),\nAnim(326  , 'CHOPPA'       , 'CHOPPA_driveby_LHS'    , 12  , 0.20  , 'Chopper bicycle drive by left'),", "Anim(325  , 'CHOPPA'       , 'CHOPPA_drivebyFT'      , 12  , 0.20  , 'Chopper bicycle drive by front'),\nAnim(326  , 'CHOPPA'       , 'CHOPPA_driveby_LHS'    , 12  , 0.20  , 'Chopper bicycle drive by left'),\nAnim(327  , 'CHOPPA'       , 'CHOPPA_driveby_RHS'    , 12  , 0.20  , 'Chopper bicycle drive by right'),\nAnim(328  , 'CHOPPA'       , 'CHOPPA_fwd'            , 12  , 0.20  , 'Chopper bicycle lean front'),\nAnim(329  , 'CHOPPA'       , 'CHOPPA_getoffBACK'     , 76  , 1.27  , 'Bailing from a Chopper bicycle at high speed'),\nAnim(330  , 'CHOPPA'       , 'CHOPPA_getoffLHS'      , 44  , 0.73  , 'Getting off a Chopper bicycle from the left'),\nAnim(331  , 'CHOPPA'       , 'CHOPPA_getoffRHS'      , 38  , 0.63  , 'Getting off a Chopper bicycle from the right'),\nAnim(332  , 'CHOPPA'       , 'CHOPPA_jumponL'        , 42  , 0.70  , 'Getting on a Chopper bicycle from the left'),\nAnim(333  , 'CHOPPA'       , 'CHOPPA_jumponR'        , 48  , 0.80  , 'Getting on a Chopper bicycle from the right'),\nAnim(334  , 'CHOPPA'       , 'CHOPPA_Left'           , 8   , 0.13  , 'Chopper bicycle sway left'),", "Anim(333  , 'CHOPPA'       , 'CHOPPA_jumponR'        , 48  , 0.80  , 'Getting on a Chopper bicycle from the right'),\nAnim(334  , 'CHOPPA'       , 'CHOPPA_Left'           , 8   , 0.13  , 'Chopper bicycle sway left'),\nAnim(335  , 'CHOPPA'       , 'CHOPPA_pedal'          , 44  , 0.73  , 'Chopper bicycle pedal'),\nAnim(336  , 'CHOPPA'       , 'CHOPPA_Pushes'         , 48  , 0.80  , 'Chopper bicycle reverse'),\nAnim(337  , 'CHOPPA'       , 'CHOPPA_ride'           , 2   , 0.03  , 'Chopper bicycle riding'),\nAnim(338  , 'CHOPPA'       , 'CHOPPA_Right'          , 8   , 0.13  , 'Chopper bicycle sway right'),\nAnim(339  , 'CHOPPA'       , 'CHOPPA_sprint'         , 40  , 0.67  , 'Chopper bicycle sprint'),\nAnim(340  , 'CHOPPA'       , 'CHOPPA_Still'          , 2   , 0.03  , 'Chopper bicycle riding still'),\nAnim(341  , 'CLOTHES'      , 'CLO_Buy'               , 124 , 2.07  , 'Buying clothes pose'),\nAnim(342  , 'CLOTHES'      , 'CLO_In'                , 240 , 4.00  , 'Walking into the wardrobe'),", "Anim(341  , 'CLOTHES'      , 'CLO_Buy'               , 124 , 2.07  , 'Buying clothes pose'),\nAnim(342  , 'CLOTHES'      , 'CLO_In'                , 240 , 4.00  , 'Walking into the wardrobe'),\nAnim(343  , 'CLOTHES'      , 'CLO_Out'               , 160 , 2.67  , 'Walking out of the wardrobe'),\nAnim(344  , 'CLOTHES'      , 'CLO_Pose_Hat'          , 200 , 3.33  , 'Posing with a hat'),\nAnim(345  , 'CLOTHES'      , 'CLO_Pose_In'           , 188 , 3.13  , 'Start of clothes pose'),\nAnim(346  , 'CLOTHES'      , 'CLO_Pose_In_O'         , 240 , 4.00  , 'Start of clothes pose'),\nAnim(347  , 'CLOTHES'      , 'CLO_Pose_Legs'         , 200 , 3.33  , 'Posing with new pants'),\nAnim(348  , 'CLOTHES'      , 'CLO_Pose_Loop'         , 360 , 6.00  , 'Posing loop'),\nAnim(349  , 'CLOTHES'      , 'CLO_Pose_Out'          , 240 , 4.00  , 'End of clothes pose'),\nAnim(350  , 'CLOTHES'      , 'CLO_Pose_Out_O'        , 240 , 4.00  , 'End of clothes pose'),", "Anim(349  , 'CLOTHES'      , 'CLO_Pose_Out'          , 240 , 4.00  , 'End of clothes pose'),\nAnim(350  , 'CLOTHES'      , 'CLO_Pose_Out_O'        , 240 , 4.00  , 'End of clothes pose'),\nAnim(351  , 'CLOTHES'      , 'CLO_Pose_Shoes'        , 200 , 3.33  , 'Posing with new shoes'),\nAnim(352  , 'CLOTHES'      , 'CLO_Pose_Torso'        , 200 , 3.33  , 'Posing with new torso'),\nAnim(353  , 'CLOTHES'      , 'CLO_Pose_Watch'        , 200 , 3.33  , 'Posing with a new watch'),\nAnim(354  , 'COACH'        , 'COACH_inL'             , 130 , 2.17  , 'Entering a Coach from the left'),\nAnim(355  , 'COACH'        , 'COACH_inR'             , 132 , 2.20  , 'Entering a Coach from the right'),\nAnim(356  , 'COACH'        , 'COACH_opnL'            , 72  , 1.20  , 'Opening a Coach\\'s door from the left'),\nAnim(357  , 'COACH'        , 'COACH_opnR'            , 72  , 1.20  , 'Opening a Coach\\'s door from the right'),\nAnim(358  , 'COACH'        , 'COACH_outL'            , 104 , 1.73  , 'Exiting a Coach from the left'),", "Anim(357  , 'COACH'        , 'COACH_opnR'            , 72  , 1.20  , 'Opening a Coach\\'s door from the right'),\nAnim(358  , 'COACH'        , 'COACH_outL'            , 104 , 1.73  , 'Exiting a Coach from the left'),\nAnim(359  , 'COACH'        , 'COACH_outR'            , 110 , 1.83  , 'Exiting a Coach from the right'),\nAnim(360  , 'COLT45'       , '2guns_crouchfire'      , 48  , 0.80  , 'Crouch fire with two guns'),\nAnim(361  , 'COLT45'       , 'colt45_crouchfire'     , 48  , 0.80  , 'Crouch fire with a Colt45'),\nAnim(362  , 'COLT45'       , 'colt45_crouchreload'   , 60  , 1.00  , 'Reload a Colt45 while crouching'),\nAnim(363  , 'COLT45'       , 'colt45_fire'           , 44  , 0.73  , 'Colt45 fire'),\nAnim(364  , 'COLT45'       , 'colt45_fire_2hands'    , 52  , 0.87  , 'Duel Colt45 firing'),\nAnim(365  , 'COLT45'       , 'colt45_reload'         , 56  , 0.93  , 'Colt45 reload'),\nAnim(366  , 'COLT45'       , 'sawnoff_reload'        , 56  , 0.93  , 'Sawnoff reload'),", "Anim(365  , 'COLT45'       , 'colt45_reload'         , 56  , 0.93  , 'Colt45 reload'),\nAnim(366  , 'COLT45'       , 'sawnoff_reload'        , 56  , 0.93  , 'Sawnoff reload'),\nAnim(367  , 'COP_AMBIENT'  , 'Copbrowse_in'          , 300 , 5.00  , 'Cop kneeling and checking tire'),\nAnim(368  , 'COP_AMBIENT'  , 'Copbrowse_loop'        , 140 , 2.33  , 'Cop kneeling and fixing tire loop'),\nAnim(369  , 'COP_AMBIENT'  , 'Copbrowse_nod'         , 240 , 4.00  , 'Cop kneeling and nodding'),\nAnim(370  , 'COP_AMBIENT'  , 'Copbrowse_out'         , 160 , 2.67  , 'Cop stands up after kneeling'),\nAnim(371  , 'COP_AMBIENT'  , 'Copbrowse_shake'       , 110 , 1.83  , 'Cop kneeling and shakes something'),\nAnim(372  , 'COP_AMBIENT'  , 'Coplook_in'            , 80  , 1.33  , 'Cop crossing his arms'),\nAnim(373  , 'COP_AMBIENT'  , 'Coplook_loop'          , 160 , 2.67  , 'Cop crossing his arms loop'),\nAnim(374  , 'COP_AMBIENT'  , 'Coplook_nod'           , 320 , 5.33  , 'Cop nodding'),", "Anim(373  , 'COP_AMBIENT'  , 'Coplook_loop'          , 160 , 2.67  , 'Cop crossing his arms loop'),\nAnim(374  , 'COP_AMBIENT'  , 'Coplook_nod'           , 320 , 5.33  , 'Cop nodding'),\nAnim(375  , 'COP_AMBIENT'  , 'Coplook_out'           , 40  , 0.67  , 'Cop waiting animation'),\nAnim(376  , 'COP_AMBIENT'  , 'Coplook_shake'         , 240 , 4.00  , 'Cop waiting animation'),\nAnim(377  , 'COP_AMBIENT'  , 'Coplook_think'         , 200 , 3.33  , 'Cop thinking animation'),\nAnim(378  , 'COP_AMBIENT'  , 'Coplook_watch'         , 120 , 2.00  , 'Cop checking watch while crossing arms'),\nAnim(379  , 'COP_DVBYZ'    , 'COP_Dvby_B'            , 50  , 0.83  , 'Copbike drive by back'),\nAnim(380  , 'COP_DVBYZ'    , 'COP_Dvby_FT'           , 50  , 0.83  , 'Copbike drive by front'),\nAnim(381  , 'COP_DVBYZ'    , 'COP_Dvby_L'            , 50  , 0.83  , 'Copbike drive by left'),\nAnim(382  , 'COP_DVBYZ'    , 'COP_Dvby_R'            , 50  , 0.83  , 'Copbike drive by right'),", "Anim(381  , 'COP_DVBYZ'    , 'COP_Dvby_L'            , 50  , 0.83  , 'Copbike drive by left'),\nAnim(382  , 'COP_DVBYZ'    , 'COP_Dvby_R'            , 50  , 0.83  , 'Copbike drive by right'),\nAnim(383  , 'CRACK'        , 'Bbalbat_Idle_01'       , 400 , 6.67  , 'Crackhead baseball bat idle'),\nAnim(384  , 'CRACK'        , 'Bbalbat_Idle_02'       , 600 , 10.00 , 'Crackhead baseball bat idle'),\nAnim(385  , 'CRACK'        , 'crckdeth1'             , 130 , 2.17  , 'Crackhead dying animation'),\nAnim(386  , 'CRACK'        , 'crckdeth2'             , 180 , 3.00  , 'Crackhead dying animation'),\nAnim(387  , 'CRACK'        , 'crckdeth3'             , 130 , 2.17  , 'Crackhead dying animation'),\nAnim(388  , 'CRACK'        , 'crckdeth4'             , 100 , 1.67  , 'Crackhead dying animation'),\nAnim(389  , 'CRACK'        , 'crckidle1'             , 210 , 3.50  , 'Crackhead idle'),\nAnim(390  , 'CRACK'        , 'crckidle2'             , 200 , 3.33  , 'Crackhead idle'),", "Anim(389  , 'CRACK'        , 'crckidle1'             , 210 , 3.50  , 'Crackhead idle'),\nAnim(390  , 'CRACK'        , 'crckidle2'             , 200 , 3.33  , 'Crackhead idle'),\nAnim(391  , 'CRACK'        , 'crckidle3'             , 200 , 3.33  , 'Crackhead idle'),\nAnim(392  , 'CRACK'        , 'crckidle4'             , 160 , 2.67  , 'Crackhead idle'),\nAnim(393  , 'CRIB'         , 'CRIB_Console_Loop'     , 180 , 3.00  , 'Game console loop'),\nAnim(394  , 'CRIB'         , 'CRIB_Use_Switch'       , 70  , 1.17  , 'Game console switch'),\nAnim(395  , 'CRIB'         , 'PED_Console_Loop'      , 180 , 3.00  , 'Game console loop'),\nAnim(396  , 'CRIB'         , 'PED_Console_Loose'     , 210 , 3.50  , 'Game console losing'),\nAnim(397  , 'CRIB'         , 'PED_Console_Win'       , 210 , 3.50  , 'Game console winning'),\nAnim(398  , 'DAM_JUMP'     , 'DAM_Dive_Loop'         , 80  , 1.33  , 'Diving loop'),", "Anim(397  , 'CRIB'         , 'PED_Console_Win'       , 210 , 3.50  , 'Game console winning'),\nAnim(398  , 'DAM_JUMP'     , 'DAM_Dive_Loop'         , 80  , 1.33  , 'Diving loop'),\nAnim(399  , 'DAM_JUMP'     , 'DAM_Land'              , 156 , 2.60  , 'Diving land in water'),\nAnim(400  , 'DAM_JUMP'     , 'DAM_Launch'            , 144 , 2.40  , 'Running to dive'),\nAnim(401  , 'DAM_JUMP'     , 'Jump_Roll'             , 190 , 3.17  , 'End of the line jump and roll'),\nAnim(402  , 'DAM_JUMP'     , 'SF_JumpWall'           , 180 , 3.00  , 'Rail jump into a body of water'),\nAnim(403  , 'DANCING'      , 'bd_clap'               , 192 , 3.20  , 'Clapping dance'),\nAnim(404  , 'DANCING'      , 'bd_clap1'              , 158 , 2.63  , 'Clapping dance'),\nAnim(405  , 'DANCING'      , 'dance_loop'            , 70  , 1.17  , 'Dancing loop'),\nAnim(406  , 'DANCING'      , 'DAN_Down_A'            , 60  , 1.00  , 'Dance animation'),", "Anim(405  , 'DANCING'      , 'dance_loop'            , 70  , 1.17  , 'Dancing loop'),\nAnim(406  , 'DANCING'      , 'DAN_Down_A'            , 60  , 1.00  , 'Dance animation'),\nAnim(407  , 'DANCING'      , 'DAN_Left_A'            , 60  , 1.00  , 'Dance animation'),\nAnim(408  , 'DANCING'      , 'DAN_Loop_A'            , 120 , 2.00  , 'Dance animation'),\nAnim(409  , 'DANCING'      , 'DAN_Right_A'           , 60  , 1.00  , 'Dance animation'),\nAnim(410  , 'DANCING'      , 'DAN_Up_A'              , 60  , 1.00  , 'Dance animation'),\nAnim(411  , 'DANCING'      , 'dnce_M_a'              , 128 , 2.13  , 'Dance animation'),\nAnim(412  , 'DANCING'      , 'dnce_M_b'              , 116 , 1.93  , 'Dance animation'),\nAnim(413  , 'DANCING'      , 'dnce_M_c'              , 116 , 1.93  , 'Dance animation'),\nAnim(414  , 'DANCING'      , 'dnce_M_d'              , 146 , 2.43  , 'Dance animation'),", "Anim(413  , 'DANCING'      , 'dnce_M_c'              , 116 , 1.93  , 'Dance animation'),\nAnim(414  , 'DANCING'      , 'dnce_M_d'              , 146 , 2.43  , 'Dance animation'),\nAnim(415  , 'DANCING'      , 'dnce_M_e'              , 54  , 0.90  , 'Dance animation'),\nAnim(416  , 'DEALER'       , 'DEALER_DEAL'           , 190 , 3.17  , 'Drug dealer dealing'),\nAnim(417  , 'DEALER'       , 'DEALER_IDLE'           , 400 , 6.67  , 'Drug dealer idle'),\nAnim(418  , 'DEALER'       , 'DEALER_IDLE_01'        , 300 , 5.00  , 'Drug dealer idle'),\nAnim(419  , 'DEALER'       , 'DEALER_IDLE_02'        , 240 , 4.00  , 'Drug dealer idle'),\nAnim(420  , 'DEALER'       , 'DEALER_IDLE_03'        , 280 , 4.67  , 'Drug dealer idle'),\nAnim(421  , 'DEALER'       , 'DRUGS_BUY'             , 190 , 3.17  , 'Buying drugs from a dealer'),\nAnim(422  , 'DEALER'       , 'shop_pay'              , 280 , 4.67  , 'Paying money at a shop'),", "Anim(421  , 'DEALER'       , 'DRUGS_BUY'             , 190 , 3.17  , 'Buying drugs from a dealer'),\nAnim(422  , 'DEALER'       , 'shop_pay'              , 280 , 4.67  , 'Paying money at a shop'),\nAnim(423  , 'DILDO'        , 'DILDO_1'               , 58  , 0.97  , 'Dildo swing'),\nAnim(424  , 'DILDO'        , 'DILDO_2'               , 66  , 1.10  , 'Dildo swing'),\nAnim(425  , 'DILDO'        , 'DILDO_3'               , 70  , 1.17  , 'Dildo swing'),\nAnim(426  , 'DILDO'        , 'DILDO_block'           , 28  , 0.47  , 'Dildo block'),\nAnim(427  , 'DILDO'        , 'DILDO_G'               , 88  , 1.47  , 'Dildo swing on ground'),\nAnim(428  , 'DILDO'        , 'DILDO_Hit_1'           , 46  , 0.77  , 'Getting hit by a dildo'),\nAnim(429  , 'DILDO'        , 'DILDO_Hit_2'           , 62  , 1.03  , 'Getting hit by a dildo'),\nAnim(430  , 'DILDO'        , 'DILDO_Hit_3'           , 54  , 0.90  , 'Getting hit by a dildo'),", "Anim(429  , 'DILDO'        , 'DILDO_Hit_2'           , 62  , 1.03  , 'Getting hit by a dildo'),\nAnim(430  , 'DILDO'        , 'DILDO_Hit_3'           , 54  , 0.90  , 'Getting hit by a dildo'),\nAnim(431  , 'DILDO'        , 'DILDO_IDLE'            , 52  , 0.87  , 'Dildo idle'),\nAnim(432  , 'DODGE'        , 'Cover_Dive_01'         , 360 , 6.00  , 'Run and dive'),\nAnim(433  , 'DODGE'        , 'Cover_Dive_02'         , 360 , 6.00  , 'Run and dive'),\nAnim(434  , 'DODGE'        , 'Crushed'               , 56  , 0.93  , 'Getting ready to dodge'),\nAnim(435  , 'DODGE'        , 'Crush_Jump'            , 190 , 3.17  , 'Jumping and rolling to the side'),\nAnim(436  , 'DOZER'        , 'DOZER_Align_LHS'       , 58  , 0.97  , 'Climbing a dozer from the left'),\nAnim(437  , 'DOZER'        , 'DOZER_Align_RHS'       , 56  , 0.93  , 'Climbing a dozer from the right'),\nAnim(438  , 'DOZER'        , 'DOZER_getin_LHS'       , 26  , 0.43  , 'Getting into a dozer from the left'),", "Anim(437  , 'DOZER'        , 'DOZER_Align_RHS'       , 56  , 0.93  , 'Climbing a dozer from the right'),\nAnim(438  , 'DOZER'        , 'DOZER_getin_LHS'       , 26  , 0.43  , 'Getting into a dozer from the left'),\nAnim(439  , 'DOZER'        , 'DOZER_getin_RHS'       , 26  , 0.43  , 'Getting into a dozer from the right'),\nAnim(440  , 'DOZER'        , 'DOZER_getout_LHS'      , 64  , 1.07  , 'Getting out of a dozer from the left'),\nAnim(441  , 'DOZER'        , 'DOZER_getout_RHS'      , 46  , 0.77  , 'Getting out of a dozer from the right'),\nAnim(442  , 'DOZER'        , 'DOZER_Jacked_LHS'      , 76  , 1.27  , 'Getting jacked out of a dozer from the left'),\nAnim(443  , 'DOZER'        , 'DOZER_Jacked_RHS'      , 64  , 1.07  , 'Getting jacked out of a dozer from the right'),\nAnim(444  , 'DOZER'        , 'DOZER_pullout_LHS'     , 44  , 0.73  , 'Pulling a dozer driver from the left'),\nAnim(445  , 'DOZER'        , 'DOZER_pullout_RHS'     , 42  , 0.70  , 'Pulling a dozer driver from the right'),\nAnim(446  , 'DRIVEBYS'     , 'Gang_DrivebyLHS'       , 50  , 0.83  , 'Gang drive by left'),", "Anim(445  , 'DOZER'        , 'DOZER_pullout_RHS'     , 42  , 0.70  , 'Pulling a dozer driver from the right'),\nAnim(446  , 'DRIVEBYS'     , 'Gang_DrivebyLHS'       , 50  , 0.83  , 'Gang drive by left'),\nAnim(447  , 'DRIVEBYS'     , 'Gang_DrivebyLHS_Bwd'   , 50  , 0.83  , 'Gang drive by back'),\nAnim(448  , 'DRIVEBYS'     , 'Gang_DrivebyLHS_Fwd'   , 50  , 0.83  , 'Gang drive by front'),\nAnim(449  , 'DRIVEBYS'     , 'Gang_DrivebyRHS'       , 50  , 0.83  , 'Gang drive by right'),\nAnim(450  , 'DRIVEBYS'     , 'Gang_DrivebyRHS_Bwd'   , 50  , 0.83  , 'Right seat drive by back'),\nAnim(451  , 'DRIVEBYS'     , 'Gang_DrivebyRHS_Fwd'   , 50  , 0.83  , 'Right seat drive by front'),\nAnim(452  , 'DRIVEBYS'     , 'Gang_DrivebyTop_LHS'   , 50  , 0.83  , 'Gang drive by top left'),\nAnim(453  , 'DRIVEBYS'     , 'Gang_DrivebyTop_RHS'   , 50  , 0.83  , 'Gang drive by top right'),\nAnim(454  , 'FAT'          , 'FatIdle'               , 90  , 1.50  , 'Fat CJ idle'),", "Anim(453  , 'DRIVEBYS'     , 'Gang_DrivebyTop_RHS'   , 50  , 0.83  , 'Gang drive by top right'),\nAnim(454  , 'FAT'          , 'FatIdle'               , 90  , 1.50  , 'Fat CJ idle'),\nAnim(455  , 'FAT'          , 'FatIdle_armed'         , 92  , 1.53  , 'Fat CJ armed stance'),\nAnim(456  , 'FAT'          , 'FatIdle_Csaw'          , 90  , 1.50  , 'Fat CJ with a chainsaw'),\nAnim(457  , 'FAT'          , 'FatIdle_Rocket'        , 96  , 1.60  , 'Fat CJ with a rocket launcher'),\nAnim(458  , 'FAT'          , 'FatRun'                , 46  , 0.77  , 'Fat CJ run'),\nAnim(459  , 'FAT'          , 'FatRun_armed'          , 46  , 0.77  , 'Fat CJ run with a weapon'),\nAnim(460  , 'FAT'          , 'FatRun_Csaw'           , 46  , 0.77  , 'Fat CJ run with a chainsaw'),\nAnim(461  , 'FAT'          , 'FatRun_Rocket'         , 46  , 0.77  , 'Fat CJ run with a rocket launcher'),\nAnim(462  , 'FAT'          , 'FatSprint'             , 36  , 0.60  , 'Fat CJ sprint'),", "Anim(461  , 'FAT'          , 'FatRun_Rocket'         , 46  , 0.77  , 'Fat CJ run with a rocket launcher'),\nAnim(462  , 'FAT'          , 'FatSprint'             , 36  , 0.60  , 'Fat CJ sprint'),\nAnim(463  , 'FAT'          , 'FatWalk'               , 70  , 1.17  , 'Fat CJ walk'),\nAnim(464  , 'FAT'          , 'FatWalkstart'          , 12  , 0.20  , 'Fat CJ walk start'),\nAnim(465  , 'FAT'          , 'FatWalkstart_Csaw'     , 12  , 0.20  , 'Fat CJ walk start with a chainsaw'),\nAnim(466  , 'FAT'          , 'FatWalkSt_armed'       , 12  , 0.20  , 'Fat CJ walk start with a weapon'),\nAnim(467  , 'FAT'          , 'FatWalkSt_Rocket'      , 12  , 0.20  , 'Fat CJ walk start with a rocket launcher'),\nAnim(468  , 'FAT'          , 'FatWalk_armed'         , 70  , 1.17  , 'Fat CJ walk with a weapon'),\nAnim(469  , 'FAT'          , 'FatWalk_Csaw'          , 70  , 1.17  , 'Fat CJ walk with a chainsaw'),\nAnim(470  , 'FAT'          , 'FatWalk_Rocket'        , 70  , 1.17  , 'Fat CJ walk with a rocket launcher'),", "Anim(469  , 'FAT'          , 'FatWalk_Csaw'          , 70  , 1.17  , 'Fat CJ walk with a chainsaw'),\nAnim(470  , 'FAT'          , 'FatWalk_Rocket'        , 70  , 1.17  , 'Fat CJ walk with a rocket launcher'),\nAnim(471  , 'FAT'          , 'IDLE_tired'            , 64  , 1.07  , 'Fat CJ tired idle'),\nAnim(472  , 'FIGHT_B'      , 'FightB_1'              , 44  , 0.73  , 'Boxing fighting style combo 1'),\nAnim(473  , 'FIGHT_B'      , 'FightB_2'              , 66  , 1.10  , 'Boxing fighting style combo 2'),\nAnim(474  , 'FIGHT_B'      , 'FightB_3'              , 72  , 1.20  , 'Boxing fighting style finisher'),\nAnim(475  , 'FIGHT_B'      , 'FightB_block'          , 28  , 0.47  , 'Boxing fighting style block'),\nAnim(476  , 'FIGHT_B'      , 'FightB_G'              , 64  , 1.07  , 'Boxing fighting style ground attack'),\nAnim(477  , 'FIGHT_B'      , 'FightB_IDLE'           , 48  , 0.80  , 'Boxing fighting style idle'),\nAnim(478  , 'FIGHT_B'      , 'FightB_M'              , 30  , 0.50  , 'Boxing fighting style running attack'),", "Anim(477  , 'FIGHT_B'      , 'FightB_IDLE'           , 48  , 0.80  , 'Boxing fighting style idle'),\nAnim(478  , 'FIGHT_B'      , 'FightB_M'              , 30  , 0.50  , 'Boxing fighting style running attack'),\nAnim(479  , 'FIGHT_B'      , 'HitB_1'                , 44  , 0.73  , 'Hit by boxing style'),\nAnim(480  , 'FIGHT_B'      , 'HitB_2'                , 50  , 0.83  , 'Hit by boxing style'),\nAnim(481  , 'FIGHT_B'      , 'HitB_3'                , 86  , 1.43  , 'Hit by boxing style'),\nAnim(482  , 'FIGHT_C'      , 'FightC_1'              , 50  , 0.83  , 'Kung Fu kick 1'),\nAnim(483  , 'FIGHT_C'      , 'FightC_2'              , 62  , 1.03  , 'Kung Fu kick 2'),\nAnim(484  , 'FIGHT_C'      , 'FightC_3'              , 60  , 1.00  , 'Kung Fu finisher'),\nAnim(485  , 'FIGHT_C'      , 'FightC_block'          , 28  , 0.47  , 'Kung Fu block'),\nAnim(486  , 'FIGHT_C'      , 'FightC_blocking'       , 192 , 3.20  , 'Kung Fu sparring and blocking'),", "Anim(485  , 'FIGHT_C'      , 'FightC_block'          , 28  , 0.47  , 'Kung Fu block'),\nAnim(486  , 'FIGHT_C'      , 'FightC_blocking'       , 192 , 3.20  , 'Kung Fu sparring and blocking'),\nAnim(487  , 'FIGHT_C'      , 'FightC_G'              , 46  , 0.77  , 'Kung Fu ground attack'),\nAnim(488  , 'FIGHT_C'      , 'FightC_IDLE'           , 60  , 1.00  , 'Kung Fu idle'),\nAnim(489  , 'FIGHT_C'      , 'FightC_M'              , 54  , 0.90  , 'Kung Fu running attack'),\nAnim(490  , 'FIGHT_C'      , 'FightC_Spar'           , 192 , 3.20  , 'Kung Fu sparring'),\nAnim(491  , 'FIGHT_C'      , 'HitC_1'                , 18  , 0.30  , 'Hit by Kung fu'),\nAnim(492  , 'FIGHT_C'      , 'HitC_2'                , 40  , 0.67  , 'Hit by Kung fu'),\nAnim(493  , 'FIGHT_C'      , 'HitC_3'                , 50  , 0.83  , 'Hit by Kung fu'),\nAnim(494  , 'FIGHT_D'      , 'FightD_1'              , 56  , 0.93  , 'Muay Thai kick'),", "Anim(493  , 'FIGHT_C'      , 'HitC_3'                , 50  , 0.83  , 'Hit by Kung fu'),\nAnim(494  , 'FIGHT_D'      , 'FightD_1'              , 56  , 0.93  , 'Muay Thai kick'),\nAnim(495  , 'FIGHT_D'      , 'FightD_2'              , 112 , 1.87  , 'Muay Thai combo'),\nAnim(496  , 'FIGHT_D'      , 'FightD_3'              , 54  , 0.90  , 'Muay Thai finisher'),\nAnim(497  , 'FIGHT_D'      , 'FightD_block'          , 28  , 0.47  , 'Muay Thai block'),\nAnim(498  , 'FIGHT_D'      , 'FightD_G'              , 50  , 0.83  , 'Muay Thai ground attack'),\nAnim(499  , 'FIGHT_D'      , 'FightD_IDLE'           , 92  , 1.53  , 'Muay Thai idle'),\nAnim(500  , 'FIGHT_D'      , 'FightD_M'              , 64  , 1.07  , 'Muay Thai running attack'),\nAnim(501  , 'FIGHT_D'      , 'HitD_1'                , 40  , 0.67  , 'Hit by Muay Thai'),\nAnim(502  , 'FIGHT_D'      , 'HitD_2'                , 110 , 1.83  , 'Hit by Muay Thai'),", "Anim(501  , 'FIGHT_D'      , 'HitD_1'                , 40  , 0.67  , 'Hit by Muay Thai'),\nAnim(502  , 'FIGHT_D'      , 'HitD_2'                , 110 , 1.83  , 'Hit by Muay Thai'),\nAnim(503  , 'FIGHT_D'      , 'HitD_3'                , 58  , 0.97  , 'Hit by Muay Thai'),\nAnim(504  , 'FIGHT_E'      , 'FightKick'             , 46  , 0.77  , 'CJ\\'s default fighting style punch'),\nAnim(505  , 'FIGHT_E'      , 'FightKick_B'           , 62  , 1.03  , 'CJ\\'s default fighting style kick'),\nAnim(506  , 'FIGHT_E'      , 'Hit_fightkick'         , 30  , 0.50  , 'Hit by default fighting style'),\nAnim(507  , 'FIGHT_E'      , 'Hit_fightkick_B'       , 68  , 1.13  , 'Kicked by default fighting style'),\nAnim(508  , 'FINALE'       , 'FIN_Climb_In'          , 174 , 2.90  , 'Sweet climbs into a car'),\nAnim(509  , 'FINALE'       , 'FIN_Cop1_ClimbOut2'    , 360 , 6.00  , 'Cop walks on Firetrack\\'s ladder'),\nAnim(510  , 'FINALE'       , 'FIN_Cop1_Loop'         , 120 , 2.00  , 'Cop standing on Firetrack\\'s ladder'),", "Anim(509  , 'FINALE'       , 'FIN_Cop1_ClimbOut2'    , 360 , 6.00  , 'Cop walks on Firetrack\\'s ladder'),\nAnim(510  , 'FINALE'       , 'FIN_Cop1_Loop'         , 120 , 2.00  , 'Cop standing on Firetrack\\'s ladder'),\nAnim(511  , 'FINALE'       , 'FIN_Cop1_Stomp'        , 60  , 1.00  , 'Cop stomping on Sweet\\'s fingers'),\nAnim(512  , 'FINALE'       , 'FIN_Hang_L'            , 34  , 0.57  , 'Sweet sways left while holding the ladder'),\nAnim(513  , 'FINALE'       , 'FIN_Hang_Loop'         , 240 , 4.00  , 'Sweet hangs onto the ladder loop'),\nAnim(514  , 'FINALE'       , 'FIN_Hang_R'            , 34  , 0.57  , 'Sweet sways right while holding the ladder'),\nAnim(515  , 'FINALE'       , 'FIN_Hang_Slip'         , 200 , 3.33  , 'Sweet slips while hanging onto the ladder'),\nAnim(516  , 'FINALE'       , 'FIN_Jump_On'           , 336 , 5.60  , 'Sweet jumps on CJ\\'s car'),\nAnim(517  , 'FINALE'       , 'FIN_Land_Car'          , 40  , 0.67  , 'Sweet lands on CJ\\'s car'),\nAnim(518  , 'FINALE'       , 'FIN_Land_Die'          , 142 , 2.37  , 'Sweet lands in traffic and dies'),", "Anim(517  , 'FINALE'       , 'FIN_Land_Car'          , 40  , 0.67  , 'Sweet lands on CJ\\'s car'),\nAnim(518  , 'FINALE'       , 'FIN_Land_Die'          , 142 , 2.37  , 'Sweet lands in traffic and dies'),\nAnim(519  , 'FINALE'       , 'FIN_LegsUp'            , 60  , 1.00  , 'Sweet pulls his legs while hanging on'),\nAnim(520  , 'FINALE'       , 'FIN_LegsUp_L'          , 30  , 0.50  , 'Sweet sways left while pulling his legs'),\nAnim(521  , 'FINALE'       , 'FIN_LegsUp_Loop'       , 80  , 1.33  , 'Sweet pulls his legs while hanging on loop'),\nAnim(522  , 'FINALE'       , 'FIN_LegsUp_R'          , 30  , 0.50  , 'Sweet sways right while pulling his legs'),\nAnim(523  , 'FINALE'       , 'FIN_Let_Go'            , 10  , 0.17  , 'Sweet lets go of the ladder'),\nAnim(524  , 'FINALE2'      , 'FIN_Cop1_ClimbOut'     , 240 , 4.00  , 'Cop climbs out of the firetrack'),\nAnim(525  , 'FINALE2'      , 'FIN_Cop1_Fall'         , 26  , 0.43  , 'Cop falls off the firetrack ladder'),\nAnim(526  , 'FINALE2'      , 'FIN_Cop1_Loop'         , 120 , 2.00  , 'Cop hangs onto the ladder'),", "Anim(525  , 'FINALE2'      , 'FIN_Cop1_Fall'         , 26  , 0.43  , 'Cop falls off the firetrack ladder'),\nAnim(526  , 'FINALE2'      , 'FIN_Cop1_Loop'         , 120 , 2.00  , 'Cop hangs onto the ladder'),\nAnim(527  , 'FINALE2'      , 'FIN_Cop1_Shot'         , 124 , 2.07  , 'Cop is shot while on the ladder'),\nAnim(528  , 'FINALE2'      , 'FIN_Cop1_Swing'        , 70  , 1.17  , 'Cop swings while dead'),\nAnim(529  , 'FINALE2'      , 'FIN_Cop2_ClimbOut'     , 320 , 5.33  , 'Cop 2 climbs out of the firetrack'),\nAnim(530  , 'FINALE2'      , 'FIN_Switch_P'          , 238 , 3.97  , 'Driver switches with passanger'),\nAnim(531  , 'FINALE2'      , 'FIN_Switch_S'          , 130 , 2.17  , 'Passanger switches with driver'),\nAnim(532  , 'FLAME'        , 'FLAME_fire'            , 48  , 0.80  , 'Flamethrower firing animation'),\nAnim(533  , 'Flowers'      , 'Flower_attack'         , 48  , 0.80  , 'Attacking with flowers'),\nAnim(534  , 'Flowers'      , 'Flower_attack_M'       , 74  , 1.23  , 'Attacking with flowers'),", "Anim(533  , 'Flowers'      , 'Flower_attack'         , 48  , 0.80  , 'Attacking with flowers'),\nAnim(534  , 'Flowers'      , 'Flower_attack_M'       , 74  , 1.23  , 'Attacking with flowers'),\nAnim(535  , 'Flowers'      , 'Flower_Hit'            , 50  , 0.83  , 'Getting hit with flowers'),\nAnim(536  , 'FOOD'         , 'EAT_Burger'            , 300 , 5.00  , 'Eating a burger'),\nAnim(537  , 'FOOD'         , 'EAT_Chicken'           , 300 , 5.00  , 'Eating chicken'),\nAnim(538  , 'FOOD'         , 'EAT_Pizza'             , 300 , 5.00  , 'Eating pizza'),\nAnim(539  , 'FOOD'         , 'EAT_Vomit_P'           , 480 , 8.00  , 'Vomiting'),\nAnim(540  , 'FOOD'         , 'EAT_Vomit_SK'          , 480 , 8.00  , 'Vomiting'),\nAnim(541  , 'FOOD'         , 'FF_Dam_Bkw'            , 40  , 0.67  , 'Getting hit from the back while sitting'),\nAnim(542  , 'FOOD'         , 'FF_Dam_Fwd'            , 40  , 0.67  , 'Getting hit from the front while sitting'),", "Anim(541  , 'FOOD'         , 'FF_Dam_Bkw'            , 40  , 0.67  , 'Getting hit from the back while sitting'),\nAnim(542  , 'FOOD'         , 'FF_Dam_Fwd'            , 40  , 0.67  , 'Getting hit from the front while sitting'),\nAnim(543  , 'FOOD'         , 'FF_Dam_Left'           , 40  , 0.67  , 'Getting hit from the left while sitting'),\nAnim(544  , 'FOOD'         , 'FF_Dam_Right'          , 40  , 0.67  , 'Getting hit from the right while sitting'),\nAnim(545  , 'FOOD'         , 'FF_Die_Bkw'            , 40  , 0.67  , 'Dying while sitting down from the back'),\nAnim(546  , 'FOOD'         , 'FF_Die_Fwd'            , 40  , 0.67  , 'Dying while sitting down from the front'),\nAnim(547  , 'FOOD'         , 'FF_Die_Left'           , 40  , 0.67  , 'Dying while sitting down fron the left'),\nAnim(548  , 'FOOD'         , 'FF_Die_Right'          , 40  , 0.67  , 'Dying while sitting down from the right'),\nAnim(549  , 'FOOD'         , 'FF_Sit_Eat1'           , 170 , 2.83  , 'Eating food while sitting down'),\nAnim(550  , 'FOOD'         , 'FF_Sit_Eat2'           , 160 , 2.67  , 'Eating food while sitting down'),", "Anim(549  , 'FOOD'         , 'FF_Sit_Eat1'           , 170 , 2.83  , 'Eating food while sitting down'),\nAnim(550  , 'FOOD'         , 'FF_Sit_Eat2'           , 160 , 2.67  , 'Eating food while sitting down'),\nAnim(551  , 'FOOD'         , 'FF_Sit_Eat3'           , 160 , 2.67  , 'Eating food while sitting down'),\nAnim(552  , 'FOOD'         , 'FF_Sit_In'             , 180 , 3.00  , 'Sitting down at a table'),\nAnim(553  , 'FOOD'         , 'FF_Sit_In_L'           , 120 , 2.00  , 'Taking a seat from the left'),\nAnim(554  , 'FOOD'         , 'FF_Sit_In_R'           , 120 , 2.00  , 'Taking a seat from the right'),\nAnim(555  , 'FOOD'         , 'FF_Sit_Look'           , 480 , 8.00  , 'Looking while sitting down'),\nAnim(556  , 'FOOD'         , 'FF_Sit_Loop'           , 160 , 2.67  , 'Looking while sitting down loop'),\nAnim(557  , 'FOOD'         , 'FF_Sit_Out_180'        , 170 , 2.83  , 'Standing up while doing a 180'),\nAnim(558  , 'FOOD'         , 'FF_Sit_Out_L_180'      , 80  , 1.33  , 'Standing up from the left and doing a 180'),", "Anim(557  , 'FOOD'         , 'FF_Sit_Out_180'        , 170 , 2.83  , 'Standing up while doing a 180'),\nAnim(558  , 'FOOD'         , 'FF_Sit_Out_L_180'      , 80  , 1.33  , 'Standing up from the left and doing a 180'),\nAnim(559  , 'FOOD'         , 'FF_Sit_Out_R_180'      , 80  , 1.33  , 'Standing up from the right and doing a 180'),\nAnim(560  , 'FOOD'         , 'SHP_Thank'             , 70  , 1.17  , 'Shop clerk thanks customer'),\nAnim(561  , 'FOOD'         , 'SHP_Tray_In'           , 40  , 0.67  , 'Shop clerk inserts tray in'),\nAnim(562  , 'FOOD'         , 'SHP_Tray_Lift'         , 100 , 1.67  , 'Shop clerk lifts a tray up a counter'),\nAnim(563  , 'FOOD'         , 'SHP_Tray_Lift_In'      , 30  , 0.50  , 'Shop clerk lifts a tray up a counter'),\nAnim(564  , 'FOOD'         , 'SHP_Tray_Lift_Loop'    , 480 , 8.00  , 'Shop clerk with a tray loop'),\nAnim(565  , 'FOOD'         , 'SHP_Tray_Lift_Out'     , 30  , 0.50  , 'Shop clerk lifts down a tray'),\nAnim(566  , 'FOOD'         , 'SHP_Tray_Out'          , 40  , 0.67  , 'Shop clerk pulls a tray out'),", "Anim(565  , 'FOOD'         , 'SHP_Tray_Lift_Out'     , 30  , 0.50  , 'Shop clerk lifts down a tray'),\nAnim(566  , 'FOOD'         , 'SHP_Tray_Out'          , 40  , 0.67  , 'Shop clerk pulls a tray out'),\nAnim(567  , 'FOOD'         , 'SHP_Tray_Pose'         , 40  , 0.67  , 'Shop clerk idles with the tray'),\nAnim(568  , 'FOOD'         , 'SHP_Tray_Return'       , 80  , 1.33  , 'Shop clerk returns tray'),\nAnim(569  , 'Freeweights'  , 'gym_barbell'           , 142 , 2.37  , 'Sitting down while lifting a dumbell'),\nAnim(570  , 'Freeweights'  , 'gym_free_A'            , 116 , 1.93  , 'Standing while lifting up dumbells'),\nAnim(571  , 'Freeweights'  , 'gym_free_B'            , 140 , 2.33  , 'Standing while lifting up dumbells'),\nAnim(572  , 'Freeweights'  , 'gym_free_celebrate'    , 200 , 3.33  , 'Flexing muscles animation'),\nAnim(573  , 'Freeweights'  , 'gym_free_down'         , 34  , 0.57  , 'Standing while lifting down dumbells'),\nAnim(574  , 'Freeweights'  , 'gym_free_loop'         , 40  , 0.67  , 'Holding dumbells'),", "Anim(573  , 'Freeweights'  , 'gym_free_down'         , 34  , 0.57  , 'Standing while lifting down dumbells'),\nAnim(574  , 'Freeweights'  , 'gym_free_loop'         , 40  , 0.67  , 'Holding dumbells'),\nAnim(575  , 'Freeweights'  , 'gym_free_pickup'       , 190 , 3.17  , 'Wiping hands then picking up dumbells'),\nAnim(576  , 'Freeweights'  , 'gym_free_putdown'      , 190 , 3.17  , 'Putting down dumbells'),\nAnim(577  , 'Freeweights'  , 'gym_free_up_smooth'    , 60  , 1.00  , 'Smooth dumbell lift animation'),\nAnim(578  , 'GANGS'        , 'DEALER_DEAL'           , 70  , 1.17  , 'Drug dealer dealing drugs animation'),\nAnim(579  , 'GANGS'        , 'DEALER_IDLE'           , 120 , 2.00  , 'Drug dealer idle'),\nAnim(580  , 'GANGS'        , 'drnkbr_prtl'           , 160 , 2.67  , 'Gang drink bottle'),\nAnim(581  , 'GANGS'        , 'drnkbr_prtl_F'         , 160 , 2.67  , 'Gang drink bottle'),\nAnim(582  , 'GANGS'        , 'DRUGS_BUY'             , 70  , 1.17  , 'Buying drugs from a dealer'),", "Anim(581  , 'GANGS'        , 'drnkbr_prtl_F'         , 160 , 2.67  , 'Gang drink bottle'),\nAnim(582  , 'GANGS'        , 'DRUGS_BUY'             , 70  , 1.17  , 'Buying drugs from a dealer'),\nAnim(583  , 'GANGS'        , 'hndshkaa'              , 240 , 4.00  , 'Gang handshake'),\nAnim(584  , 'GANGS'        , 'hndshkba'              , 140 , 2.33  , 'Gang handshake'),\nAnim(585  , 'GANGS'        , 'hndshkca'              , 200 , 3.33  , 'Gang handshake'),\nAnim(586  , 'GANGS'        , 'hndshkcb'              , 200 , 3.33  , 'Gang handshake'),\nAnim(587  , 'GANGS'        , 'hndshkda'              , 120 , 2.00  , 'Gang handshake'),\nAnim(588  , 'GANGS'        , 'hndshkea'              , 60  , 1.00  , 'Gang handshake'),\nAnim(589  , 'GANGS'        , 'hndshkfa'              , 250 , 4.17  , 'Gang handshake'),\nAnim(590  , 'GANGS'        , 'hndshkfa_swt'          , 250 , 4.17  , 'Gang handshake'),", "Anim(589  , 'GANGS'        , 'hndshkfa'              , 250 , 4.17  , 'Gang handshake'),\nAnim(590  , 'GANGS'        , 'hndshkfa_swt'          , 250 , 4.17  , 'Gang handshake'),\nAnim(591  , 'GANGS'        , 'Invite_No'             , 200 , 3.33  , 'Gang refusing recruitment'),\nAnim(592  , 'GANGS'        , 'Invite_Yes'            , 260 , 4.33  , 'Gang accepting recruitment'),\nAnim(593  , 'GANGS'        , 'leanIDLE'              , 60  , 1.00  , 'Leaning idle'),\nAnim(594  , 'GANGS'        , 'leanIN'                , 60  , 1.00  , 'Leaning'),\nAnim(595  , 'GANGS'        , 'leanOUT'               , 60  , 1.00  , 'Leaning end animation'),\nAnim(596  , 'GANGS'        , 'prtial_gngtlkA'        , 240 , 4.00  , 'Gang talk'),\nAnim(597  , 'GANGS'        , 'prtial_gngtlkB'        , 370 , 6.17  , 'Gang talk'),\nAnim(598  , 'GANGS'        , 'prtial_gngtlkC'        , 440 , 7.33  , 'Gang talk'),", "Anim(597  , 'GANGS'        , 'prtial_gngtlkB'        , 370 , 6.17  , 'Gang talk'),\nAnim(598  , 'GANGS'        , 'prtial_gngtlkC'        , 440 , 7.33  , 'Gang talk'),\nAnim(599  , 'GANGS'        , 'prtial_gngtlkD'        , 180 , 3.00  , 'Gang talk'),\nAnim(600  , 'GANGS'        , 'prtial_gngtlkE'        , 170 , 2.83  , 'Gang talk'),\nAnim(601  , 'GANGS'        , 'prtial_gngtlkF'        , 310 , 5.17  , 'Gang talk'),\nAnim(602  , 'GANGS'        , 'prtial_gngtlkG'        , 420 , 7.00  , 'Gang talk'),\nAnim(603  , 'GANGS'        , 'prtial_gngtlkH'        , 360 , 6.00  , 'Gang talk'),\nAnim(604  , 'GANGS'        , 'prtial_hndshk_01'      , 100 , 1.67  , 'Gang handshake'),\nAnim(605  , 'GANGS'        , 'prtial_hndshk_biz_01'  , 140 , 2.33  , 'Gang handshake'),\nAnim(606  , 'GANGS'        , 'shake_cara'            , 100 , 1.67  , 'Shoving a car'),", "Anim(605  , 'GANGS'        , 'prtial_hndshk_biz_01'  , 140 , 2.33  , 'Gang handshake'),\nAnim(606  , 'GANGS'        , 'shake_cara'            , 100 , 1.67  , 'Shoving a car'),\nAnim(607  , 'GANGS'        , 'shake_carK'            , 76  , 1.27  , 'Kicking a car'),\nAnim(608  , 'GANGS'        , 'shake_carSH'           , 90  , 1.50  , 'Full body slam against a car'),\nAnim(609  , 'GANGS'        , 'smkcig_prtl'           , 450 , 7.50  , 'Smoking animation'),\nAnim(610  , 'GANGS'        , 'smkcig_prtl_F'         , 450 , 7.50  , 'Smoking animation'),\nAnim(1762 , 'GFUNK'        , 'Dance_B1'              , 76  , 1.27  , 'Bad \"G Thang\" dance'),\nAnim(1763 , 'GFUNK'        , 'Dance_B2'              , 76  , 1.27  , 'Bad \"G Thang\" dance'),\nAnim(1764 , 'GFUNK'        , 'Dance_B3'              , 76  , 1.27  , 'Bad \"G Thang\" dance'),\nAnim(1765 , 'GFUNK'        , 'Dance_B4'              , 76  , 1.27  , 'Bad \"G Thang\" dance'),", "Anim(1764 , 'GFUNK'        , 'Dance_B3'              , 76  , 1.27  , 'Bad \"G Thang\" dance'),\nAnim(1765 , 'GFUNK'        , 'Dance_B4'              , 76  , 1.27  , 'Bad \"G Thang\" dance'),\nAnim(1766 , 'GFUNK'        , 'Dance_B5'              , 76  , 1.27  , 'Bad \"G Thang\" dance'),\nAnim(1767 , 'GFUNK'        , 'Dance_B6'              , 76  , 1.27  , 'Bad \"G Thang\" dance'),\nAnim(1768 , 'GFUNK'        , 'Dance_B7'              , 76  , 1.27  , 'Bad \"G Thang\" dance'),\nAnim(1769 , 'GFUNK'        , 'Dance_B8'              , 76  , 1.27  , 'Bad \"G Thang\" dance'),\nAnim(1770 , 'GFUNK'        , 'Dance_B9'              , 76  , 1.27  , 'Bad \"G Thang\" dance'),\nAnim(1771 , 'GFUNK'        , 'Dance_B10'             , 76  , 1.27  , 'Bad \"G Thang\" dance'),\nAnim(1772 , 'GFUNK'        , 'Dance_B11'             , 76  , 1.27  , 'Bad \"G Thang\" dance'),\nAnim(1773 , 'GFUNK'        , 'Dance_B12'             , 76  , 1.27  , 'Bad \"G Thang\" dance'),", "Anim(1772 , 'GFUNK'        , 'Dance_B11'             , 76  , 1.27  , 'Bad \"G Thang\" dance'),\nAnim(1773 , 'GFUNK'        , 'Dance_B12'             , 76  , 1.27  , 'Bad \"G Thang\" dance'),\nAnim(1774 , 'GFUNK'        , 'Dance_B13'             , 76  , 1.27  , 'Bad \"G Thang\" dance'),\nAnim(1775 , 'GFUNK'        , 'Dance_B14'             , 76  , 1.27  , 'Bad \"G Thang\" dance'),\nAnim(1776 , 'GFUNK'        , 'Dance_B15'             , 76  , 1.27  , 'Bad \"G Thang\" dance'),\nAnim(1777 , 'GFUNK'        , 'Dance_B16'             , 76  , 1.27  , 'Bad \"G Thang\" dance'),\nAnim(1746 , 'GFUNK'        , 'Dance_G1'              , 76  , 1.27  , 'Good \"G Thang\" dance'),\nAnim(1747 , 'GFUNK'        , 'Dance_G2'              , 76  , 1.27  , 'Good \"G Thang\" dance'),\nAnim(1748 , 'GFUNK'        , 'Dance_G3'              , 76  , 1.27  , 'Good \"G Thang\" dance'),\nAnim(1749 , 'GFUNK'        , 'Dance_G4'              , 76  , 1.27  , 'Good \"G Thang\" dance'),", "Anim(1748 , 'GFUNK'        , 'Dance_G3'              , 76  , 1.27  , 'Good \"G Thang\" dance'),\nAnim(1749 , 'GFUNK'        , 'Dance_G4'              , 76  , 1.27  , 'Good \"G Thang\" dance'),\nAnim(1750 , 'GFUNK'        , 'Dance_G5'              , 76  , 1.27  , 'Good \"G Thang\" dance'),\nAnim(1751 , 'GFUNK'        , 'Dance_G6'              , 76  , 1.27  , 'Good \"G Thang\" dance'),\nAnim(1752 , 'GFUNK'        , 'Dance_G7'              , 76  , 1.27  , 'Good \"G Thang\" dance'),\nAnim(1753 , 'GFUNK'        , 'Dance_G8'              , 76  , 1.27  , 'Good \"G Thang\" dance'),\nAnim(1754 , 'GFUNK'        , 'Dance_G9'              , 76  , 1.27  , 'Good \"G Thang\" dance'),\nAnim(1755 , 'GFUNK'        , 'Dance_G10'             , 76  , 1.27  , 'Good \"G Thang\" dance'),\nAnim(1756 , 'GFUNK'        , 'Dance_G11'             , 76  , 1.27  , 'Good \"G Thang\" dance'),\nAnim(1757 , 'GFUNK'        , 'Dance_G12'             , 76  , 1.27  , 'Good \"G Thang\" dance'),", "Anim(1756 , 'GFUNK'        , 'Dance_G11'             , 76  , 1.27  , 'Good \"G Thang\" dance'),\nAnim(1757 , 'GFUNK'        , 'Dance_G12'             , 76  , 1.27  , 'Good \"G Thang\" dance'),\nAnim(1758 , 'GFUNK'        , 'Dance_G13'             , 76  , 1.27  , 'Good \"G Thang\" dance'),\nAnim(1759 , 'GFUNK'        , 'Dance_G14'             , 76  , 1.27  , 'Good \"G Thang\" dance'),\nAnim(1760 , 'GFUNK'        , 'Dance_G15'             , 76  , 1.27  , 'Good \"G Thang\" dance'),\nAnim(1761 , 'GFUNK'        , 'Dance_G16'             , 76  , 1.27  , 'Good \"G Thang\" dance'),\nAnim(1778 , 'GFUNK'        , 'dance_loop'            , 70  , 1.17  , 'Dancing loop'),\nAnim(611  , 'GHANDS'       , 'gsign1'                , 286 , 4.77  , 'Gang sign'),\nAnim(612  , 'GHANDS'       , 'gsign1LH'              , 164 , 2.73  , 'High gang sign'),\nAnim(613  , 'GHANDS'       , 'gsign2'                , 128 , 2.13  , 'Gang sign'),", "Anim(612  , 'GHANDS'       , 'gsign1LH'              , 164 , 2.73  , 'High gang sign'),\nAnim(613  , 'GHANDS'       , 'gsign2'                , 128 , 2.13  , 'Gang sign'),\nAnim(614  , 'GHANDS'       , 'gsign2LH'              , 140 , 2.33  , 'High gang sign'),\nAnim(615  , 'GHANDS'       , 'gsign3'                , 280 , 4.67  , 'Gang sign'),\nAnim(616  , 'GHANDS'       , 'gsign3LH'              , 120 , 2.00  , 'High gang sign'),\nAnim(617  , 'GHANDS'       , 'gsign4'                , 250 , 4.17  , 'Gang sign'),\nAnim(618  , 'GHANDS'       , 'gsign4LH'              , 280 , 4.67  , 'High gang sign'),\nAnim(619  , 'GHANDS'       , 'gsign5'                , 372 , 6.20  , 'Gang sign'),\nAnim(620  , 'GHANDS'       , 'gsign5LH'              , 120 , 2.00  , 'High gang sign'),\nAnim(621  , 'GHANDS'       , 'LHGsign1'              , 120 , 2.00  , 'Gang sign'),", "Anim(620  , 'GHANDS'       , 'gsign5LH'              , 120 , 2.00  , 'High gang sign'),\nAnim(621  , 'GHANDS'       , 'LHGsign1'              , 120 , 2.00  , 'Gang sign'),\nAnim(622  , 'GHANDS'       , 'LHGsign2'              , 120 , 2.00  , 'Gang sign'),\nAnim(623  , 'GHANDS'       , 'LHGsign3'              , 120 , 2.00  , 'Gang sign'),\nAnim(624  , 'GHANDS'       , 'LHGsign4'              , 120 , 2.00  , 'Gang sign'),\nAnim(625  , 'GHANDS'       , 'LHGsign5'              , 120 , 2.00  , 'Gang sign'),\nAnim(626  , 'GHANDS'       , 'RHGsign1'              , 120 , 2.00  , 'Gang sign'),\nAnim(627  , 'GHANDS'       , 'RHGsign2'              , 120 , 2.00  , 'Gang sign'),\nAnim(628  , 'GHANDS'       , 'RHGsign3'              , 120 , 2.00  , 'Gang sign'),\nAnim(629  , 'GHANDS'       , 'RHGsign4'              , 120 , 2.00  , 'Gang sign'),", "Anim(628  , 'GHANDS'       , 'RHGsign3'              , 120 , 2.00  , 'Gang sign'),\nAnim(629  , 'GHANDS'       , 'RHGsign4'              , 120 , 2.00  , 'Gang sign'),\nAnim(630  , 'GHANDS'       , 'RHGsign5'              , 120 , 2.00  , 'Gang sign'),\nAnim(631  , 'GHETTO_DB'    , 'GDB_Car2_PLY'          , 570 , 9.50  , 'CJ\\'s animation inside the car'),\nAnim(632  , 'GHETTO_DB'    , 'GDB_Car2_SMO'          , 570 , 9.50  , 'Big Smoke\\'s animation inside the car'),\nAnim(633  , 'GHETTO_DB'    , 'GDB_Car2_SWE'          , 570 , 9.50  , 'Sweet\\'s animation inside the car'),\nAnim(634  , 'GHETTO_DB'    , 'GDB_Car_PLY'           , 800 , 13.33 , 'CJ\\'s animation inside the car'),\nAnim(635  , 'GHETTO_DB'    , 'GDB_Car_RYD'           , 800 , 13.33 , 'Ryder\\'s animation inside the car'),\nAnim(636  , 'GHETTO_DB'    , 'GDB_Car_SMO'           , 800 , 13.33 , 'Big Smoke\\'s animation inside the car'),\nAnim(637  , 'GHETTO_DB'    , 'GDB_Car_SWE'           , 800 , 13.33 , 'Sweet\\'s animation inside the car'),", "Anim(636  , 'GHETTO_DB'    , 'GDB_Car_SMO'           , 800 , 13.33 , 'Big Smoke\\'s animation inside the car'),\nAnim(637  , 'GHETTO_DB'    , 'GDB_Car_SWE'           , 800 , 13.33 , 'Sweet\\'s animation inside the car'),\nAnim(638  , 'goggles'      , 'goggles_put_on'        , 48  , 0.80  , 'Putting on/off NVG goggles'),\nAnim(639  , 'GRAFFITI'     , 'graffiti_Chkout'       , 280 , 4.67  , 'Putting away a graffiti can'),\nAnim(640  , 'GRAFFITI'     , 'spraycan_fire'         , 140 , 2.33  , 'Spraying with graffiti'),\nAnim(641  , 'GRAVEYARD'    , 'mrnF_loop'             , 280 , 4.67  , 'Female mourner loop'),\nAnim(642  , 'GRAVEYARD'    , 'mrnM_loop'             , 160 , 2.67  , 'Male mourner loop'),\nAnim(643  , 'GRAVEYARD'    , 'prst_loopa'            , 240 , 4.00  , 'Graveyard priest loop'),\nAnim(644  , 'GRENADE'      , 'WEAPON_start_throw'    , 12  , 0.20  , 'Start throw animation'),\nAnim(645  , 'GRENADE'      , 'WEAPON_throw'          , 52  , 0.87  , 'Grenade/Molotov high throw'),", "Anim(644  , 'GRENADE'      , 'WEAPON_start_throw'    , 12  , 0.20  , 'Start throw animation'),\nAnim(645  , 'GRENADE'      , 'WEAPON_throw'          , 52  , 0.87  , 'Grenade/Molotov high throw'),\nAnim(646  , 'GRENADE'      , 'WEAPON_throwu'         , 40  , 0.67  , 'Grenade/Moltotov toss'),\nAnim(647  , 'GYMNASIUM'    , 'GYMshadowbox'          , 306 , 5.10  , 'Boxing animation'),\nAnim(648  , 'GYMNASIUM'    , 'gym_bike_celebrate'    , 116 , 1.93  , 'Celebrating after finishing bike workout'),\nAnim(649  , 'GYMNASIUM'    , 'gym_bike_fast'         , 24  , 0.40  , 'Peddling fast on a gym bike'),\nAnim(650  , 'GYMNASIUM'    , 'gym_bike_faster'       , 24  , 0.40  , 'Peddling faster on a gym bike'),\nAnim(651  , 'GYMNASIUM'    , 'gym_bike_getoff'       , 100 , 1.67  , 'Getting off a gym bike'),\nAnim(652  , 'GYMNASIUM'    , 'gym_bike_geton'        , 100 , 1.67  , 'Getting on a gym bike'),\nAnim(653  , 'GYMNASIUM'    , 'gym_bike_pedal'        , 24  , 0.40  , 'Peddling on a gym bike'),", "Anim(652  , 'GYMNASIUM'    , 'gym_bike_geton'        , 100 , 1.67  , 'Getting on a gym bike'),\nAnim(653  , 'GYMNASIUM'    , 'gym_bike_pedal'        , 24  , 0.40  , 'Peddling on a gym bike'),\nAnim(654  , 'GYMNASIUM'    , 'gym_bike_slow'         , 26  , 0.43  , 'Peddling on a gym bike slowly'),\nAnim(655  , 'GYMNASIUM'    , 'gym_bike_still'        , 100 , 1.67  , 'Staying still on a gym bike'),\nAnim(656  , 'GYMNASIUM'    , 'gym_jog_falloff'       , 130 , 2.17  , 'Falling off a treadmill'),\nAnim(657  , 'GYMNASIUM'    , 'gym_shadowbox'         , 306 , 5.10  , 'Boxing animation'),\nAnim(658  , 'GYMNASIUM'    , 'gym_tread_celebrate'   , 150 , 2.50  , 'Celebrating after finishing treadmill workout'),\nAnim(659  , 'GYMNASIUM'    , 'gym_tread_falloff'     , 120 , 2.00  , 'Falling off a treadmill'),\nAnim(660  , 'GYMNASIUM'    , 'gym_tread_getoff'      , 200 , 3.33  , 'Getting off a treadmill'),\nAnim(661  , 'GYMNASIUM'    , 'gym_tread_geton'       , 150 , 2.50  , 'Getting on a treadmill'),", "Anim(660  , 'GYMNASIUM'    , 'gym_tread_getoff'      , 200 , 3.33  , 'Getting off a treadmill'),\nAnim(661  , 'GYMNASIUM'    , 'gym_tread_geton'       , 150 , 2.50  , 'Getting on a treadmill'),\nAnim(662  , 'GYMNASIUM'    , 'gym_tread_jog'         , 46  , 0.77  , 'Jogging on a treadmill'),\nAnim(663  , 'GYMNASIUM'    , 'gym_tread_sprint'      , 40  , 0.67  , 'Sprinting on a treadmill'),\nAnim(664  , 'GYMNASIUM'    , 'gym_tread_tired'       , 80  , 1.33  , 'Tired while on a treadmill'),\nAnim(665  , 'GYMNASIUM'    , 'gym_tread_walk'        , 64  , 1.07  , 'Walking on a treadmill'),\nAnim(666  , 'GYMNASIUM'    , 'gym_walk_falloff'      , 200 , 3.33  , 'Falling off a treadmill'),\nAnim(667  , 'GYMNASIUM'    , 'Pedals_fast'           , 24  , 0.40  , 'Peddling fast on a gym bike'),\nAnim(668  , 'GYMNASIUM'    , 'Pedals_med'            , 24  , 0.40  , 'Peddling in medium speed on a gym bike'),\nAnim(669  , 'GYMNASIUM'    , 'Pedals_slow'           , 26  , 0.43  , 'Peddling slow on a gym bike'),", "Anim(668  , 'GYMNASIUM'    , 'Pedals_med'            , 24  , 0.40  , 'Peddling in medium speed on a gym bike'),\nAnim(669  , 'GYMNASIUM'    , 'Pedals_slow'           , 26  , 0.43  , 'Peddling slow on a gym bike'),\nAnim(670  , 'GYMNASIUM'    , 'Pedals_still'          , 26  , 0.43  , 'Stay still on a gym bike'),\nAnim(671  , 'HAIRCUTS'     , 'BRB_Beard_01'          , 270 , 4.50  , 'Barber beard animation'),\nAnim(672  , 'HAIRCUTS'     , 'BRB_Buy'               , 250 , 4.17  , 'Buying haircut animation'),\nAnim(673  , 'HAIRCUTS'     , 'BRB_Cut'               , 102 , 1.70  , 'Barber cutting hair animation'),\nAnim(674  , 'HAIRCUTS'     , 'BRB_Cut_In'            , 50  , 0.83  , 'Start of barber cutting hair animation'),\nAnim(675  , 'HAIRCUTS'     , 'BRB_Cut_Out'           , 80  , 1.33  , 'Barber showing off hair animation'),\nAnim(676  , 'HAIRCUTS'     , 'BRB_Hair_01'           , 230 , 3.83  , 'Admiring haircut'),\nAnim(677  , 'HAIRCUTS'     , 'BRB_Hair_02'           , 270 , 4.50  , 'Admiring haircut'),", "Anim(676  , 'HAIRCUTS'     , 'BRB_Hair_01'           , 230 , 3.83  , 'Admiring haircut'),\nAnim(677  , 'HAIRCUTS'     , 'BRB_Hair_02'           , 270 , 4.50  , 'Admiring haircut'),\nAnim(678  , 'HAIRCUTS'     , 'BRB_In'                , 80  , 1.33  , 'Barber start animation'),\nAnim(679  , 'HAIRCUTS'     , 'BRB_Loop'              , 160 , 2.67  , 'Barber loop animation'),\nAnim(680  , 'HAIRCUTS'     , 'BRB_Out'               , 40  , 0.67  , 'Barber end animation'),\nAnim(681  , 'HAIRCUTS'     , 'BRB_Sit_In'            , 124 , 2.07  , 'Sitting on barber\\'s chair'),\nAnim(682  , 'HAIRCUTS'     , 'BRB_Sit_Loop'          , 420 , 7.00  , 'Sitting on barber\\'s chair loop'),\nAnim(683  , 'HAIRCUTS'     , 'BRB_Sit_Out'           , 180 , 3.00  , 'Getting off the barber\\'s chair'),\nAnim(684  , 'HEIST9'       , 'CAS_G2_GasKO'          , 200 , 3.33  , 'Choking on gas animation'),\nAnim(685  , 'HEIST9'       , 'swt_wllpk_L'           , 160 , 2.67  , 'Taking cover behind a left wall'),", "Anim(684  , 'HEIST9'       , 'CAS_G2_GasKO'          , 200 , 3.33  , 'Choking on gas animation'),\nAnim(685  , 'HEIST9'       , 'swt_wllpk_L'           , 160 , 2.67  , 'Taking cover behind a left wall'),\nAnim(686  , 'HEIST9'       , 'swt_wllpk_L_back'      , 30  , 0.50  , 'Taking cover behind a left wall'),\nAnim(687  , 'HEIST9'       , 'swt_wllpk_R'           , 220 , 3.67  , 'Taking cover behind a right wall'),\nAnim(688  , 'HEIST9'       , 'swt_wllpk_R_back'      , 26  , 0.43  , 'Taking cover behind a right wall'),\nAnim(689  , 'HEIST9'       , 'swt_wllshoot_in_L'     , 60  , 1.00  , 'Out of left cover with a gun'),\nAnim(690  , 'HEIST9'       , 'swt_wllshoot_in_R'     , 78  , 1.30  , 'Out of right cover with a gun'),\nAnim(691  , 'HEIST9'       , 'swt_wllshoot_out_L'    , 120 , 2.00  , 'Going back to cover on the left'),\nAnim(692  , 'HEIST9'       , 'swt_wllshoot_out_R'    , 86  , 1.43  , 'Going back to cover on the right'),\nAnim(693  , 'HEIST9'       , 'Use_SwipeCard'         , 70  , 1.17  , 'Swiping access card'),", "Anim(692  , 'HEIST9'       , 'swt_wllshoot_out_R'    , 86  , 1.43  , 'Going back to cover on the right'),\nAnim(693  , 'HEIST9'       , 'Use_SwipeCard'         , 70  , 1.17  , 'Swiping access card'),\nAnim(694  , 'INT_HOUSE'    , 'BED_In_L'              , 200 , 3.33  , 'Getting into bed on the left'),\nAnim(695  , 'INT_HOUSE'    , 'BED_In_R'              , 200 , 3.33  , 'Getting into bed on the right'),\nAnim(696  , 'INT_HOUSE'    , 'BED_Loop_L'            , 200 , 3.33  , 'Sleeping on the left side of the bed loop'),\nAnim(697  , 'INT_HOUSE'    , 'BED_Loop_R'            , 200 , 3.33  , 'Sleeping on the right side of the bed loop'),\nAnim(698  , 'INT_HOUSE'    , 'BED_Out_L'             , 200 , 3.33  , 'Getting out of bed on the left'),\nAnim(699  , 'INT_HOUSE'    , 'BED_Out_R'             , 200 , 3.33  , 'Getting out of bed on the right'),\nAnim(700  , 'INT_HOUSE'    , 'LOU_In'                , 110 , 1.83  , 'Sitting down on a sofa'),\nAnim(701  , 'INT_HOUSE'    , 'LOU_Loop'              , 200 , 3.33  , 'Sitting loop'),", "Anim(700  , 'INT_HOUSE'    , 'LOU_In'                , 110 , 1.83  , 'Sitting down on a sofa'),\nAnim(701  , 'INT_HOUSE'    , 'LOU_Loop'              , 200 , 3.33  , 'Sitting loop'),\nAnim(702  , 'INT_HOUSE'    , 'LOU_Out'               , 120 , 2.00  , 'Getting up from a sofa'),\nAnim(703  , 'INT_HOUSE'    , 'wash_up'               , 180 , 3.00  , 'Washing hands at the sink'),\nAnim(704  , 'INT_OFFICE'   , 'FF_Dam_Fwd'            , 40  , 0.67  , 'Getting hit from the front while sitting down'),\nAnim(705  , 'INT_OFFICE'   , 'OFF_Sit_2Idle_180'     , 170 , 2.83  , 'Getting up and doing a 180'),\nAnim(706  , 'INT_OFFICE'   , 'OFF_Sit_Bored_Loop'    , 170 , 2.83  , 'Sitting while bored on a chair'),\nAnim(707  , 'INT_OFFICE'   , 'OFF_Sit_Crash'         , 200 , 3.33  , 'Slamming keyboard while sitting'),\nAnim(708  , 'INT_OFFICE'   , 'OFF_Sit_Drink'         , 250 , 4.17  , 'Drinking while sitting down'),\nAnim(709  , 'INT_OFFICE'   , 'OFF_Sit_Idle_Loop'     , 124 , 2.07  , 'Sitting down loop'),", "Anim(708  , 'INT_OFFICE'   , 'OFF_Sit_Drink'         , 250 , 4.17  , 'Drinking while sitting down'),\nAnim(709  , 'INT_OFFICE'   , 'OFF_Sit_Idle_Loop'     , 124 , 2.07  , 'Sitting down loop'),\nAnim(710  , 'INT_OFFICE'   , 'OFF_Sit_In'            , 166 , 2.77  , 'Taking a sit'),\nAnim(711  , 'INT_OFFICE'   , 'OFF_Sit_Read'          , 200 , 3.33  , 'Reading while sitting'),\nAnim(712  , 'INT_OFFICE'   , 'OFF_Sit_Type_Loop'     , 200 , 3.33  , 'Typing on a keyboard while sitting loop'),\nAnim(713  , 'INT_OFFICE'   , 'OFF_Sit_Watch'         , 120 , 2.00  , 'Checking your watch while sitting'),\nAnim(714  , 'INT_SHOP'     , 'shop_cashier'          , 400 , 6.67  , 'Opening up the register'),\nAnim(715  , 'INT_SHOP'     , 'shop_in'               , 60  , 1.00  , 'Start of opening up register animation'),\nAnim(716  , 'INT_SHOP'     , 'shop_lookA'            , 120 , 2.00  , 'Looking at an item in register'),\nAnim(717  , 'INT_SHOP'     , 'shop_lookB'            , 180 , 3.00  , 'Looking at an item in register'),", "Anim(716  , 'INT_SHOP'     , 'shop_lookA'            , 120 , 2.00  , 'Looking at an item in register'),\nAnim(717  , 'INT_SHOP'     , 'shop_lookB'            , 180 , 3.00  , 'Looking at an item in register'),\nAnim(718  , 'INT_SHOP'     , 'shop_loop'             , 120 , 2.00  , 'Handling the register'),\nAnim(719  , 'INT_SHOP'     , 'shop_out'              , 80  , 1.33  , 'End animation for register handling'),\nAnim(720  , 'INT_SHOP'     , 'shop_pay'              , 400 , 6.67  , 'Taking out money and putting on the counter'),\nAnim(721  , 'INT_SHOP'     , 'shop_shelf'            , 140 , 2.33  , 'Taking out an item from a shelf'),\nAnim(722  , 'JST_BUISNESS' , 'girl_01'               , 200 , 3.33  , 'Girl sitting animation'),\nAnim(723  , 'JST_BUISNESS' , 'girl_02'               , 680 , 11.33 , 'Girl sitting animation'),\nAnim(724  , 'JST_BUISNESS' , 'player_01'             , 1490, 24.83 , 'CJ\\'s animation from \"Just Business\"'),\nAnim(725  , 'JST_BUISNESS' , 'smoke_01'              , 1500, 25.00 , 'Big smoke\\'s anim from \"Just Business\"'),", "Anim(724  , 'JST_BUISNESS' , 'player_01'             , 1490, 24.83 , 'CJ\\'s animation from \"Just Business\"'),\nAnim(725  , 'JST_BUISNESS' , 'smoke_01'              , 1500, 25.00 , 'Big smoke\\'s anim from \"Just Business\"'),\nAnim(726  , 'KART'         , 'KART_getin_LHS'        , 50  , 0.83  , 'Getting into a kart from the left'),\nAnim(727  , 'KART'         , 'KART_getin_RHS'        , 50  , 0.83  , 'Getting into a kart from the right'),\nAnim(728  , 'KART'         , 'KART_getout_LHS'       , 50  , 0.83  , 'Getting out of a kart from the left'),\nAnim(729  , 'KART'         , 'KART_getout_RHS'       , 50  , 0.83  , 'Getting out of a kart from the right'),\nAnim(730  , 'KISSING'      , 'BD_GF_Wave'            , 304 , 5.07  , 'Girlfriend wave'),\nAnim(731  , 'KISSING'      , 'gfwave2'               , 160 , 2.67  , 'Girlfriend wave'),\nAnim(732  , 'KISSING'      , 'GF_CarArgue_01'        , 300 , 5.00  , 'Arguing inside a car'),\nAnim(733  , 'KISSING'      , 'GF_CarArgue_02'        , 300 , 5.00  , 'Arguing inside a car'),", "Anim(732  , 'KISSING'      , 'GF_CarArgue_01'        , 300 , 5.00  , 'Arguing inside a car'),\nAnim(733  , 'KISSING'      , 'GF_CarArgue_02'        , 300 , 5.00  , 'Arguing inside a car'),\nAnim(734  , 'KISSING'      , 'GF_CarSpot'            , 300 , 5.00  , 'Spotting someone while sitting in a car'),\nAnim(735  , 'KISSING'      , 'GF_StreetArgue_01'     , 300 , 5.00  , 'Arguing in the street'),\nAnim(736  , 'KISSING'      , 'GF_StreetArgue_02'     , 300 , 5.00  , 'Arguing in the street'),\nAnim(737  , 'KISSING'      , 'gift_get'              , 320 , 5.33  , 'Receiving a gift'),\nAnim(738  , 'KISSING'      , 'gift_give'             , 320 , 5.33  , 'Giving a gift'),\nAnim(739  , 'KISSING'      , 'Grlfrd_Kiss_01'        , 250 , 4.17  , 'Girlfriend kissing animation'),\nAnim(740  , 'KISSING'      , 'Grlfrd_Kiss_02'        , 346 , 5.77  , 'Girlfriend kissing animation'),\nAnim(741  , 'KISSING'      , 'Grlfrd_Kiss_03'        , 420 , 7.00  , 'Girlfriend kissing animation'),", "Anim(740  , 'KISSING'      , 'Grlfrd_Kiss_02'        , 346 , 5.77  , 'Girlfriend kissing animation'),\nAnim(741  , 'KISSING'      , 'Grlfrd_Kiss_03'        , 420 , 7.00  , 'Girlfriend kissing animation'),\nAnim(742  , 'KISSING'      , 'Playa_Kiss_01'         , 300 , 5.00  , 'Player kissing animation'),\nAnim(743  , 'KISSING'      , 'Playa_Kiss_02'         , 346 , 5.77  , 'Player kissing animation'),\nAnim(744  , 'KISSING'      , 'Playa_Kiss_03'         , 420 , 7.00  , 'Player kissing animation'),\nAnim(745  , 'KNIFE'        , 'KILL_Knife_Ped_Damage' , 134 , 2.23  , 'Getting throat slit from behind'),\nAnim(746  , 'KNIFE'        , 'KILL_Knife_Ped_Die'    , 116 , 1.93  , 'Dying from a stealth kill'),\nAnim(747  , 'KNIFE'        , 'KILL_Knife_Player'     , 160 , 2.67  , 'Slitting throat from behind'),\nAnim(748  , 'KNIFE'        , 'KILL_Partial'          , 2   , 0.03  , 'Killing with a knife from behind'),\nAnim(749  , 'KNIFE'        , 'knife_1'               , 60  , 1.00  , 'Knife swing'),", "Anim(748  , 'KNIFE'        , 'KILL_Partial'          , 2   , 0.03  , 'Killing with a knife from behind'),\nAnim(749  , 'KNIFE'        , 'knife_1'               , 60  , 1.00  , 'Knife swing'),\nAnim(750  , 'KNIFE'        , 'knife_2'               , 56  , 0.93  , 'Knife swing'),\nAnim(751  , 'KNIFE'        , 'knife_3'               , 52  , 0.87  , 'Knife swing'),\nAnim(752  , 'KNIFE'        , 'Knife_4'               , 54  , 0.90  , 'Knife swing'),\nAnim(753  , 'KNIFE'        , 'knife_block'           , 28  , 0.47  , 'Knife block'),\nAnim(754  , 'KNIFE'        , 'Knife_G'               , 54  , 0.90  , 'Stabbing downed opponent with a knife'),\nAnim(755  , 'KNIFE'        , 'knife_hit_1'           , 34  , 0.57  , 'Getting hit by a knife'),\nAnim(756  , 'KNIFE'        , 'knife_hit_2'           , 38  , 0.63  , 'Getting hit by a knife'),\nAnim(757  , 'KNIFE'        , 'knife_hit_3'           , 96  , 1.60  , 'Getting hit by a knife'),", "Anim(756  , 'KNIFE'        , 'knife_hit_2'           , 38  , 0.63  , 'Getting hit by a knife'),\nAnim(757  , 'KNIFE'        , 'knife_hit_3'           , 96  , 1.60  , 'Getting hit by a knife'),\nAnim(758  , 'KNIFE'        , 'knife_IDLE'            , 78  , 1.30  , 'Knife idle'),\nAnim(759  , 'KNIFE'        , 'knife_part'            , 32  , 0.53  , 'Knife parting animation'),\nAnim(760  , 'KNIFE'        , 'WEAPON_knifeidle'      , 78  , 1.30  , 'Knife idle'),\nAnim(761  , 'LAPDAN1'      , 'LAPDAN_D'              , 2264, 37.73 , 'Stripper lapdance'),\nAnim(762  , 'LAPDAN1'      , 'LAPDAN_P'              , 2264, 37.73 , 'Stripper lapdance'),\nAnim(763  , 'LAPDAN2'      , 'LAPDAN_D'              , 2810, 46.83 , 'Stripper lapdance'),\nAnim(764  , 'LAPDAN2'      , 'LAPDAN_P'              , 2810, 46.83 , 'Stripper lapdance'),\nAnim(765  , 'LAPDAN3'      , 'LAPDAN_D'              , 3088, 51.47 , 'Stripper lapdance'),", "Anim(764  , 'LAPDAN2'      , 'LAPDAN_P'              , 2810, 46.83 , 'Stripper lapdance'),\nAnim(765  , 'LAPDAN3'      , 'LAPDAN_D'              , 3088, 51.47 , 'Stripper lapdance'),\nAnim(766  , 'LAPDAN3'      , 'LAPDAN_P'              , 3088, 51.47 , 'Stripper lapdance'),\nAnim(767  , 'LOWRIDER'     , 'F_smklean_loop'        , 240 , 4.00  , 'Smoking while leaning loop'),\nAnim(768  , 'LOWRIDER'     , 'lrgirl_bdbnce'         , 160 , 2.67  , 'Bounching while sitting on top of a car seat'),\nAnim(769  , 'LOWRIDER'     , 'lrgirl_hair'           , 140 , 2.33  , 'Stroking hair while sitting on top of a car seat'),\nAnim(770  , 'LOWRIDER'     , 'lrgirl_hurry'          , 170 , 2.83  , 'Sitting in a car and signalling to hurry up'),\nAnim(771  , 'LOWRIDER'     , 'lrgirl_idleloop'       , 130 , 2.17  , 'Sitting in a car loop'),\nAnim(772  , 'LOWRIDER'     , 'lrgirl_idle_to_l0'     , 130 , 2.17  , 'Sitting in a lowrider'),\nAnim(773  , 'LOWRIDER'     , 'lrgirl_l0_bnce'        , 40  , 0.67  , 'Bounching while sitting in a lowrider'),", "Anim(772  , 'LOWRIDER'     , 'lrgirl_idle_to_l0'     , 130 , 2.17  , 'Sitting in a lowrider'),\nAnim(773  , 'LOWRIDER'     , 'lrgirl_l0_bnce'        , 40  , 0.67  , 'Bounching while sitting in a lowrider'),\nAnim(774  , 'LOWRIDER'     , 'lrgirl_l0_loop'        , 120 , 2.00  , 'Sitting in a lowrider loop'),\nAnim(775  , 'LOWRIDER'     , 'lrgirl_l0_to_l1'       , 220 , 3.67  , 'Getting up and sitting on top of the car seat'),\nAnim(776  , 'LOWRIDER'     , 'lrgirl_l12_to_l0'      , 120 , 2.00  , 'Sitting back down on the car\\'s seat'),\nAnim(777  , 'LOWRIDER'     , 'lrgirl_l1_bnce'        , 40  , 0.67  , 'Bounching while sitting on top of a car seat'),\nAnim(778  , 'LOWRIDER'     , 'lrgirl_l1_loop'        , 120 , 2.00  , 'Sitting on top of the car\\'s seat loop'),\nAnim(779  , 'LOWRIDER'     , 'lrgirl_l1_to_l2'       , 80  , 1.33  , 'Sitting on top of a car\\'s seat while cheering'),\nAnim(780  , 'LOWRIDER'     , 'lrgirl_l2_bnce'        , 40  , 0.67  , 'Bounching on top of a car\\'s seat'),\nAnim(781  , 'LOWRIDER'     , 'lrgirl_l2_loop'        , 90  , 1.50  , 'Sitting on top of a car\\'s seat loop'),", "Anim(780  , 'LOWRIDER'     , 'lrgirl_l2_bnce'        , 40  , 0.67  , 'Bounching on top of a car\\'s seat'),\nAnim(781  , 'LOWRIDER'     , 'lrgirl_l2_loop'        , 90  , 1.50  , 'Sitting on top of a car\\'s seat loop'),\nAnim(782  , 'LOWRIDER'     , 'lrgirl_l2_to_l3'       , 90  , 1.50  , 'Leaning on a lowrider\\'s windshield'),\nAnim(783  , 'LOWRIDER'     , 'lrgirl_l345_to_l1'     , 60  , 1.00  , 'Going back on top of a car\\'s seat'),\nAnim(784  , 'LOWRIDER'     , 'lrgirl_l3_bnce'        , 40  , 0.67  , 'Bounching on a lowrider while holding the windshield'),\nAnim(785  , 'LOWRIDER'     , 'lrgirl_l3_loop'        , 120 , 2.00  , 'Holding a lowrider\\'s windshield loop'),\nAnim(786  , 'LOWRIDER'     , 'lrgirl_l3_to_l4'       , 40  , 0.67  , 'Holding a lowrider\\'s windshield while cheering'),\nAnim(787  , 'LOWRIDER'     , 'lrgirl_l4_bnce'        , 40  , 0.67  , 'Bounching while holding a lowrider\\'s windshield'),\nAnim(788  , 'LOWRIDER'     , 'lrgirl_l4_loop'        , 140 , 2.33  , 'Holding a lowrider\\'s windshield loop'),\nAnim(789  , 'LOWRIDER'     , 'lrgirl_l4_to_l5'       , 60  , 1.00  , 'Holding a lowrider\\'s windshield with one hand'),", "Anim(788  , 'LOWRIDER'     , 'lrgirl_l4_loop'        , 140 , 2.33  , 'Holding a lowrider\\'s windshield loop'),\nAnim(789  , 'LOWRIDER'     , 'lrgirl_l4_to_l5'       , 60  , 1.00  , 'Holding a lowrider\\'s windshield with one hand'),\nAnim(790  , 'LOWRIDER'     , 'lrgirl_l5_bnce'        , 50  , 0.83  , 'Bounching while holding a lowrider\\'s windshield with one hand'),\nAnim(791  , 'LOWRIDER'     , 'lrgirl_l5_loop'        , 100 , 1.67  , 'Holding a lowrider\\'s windshield with one hand loop'),\nAnim(792  , 'LOWRIDER'     , 'M_smklean_loop'        , 300 , 5.00  , 'Smoking animation loop'),\nAnim(793  , 'LOWRIDER'     , 'M_smkstnd_loop'        , 320 , 5.33  , 'Smoking animation loop'),\nAnim(794  , 'LOWRIDER'     , 'prtial_gngtlkB'        , 88  , 1.47  , 'Lowrider gang talk'),\nAnim(795  , 'LOWRIDER'     , 'prtial_gngtlkC'        , 90  , 1.50  , 'Lowrider gang talk'),\nAnim(796  , 'LOWRIDER'     , 'prtial_gngtlkD'        , 148 , 2.47  , 'Lowrider gang talk'),\nAnim(797  , 'LOWRIDER'     , 'prtial_gngtlkE'        , 180 , 3.00  , 'Lowrider gang talk'),", "Anim(796  , 'LOWRIDER'     , 'prtial_gngtlkD'        , 148 , 2.47  , 'Lowrider gang talk'),\nAnim(797  , 'LOWRIDER'     , 'prtial_gngtlkE'        , 180 , 3.00  , 'Lowrider gang talk'),\nAnim(798  , 'LOWRIDER'     , 'prtial_gngtlkF'        , 160 , 2.67  , 'Lowrider gang talk'),\nAnim(799  , 'LOWRIDER'     , 'prtial_gngtlkG'        , 160 , 2.67  , 'Lowrider gang talk'),\nAnim(800  , 'LOWRIDER'     , 'prtial_gngtlkH'        , 200 , 3.33  , 'Lowrider gang talk'),\nAnim(801  , 'LOWRIDER'     , 'RAP_A_Loop'            , 160 , 2.67  , 'Lowrider rapping'),\nAnim(802  , 'LOWRIDER'     , 'RAP_B_Loop'            , 160 , 2.67  , 'Lowrider rapping'),\nAnim(803  , 'LOWRIDER'     , 'RAP_C_Loop'            , 180 , 3.00  , 'Lowrider rapping'),\nAnim(804  , 'LOWRIDER'     , 'Sit_relaxed'           , 2   , 0.03  , 'Relaxing while sitting in car'),\nAnim(805  , 'LOWRIDER'     , 'Tap_hand'              , 20  , 0.33  , 'Tapping hand on the window of a car'),", "Anim(804  , 'LOWRIDER'     , 'Sit_relaxed'           , 2   , 0.03  , 'Relaxing while sitting in car'),\nAnim(805  , 'LOWRIDER'     , 'Tap_hand'              , 20  , 0.33  , 'Tapping hand on the window of a car'),\nAnim(806  , 'MD_CHASE'     , 'Carhit_Hangon'         , 92  , 1.53  , 'Cop hanging on a windshield'),\nAnim(807  , 'MD_CHASE'     , 'Carhit_Tumble'         , 122 , 2.03  , 'Cop hanging on a windshield'),\nAnim(808  , 'MD_CHASE'     , 'donutdrop'             , 90  , 1.50  , 'Blank animation'),\nAnim(809  , 'MD_CHASE'     , 'Fen_Choppa_L1'         , 86  , 1.43  , 'Blank animation'),\nAnim(810  , 'MD_CHASE'     , 'Fen_Choppa_L2'         , 78  , 1.30  , 'Blank animation'),\nAnim(811  , 'MD_CHASE'     , 'Fen_Choppa_L3'         , 78  , 1.30  , 'Blank animation'),\nAnim(812  , 'MD_CHASE'     , 'Fen_Choppa_R1'         , 78  , 1.30  , 'Blank animation'),\nAnim(813  , 'MD_CHASE'     , 'Fen_Choppa_R2'         , 78  , 1.30  , 'Blank animation'),", "Anim(812  , 'MD_CHASE'     , 'Fen_Choppa_R1'         , 78  , 1.30  , 'Blank animation'),\nAnim(813  , 'MD_CHASE'     , 'Fen_Choppa_R2'         , 78  , 1.30  , 'Blank animation'),\nAnim(814  , 'MD_CHASE'     , 'Fen_Choppa_R3'         , 78  , 1.30  , 'Blank animation'),\nAnim(815  , 'MD_CHASE'     , 'Hangon_Stun_loop'      , 280 , 4.67  , 'Stunned while hanging on a windshield'),\nAnim(816  , 'MD_CHASE'     , 'Hangon_Stun_Turn'      , 240 , 4.00  , 'Turning while hanging on a windshield'),\nAnim(817  , 'MD_CHASE'     , 'MD_BIKE_2_HANG'        , 82  , 1.37  , 'Tumbling and hanging on a car\\'s bumper'),\nAnim(818  , 'MD_CHASE'     , 'MD_BIKE_Jmp_BL'        , 66  , 1.10  , 'Jumping from a bike onto a car from the left'),\nAnim(819  , 'MD_CHASE'     , 'MD_BIKE_Jmp_F'         , 60  , 1.00  , 'Jumping from a bike onto a car from the right'),\nAnim(820  , 'MD_CHASE'     , 'MD_BIKE_Lnd_BL'        , 54  , 0.90  , 'Landing on top of a car from the left'),\nAnim(821  , 'MD_CHASE'     , 'MD_BIKE_Lnd_Die_BL'    , 92  , 1.53  , 'Dying on top of a car from the left'),", "Anim(820  , 'MD_CHASE'     , 'MD_BIKE_Lnd_BL'        , 54  , 0.90  , 'Landing on top of a car from the left'),\nAnim(821  , 'MD_CHASE'     , 'MD_BIKE_Lnd_Die_BL'    , 92  , 1.53  , 'Dying on top of a car from the left'),\nAnim(822  , 'MD_CHASE'     , 'MD_BIKE_Lnd_Die_F'     , 48  , 0.80  , 'Dying on top of a car from the right'),\nAnim(823  , 'MD_CHASE'     , 'MD_BIKE_Lnd_F'         , 70  , 1.17  , 'Landing on top of a car from the right'),\nAnim(824  , 'MD_CHASE'     , 'MD_BIKE_Lnd_Roll'      , 162 , 2.70  , 'Rolling into traffic from the left'),\nAnim(825  , 'MD_CHASE'     , 'MD_BIKE_Lnd_Roll_F'    , 62  , 1.03  , 'Rolling into traffic from the right'),\nAnim(826  , 'MD_CHASE'     , 'MD_BIKE_Punch'         , 110 , 1.83  , 'Punching the player while on the roof'),\nAnim(827  , 'MD_CHASE'     , 'MD_BIKE_Punch_F'       , 110 , 1.83  , 'Punching the player while on the roof'),\nAnim(828  , 'MD_CHASE'     , 'MD_BIKE_Shot_F'        , 80  , 1.33  , 'Getting shot off a car\\'s roof'),\nAnim(829  , 'MD_CHASE'     , 'MD_HANG_Lnd_Roll'      , 162 , 2.70  , 'Rolling into traffic death animation'),", "Anim(828  , 'MD_CHASE'     , 'MD_BIKE_Shot_F'        , 80  , 1.33  , 'Getting shot off a car\\'s roof'),\nAnim(829  , 'MD_CHASE'     , 'MD_HANG_Lnd_Roll'      , 162 , 2.70  , 'Rolling into traffic death animation'),\nAnim(830  , 'MD_CHASE'     , 'MD_HANG_Loop'          , 60  , 1.00  , 'Hanging at the back of a car loop'),\nAnim(831  , 'MD_END'       , 'END_SC1_PLY'           , 300 , 5.00  , 'CJ\\'s relief animation'),\nAnim(832  , 'MD_END'       , 'END_SC1_RYD'           , 300 , 5.00  , 'Ryder\\'s relief animation'),\nAnim(833  , 'MD_END'       , 'END_SC1_SMO'           , 300 , 5.00  , 'Big Smoke\\'s relief animation'),\nAnim(834  , 'MD_END'       , 'END_SC1_SWE'           , 300 , 5.00  , 'Sweet\\'s relief animation'),\nAnim(835  , 'MD_END'       , 'END_SC2_PLY'           , 540 , 9.00  , 'CJ\\'s end animation'),\nAnim(836  , 'MD_END'       , 'END_SC2_RYD'           , 540 , 9.00  , 'Ryder\\'s end animation'),\nAnim(837  , 'MD_END'       , 'END_SC2_SMO'           , 540 , 9.00  , 'Big Smoke\\'s end animation'),", "Anim(836  , 'MD_END'       , 'END_SC2_RYD'           , 540 , 9.00  , 'Ryder\\'s end animation'),\nAnim(837  , 'MD_END'       , 'END_SC2_SMO'           , 540 , 9.00  , 'Big Smoke\\'s end animation'),\nAnim(838  , 'MD_END'       , 'END_SC2_SWE'           , 540 , 9.00  , 'Sweet\\'s end animation'),\nAnim(839  , 'MEDIC'        , 'CPR'                   , 500 , 8.33  , 'Medic performing CPR'),\nAnim(840  , 'MISC'         , 'bitchslap'             , 70  , 1.17  , 'Bitch slapping animation'),\nAnim(841  , 'MISC'         , 'BMX_celebrate'         , 94  , 1.57  , 'BMX celebrate animation'),\nAnim(842  , 'MISC'         , 'BMX_comeon'            , 46  , 0.77  , 'Signalling to come on on BMX'),\nAnim(843  , 'MISC'         , 'bmx_idleloop_01'       , 200 , 3.33  , 'BMX idle'),\nAnim(844  , 'MISC'         , 'bmx_idleloop_02'       , 400 , 6.67  , 'BMX idle'),\nAnim(845  , 'MISC'         , 'bmx_talkleft_in'       , 40  , 0.67  , 'BMX talk'),", "Anim(844  , 'MISC'         , 'bmx_idleloop_02'       , 400 , 6.67  , 'BMX idle'),\nAnim(845  , 'MISC'         , 'bmx_talkleft_in'       , 40  , 0.67  , 'BMX talk'),\nAnim(846  , 'MISC'         , 'bmx_talkleft_loop'     , 400 , 6.67  , 'BMX talking loop'),\nAnim(847  , 'MISC'         , 'bmx_talkleft_out'      , 40  , 0.67  , 'BMX talk end'),\nAnim(848  , 'MISC'         , 'bmx_talkright_in'      , 40  , 0.67  , 'BMX talk'),\nAnim(849  , 'MISC'         , 'bmx_talkright_loop'    , 440 , 7.33  , 'BMX talking loop'),\nAnim(850  , 'MISC'         , 'bmx_talkright_out'     , 40  , 0.67  , 'BMX talk end'),\nAnim(851  , 'MISC'         , 'bng_wndw'              , 440 , 7.33  , 'Banging on a window'),\nAnim(852  , 'MISC'         , 'bng_wndw_02'           , 440 , 7.33  , 'Talking through a window'),\nAnim(853  , 'MISC'         , 'Case_pickup'           , 60  , 1.00  , 'Picking up a case'),", "Anim(852  , 'MISC'         , 'bng_wndw_02'           , 440 , 7.33  , 'Talking through a window'),\nAnim(853  , 'MISC'         , 'Case_pickup'           , 60  , 1.00  , 'Picking up a case'),\nAnim(854  , 'MISC'         , 'door_jet'              , 320 , 5.33  , 'Blank animation'),\nAnim(855  , 'MISC'         , 'GRAB_L'                , 24  , 0.40  , 'Grabbing from the left'),\nAnim(856  , 'MISC'         , 'GRAB_R'                , 24  , 0.40  , 'Grabbing from the right'),\nAnim(857  , 'MISC'         , 'Hiker_Pose'            , 20  , 0.33  , 'Signalling for a taxi from the right'),\nAnim(858  , 'MISC'         , 'Hiker_Pose_L'          , 20  , 0.33  , 'Signalling for a taxi from the left'),\nAnim(859  , 'MISC'         , 'Idle_Chat_02'          , 434 , 7.23  , 'Idle chat'),\nAnim(860  , 'MISC'         , 'KAT_Throw_K'           , 200 , 3.33  , 'Throwing a katana and challenging to a fight'),\nAnim(861  , 'MISC'         , 'KAT_Throw_O'           , 200 , 3.33  , 'Blank animation'),", "Anim(860  , 'MISC'         , 'KAT_Throw_K'           , 200 , 3.33  , 'Throwing a katana and challenging to a fight'),\nAnim(861  , 'MISC'         , 'KAT_Throw_O'           , 200 , 3.33  , 'Blank animation'),\nAnim(862  , 'MISC'         , 'KAT_Throw_P'           , 200 , 3.33  , 'Getting a katana and preparing for a fight'),\nAnim(863  , 'MISC'         , 'PASS_Rifle_O'          , 80  , 1.33  , 'Blank animation'),\nAnim(864  , 'MISC'         , 'PASS_Rifle_Ped'        , 80  , 1.33  , 'Passing a rifle'),\nAnim(865  , 'MISC'         , 'PASS_Rifle_Ply'        , 80  , 1.33  , 'Receiving a rifle'),\nAnim(866  , 'MISC'         , 'pickup_box'            , 24  , 0.40  , 'Picking up a box'),\nAnim(867  , 'MISC'         , 'Plane_door'            , 320 , 5.33  , 'Blank animation'),\nAnim(868  , 'MISC'         , 'Plane_exit'            , 320 , 5.33  , 'CJ\\'s plane exit animation'),\nAnim(869  , 'MISC'         , 'Plane_hijack'          , 320 , 5.33  , 'Hijacking a plane'),", "Anim(868  , 'MISC'         , 'Plane_exit'            , 320 , 5.33  , 'CJ\\'s plane exit animation'),\nAnim(869  , 'MISC'         , 'Plane_hijack'          , 320 , 5.33  , 'Hijacking a plane'),\nAnim(870  , 'MISC'         , 'Plunger_01'            , 200 , 3.33  , 'Detonating a bomb with a plunger'),\nAnim(871  , 'MISC'         , 'Plyrlean_loop'         , 160 , 2.67  , 'Leaning loop'),\nAnim(872  , 'MISC'         , 'plyr_shkhead'          , 100 , 1.67  , 'Facepalm animation'),\nAnim(873  , 'MISC'         , 'Run_Dive'              , 496 , 8.27  , 'Ryder\\'s diving animation'),\nAnim(874  , 'MISC'         , 'Scratchballs_01'       , 500 , 8.33  , 'Scratching crotch'),\nAnim(875  , 'MISC'         , 'SEAT_LR'               , 220 , 3.67  , 'Sitting and looking back'),\nAnim(876  , 'MISC'         , 'Seat_talk_01'          , 220 , 3.67  , 'Talking while sitting down'),\nAnim(877  , 'MISC'         , 'Seat_talk_02'          , 200 , 3.33  , 'Talking while sitting down'),", "Anim(876  , 'MISC'         , 'Seat_talk_01'          , 220 , 3.67  , 'Talking while sitting down'),\nAnim(877  , 'MISC'         , 'Seat_talk_02'          , 200 , 3.33  , 'Talking while sitting down'),\nAnim(878  , 'MISC'         , 'SEAT_watch'            , 140 , 2.33  , 'Checking watch while sitting down'),\nAnim(879  , 'MISC'         , 'smalplane_door'        , 380 , 6.33  , 'Blank animation'),\nAnim(880  , 'MISC'         , 'smlplane_door'         , 320 , 5.33  , 'Blank animation'),\nAnim(881  , 'MTB'          , 'MTB_back'              , 6   , 0.10  , 'mtn, mountain, bike, bicycle'),\nAnim(882  , 'MTB'          , 'MTB_bunnyhop'          , 20  , 0.33  , 'Muntain bike bunny hop'),\nAnim(883  , 'MTB'          , 'MTB_drivebyFT'         , 12  , 0.20  , 'Mountain bike drive by front'),\nAnim(884  , 'MTB'          , 'MTB_driveby_LHS'       , 12  , 0.20  , 'Mountain bike drive by left'),\nAnim(885  , 'MTB'          , 'MTB_driveby_RHS'       , 12  , 0.20  , 'Mountain bike drive by right'),", "Anim(884  , 'MTB'          , 'MTB_driveby_LHS'       , 12  , 0.20  , 'Mountain bike drive by left'),\nAnim(885  , 'MTB'          , 'MTB_driveby_RHS'       , 12  , 0.20  , 'Mountain bike drive by right'),\nAnim(886  , 'MTB'          , 'MTB_fwd'               , 12  , 0.20  , 'Mountain bike lean front'),\nAnim(887  , 'MTB'          , 'MTB_getoffBACK'        , 92  , 1.53  , 'Bailing from a Mountain bike at high speed'),\nAnim(888  , 'MTB'          , 'MTB_getoffLHS'         , 44  , 0.73  , 'Getting off a Mountain bike from the left'),\nAnim(889  , 'MTB'          , 'MTB_getoffRHS'         , 44  , 0.73  , 'Getting off a Mountain bike from the right'),\nAnim(890  , 'MTB'          , 'MTB_jumponL'           , 48  , 0.80  , 'Getting on a Mountain bike from the left'),\nAnim(891  , 'MTB'          , 'MTB_jumponR'           , 50  , 0.83  , 'Getting on a Mountain bike from the right'),\nAnim(892  , 'MTB'          , 'MTB_Left'              , 8   , 0.13  , 'Mountain bike sway left'),\nAnim(893  , 'MTB'          , 'MTB_pedal'             , 40  , 0.67  , 'Mountain bike pedal'),", "Anim(892  , 'MTB'          , 'MTB_Left'              , 8   , 0.13  , 'Mountain bike sway left'),\nAnim(893  , 'MTB'          , 'MTB_pedal'             , 40  , 0.67  , 'Mountain bike pedal'),\nAnim(894  , 'MTB'          , 'MTB_pushes'            , 48  , 0.80  , 'Mountain bike reverse'),\nAnim(895  , 'MTB'          , 'MTB_Ride'              , 2   , 0.03  , 'Mountain bike riding'),\nAnim(896  , 'MTB'          , 'MTB_Right'             , 8   , 0.13  , 'Mountain bike sway right'),\nAnim(897  , 'MTB'          , 'MTB_sprint'            , 48  , 0.80  , 'Mountain bike sprint'),\nAnim(898  , 'MTB'          , 'MTB_still'             , 2   , 0.03  , 'Mountain bike still riding'),\nAnim(899  , 'MUSCULAR'     , 'MscleWalkst_armed'     , 12  , 0.20  , 'Muscle CJ walk start with a weapon'),\nAnim(900  , 'MUSCULAR'     , 'MscleWalkst_Csaw'      , 12  , 0.20  , 'Muscle CJ walk start with a chainsaw'),\nAnim(901  , 'MUSCULAR'     , 'Mscle_rckt_run'        , 48  , 0.80  , 'Muscle CJ rocket run'),", "Anim(900  , 'MUSCULAR'     , 'MscleWalkst_Csaw'      , 12  , 0.20  , 'Muscle CJ walk start with a chainsaw'),\nAnim(901  , 'MUSCULAR'     , 'Mscle_rckt_run'        , 48  , 0.80  , 'Muscle CJ rocket run'),\nAnim(902  , 'MUSCULAR'     , 'Mscle_rckt_walkst'     , 12  , 0.20  , 'Muscle CJ rocket walk start'),\nAnim(903  , 'MUSCULAR'     , 'Mscle_run_Csaw'        , 48  , 0.80  , 'Muscle CJ run with a chainsaw'),\nAnim(904  , 'MUSCULAR'     , 'MuscleIdle'            , 90  , 1.50  , 'Muscle CJ idle'),\nAnim(905  , 'MUSCULAR'     , 'MuscleIdle_armed'      , 90  , 1.50  , 'Muscle CJ idle with a weapon'),\nAnim(906  , 'MUSCULAR'     , 'MuscleIdle_Csaw'       , 90  , 1.50  , 'Muscle CJ idle with a chainsaw'),\nAnim(907  , 'MUSCULAR'     , 'MuscleIdle_rocket'     , 90  , 1.50  , 'Muscle CJ idle with a rocket launcher'),\nAnim(908  , 'MUSCULAR'     , 'MuscleRun'             , 48  , 0.80  , 'Muscle CJ run'),\nAnim(909  , 'MUSCULAR'     , 'MuscleRun_armed'       , 48  , 0.80  , 'Muscle CJ run with a weapon'),", "Anim(908  , 'MUSCULAR'     , 'MuscleRun'             , 48  , 0.80  , 'Muscle CJ run'),\nAnim(909  , 'MUSCULAR'     , 'MuscleRun_armed'       , 48  , 0.80  , 'Muscle CJ run with a weapon'),\nAnim(910  , 'MUSCULAR'     , 'MuscleSprint'          , 34  , 0.57  , 'Muscle CJ sprint'),\nAnim(911  , 'MUSCULAR'     , 'MuscleWalk'            , 64  , 1.07  , 'Muscle CJ walk'),\nAnim(912  , 'MUSCULAR'     , 'MuscleWalkstart'       , 16  , 0.27  , 'Muscle CJ start walk'),\nAnim(913  , 'MUSCULAR'     , 'MuscleWalk_armed'      , 64  , 1.07  , 'Muscle CJ walk with a weapon'),\nAnim(914  , 'MUSCULAR'     , 'Musclewalk_Csaw'       , 64  , 1.07  , 'Muscle CJ walk with a chainsaw'),\nAnim(915  , 'MUSCULAR'     , 'Musclewalk_rocket'     , 64  , 1.07  , 'Muscle CJ walk with a rocket launcher'),\nAnim(916  , 'NEVADA'       , 'NEVADA_getin'          , 112 , 1.87  , 'Getting into a Nevada plane anim'),\nAnim(917  , 'NEVADA'       , 'NEVADA_getout'         , 56  , 0.93  , 'Getting out of a Nevada plane anim'),", "Anim(916  , 'NEVADA'       , 'NEVADA_getin'          , 112 , 1.87  , 'Getting into a Nevada plane anim'),\nAnim(917  , 'NEVADA'       , 'NEVADA_getout'         , 56  , 0.93  , 'Getting out of a Nevada plane anim'),\nAnim(918  , 'ON_LOOKERS'   , 'lkaround_in'           , 20  , 0.33  , 'Looking around animation'),\nAnim(919  , 'ON_LOOKERS'   , 'lkaround_loop'         , 420 , 7.00  , 'Looking around loop'),\nAnim(920  , 'ON_LOOKERS'   , 'lkaround_out'          , 20  , 0.33  , 'End of looking around animation'),\nAnim(921  , 'ON_LOOKERS'   , 'lkup_in'               , 100 , 1.67  , 'Looking up animation'),\nAnim(922  , 'ON_LOOKERS'   , 'lkup_loop'             , 320 , 5.33  , 'Looking up loop'),\nAnim(923  , 'ON_LOOKERS'   , 'lkup_out'              , 60  , 1.00  , 'End of looking up animation'),\nAnim(924  , 'ON_LOOKERS'   , 'lkup_point'            , 200 , 3.33  , 'Looking and pointing up'),\nAnim(925  , 'ON_LOOKERS'   , 'panic_cower'           , 400 , 6.67  , 'Cowering in fear'),", "Anim(924  , 'ON_LOOKERS'   , 'lkup_point'            , 200 , 3.33  , 'Looking and pointing up'),\nAnim(925  , 'ON_LOOKERS'   , 'panic_cower'           , 400 , 6.67  , 'Cowering in fear'),\nAnim(926  , 'ON_LOOKERS'   , 'panic_hide'            , 380 , 6.33  , 'Panicking and hiding'),\nAnim(927  , 'ON_LOOKERS'   , 'panic_in'              , 50  , 0.83  , 'Start of panicking animation'),\nAnim(928  , 'ON_LOOKERS'   , 'panic_loop'            , 100 , 1.67  , 'Panicking loop'),\nAnim(929  , 'ON_LOOKERS'   , 'panic_out'             , 40  , 0.67  , 'End of panicking animation'),\nAnim(930  , 'ON_LOOKERS'   , 'panic_point'           , 360 , 6.00  , 'Pointing forward while panicking'),\nAnim(931  , 'ON_LOOKERS'   , 'panic_shout'           , 520 , 8.67  , 'Shouting while panicking'),\nAnim(932  , 'ON_LOOKERS'   , 'Pointup_in'            , 60  , 1.00  , 'Start of pointing animation'),\nAnim(933  , 'ON_LOOKERS'   , 'Pointup_loop'          , 160 , 2.67  , 'Pointing up animation loop'),", "Anim(932  , 'ON_LOOKERS'   , 'Pointup_in'            , 60  , 1.00  , 'Start of pointing animation'),\nAnim(933  , 'ON_LOOKERS'   , 'Pointup_loop'          , 160 , 2.67  , 'Pointing up animation loop'),\nAnim(934  , 'ON_LOOKERS'   , 'Pointup_out'           , 60  , 1.00  , 'End of pointing animation'),\nAnim(935  , 'ON_LOOKERS'   , 'Pointup_shout'         , 180 , 3.00  , 'Shouting while looking up'),\nAnim(936  , 'ON_LOOKERS'   , 'point_in'              , 30  , 0.50  , 'Start of pointing animation'),\nAnim(937  , 'ON_LOOKERS'   , 'point_loop'            , 180 , 3.00  , 'Pointing forward loop'),\nAnim(938  , 'ON_LOOKERS'   , 'point_out'             , 20  , 0.33  , 'End of pointing animation'),\nAnim(939  , 'ON_LOOKERS'   , 'shout_01'              , 160 , 2.67  , 'Cheering animation'),\nAnim(940  , 'ON_LOOKERS'   , 'shout_02'              , 240 , 4.00  , 'Cheering animation'),\nAnim(941  , 'ON_LOOKERS'   , 'shout_in'              , 100 , 1.67  , 'Start of shouting animation'),", "Anim(940  , 'ON_LOOKERS'   , 'shout_02'              , 240 , 4.00  , 'Cheering animation'),\nAnim(941  , 'ON_LOOKERS'   , 'shout_in'              , 100 , 1.67  , 'Start of shouting animation'),\nAnim(942  , 'ON_LOOKERS'   , 'shout_loop'            , 120 , 2.00  , 'Shouting loop'),\nAnim(943  , 'ON_LOOKERS'   , 'shout_out'             , 20  , 0.33  , 'End of shouting animation'),\nAnim(944  , 'ON_LOOKERS'   , 'wave_in'               , 50  , 0.83  , 'Start of wave animation'),\nAnim(945  , 'ON_LOOKERS'   , 'wave_loop'             , 90  , 1.50  , 'Waving loop'),\nAnim(946  , 'ON_LOOKERS'   , 'wave_out'              , 50  , 0.83  , 'End of wave animation'),\nAnim(947  , 'OTB'          , 'betslp_in'             , 80  , 1.33  , 'Start of writing on table animation'),\nAnim(948  , 'OTB'          , 'betslp_lkabt'          , 160 , 2.67  , 'Writing on a table'),\nAnim(949  , 'OTB'          , 'betslp_loop'           , 160 , 2.67  , 'Writing on a table'),", "Anim(948  , 'OTB'          , 'betslp_lkabt'          , 160 , 2.67  , 'Writing on a table'),\nAnim(949  , 'OTB'          , 'betslp_loop'           , 160 , 2.67  , 'Writing on a table'),\nAnim(950  , 'OTB'          , 'betslp_out'            , 60  , 1.00  , 'End of writing on table animation'),\nAnim(951  , 'OTB'          , 'betslp_tnk'            , 336 , 5.60  , 'Writing on a table and thinking'),\nAnim(952  , 'OTB'          , 'wtchrace_cmon'         , 300 , 5.00  , 'Watching a horse race while cheering'),\nAnim(953  , 'OTB'          , 'wtchrace_in'           , 100 , 1.67  , 'Start of watching a horse race animation'),\nAnim(954  , 'OTB'          , 'wtchrace_loop'         , 160 , 2.67  , 'Watching a horse race loop'),\nAnim(955  , 'OTB'          , 'wtchrace_lose'         , 240 , 4.00  , 'Losing at a horse race bet'),\nAnim(956  , 'OTB'          , 'wtchrace_out'          , 60  , 1.00  , 'End of watching a horse race animation'),\nAnim(957  , 'OTB'          , 'wtchrace_win'          , 260 , 4.33  , 'Winning a horse race bet'),", "Anim(956  , 'OTB'          , 'wtchrace_out'          , 60  , 1.00  , 'End of watching a horse race animation'),\nAnim(957  , 'OTB'          , 'wtchrace_win'          , 260 , 4.33  , 'Winning a horse race bet'),\nAnim(958  , 'PARACHUTE'    , 'FALL_skyDive'          , 80  , 1.33  , 'Skydiving aniamtion'),\nAnim(959  , 'PARACHUTE'    , 'FALL_SkyDive_Accel'    , 80  , 1.33  , 'Skydiving acceleration'),\nAnim(960  , 'PARACHUTE'    , 'FALL_skyDive_DIE'      , 60  , 1.00  , 'Skydiving fall death animation'),\nAnim(961  , 'PARACHUTE'    , 'FALL_SkyDive_L'        , 80  , 1.33  , 'Skydiving sway left'),\nAnim(962  , 'PARACHUTE'    , 'FALL_SkyDive_R'        , 80  , 1.33  , 'Skydiving sway right'),\nAnim(963  , 'PARACHUTE'    , 'PARA_decel'            , 120 , 2.00  , 'Parachute gliding with knees up'),\nAnim(964  , 'PARACHUTE'    , 'PARA_decel_O'          , 120 , 2.00  , 'Turn yourself into a buggy mess'),\nAnim(965  , 'PARACHUTE'    , 'PARA_float'            , 120 , 2.00  , 'Parachute gliding with knees down'),", "Anim(964  , 'PARACHUTE'    , 'PARA_decel_O'          , 120 , 2.00  , 'Turn yourself into a buggy mess'),\nAnim(965  , 'PARACHUTE'    , 'PARA_float'            , 120 , 2.00  , 'Parachute gliding with knees down'),\nAnim(966  , 'PARACHUTE'    , 'PARA_float_O'          , 120 , 2.00  , 'Turn yourself into a buggy mess'),\nAnim(967  , 'PARACHUTE'    , 'PARA_Land'             , 100 , 1.67  , 'Landing with a parchute'),\nAnim(968  , 'PARACHUTE'    , 'PARA_Land_O'           , 130 , 2.17  , 'Turn yourself into a buggy mess'),\nAnim(969  , 'PARACHUTE'    , 'PARA_Land_Water'       , 140 , 2.33  , 'Landing with a parachute in water'),\nAnim(970  , 'PARACHUTE'    , 'PARA_Land_Water_O'     , 130 , 2.17  , 'Turn yourself into a buggy mess'),\nAnim(971  , 'PARACHUTE'    , 'PARA_open'             , 170 , 2.83  , 'Opening parachute animation'),\nAnim(972  , 'PARACHUTE'    , 'PARA_open_O'           , 140 , 2.33  , 'Turn yourself into a buggy mess'),\nAnim(973  , 'PARACHUTE'    , 'PARA_Rip_Land_O'       , 54  , 0.90  , 'Turn yourself into a buggy mess'),", "Anim(972  , 'PARACHUTE'    , 'PARA_open_O'           , 140 , 2.33  , 'Turn yourself into a buggy mess'),\nAnim(973  , 'PARACHUTE'    , 'PARA_Rip_Land_O'       , 54  , 0.90  , 'Turn yourself into a buggy mess'),\nAnim(974  , 'PARACHUTE'    , 'PARA_Rip_Loop_O'       , 60  , 1.00  , 'Turn yourself into a buggy mess'),\nAnim(975  , 'PARACHUTE'    , 'PARA_Rip_O'            , 14  , 0.23  , 'Turn yourself into a buggy mess'),\nAnim(976  , 'PARACHUTE'    , 'PARA_steerL'           , 120 , 2.00  , 'Parachute steer left'),\nAnim(977  , 'PARACHUTE'    , 'PARA_steerL_O'         , 120 , 2.00  , 'Turn yourself into a buggy mess'),\nAnim(978  , 'PARACHUTE'    , 'PARA_steerR'           , 120 , 2.00  , 'Parachute steer right'),\nAnim(979  , 'PARACHUTE'    , 'PARA_steerR_O'         , 120 , 2.00  , 'Turn yourself into a buggy mess'),\nAnim(980  , 'PARK'         , 'Tai_Chi_in'            , 130 , 2.17  , 'Starting tai-chi'),\nAnim(981  , 'PARK'         , 'Tai_Chi_Loop'          , 720 , 12.00 , 'Tai-chi loop'),", "Anim(980  , 'PARK'         , 'Tai_Chi_in'            , 130 , 2.17  , 'Starting tai-chi'),\nAnim(981  , 'PARK'         , 'Tai_Chi_Loop'          , 720 , 12.00 , 'Tai-chi loop'),\nAnim(982  , 'PARK'         , 'Tai_Chi_Out'           , 50  , 0.83  , 'Finishing tai-chi'),\nAnim(983  , 'PAULNMAC'     , 'Piss_in'               , 540 , 9.00  , 'Pissing animation start'),\nAnim(984  , 'PAULNMAC'     , 'Piss_loop'             , 400 , 6.67  , 'Pissing loop'),\nAnim(985  , 'PAULNMAC'     , 'Piss_out'              , 660 , 11.00 , 'Finish pissing animation'),\nAnim(986  , 'PAULNMAC'     , 'PnM_Argue1_A'          , 260 , 4.33  , 'Paul and Maccer arguing'),\nAnim(987  , 'PAULNMAC'     , 'PnM_Argue1_B'          , 260 , 4.33  , 'Paul and Maccer arguing'),\nAnim(988  , 'PAULNMAC'     , 'PnM_Argue2_A'          , 260 , 4.33  , 'Paul and Maccer arguing'),\nAnim(989  , 'PAULNMAC'     , 'PnM_Argue2_B'          , 260 , 4.33  , 'Paul and Maccer arguing'),", "Anim(988  , 'PAULNMAC'     , 'PnM_Argue2_A'          , 260 , 4.33  , 'Paul and Maccer arguing'),\nAnim(989  , 'PAULNMAC'     , 'PnM_Argue2_B'          , 260 , 4.33  , 'Paul and Maccer arguing'),\nAnim(990  , 'PAULNMAC'     , 'PnM_Loop_A'            , 320 , 5.33  , 'Paul and Maccer loop animation'),\nAnim(991  , 'PAULNMAC'     , 'PnM_Loop_B'            , 320 , 5.33  , 'Paul and Maccer loop animation'),\nAnim(992  , 'PAULNMAC'     , 'wank_in'               , 440 , 7.33  , 'Maccer touching himself'),\nAnim(993  , 'PAULNMAC'     , 'wank_loop'             , 160 , 2.67  , 'Maccer wanking loop'),\nAnim(994  , 'PAULNMAC'     , 'wank_out'              , 700 , 11.67 , 'Maccer finishing up'),\nAnim(995  , 'ped'          , 'abseil'                , 2   , 0.03  , 'Abseiling down a rope'),\nAnim(996  , 'ped'          , 'ARRESTgun'             , 40  , 0.67  , 'Arresting with a gun animation'),\nAnim(997  , 'ped'          , 'ATM'                   , 730 , 12.17 , 'Using an ATM'),", "Anim(996  , 'ped'          , 'ARRESTgun'             , 40  , 0.67  , 'Arresting with a gun animation'),\nAnim(997  , 'ped'          , 'ATM'                   , 730 , 12.17 , 'Using an ATM'),\nAnim(998  , 'ped'          , 'BIKE_elbowL'           , 58  , 0.97  , 'Bike elbow left'),\nAnim(999  , 'ped'          , 'BIKE_elbowR'           , 58  , 0.97  , 'Bike elbow right'),\nAnim(1000 , 'ped'          , 'BIKE_fallR'            , 98  , 1.63  , 'Falling off a bike'),\nAnim(1001 , 'ped'          , 'BIKE_fall_off'         , 64  , 1.07  , 'Falling off a bike'),\nAnim(1002 , 'ped'          , 'BIKE_pickupL'          , 64  , 1.07  , 'Picking up a bike from the left'),\nAnim(1003 , 'ped'          , 'BIKE_pickupR'          , 64  , 1.07  , 'Picking up a bike from the right'),\nAnim(1004 , 'ped'          , 'BIKE_pullupL'          , 60  , 1.00  , 'Pulling a bike from the left'),\nAnim(1005 , 'ped'          , 'BIKE_pullupR'          , 60  , 1.00  , 'Pulling a bike from the right'),", "Anim(1004 , 'ped'          , 'BIKE_pullupL'          , 60  , 1.00  , 'Pulling a bike from the left'),\nAnim(1005 , 'ped'          , 'BIKE_pullupR'          , 60  , 1.00  , 'Pulling a bike from the right'),\nAnim(1006 , 'ped'          , 'bomber'                , 36  , 0.60  , 'Bomber animation'),\nAnim(1007 , 'ped'          , 'CAR_alignHI_LHS'       , 44  , 0.73  , 'Jumping and aligning from the left'),\nAnim(1008 , 'ped'          , 'CAR_alignHI_RHS'       , 44  , 0.73  , 'Jumping and aligning from the right'),\nAnim(1009 , 'ped'          , 'CAR_align_LHS'         , 8   , 0.13  , 'Aligning to car on the left'),\nAnim(1010 , 'ped'          , 'CAR_align_RHS'         , 8   , 0.13  , 'Aligning to car on the right'),\nAnim(1011 , 'ped'          , 'CAR_closedoorL_LHS'    , 36  , 0.60  , 'Closing a car\\'s door from the left'),\nAnim(1012 , 'ped'          , 'CAR_closedoorL_RHS'    , 24  , 0.40  , 'Closing a car\\'s door from the right'),\nAnim(1013 , 'ped'          , 'CAR_closedoor_LHS'     , 36  , 0.60  , 'Closing a car\\'s door from the left'),", "Anim(1012 , 'ped'          , 'CAR_closedoorL_RHS'    , 24  , 0.40  , 'Closing a car\\'s door from the right'),\nAnim(1013 , 'ped'          , 'CAR_closedoor_LHS'     , 36  , 0.60  , 'Closing a car\\'s door from the left'),\nAnim(1014 , 'ped'          , 'CAR_closedoor_RHS'     , 24  , 0.40  , 'Closing a car\\'s door from the right'),\nAnim(1015 , 'ped'          , 'CAR_close_LHS'         , 44  , 0.73  , 'Close car door on the left'),\nAnim(1016 , 'ped'          , 'CAR_close_RHS'         , 44  , 0.73  , 'Close car door on the right'),\nAnim(1017 , 'ped'          , 'CAR_crawloutRHS'       , 130 , 2.17  , 'Crawl outside of a flipped car'),\nAnim(1018 , 'ped'          , 'CAR_dead_LHS'          , 2   , 0.03  , 'Dead inside a car on the left'),\nAnim(1019 , 'ped'          , 'CAR_dead_RHS'          , 2   , 0.03  , 'Dead inside a car on the right'),\nAnim(1020 , 'ped'          , 'CAR_doorlocked_LHS'    , 80  , 1.33  , 'Car door locked on the left'),\nAnim(1021 , 'ped'          , 'CAR_doorlocked_RHS'    , 76  , 1.27  , 'Car door locked on the right'),", "Anim(1020 , 'ped'          , 'CAR_doorlocked_LHS'    , 80  , 1.33  , 'Car door locked on the left'),\nAnim(1021 , 'ped'          , 'CAR_doorlocked_RHS'    , 76  , 1.27  , 'Car door locked on the right'),\nAnim(1022 , 'ped'          , 'CAR_fallout_LHS'       , 34  , 0.57  , 'Bail from a car on the left'),\nAnim(1023 , 'ped'          , 'CAR_fallout_RHS'       , 34  , 0.57  , 'Bail from a car on the right'),\nAnim(1024 , 'ped'          , 'CAR_getinL_LHS'        , 60  , 1.00  , 'Get into a car from the left'),\nAnim(1025 , 'ped'          , 'CAR_getinL_RHS'        , 60  , 1.00  , 'Get into a car from the right'),\nAnim(1026 , 'ped'          , 'CAR_getin_LHS'         , 60  , 1.00  , 'Get into a car from the left'),\nAnim(1027 , 'ped'          , 'CAR_getin_RHS'         , 60  , 1.00  , 'Get into a car from the right'),\nAnim(1028 , 'ped'          , 'CAR_getoutL_LHS'       , 56  , 0.93  , 'Getting out of a car from the left'),\nAnim(1029 , 'ped'          , 'CAR_getoutL_RHS'       , 60  , 1.00  , 'Getting out of a car from the right'),", "Anim(1028 , 'ped'          , 'CAR_getoutL_LHS'       , 56  , 0.93  , 'Getting out of a car from the left'),\nAnim(1029 , 'ped'          , 'CAR_getoutL_RHS'       , 60  , 1.00  , 'Getting out of a car from the right'),\nAnim(1030 , 'ped'          , 'CAR_getout_LHS'        , 68  , 1.13  , 'Getting out of a car from the left'),\nAnim(1031 , 'ped'          , 'CAR_getout_RHS'        , 48  , 0.80  , 'Getting out of a car from the left'),\nAnim(1032 , 'ped'          , 'car_hookertalk'        , 258 , 4.30  , 'Hooker talk in car'),\nAnim(1033 , 'ped'          , 'CAR_jackedLHS'         , 174 , 2.90  , 'Jacking a car from the left'),\nAnim(1034 , 'ped'          , 'CAR_jackedRHS'         , 206 , 3.43  , 'Jacking a car from the right'),\nAnim(1035 , 'ped'          , 'CAR_jumpin_LHS'        , 60  , 1.00  , 'Jumping into a car from the left'),\nAnim(1036 , 'ped'          , 'CAR_LB'                , 14  , 0.23  , 'Car driveby on the left'),\nAnim(1037 , 'ped'          , 'CAR_LB_pro'            , 6   , 0.10  , 'Car driveby on the left'),", "Anim(1036 , 'ped'          , 'CAR_LB'                , 14  , 0.23  , 'Car driveby on the left'),\nAnim(1037 , 'ped'          , 'CAR_LB_pro'            , 6   , 0.10  , 'Car driveby on the left'),\nAnim(1038 , 'ped'          , 'CAR_LB_weak'           , 14  , 0.23  , 'Car driveby on the left'),\nAnim(1039 , 'ped'          , 'CAR_LjackedLHS'        , 214 , 3.57  , 'Getting jacked from the left'),\nAnim(1040 , 'ped'          , 'CAR_LjackedRHS'        , 208 , 3.47  , 'Getting jacked from the right'),\nAnim(1041 , 'ped'          , 'CAR_Lshuffle_RHS'      , 24  , 0.40  , 'Shuffling to the driver\\'s sit'),\nAnim(1042 , 'ped'          , 'CAR_Lsit'              , 2   , 0.03  , 'Sitting in a car'),\nAnim(1043 , 'ped'          , 'CAR_open_LHS'          , 66  , 1.10  , 'Opening door from the left'),\nAnim(1044 , 'ped'          , 'CAR_open_RHS'          , 66  , 1.10  , 'Opening door from the right'),\nAnim(1045 , 'ped'          , 'CAR_pulloutL_LHS'      , 176 , 2.93  , 'Pulling out a passanger from the left'),", "Anim(1044 , 'ped'          , 'CAR_open_RHS'          , 66  , 1.10  , 'Opening door from the right'),\nAnim(1045 , 'ped'          , 'CAR_pulloutL_LHS'      , 176 , 2.93  , 'Pulling out a passanger from the left'),\nAnim(1046 , 'ped'          , 'CAR_pulloutL_RHS'      , 176 , 2.93  , 'Pulling out the driver on the right'),\nAnim(1047 , 'ped'          , 'CAR_pullout_LHS'       , 138 , 2.30  , 'Pulling out a passanger from the left'),\nAnim(1048 , 'ped'          , 'CAR_pullout_RHS'       , 168 , 2.80  , 'Pulling out a passanger from the right'),\nAnim(1049 , 'ped'          , 'CAR_Qjacked'           , 198 , 3.30  , 'Getting jacked from the left'),\nAnim(1050 , 'ped'          , 'CAR_rolldoor'          , 36  , 0.60  , 'Closing car door animation'),\nAnim(1051 , 'ped'          , 'CAR_rolldoorLO'        , 36  , 0.60  , 'Closing car door animation'),\nAnim(1052 , 'ped'          , 'CAR_rollout_LHS'       , 98  , 1.63  , 'Bailing out of a car from the left'),\nAnim(1053 , 'ped'          , 'CAR_rollout_RHS'       , 76  , 1.27  , 'Bailing out of a car from the right'),", "Anim(1052 , 'ped'          , 'CAR_rollout_LHS'       , 98  , 1.63  , 'Bailing out of a car from the left'),\nAnim(1053 , 'ped'          , 'CAR_rollout_RHS'       , 76  , 1.27  , 'Bailing out of a car from the right'),\nAnim(1054 , 'ped'          , 'CAR_shuffle_RHS'       , 24  , 0.40  , 'Shuffling to the right side'),\nAnim(1055 , 'ped'          , 'CAR_sit'               , 2   , 0.03  , 'Sitting inside a car'),\nAnim(1056 , 'ped'          , 'CAR_sitp'              , 2   , 0.03  , 'Sitting inside a car'),\nAnim(1057 , 'ped'          , 'CAR_sitpLO'            , 2   , 0.03  , 'Sitting inside a car'),\nAnim(1058 , 'ped'          , 'CAR_sit_pro'           , 2   , 0.03  , 'Sitting inside a car'),\nAnim(1059 , 'ped'          , 'CAR_sit_weak'          , 2   , 0.03  , 'Sitting inside a car'),\nAnim(1060 , 'ped'          , 'CAR_tune_radio'        , 38  , 0.63  , 'Changing radio station in a car'),\nAnim(1061 , 'ped'          , 'CLIMB_idle'            , 48  , 0.80  , 'Hanging onto a wall idle'),", "Anim(1060 , 'ped'          , 'CAR_tune_radio'        , 38  , 0.63  , 'Changing radio station in a car'),\nAnim(1061 , 'ped'          , 'CLIMB_idle'            , 48  , 0.80  , 'Hanging onto a wall idle'),\nAnim(1062 , 'ped'          , 'CLIMB_jump'            , 34  , 0.57  , 'Jumping and hanging onto a wall'),\nAnim(1063 , 'ped'          , 'CLIMB_jump2fall'       , 2   , 0.03  , 'Letting go after hanging'),\nAnim(1064 , 'ped'          , 'CLIMB_jump_B'          , 58  , 0.97  , 'Vaulting over a wall'),\nAnim(1065 , 'ped'          , 'CLIMB_Pull'            , 52  , 0.87  , 'Pulling self over object'),\nAnim(1066 , 'ped'          , 'CLIMB_Stand'           , 48  , 0.80  , 'Standing after pulling'),\nAnim(1067 , 'ped'          , 'CLIMB_Stand_finish'    , 12  , 0.20  , 'Standing after pulling'),\nAnim(1068 , 'ped'          , 'cower'                 , 48  , 0.80  , 'Cowering in fear animation'),\nAnim(1069 , 'ped'          , 'Crouch_Roll_L'         , 56  , 0.93  , 'Left crouch roll'),", "Anim(1068 , 'ped'          , 'cower'                 , 48  , 0.80  , 'Cowering in fear animation'),\nAnim(1069 , 'ped'          , 'Crouch_Roll_L'         , 56  , 0.93  , 'Left crouch roll'),\nAnim(1070 , 'ped'          , 'Crouch_Roll_R'         , 56  , 0.93  , 'Right crouch roll'),\nAnim(1071 , 'ped'          , 'DAM_armL_frmBK'        , 50  , 0.83  , 'Getting shot in the left arm'),\nAnim(1072 , 'ped'          , 'DAM_armL_frmFT'        , 50  , 0.83  , 'Getting shot in the left arm'),\nAnim(1073 , 'ped'          , 'DAM_armL_frmLT'        , 40  , 0.67  , 'Getting shot in the left arm'),\nAnim(1074 , 'ped'          , 'DAM_armR_frmBK'        , 50  , 0.83  , 'Getting shot in the right arm'),\nAnim(1075 , 'ped'          , 'DAM_armR_frmFT'        , 30  , 0.50  , 'Getting shot in the right arm'),\nAnim(1076 , 'ped'          , 'DAM_armR_frmRT'        , 16  , 0.27  , 'Getting shot in the right arm'),\nAnim(1077 , 'ped'          , 'DAM_LegL_frmBK'        , 50  , 0.83  , 'Getting shot in the left leg'),", "Anim(1076 , 'ped'          , 'DAM_armR_frmRT'        , 16  , 0.27  , 'Getting shot in the right arm'),\nAnim(1077 , 'ped'          , 'DAM_LegL_frmBK'        , 50  , 0.83  , 'Getting shot in the left leg'),\nAnim(1078 , 'ped'          , 'DAM_LegL_frmFT'        , 50  , 0.83  , 'Getting shot in the left leg'),\nAnim(1079 , 'ped'          , 'DAM_LegL_frmLT'        , 50  , 0.83  , 'Getting shot in the left leg'),\nAnim(1080 , 'ped'          , 'DAM_LegR_frmBK'        , 50  , 0.83  , 'Getting shot in the right leg'),\nAnim(1081 , 'ped'          , 'DAM_LegR_frmFT'        , 50  , 0.83  , 'Getting shot in the right leg'),\nAnim(1082 , 'ped'          , 'DAM_LegR_frmRT'        , 50  , 0.83  , 'Getting shot in the right leg'),\nAnim(1083 , 'ped'          , 'DAM_stomach_frmBK'     , 50  , 0.83  , 'Getting shot in the stomach'),\nAnim(1084 , 'ped'          , 'DAM_stomach_frmFT'     , 50  , 0.83  , 'Getting shot in the stomach'),\nAnim(1085 , 'ped'          , 'DAM_stomach_frmLT'     , 50  , 0.83  , 'Getting shot in the stomach'),", "Anim(1084 , 'ped'          , 'DAM_stomach_frmFT'     , 50  , 0.83  , 'Getting shot in the stomach'),\nAnim(1085 , 'ped'          , 'DAM_stomach_frmLT'     , 50  , 0.83  , 'Getting shot in the stomach'),\nAnim(1086 , 'ped'          , 'DAM_stomach_frmRT'     , 50  , 0.83  , 'Getting shot in the stomach'),\nAnim(1087 , 'ped'          , 'DOOR_LHinge_O'         , 64  , 1.07  , 'Buggy animation'),\nAnim(1088 , 'ped'          , 'DOOR_RHinge_O'         , 64  , 1.07  , 'Buggy animation'),\nAnim(1089 , 'ped'          , 'DrivebyL_L'            , 12  , 0.20  , 'Drive by left'),\nAnim(1090 , 'ped'          , 'DrivebyL_R'            , 12  , 0.20  , 'Drive by right'),\nAnim(1091 , 'ped'          , 'Driveby_L'             , 12  , 0.20  , 'Drive by left'),\nAnim(1092 , 'ped'          , 'Driveby_R'             , 12  , 0.20  , 'Drive by right'),\nAnim(1093 , 'ped'          , 'DRIVE_BOAT'            , 2   , 0.03  , 'Boat driving'),", "Anim(1092 , 'ped'          , 'Driveby_R'             , 12  , 0.20  , 'Drive by right'),\nAnim(1093 , 'ped'          , 'DRIVE_BOAT'            , 2   , 0.03  , 'Boat driving'),\nAnim(1094 , 'ped'          , 'DRIVE_BOAT_back'       , 6   , 0.10  , 'Reversing with a boat'),\nAnim(1095 , 'ped'          , 'DRIVE_BOAT_L'          , 6   , 0.10  , 'Steering boat left'),\nAnim(1096 , 'ped'          , 'DRIVE_BOAT_R'          , 6   , 0.10  , 'Steering boat right'),\nAnim(1097 , 'ped'          , 'Drive_L'               , 8   , 0.13  , 'Steering left'),\nAnim(1098 , 'ped'          , 'Drive_LO_l'            , 8   , 0.13  , 'Steering left'),\nAnim(1099 , 'ped'          , 'Drive_LO_R'            , 8   , 0.13  , 'Steering right'),\nAnim(1100 , 'ped'          , 'Drive_L_pro'           , 8   , 0.13  , 'Steering left with high skill'),\nAnim(1101 , 'ped'          , 'Drive_L_pro_slow'      , 8   , 0.13  , 'Steering left with high skill'),", "Anim(1100 , 'ped'          , 'Drive_L_pro'           , 8   , 0.13  , 'Steering left with high skill'),\nAnim(1101 , 'ped'          , 'Drive_L_pro_slow'      , 8   , 0.13  , 'Steering left with high skill'),\nAnim(1102 , 'ped'          , 'Drive_L_slow'          , 8   , 0.13  , 'Steering left'),\nAnim(1103 , 'ped'          , 'Drive_L_weak'          , 8   , 0.13  , 'Steering left with low skill'),\nAnim(1104 , 'ped'          , 'Drive_L_weak_slow'     , 8   , 0.13  , 'Steering left with low skill'),\nAnim(1105 , 'ped'          , 'Drive_R'               , 8   , 0.13  , 'Steering right'),\nAnim(1106 , 'ped'          , 'Drive_R_pro'           , 8   , 0.13  , 'Steering right with high skill'),\nAnim(1107 , 'ped'          , 'Drive_R_pro_slow'      , 8   , 0.13  , 'Steering right with high skill'),\nAnim(1108 , 'ped'          , 'Drive_R_slow'          , 8   , 0.13  , 'Steering right'),\nAnim(1109 , 'ped'          , 'Drive_R_weak'          , 8   , 0.13  , 'Steering right with low skill'),", "Anim(1108 , 'ped'          , 'Drive_R_slow'          , 8   , 0.13  , 'Steering right'),\nAnim(1109 , 'ped'          , 'Drive_R_weak'          , 8   , 0.13  , 'Steering right with low skill'),\nAnim(1110 , 'ped'          , 'Drive_R_weak_slow'     , 8   , 0.13  , 'Steering right with low skill'),\nAnim(1111 , 'ped'          , 'Drive_truck'           , 2   , 0.03  , 'Truck driving animation'),\nAnim(1112 , 'ped'          , 'DRIVE_truck_back'      , 6   , 0.10  , 'Reversing with a truck'),\nAnim(1113 , 'ped'          , 'DRIVE_truck_L'         , 8   , 0.13  , 'Steering left with a truck'),\nAnim(1114 , 'ped'          , 'DRIVE_truck_R'         , 8   , 0.13  , 'Steering right with a truck'),\nAnim(1115 , 'ped'          , 'Drown'                 , 150 , 2.50  , 'Drowning animation'),\nAnim(1116 , 'ped'          , 'DUCK_cower'            , 48  , 0.80  , 'Cowering animation'),\nAnim(1117 , 'ped'          , 'endchat_01'            , 120 , 2.00  , 'End of chatting animation'),", "Anim(1116 , 'ped'          , 'DUCK_cower'            , 48  , 0.80  , 'Cowering animation'),\nAnim(1117 , 'ped'          , 'endchat_01'            , 120 , 2.00  , 'End of chatting animation'),\nAnim(1118 , 'ped'          , 'endchat_02'            , 120 , 2.00  , 'End of chatting animation'),\nAnim(1119 , 'ped'          , 'endchat_03'            , 140 , 2.33  , 'Wave animation'),\nAnim(1120 , 'ped'          , 'EV_dive'               , 140 , 2.33  , 'Dive away from danger'),\nAnim(1121 , 'ped'          , 'EV_step'               , 64  , 1.07  , 'Stepping away from danger'),\nAnim(1122 , 'ped'          , 'facanger'              , 8   , 0.13  , 'Anger face animation'),\nAnim(1123 , 'ped'          , 'facgum'                , 62  , 1.03  , 'Chewing gum animation'),\nAnim(1124 , 'ped'          , 'facsurp'               , 8   , 0.13  , 'Face talk animation'),\nAnim(1125 , 'ped'          , 'facsurpm'              , 8   , 0.13  , 'Face talk animation'),", "Anim(1124 , 'ped'          , 'facsurp'               , 8   , 0.13  , 'Face talk animation'),\nAnim(1125 , 'ped'          , 'facsurpm'              , 8   , 0.13  , 'Face talk animation'),\nAnim(1126 , 'ped'          , 'factalk'               , 140 , 2.33  , 'Face talk animation'),\nAnim(1127 , 'ped'          , 'facurios'              , 8   , 0.13  , 'Curious face animation'),\nAnim(1128 , 'ped'          , 'FALL_back'             , 44  , 0.73  , 'Falling while facing up'),\nAnim(1129 , 'ped'          , 'FALL_collapse'         , 60  , 1.00  , 'Absorbing damage from low fall'),\nAnim(1130 , 'ped'          , 'FALL_fall'             , 44  , 0.73  , 'Falling animation'),\nAnim(1131 , 'ped'          , 'FALL_front'            , 44  , 0.73  , 'Falling while facing down'),\nAnim(1132 , 'ped'          , 'FALL_glide'            , 48  , 0.80  , 'Fall gliding'),\nAnim(1133 , 'ped'          , 'FALL_land'             , 28  , 0.47  , 'Soft impack from fall'),", "Anim(1132 , 'ped'          , 'FALL_glide'            , 48  , 0.80  , 'Fall gliding'),\nAnim(1133 , 'ped'          , 'FALL_land'             , 28  , 0.47  , 'Soft impack from fall'),\nAnim(1134 , 'ped'          , 'FALL_skyDive'          , 80  , 1.33  , 'Skydiving animation'),\nAnim(1135 , 'ped'          , 'Fight2Idle'            , 20  , 0.33  , 'Fighting idle'),\nAnim(1136 , 'ped'          , 'FightA_1'              , 26  , 0.43  , 'Punch animation'),\nAnim(1137 , 'ped'          , 'FightA_2'              , 46  , 0.77  , 'Punch animation'),\nAnim(1138 , 'ped'          , 'FightA_3'              , 52  , 0.87  , 'Punch animation'),\nAnim(1139 , 'ped'          , 'FightA_block'          , 28  , 0.47  , 'Punch block'),\nAnim(1140 , 'ped'          , 'FightA_G'              , 56  , 0.93  , 'Kicking downed opponent'),\nAnim(1141 , 'ped'          , 'FightA_M'              , 24  , 0.40  , 'Running attack'),", "Anim(1140 , 'ped'          , 'FightA_G'              , 56  , 0.93  , 'Kicking downed opponent'),\nAnim(1141 , 'ped'          , 'FightA_M'              , 24  , 0.40  , 'Running attack'),\nAnim(1142 , 'ped'          , 'FIGHTIDLE'             , 78  , 1.30  , 'Fighting idle'),\nAnim(1143 , 'ped'          , 'FightShB'              , 28  , 0.47  , 'Pulling back while fighting'),\nAnim(1144 , 'ped'          , 'FightShF'              , 32  , 0.53  , 'Going forward while fighting'),\nAnim(1145 , 'ped'          , 'FightSh_BWD'           , 40  , 0.67  , 'Going backwards while fighting'),\nAnim(1146 , 'ped'          , 'FightSh_FWD'           , 40  , 0.67  , 'Going forward while fighting'),\nAnim(1147 , 'ped'          , 'FightSh_Left'          , 40  , 0.67  , 'Going left while fighting'),\nAnim(1148 , 'ped'          , 'FightSh_Right'         , 40  , 0.67  , 'Going right while fighting'),\nAnim(1149 , 'ped'          , 'flee_lkaround_01'      , 120 , 2.00  , 'Looking around while fleeing'),", "Anim(1148 , 'ped'          , 'FightSh_Right'         , 40  , 0.67  , 'Going right while fighting'),\nAnim(1149 , 'ped'          , 'flee_lkaround_01'      , 120 , 2.00  , 'Looking around while fleeing'),\nAnim(1150 , 'ped'          , 'FLOOR_hit'             , 22  , 0.37  , 'Getting hit on the floor while lying on back'),\nAnim(1151 , 'ped'          , 'FLOOR_hit_f'           , 24  , 0.40  , 'Getting hit on the floor while lying on stomach'),\nAnim(1152 , 'ped'          , 'fucku'                 , 80  , 1.33  , 'Giving the finger animation'),\nAnim(1153 , 'ped'          , 'gang_gunstand'         , 2   , 0.03  , 'Aiming a gun'),\nAnim(1154 , 'ped'          , 'gas_cwr'               , 60  , 1.00  , 'Choking on spray/tear gas'),\nAnim(1155 , 'ped'          , 'getup'                 , 82  , 1.37  , 'Getting up'),\nAnim(1156 , 'ped'          , 'getup_front'           , 82  , 1.37  , 'Getting up from the front'),\nAnim(1157 , 'ped'          , 'gum_eat'               , 320 , 5.33  , 'Eating a gum'),", "Anim(1156 , 'ped'          , 'getup_front'           , 82  , 1.37  , 'Getting up from the front'),\nAnim(1157 , 'ped'          , 'gum_eat'               , 320 , 5.33  , 'Eating a gum'),\nAnim(1158 , 'ped'          , 'GunCrouchBwd'          , 60  , 1.00  , 'Crouching backwards with a gun'),\nAnim(1159 , 'ped'          , 'GunCrouchFwd'          , 44  , 0.73  , 'Crouching forward with a gun'),\nAnim(1160 , 'ped'          , 'GunMove_BWD'           , 62  , 1.03  , 'Moving backwards with a gun'),\nAnim(1161 , 'ped'          , 'GunMove_FWD'           , 60  , 1.00  , 'Moving forward with a gun'),\nAnim(1162 , 'ped'          , 'GunMove_L'             , 60  , 1.00  , 'Moving left with a gun'),\nAnim(1163 , 'ped'          , 'GunMove_R'             , 60  , 1.00  , 'Moving right with a gun'),\nAnim(1164 , 'ped'          , 'Gun_2_IDLE'            , 16  , 0.27  , 'Holding rifle'),\nAnim(1165 , 'ped'          , 'GUN_BUTT'              , 26  , 0.43  , 'Gun whip'),", "Anim(1164 , 'ped'          , 'Gun_2_IDLE'            , 16  , 0.27  , 'Holding rifle'),\nAnim(1165 , 'ped'          , 'GUN_BUTT'              , 26  , 0.43  , 'Gun whip'),\nAnim(1166 , 'ped'          , 'GUN_BUTT_crouch'       , 26  , 0.43  , 'Gun whip'),\nAnim(1167 , 'ped'          , 'Gun_stand'             , 2   , 0.03  , 'Holding rifle'),\nAnim(1168 , 'ped'          , 'handscower'            , 116 , 1.93  , 'Scared and moving backwards'),\nAnim(1169 , 'ped'          , 'handsup'               , 36  , 0.60  , 'Putting your hands up'),\nAnim(1170 , 'ped'          , 'HitA_1'                , 18  , 0.30  , 'Getting hit'),\nAnim(1171 , 'ped'          , 'HitA_2'                , 32  , 0.53  , 'Getting hit'),\nAnim(1172 , 'ped'          , 'HitA_3'                , 34  , 0.57  , 'Getting hit'),\nAnim(1173 , 'ped'          , 'HIT_back'              , 30  , 0.50  , 'Getting hit from the back'),", "Anim(1172 , 'ped'          , 'HitA_3'                , 34  , 0.57  , 'Getting hit'),\nAnim(1173 , 'ped'          , 'HIT_back'              , 30  , 0.50  , 'Getting hit from the back'),\nAnim(1174 , 'ped'          , 'HIT_behind'            , 40  , 0.67  , 'Getting hit from behind'),\nAnim(1175 , 'ped'          , 'HIT_front'             , 36  , 0.60  , 'Getting hit from the front'),\nAnim(1176 , 'ped'          , 'HIT_GUN_BUTT'          , 30  , 0.50  , 'Getting hit by a gun'),\nAnim(1177 , 'ped'          , 'HIT_L'                 , 42  , 0.70  , 'Getting hit from the left'),\nAnim(1178 , 'ped'          , 'HIT_R'                 , 36  , 0.60  , 'Getting hit from the right'),\nAnim(1179 , 'ped'          , 'HIT_walk'              , 20  , 0.33  , 'Getting hit while walking'),\nAnim(1180 , 'ped'          , 'HIT_wall'              , 42  , 0.70  , 'Hitting a wall'),\nAnim(1181 , 'ped'          , 'Idlestance_fat'        , 100 , 1.67  , 'Idle while fat'),", "Anim(1180 , 'ped'          , 'HIT_wall'              , 42  , 0.70  , 'Hitting a wall'),\nAnim(1181 , 'ped'          , 'Idlestance_fat'        , 100 , 1.67  , 'Idle while fat'),\nAnim(1182 , 'ped'          , 'idlestance_old'        , 120 , 2.00  , 'Idle while old'),\nAnim(1183 , 'ped'          , 'IDLE_armed'            , 88  , 1.47  , 'Idle while holding a rifle'),\nAnim(1184 , 'ped'          , 'IDLE_chat'             , 400 , 6.67  , 'Moving hands while chatting'),\nAnim(1185 , 'ped'          , 'IDLE_csaw'             , 92  , 1.53  , 'Holding a chainsaw'),\nAnim(1186 , 'ped'          , 'Idle_Gang1'            , 100 , 1.67  , 'Idle of gangmembers'),\nAnim(1187 , 'ped'          , 'IDLE_HBHB'             , 160 , 2.67  , 'Idle when examining'),\nAnim(1188 , 'ped'          , 'IDLE_ROCKET'           , 94  , 1.57  , 'Holding a rocket launcher'),\nAnim(1189 , 'ped'          , 'IDLE_stance'           , 90  , 1.50  , 'Normal idle standing animation'),", "Anim(1188 , 'ped'          , 'IDLE_ROCKET'           , 94  , 1.57  , 'Holding a rocket launcher'),\nAnim(1189 , 'ped'          , 'IDLE_stance'           , 90  , 1.50  , 'Normal idle standing animation'),\nAnim(1190 , 'ped'          , 'IDLE_taxi'             , 52  , 0.87  , 'Calling for a cab'),\nAnim(1191 , 'ped'          , 'IDLE_tired'            , 60  , 1.00  , 'Exhausted out of breath animation'),\nAnim(1192 , 'ped'          , 'Jetpack_Idle'          , 2   , 0.03  , 'Holding a jetpack'),\nAnim(1193 , 'ped'          , 'JOG_femaleA'           , 46  , 0.77  , 'Female jogging'),\nAnim(1194 , 'ped'          , 'JOG_maleA'             , 46  , 0.77  , 'Male jogging'),\nAnim(1195 , 'ped'          , 'JUMP_glide'            , 30  , 0.50  , 'Mid-air after jumping'),\nAnim(1196 , 'ped'          , 'JUMP_land'             , 14  , 0.23  , 'Landing after a jump'),\nAnim(1197 , 'ped'          , 'JUMP_launch'           , 12  , 0.20  , 'Start of jump (left leg)'),", "Anim(1196 , 'ped'          , 'JUMP_land'             , 14  , 0.23  , 'Landing after a jump'),\nAnim(1197 , 'ped'          , 'JUMP_launch'           , 12  , 0.20  , 'Start of jump (left leg)'),\nAnim(1198 , 'ped'          , 'JUMP_launch_R'         , 12  , 0.20  , 'Start of jump (right leg)'),\nAnim(1199 , 'ped'          , 'KART_drive'            , 2   , 0.03  , 'Go-Kart-driving-animation'),\nAnim(1200 , 'ped'          , 'KART_L'                , 8   , 0.13  , 'Leaning left while driving a Go-Kart'),\nAnim(1201 , 'ped'          , 'KART_LB'               , 2   , 0.03  , 'Go-Kart-driving-animation'),\nAnim(1202 , 'ped'          , 'KART_R'                , 8   , 0.13  , 'Leaning right while driving a Go-Kart'),\nAnim(1203 , 'ped'          , 'KD_left'               , 54  , 0.90  , 'Dying during an explosion'),\nAnim(1204 , 'ped'          , 'KD_right'              , 54  , 0.90  , 'Dying during an explosion'),\nAnim(1205 , 'ped'          , 'KO_shot_face'          , 126 , 2.10  , 'Holding face while dying'),", "Anim(1204 , 'ped'          , 'KD_right'              , 54  , 0.90  , 'Dying during an explosion'),\nAnim(1205 , 'ped'          , 'KO_shot_face'          , 126 , 2.10  , 'Holding face while dying'),\nAnim(1206 , 'ped'          , 'KO_shot_front'         , 34  , 0.57  , 'Falling forward and dying'),\nAnim(1207 , 'ped'          , 'KO_shot_stom'          , 190 , 3.17  , 'Holding stomach while dying'),\nAnim(1208 , 'ped'          , 'KO_skid_back'          , 58  , 0.97  , 'Falling forward and dying'),\nAnim(1209 , 'ped'          , 'KO_skid_front'         , 68  , 1.13  , 'Falling backward and dying'),\nAnim(1210 , 'ped'          , 'KO_spin_L'             , 52  , 0.87  , 'Spinning left and dying'),\nAnim(1211 , 'ped'          , 'KO_spin_R'             , 56  , 0.93  , 'Spinning right and dying'),\nAnim(1212 , 'ped'          , 'pass_Smoke_in_car'     , 104 , 1.73  , 'Smoking in a car'),\nAnim(1213 , 'ped'          , 'phone_in'              , 140 , 2.33  , 'Picking up the phone'),", "Anim(1212 , 'ped'          , 'pass_Smoke_in_car'     , 104 , 1.73  , 'Smoking in a car'),\nAnim(1213 , 'ped'          , 'phone_in'              , 140 , 2.33  , 'Picking up the phone'),\nAnim(1214 , 'ped'          , 'phone_out'             , 120 , 2.00  , 'Hanging up the phone'),\nAnim(1215 , 'ped'          , 'phone_talk'            , 120 , 2.00  , 'Talking on phone'),\nAnim(1216 , 'ped'          , 'Player_Sneak'          , 80  , 1.33  , 'Standing sneak animation'),\nAnim(1217 , 'ped'          , 'Player_Sneak_walkstart', 18  , 0.30  , 'Start of standing sneak animation'),\nAnim(1218 , 'ped'          , 'roadcross'             , 120 , 2.00  , 'Looking right and left before crossing road'),\nAnim(1219 , 'ped'          , 'roadcross_female'      , 240 , 4.00  , 'Looking right and left before crossing road'),\nAnim(1220 , 'ped'          , 'roadcross_gang'        , 120 , 2.00  , 'Looking right and left before crossing road'),\nAnim(1221 , 'ped'          , 'roadcross_old'         , 240 , 4.00  , 'Looking right and left before crossing road'),", "Anim(1220 , 'ped'          , 'roadcross_gang'        , 120 , 2.00  , 'Looking right and left before crossing road'),\nAnim(1221 , 'ped'          , 'roadcross_old'         , 240 , 4.00  , 'Looking right and left before crossing road'),\nAnim(1222 , 'ped'          , 'run_1armed'            , 46  , 0.77  , 'Player jog'),\nAnim(1223 , 'ped'          , 'run_armed'             , 42  , 0.70  , 'Jog with assault rifle'),\nAnim(1224 , 'ped'          , 'run_civi'              , 44  , 0.73  , 'Ped jog'),\nAnim(1225 , 'ped'          , 'run_csaw'              , 42  , 0.70  , 'Jogging with chainsaw'),\nAnim(1226 , 'ped'          , 'run_fat'               , 48  , 0.80  , 'Fat jog'),\nAnim(1227 , 'ped'          , 'run_fatold'            , 48  , 0.80  , 'Old fat jog'),\nAnim(1228 , 'ped'          , 'run_gang1'             , 50  , 0.83  , 'Gang jog'),\nAnim(1229 , 'ped'          , 'run_left'              , 40  , 0.67  , 'Jog to the left'),", "Anim(1228 , 'ped'          , 'run_gang1'             , 50  , 0.83  , 'Gang jog'),\nAnim(1229 , 'ped'          , 'run_left'              , 40  , 0.67  , 'Jog to the left'),\nAnim(1230 , 'ped'          , 'run_old'               , 48  , 0.80  , 'Old man jog'),\nAnim(1231 , 'ped'          , 'run_player'            , 44  , 0.73  , 'Player jog'),\nAnim(1232 , 'ped'          , 'run_right'             , 40  , 0.67  , 'Jog to the right'),\nAnim(1233 , 'ped'          , 'run_rocket'            , 46  , 0.77  , 'Jog with rocket launcher'),\nAnim(1234 , 'ped'          , 'Run_stop'              , 52  , 0.87  , 'Stop jogging'),\nAnim(1235 , 'ped'          , 'Run_stopR'             , 48  , 0.80  , 'Stop jogging'),\nAnim(1236 , 'ped'          , 'Run_Wuzi'              , 46  , 0.77  , 'Jog with hand placed out in front'),\nAnim(1237 , 'ped'          , 'SEAT_down'             , 90  , 1.50  , 'Sitting down'),", "Anim(1236 , 'ped'          , 'Run_Wuzi'              , 46  , 0.77  , 'Jog with hand placed out in front'),\nAnim(1237 , 'ped'          , 'SEAT_down'             , 90  , 1.50  , 'Sitting down'),\nAnim(1238 , 'ped'          , 'SEAT_idle'             , 120 , 2.00  , 'Sitting down'),\nAnim(1239 , 'ped'          , 'SEAT_up'               , 70  , 1.17  , 'Standing up'),\nAnim(1240 , 'ped'          , 'SHOT_leftP'            , 18  , 0.30  , 'Getting shot from the left'),\nAnim(1241 , 'ped'          , 'SHOT_partial'          , 22  , 0.37  , 'Getting shot from the front'),\nAnim(1242 , 'ped'          , 'SHOT_partial_B'        , 20  , 0.33  , 'Getting shot from behind'),\nAnim(1243 , 'ped'          , 'SHOT_rightP'           , 20  , 0.33  , 'Getting shot from the right'),\nAnim(1244 , 'ped'          , 'Shove_Partial'         , 32  , 0.53  , 'Shoving someone away'),\nAnim(1245 , 'ped'          , 'Smoke_in_car'          , 104 , 1.73  , 'Smoking in a car'),", "Anim(1244 , 'ped'          , 'Shove_Partial'         , 32  , 0.53  , 'Shoving someone away'),\nAnim(1245 , 'ped'          , 'Smoke_in_car'          , 104 , 1.73  , 'Smoking in a car'),\nAnim(1246 , 'ped'          , 'sprint_civi'           , 32  , 0.53  , 'Player sprint'),\nAnim(1247 , 'ped'          , 'sprint_panic'          , 36  , 0.60  , 'NPC sprint'),\nAnim(1248 , 'ped'          , 'Sprint_Wuzi'           , 40  , 0.67  , 'Sprinting while holding hand forward'),\nAnim(1249 , 'ped'          , 'swat_run'              , 40  , 0.67  , 'Police jog'),\nAnim(1250 , 'ped'          , 'Swim_Tread'            , 78  , 1.30  , 'Idle swimming animation'),\nAnim(1251 , 'ped'          , 'Tap_hand'              , 2   , 0.03  , 'Tapping hand on window (left side)'),\nAnim(1252 , 'ped'          , 'Tap_handP'             , 2   , 0.03  , 'Tapping hand on window (right side)'),\nAnim(1253 , 'ped'          , 'turn_180'              , 38  , 0.63  , 'Turning around'),", "Anim(1252 , 'ped'          , 'Tap_handP'             , 2   , 0.03  , 'Tapping hand on window (right side)'),\nAnim(1253 , 'ped'          , 'turn_180'              , 38  , 0.63  , 'Turning around'),\nAnim(1254 , 'ped'          , 'Turn_L'                , 48  , 0.80  , 'Turning left'),\nAnim(1255 , 'ped'          , 'Turn_R'                , 48  , 0.80  , 'Turning right'),\nAnim(1256 , 'ped'          , 'WALK_armed'            , 64  , 1.07  , 'Slow walking with a weapon'),\nAnim(1257 , 'ped'          , 'WALK_civi'             , 68  , 1.13  , 'NPC slow walk'),\nAnim(1258 , 'ped'          , 'WALK_csaw'             , 64  , 1.07  , 'Slow walk with chainsaw'),\nAnim(1259 , 'ped'          , 'Walk_DoorPartial'      , 48  , 0.80  , 'Opening a door'),\nAnim(1260 , 'ped'          , 'WALK_drunk'            , 236 , 3.93  , 'Drunk walk'),\nAnim(1261 , 'ped'          , 'WALK_fat'              , 80  , 1.33  , 'Fat walk'),", "Anim(1260 , 'ped'          , 'WALK_drunk'            , 236 , 3.93  , 'Drunk walk'),\nAnim(1261 , 'ped'          , 'WALK_fat'              , 80  , 1.33  , 'Fat walk'),\nAnim(1262 , 'ped'          , 'WALK_fatold'           , 70  , 1.17  , 'Fat and old walk'),\nAnim(1263 , 'ped'          , 'WALK_gang1'            , 84  , 1.40  , 'Gang walk'),\nAnim(1264 , 'ped'          , 'WALK_gang2'            , 84  , 1.40  , 'Gang walk'),\nAnim(1265 , 'ped'          , 'WALK_old'              , 84  , 1.40  , 'Old walk'),\nAnim(1266 , 'ped'          , 'WALK_player'           , 72  , 1.20  , 'Player walk'),\nAnim(1267 , 'ped'          , 'WALK_rocket'           , 64  , 1.07  , 'Walking with a rocket'),\nAnim(1268 , 'ped'          , 'WALK_shuffle'          , 72  , 1.20  , 'Walking with a buckle'),\nAnim(1269 , 'ped'          , 'WALK_start'            , 16  , 0.27  , 'Start of walk'),", "Anim(1268 , 'ped'          , 'WALK_shuffle'          , 72  , 1.20  , 'Walking with a buckle'),\nAnim(1269 , 'ped'          , 'WALK_start'            , 16  , 0.27  , 'Start of walk'),\nAnim(1270 , 'ped'          , 'WALK_start_armed'      , 12  , 0.20  , 'Start of walk with weapon'),\nAnim(1271 , 'ped'          , 'WALK_start_csaw'       , 12  , 0.20  , 'Start of walk with chainsaw'),\nAnim(1272 , 'ped'          , 'WALK_start_rocket'     , 12  , 0.20  , 'Start of walk with rocket launcher'),\nAnim(1273 , 'ped'          , 'Walk_Wuzi'             , 70  , 1.17  , 'Start of walk with hand forward'),\nAnim(1274 , 'ped'          , 'WEAPON_crouch'         , 48  , 0.80  , 'Crouching with a weapon'),\nAnim(1275 , 'ped'          , 'woman_idlestance'      , 320 , 5.33  , 'Woman\\'s idle stance'),\nAnim(1276 , 'ped'          , 'woman_run'             , 46  , 0.77  , 'Woman run animation'),\nAnim(1277 , 'ped'          , 'WOMAN_runbusy'         , 40  , 0.67  , 'Busy woman run animation'),", "Anim(1276 , 'ped'          , 'woman_run'             , 46  , 0.77  , 'Woman run animation'),\nAnim(1277 , 'ped'          , 'WOMAN_runbusy'         , 40  , 0.67  , 'Busy woman run animation'),\nAnim(1278 , 'ped'          , 'WOMAN_runfatold'       , 72  , 1.20  , 'Fat and old woman run animation'),\nAnim(1279 , 'ped'          , 'woman_runpanic'        , 36  , 0.60  , 'Woman panic run'),\nAnim(1280 , 'ped'          , 'WOMAN_runsexy'         , 42  , 0.70  , 'Sexy woman run'),\nAnim(1281 , 'ped'          , 'WOMAN_walkbusy'        , 60  , 1.00  , 'Busy woman walk'),\nAnim(1282 , 'ped'          , 'WOMAN_walkfatold'      , 72  , 1.20  , 'Fat and old woman walk'),\nAnim(1283 , 'ped'          , 'WOMAN_walknorm'        , 68  , 1.13  , 'Normal woman walk'),\nAnim(1284 , 'ped'          , 'WOMAN_walkold'         , 72  , 1.20  , 'Old woman walk'),\nAnim(1285 , 'ped'          , 'WOMAN_walkpro'         , 80  , 1.33  , 'Prostitute walk'),", "Anim(1284 , 'ped'          , 'WOMAN_walkold'         , 72  , 1.20  , 'Old woman walk'),\nAnim(1285 , 'ped'          , 'WOMAN_walkpro'         , 80  , 1.33  , 'Prostitute walk'),\nAnim(1286 , 'ped'          , 'WOMAN_walksexy'        , 70  , 1.17  , 'Sexy woman walk'),\nAnim(1287 , 'ped'          , 'WOMAN_walkshop'        , 58  , 0.97  , 'Woman shop walk'),\nAnim(1288 , 'ped'          , 'XPRESSscratch'         , 238 , 3.97  , 'Looking around idle animation'),\nAnim(1289 , 'PLAYER_DVBYS' , 'Plyr_DrivebyBwd'       , 50  , 0.83  , 'Drive-by backward'),\nAnim(1290 , 'PLAYER_DVBYS' , 'Plyr_DrivebyFwd'       , 50  , 0.83  , 'Drive-by forward'),\nAnim(1291 , 'PLAYER_DVBYS' , 'Plyr_DrivebyLHS'       , 50  , 0.83  , 'Drive-by left'),\nAnim(1292 , 'PLAYER_DVBYS' , 'Plyr_DrivebyRHS'       , 50  , 0.83  , 'Drive-by right'),\nAnim(1293 , 'PLAYIDLES'    , 'shift'                 , 216 , 3.60  , 'One of CJ\\'s idle animations'),", "Anim(1292 , 'PLAYER_DVBYS' , 'Plyr_DrivebyRHS'       , 50  , 0.83  , 'Drive-by right'),\nAnim(1293 , 'PLAYIDLES'    , 'shift'                 , 216 , 3.60  , 'One of CJ\\'s idle animations'),\nAnim(1294 , 'PLAYIDLES'    , 'shldr'                 , 130 , 2.17  , 'One of CJ\\'s idle animations'),\nAnim(1295 , 'PLAYIDLES'    , 'stretch'               , 276 , 4.60  , 'One of CJ\\'s idle animations'),\nAnim(1296 , 'PLAYIDLES'    , 'strleg'                , 220 , 3.67  , 'One of CJ\\'s idle animations'),\nAnim(1297 , 'PLAYIDLES'    , 'time'                  , 312 , 5.20  , 'One of CJ\\'s idle animations'),\nAnim(1298 , 'POLICE'       , 'CopTraf_Away'          , 88  , 1.47  , 'Cop signalling traffic to move away'),\nAnim(1299 , 'POLICE'       , 'CopTraf_Come'          , 172 , 2.87  , 'Cop signalling traffic to come to him'),\nAnim(1300 , 'POLICE'       , 'CopTraf_Left'          , 120 , 2.00  , 'Cop signalling traffic to move to the left'),\nAnim(1301 , 'POLICE'       , 'CopTraf_Stop'          , 120 , 2.00  , 'Cop signalling traffic to stop'),", "Anim(1300 , 'POLICE'       , 'CopTraf_Left'          , 120 , 2.00  , 'Cop signalling traffic to move to the left'),\nAnim(1301 , 'POLICE'       , 'CopTraf_Stop'          , 120 , 2.00  , 'Cop signalling traffic to stop'),\nAnim(1302 , 'POLICE'       , 'COP_getoutcar_LHS'     , 50  , 0.83  , 'Getting out the car and aiming'),\nAnim(1303 , 'POLICE'       , 'Cop_move_FWD'          , 60  , 1.00  , 'Walking forward while aiming'),\nAnim(1304 , 'POLICE'       , 'crm_drgbst_01'         , 1114, 18.57 , 'Thrown onto car by officer'),\nAnim(1305 , 'POLICE'       , 'Door_Kick'             , 80  , 1.33  , 'Kicking down a door'),\nAnim(1306 , 'POLICE'       , 'plc_drgbst_01'         , 1236, 20.60 , 'Officer arresting someone'),\nAnim(1307 , 'POLICE'       , 'plc_drgbst_02'         , 454 , 7.57  , 'Officer searching through trunk'),\nAnim(1308 , 'POOL'         , 'POOL_ChalkCue'         , 290 , 4.83  , 'Chalking pool cue'),\nAnim(1309 , 'POOL'         , 'POOL_Idle_Stance'      , 120 , 2.00  , 'Idle with a pool cue'),", "Anim(1308 , 'POOL'         , 'POOL_ChalkCue'         , 290 , 4.83  , 'Chalking pool cue'),\nAnim(1309 , 'POOL'         , 'POOL_Idle_Stance'      , 120 , 2.00  , 'Idle with a pool cue'),\nAnim(1310 , 'POOL'         , 'POOL_Long_Shot'        , 100 , 1.67  , 'Pool long shot'),\nAnim(1311 , 'POOL'         , 'POOL_Long_Shot_O'      , 100 , 1.67  , 'Blank animation'),\nAnim(1312 , 'POOL'         , 'POOL_Long_Start'       , 40  , 0.67  , 'Start of long shot pool'),\nAnim(1313 , 'POOL'         , 'POOL_Long_Start_O'     , 40  , 0.67  , 'Blank animation'),\nAnim(1314 , 'POOL'         , 'POOL_Med_Shot'         , 100 , 1.67  , 'Medium pool shot'),\nAnim(1315 , 'POOL'         , 'POOL_Med_Shot_O'       , 100 , 1.67  , 'Blank animation'),\nAnim(1316 , 'POOL'         , 'POOL_Med_Start'        , 40  , 0.67  , 'Start of medium pool shot'),\nAnim(1317 , 'POOL'         , 'POOL_Med_Start_O'      , 40  , 0.67  , 'Blank animation'),", "Anim(1316 , 'POOL'         , 'POOL_Med_Start'        , 40  , 0.67  , 'Start of medium pool shot'),\nAnim(1317 , 'POOL'         , 'POOL_Med_Start_O'      , 40  , 0.67  , 'Blank animation'),\nAnim(1318 , 'POOL'         , 'POOL_Place_White'      , 150 , 2.50  , 'Placing the white ball'),\nAnim(1319 , 'POOL'         , 'POOL_Short_Shot'       , 100 , 1.67  , 'Short pool shot'),\nAnim(1320 , 'POOL'         , 'POOL_Short_Shot_O'     , 100 , 1.67  , 'Blank animation'),\nAnim(1321 , 'POOL'         , 'POOL_Short_Start'      , 40  , 0.67  , 'Start of short pool shot'),\nAnim(1322 , 'POOL'         , 'POOL_Short_Start_O'    , 40  , 0.67  , 'Blank animation'),\nAnim(1323 , 'POOL'         , 'POOL_Walk'             , 76  , 1.27  , 'Pool walking'),\nAnim(1324 , 'POOL'         , 'POOL_Walk_Start'       , 12  , 0.20  , 'Start of pool walking'),\nAnim(1325 , 'POOL'         , 'POOL_XLong_Shot'       , 100 , 1.67  , 'Extra long pool shot'),", "Anim(1324 , 'POOL'         , 'POOL_Walk_Start'       , 12  , 0.20  , 'Start of pool walking'),\nAnim(1325 , 'POOL'         , 'POOL_XLong_Shot'       , 100 , 1.67  , 'Extra long pool shot'),\nAnim(1326 , 'POOL'         , 'POOL_XLong_Shot_O'     , 100 , 1.67  , 'Blank animation'),\nAnim(1327 , 'POOL'         , 'POOL_XLong_Start'      , 40  , 0.67  , 'Start of extra long pool shot'),\nAnim(1328 , 'POOL'         , 'POOL_XLong_Start_O'    , 40  , 0.67  , 'Blank animation'),\nAnim(1329 , 'POOR'         , 'WINWASH_Start'         , 26  , 0.43  , 'Washing window at an intersection'),\nAnim(1330 , 'POOR'         , 'WINWASH_Wash2Beg'      , 128 , 2.13  , 'Washing window at an intersection'),\nAnim(1331 , 'PYTHON'       , 'python_crouchfire'     , 72  , 1.20  , 'Deagle crouch fire'),\nAnim(1332 , 'PYTHON'       , 'python_crouchreload'   , 60  , 1.00  , 'Deagle crouch reload'),\nAnim(1333 , 'PYTHON'       , 'python_fire'           , 70  , 1.17  , 'Deagle fire'),", "Anim(1332 , 'PYTHON'       , 'python_crouchreload'   , 60  , 1.00  , 'Deagle crouch reload'),\nAnim(1333 , 'PYTHON'       , 'python_fire'           , 70  , 1.17  , 'Deagle fire'),\nAnim(1334 , 'PYTHON'       , 'python_fire_poor'      , 88  , 1.47  , 'Deagle fire with poor skill'),\nAnim(1335 , 'PYTHON'       , 'python_reload'         , 56  , 0.93  , 'Deagle reload'),\nAnim(1336 , 'QUAD'         , 'QUAD_back'             , 6   , 0.10  , 'Quad bike lean back'),\nAnim(1337 , 'QUAD'         , 'QUAD_driveby_FT'       , 12  , 0.20  , 'Quad bike drive by front'),\nAnim(1338 , 'QUAD'         , 'QUAD_driveby_LHS'      , 12  , 0.20  , 'Quad bike drive by left'),\nAnim(1339 , 'QUAD'         , 'QUAD_driveby_RHS'      , 12  , 0.20  , 'Quad bike drive by right'),\nAnim(1340 , 'QUAD'         , 'QUAD_FWD'              , 12  , 0.20  , 'Quad bike lean forward'),\nAnim(1341 , 'QUAD'         , 'QUAD_getoff_B'         , 98  , 1.63  , 'Bailing off a Quad bike at high speed'),", "Anim(1340 , 'QUAD'         , 'QUAD_FWD'              , 12  , 0.20  , 'Quad bike lean forward'),\nAnim(1341 , 'QUAD'         , 'QUAD_getoff_B'         , 98  , 1.63  , 'Bailing off a Quad bike at high speed'),\nAnim(1342 , 'QUAD'         , 'QUAD_getoff_LHS'       , 40  , 0.67  , 'Getting off a Quad bike from the left'),\nAnim(1343 , 'QUAD'         , 'QUAD_getoff_RHS'       , 42  , 0.70  , 'Getting off a Quad bike from the right'),\nAnim(1344 , 'QUAD'         , 'QUAD_geton_LHS'        , 44  , 0.73  , 'Getting on a Quad bike from the left'),\nAnim(1345 , 'QUAD'         , 'QUAD_geton_RHS'        , 44  , 0.73  , 'Getting on a Quad bike from the right'),\nAnim(1346 , 'QUAD'         , 'QUAD_hit'              , 2   , 0.03  , 'Getting hit on a Quad bike'),\nAnim(1347 , 'QUAD'         , 'QUAD_kick'             , 68  , 1.13  , 'Getting on a Quad bike from the front'),\nAnim(1348 , 'QUAD'         , 'QUAD_Left'             , 8   , 0.13  , 'Quad bike sway left'),\nAnim(1349 , 'QUAD'         , 'QUAD_passenger'        , 2   , 0.03  , 'Quad bike passanger sit'),", "Anim(1348 , 'QUAD'         , 'QUAD_Left'             , 8   , 0.13  , 'Quad bike sway left'),\nAnim(1349 , 'QUAD'         , 'QUAD_passenger'        , 2   , 0.03  , 'Quad bike passanger sit'),\nAnim(1350 , 'QUAD'         , 'QUAD_reverse'          , 10  , 0.17  , 'Quad bike reverse'),\nAnim(1351 , 'QUAD'         , 'QUAD_ride'             , 2   , 0.03  , 'Quad bike riding'),\nAnim(1352 , 'QUAD'         , 'QUAD_Right'            , 8   , 0.13  , 'Quad bike sway right'),\nAnim(1353 , 'QUAD_DBZ'     , 'Pass_Driveby_BWD'      , 50  , 0.83  , 'Quad passanger drive bying back'),\nAnim(1354 , 'QUAD_DBZ'     , 'Pass_Driveby_FWD'      , 50  , 0.83  , 'Quad passanger drive bying front'),\nAnim(1355 , 'QUAD_DBZ'     , 'Pass_Driveby_LHS'      , 50  , 0.83  , 'Quad passanger drive bying left'),\nAnim(1356 , 'QUAD_DBZ'     , 'Pass_Driveby_RHS'      , 50  , 0.83  , 'Quad passanger drive bying right'),\nAnim(1357 , 'RAPPING'      , 'Laugh_01'              , 320 , 5.33  , 'Laughing animation'),", "Anim(1356 , 'QUAD_DBZ'     , 'Pass_Driveby_RHS'      , 50  , 0.83  , 'Quad passanger drive bying right'),\nAnim(1357 , 'RAPPING'      , 'Laugh_01'              , 320 , 5.33  , 'Laughing animation'),\nAnim(1358 , 'RAPPING'      , 'RAP_A_IN'              , 50  , 0.83  , 'Rapping animation'),\nAnim(1359 , 'RAPPING'      , 'RAP_A_Loop'            , 160 , 2.67  , 'Rapping animation loop'),\nAnim(1360 , 'RAPPING'      , 'RAP_A_OUT'             , 20  , 0.33  , 'Rapping animation'),\nAnim(1361 , 'RAPPING'      , 'RAP_B_IN'              , 60  , 1.00  , 'Rapping animation'),\nAnim(1362 , 'RAPPING'      , 'RAP_B_Loop'            , 160 , 2.67  , 'Rapping animation loop'),\nAnim(1363 , 'RAPPING'      , 'RAP_B_OUT'             , 52  , 0.87  , 'Rapping animation'),\nAnim(1364 , 'RAPPING'      , 'RAP_C_Loop'            , 180 , 3.00  , 'Rapping animation loop'),\nAnim(1365 , 'RIFLE'        , 'RIFLE_crouchfire'      , 52  , 0.87  , 'Rifle crouch fire'),", "Anim(1364 , 'RAPPING'      , 'RAP_C_Loop'            , 180 , 3.00  , 'Rapping animation loop'),\nAnim(1365 , 'RIFLE'        , 'RIFLE_crouchfire'      , 52  , 0.87  , 'Rifle crouch fire'),\nAnim(1366 , 'RIFLE'        , 'RIFLE_crouchload'      , 76  , 1.27  , 'Rifle crouch reload'),\nAnim(1367 , 'RIFLE'        , 'RIFLE_fire'            , 48  , 0.80  , 'Rifle fire'),\nAnim(1368 , 'RIFLE'        , 'RIFLE_fire_poor'       , 48  , 0.80  , 'Rifle fire with poor skill'),\nAnim(1369 , 'RIFLE'        , 'RIFLE_load'            , 84  , 1.40  , 'Rifle reload'),\nAnim(1370 , 'RIOT'         , 'RIOT_ANGRY'            , 300 , 5.00  , 'Angry rioting'),\nAnim(1371 , 'RIOT'         , 'RIOT_ANGRY_B'          , 38  , 0.63  , 'Angry rioting'),\nAnim(1372 , 'RIOT'         , 'RIOT_challenge'        , 194 , 3.23  , 'Taunting'),\nAnim(1373 , 'RIOT'         , 'RIOT_CHANT'            , 104 , 1.73  , 'Riot chanting'),", "Anim(1372 , 'RIOT'         , 'RIOT_challenge'        , 194 , 3.23  , 'Taunting'),\nAnim(1373 , 'RIOT'         , 'RIOT_CHANT'            , 104 , 1.73  , 'Riot chanting'),\nAnim(1374 , 'RIOT'         , 'RIOT_FUKU'             , 40  , 0.67  , 'Giving the finger'),\nAnim(1375 , 'RIOT'         , 'RIOT_PUNCHES'          , 40  , 0.67  , 'Riot chanting'),\nAnim(1376 , 'RIOT'         , 'RIOT_shout'            , 60  , 1.00  , 'Riot shouting'),\nAnim(1377 , 'ROB_BANK'     , 'CAT_Safe_End'          , 30  , 0.50  , 'Opening a safe'),\nAnim(1378 , 'ROB_BANK'     , 'CAT_Safe_Open'         , 200 , 3.33  , 'Opening a safe'),\nAnim(1379 , 'ROB_BANK'     , 'CAT_Safe_Open_O'       , 200 , 3.33  , 'Opening a safe'),\nAnim(1380 , 'ROB_BANK'     , 'CAT_Safe_Rob'          , 110 , 1.83  , 'Robbing a safe'),\nAnim(1381 , 'ROB_BANK'     , 'SHP_HandsUp_Scr'       , 40  , 0.67  , 'Slowly putting hands down'),", "Anim(1380 , 'ROB_BANK'     , 'CAT_Safe_Rob'          , 110 , 1.83  , 'Robbing a safe'),\nAnim(1381 , 'ROB_BANK'     , 'SHP_HandsUp_Scr'       , 40  , 0.67  , 'Slowly putting hands down'),\nAnim(1382 , 'ROCKET'       , 'idle_rocket'           , 96  , 1.60  , 'Rocket launcher idle'),\nAnim(1383 , 'ROCKET'       , 'RocketFire'            , 58  , 0.97  , 'Rocket launcher fire'),\nAnim(1384 , 'ROCKET'       , 'run_rocket'            , 46  , 0.77  , 'Rocket launcher run'),\nAnim(1385 , 'ROCKET'       , 'walk_rocket'           , 64  , 1.07  , 'Rocket launcher walk'),\nAnim(1386 , 'ROCKET'       , 'WALK_start_rocket'     , 12  , 0.20  , 'Rocket launcher start walk'),\nAnim(1795 , 'RUNNINGMAN'   , 'Dance_B1'              , 32  , 0.53  , 'Bad \"Hollywood swinging\" dance'),\nAnim(1796 , 'RUNNINGMAN'   , 'Dance_B2'              , 34  , 0.57  , 'Bad \"Hollywood swinging\" dance'),\nAnim(1797 , 'RUNNINGMAN'   , 'Dance_B3'              , 32  , 0.53  , 'Bad \"Hollywood swinging\" dance'),", "Anim(1796 , 'RUNNINGMAN'   , 'Dance_B2'              , 34  , 0.57  , 'Bad \"Hollywood swinging\" dance'),\nAnim(1797 , 'RUNNINGMAN'   , 'Dance_B3'              , 32  , 0.53  , 'Bad \"Hollywood swinging\" dance'),\nAnim(1798 , 'RUNNINGMAN'   , 'Dance_B4'              , 34  , 0.57  , 'Bad \"Hollywood swinging\" dance'),\nAnim(1799 , 'RUNNINGMAN'   , 'Dance_B5'              , 32  , 0.53  , 'Bad \"Hollywood swinging\" dance'),\nAnim(1800 , 'RUNNINGMAN'   , 'Dance_B6'              , 34  , 0.57  , 'Bad \"Hollywood swinging\" dance'),\nAnim(1801 , 'RUNNINGMAN'   , 'Dance_B7'              , 32  , 0.53  , 'Bad \"Hollywood swinging\" dance'),\nAnim(1802 , 'RUNNINGMAN'   , 'Dance_B8'              , 34  , 0.57  , 'Bad \"Hollywood swinging\" dance'),\nAnim(1803 , 'RUNNINGMAN'   , 'Dance_B9'              , 32  , 0.53  , 'Bad \"Hollywood swinging\" dance'),\nAnim(1804 , 'RUNNINGMAN'   , 'Dance_B10'             , 34  , 0.57  , 'Bad \"Hollywood swinging\" dance'),\nAnim(1805 , 'RUNNINGMAN'   , 'Dance_B11'             , 32  , 0.53  , 'Bad \"Hollywood swinging\" dance'),", "Anim(1804 , 'RUNNINGMAN'   , 'Dance_B10'             , 34  , 0.57  , 'Bad \"Hollywood swinging\" dance'),\nAnim(1805 , 'RUNNINGMAN'   , 'Dance_B11'             , 32  , 0.53  , 'Bad \"Hollywood swinging\" dance'),\nAnim(1806 , 'RUNNINGMAN'   , 'Dance_B12'             , 34  , 0.57  , 'Bad \"Hollywood swinging\" dance'),\nAnim(1807 , 'RUNNINGMAN'   , 'Dance_B13'             , 32  , 0.53  , 'Bad \"Hollywood swinging\" dance'),\nAnim(1808 , 'RUNNINGMAN'   , 'Dance_B14'             , 34  , 0.57  , 'Bad \"Hollywood swinging\" dance'),\nAnim(1809 , 'RUNNINGMAN'   , 'Dance_B15'             , 32  , 0.53  , 'Bad \"Hollywood swinging\" dance'),\nAnim(1810 , 'RUNNINGMAN'   , 'Dance_B16'             , 34  , 0.57  , 'Bad \"Hollywood swinging\" dance'),\nAnim(1779 , 'RUNNINGMAN'   , 'Dance_G1'              , 32  , 0.53  , 'Good \"Hollywood swinging\" dance'),\nAnim(1780 , 'RUNNINGMAN'   , 'Dance_G2'              , 34  , 0.57  , 'Good \"Hollywood swinging\" dance'),\nAnim(1781 , 'RUNNINGMAN'   , 'Dance_G3'              , 32  , 0.53  , 'Good \"Hollywood swinging\" dance'),", "Anim(1780 , 'RUNNINGMAN'   , 'Dance_G2'              , 34  , 0.57  , 'Good \"Hollywood swinging\" dance'),\nAnim(1781 , 'RUNNINGMAN'   , 'Dance_G3'              , 32  , 0.53  , 'Good \"Hollywood swinging\" dance'),\nAnim(1782 , 'RUNNINGMAN'   , 'Dance_G4'              , 34  , 0.57  , 'Good \"Hollywood swinging\" dance'),\nAnim(1783 , 'RUNNINGMAN'   , 'Dance_G5'              , 32  , 0.53  , 'Good \"Hollywood swinging\" dance'),\nAnim(1784 , 'RUNNINGMAN'   , 'Dance_G6'              , 34  , 0.57  , 'Good \"Hollywood swinging\" dance'),\nAnim(1785 , 'RUNNINGMAN'   , 'Dance_G7'              , 32  , 0.53  , 'Good \"Hollywood swinging\" dance'),\nAnim(1786 , 'RUNNINGMAN'   , 'Dance_G8'              , 34  , 0.57  , 'Good \"Hollywood swinging\" dance'),\nAnim(1787 , 'RUNNINGMAN'   , 'Dance_G9'              , 32  , 0.53  , 'Good \"Hollywood swinging\" dance'),\nAnim(1788 , 'RUNNINGMAN'   , 'Dance_G10'             , 34  , 0.57  , 'Good \"Hollywood swinging\" dance'),\nAnim(1789 , 'RUNNINGMAN'   , 'Dance_G11'             , 32  , 0.53  , 'Good \"Hollywood swinging\" dance'),", "Anim(1788 , 'RUNNINGMAN'   , 'Dance_G10'             , 34  , 0.57  , 'Good \"Hollywood swinging\" dance'),\nAnim(1789 , 'RUNNINGMAN'   , 'Dance_G11'             , 32  , 0.53  , 'Good \"Hollywood swinging\" dance'),\nAnim(1790 , 'RUNNINGMAN'   , 'Dance_G12'             , 34  , 0.57  , 'Good \"Hollywood swinging\" dance'),\nAnim(1791 , 'RUNNINGMAN'   , 'Dance_G13'             , 32  , 0.53  , 'Good \"Hollywood swinging\" dance'),\nAnim(1792 , 'RUNNINGMAN'   , 'Dance_G14'             , 34  , 0.57  , 'Good \"Hollywood swinging\" dance'),\nAnim(1793 , 'RUNNINGMAN'   , 'Dance_G15'             , 32  , 0.53  , 'Good \"Hollywood swinging\" dance'),\nAnim(1794 , 'RUNNINGMAN'   , 'Dance_G16'             , 34  , 0.57  , 'Good \"Hollywood swinging\" dance'),\nAnim(1811 , 'RUNNINGMAN'   , 'dance_loop'            , 70  , 1.17  , 'Dancing loop'),\nAnim(1387 , 'RUSTLER'      , 'Plane_align_LHS'       , 44  , 0.73  , 'Entering a rustler from the left'),\nAnim(1388 , 'RUSTLER'      , 'Plane_close'           , 24  , 0.40  , 'Closing a rustler\\'s door'),", "Anim(1387 , 'RUSTLER'      , 'Plane_align_LHS'       , 44  , 0.73  , 'Entering a rustler from the left'),\nAnim(1388 , 'RUSTLER'      , 'Plane_close'           , 24  , 0.40  , 'Closing a rustler\\'s door'),\nAnim(1389 , 'RUSTLER'      , 'Plane_getin'           , 48  , 0.80  , 'Getting into a rustler'),\nAnim(1390 , 'RUSTLER'      , 'Plane_getout'          , 94  , 1.57  , 'Getting out of a rustler'),\nAnim(1391 , 'RUSTLER'      , 'Plane_open'            , 42  , 0.70  , 'Opening a rustler\\'s door'),\nAnim(1392 , 'RYDER'        , 'RYD_Beckon_01'         , 74  , 1.23  , 'Signalling to come here'),\nAnim(1393 , 'RYDER'        , 'RYD_Beckon_02'         , 60  , 1.00  , 'Signalling truck to drive back'),\nAnim(1394 , 'RYDER'        , 'RYD_Beckon_03'         , 64  , 1.07  , 'Signalling truck to drive back'),\nAnim(1395 , 'RYDER'        , 'RYD_Die_PT1'           , 240 , 4.00  , 'Ryder\\'s death animation part 1'),\nAnim(1396 , 'RYDER'        , 'RYD_Die_PT2'           , 476 , 7.93  , 'Ryder\\'s death animation part 2'),", "Anim(1395 , 'RYDER'        , 'RYD_Die_PT1'           , 240 , 4.00  , 'Ryder\\'s death animation part 1'),\nAnim(1396 , 'RYDER'        , 'RYD_Die_PT2'           , 476 , 7.93  , 'Ryder\\'s death animation part 2'),\nAnim(1397 , 'RYDER'        , 'Van_Crate_L'           , 40  , 0.67  , 'Holding a crate on the left'),\nAnim(1398 , 'RYDER'        , 'Van_Crate_R'           , 40  , 0.67  , 'Holding a crate on the right'),\nAnim(1399 , 'RYDER'        , 'Van_Fall_L'            , 28  , 0.47  , 'Falling on the left side of a truck'),\nAnim(1400 , 'RYDER'        , 'Van_Fall_R'            , 56  , 0.93  , 'Falling on the right side of a truck'),\nAnim(1401 , 'RYDER'        , 'Van_Lean_L'            , 40  , 0.67  , 'Leaning on the left side of the truck'),\nAnim(1402 , 'RYDER'        , 'Van_Lean_R'            , 40  , 0.67  , 'Leaning on the right side of the truck'),\nAnim(1403 , 'RYDER'        , 'VAN_PickUp_E'          , 110 , 1.83  , 'Picking up a crate and doing a 180'),\nAnim(1404 , 'RYDER'        , 'VAN_PickUp_S'          , 90  , 1.50  , 'Doing a 180 and picking up a crate'),", "Anim(1403 , 'RYDER'        , 'VAN_PickUp_E'          , 110 , 1.83  , 'Picking up a crate and doing a 180'),\nAnim(1404 , 'RYDER'        , 'VAN_PickUp_S'          , 90  , 1.50  , 'Doing a 180 and picking up a crate'),\nAnim(1405 , 'RYDER'        , 'Van_Stand'             , 40  , 0.67  , 'Standing while hanging on a truck\\'s side'),\nAnim(1406 , 'RYDER'        , 'Van_Stand_Crate'       , 40  , 0.67  , 'Standing with a crate'),\nAnim(1407 , 'RYDER'        , 'Van_Throw'             , 82  , 1.37  , 'Throwing a crate'),\nAnim(1812 , 'SAMP'         , 'FishingIdle'           , None, None  , 'A fishing idle animation'),\nAnim(1408 , 'SCRATCHING'   , 'scdldlp'               , 40  , 0.67  , 'DJ animation'),\nAnim(1409 , 'SCRATCHING'   , 'scdlulp'               , 40  , 0.67  , 'DJ animation while rising hand'),\nAnim(1410 , 'SCRATCHING'   , 'scdrdlp'               , 40  , 0.67  , 'DJ animation with arm holding head'),\nAnim(1411 , 'SCRATCHING'   , 'scdrulp'               , 40  , 0.67  , 'DJ animation rising hand'),", "Anim(1410 , 'SCRATCHING'   , 'scdrdlp'               , 40  , 0.67  , 'DJ animation with arm holding head'),\nAnim(1411 , 'SCRATCHING'   , 'scdrulp'               , 40  , 0.67  , 'DJ animation rising hand'),\nAnim(1412 , 'SCRATCHING'   , 'sclng_l'               , 60  , 1.00  , 'DJ animation left'),\nAnim(1413 , 'SCRATCHING'   , 'sclng_r'               , 60  , 1.00  , 'DJ animation right'),\nAnim(1414 , 'SCRATCHING'   , 'scmid_l'               , 28  , 0.47  , 'DJ animation left'),\nAnim(1415 , 'SCRATCHING'   , 'scmid_r'               , 28  , 0.47  , 'DJ animation right'),\nAnim(1416 , 'SCRATCHING'   , 'scshrtl'               , 12  , 0.20  , 'DJ animation left'),\nAnim(1417 , 'SCRATCHING'   , 'scshrtr'               , 12  , 0.20  , 'DJ animation right'),\nAnim(1418 , 'SCRATCHING'   , 'sc_ltor'               , 40  , 0.67  , 'DJ animation left'),\nAnim(1419 , 'SCRATCHING'   , 'sc_rtol'               , 40  , 0.67  , 'DJ animation right'),", "Anim(1418 , 'SCRATCHING'   , 'sc_ltor'               , 40  , 0.67  , 'DJ animation left'),\nAnim(1419 , 'SCRATCHING'   , 'sc_rtol'               , 40  , 0.67  , 'DJ animation right'),\nAnim(None , 'SEX'          , 'SEX_1to2_P'            , 60  , 1.00  , 'Change position from eagle to butterfly as male'),\nAnim(None , 'SEX'          , 'SEX_1to2_W'            , 60  , 1.00  , 'Change position from eagle to butterfly as female'),\nAnim(None , 'SEX'          , 'SEX_1_Cum_P'           , 400 , 6.67  , 'Orgasm as male'),\nAnim(None , 'SEX'          , 'SEX_1_Cum_W'           , 400 , 6.67  , 'Orgasm as female'),\nAnim(None , 'SEX'          , 'SEX_1_Fail_P'          , 320 , 5.33  , 'Eagle position as male (fail)'),\nAnim(None , 'SEX'          , 'SEX_1_Fail_W'          , 320 , 5.33  , 'Eagle position as female (fail)'),\nAnim(None , 'SEX'          , 'SEX_1_P'               , 20  , 0.33  , 'Eagle position as male'),\nAnim(None , 'SEX'          , 'SEX_1_W'               , 20  , 0.33  , 'Eagle position as female'),", "Anim(None , 'SEX'          , 'SEX_1_P'               , 20  , 0.33  , 'Eagle position as male'),\nAnim(None , 'SEX'          , 'SEX_1_W'               , 20  , 0.33  , 'Eagle position as female'),\nAnim(None , 'SEX'          , 'SEX_2to3_P'            , 90  , 1.50  , 'Change position from butterfly to doggy as male'),\nAnim(None , 'SEX'          , 'SEX_2to3_W'            , 90  , 1.50  , 'Change position from butterfly to doggy as female'),\nAnim(None , 'SEX'          , 'SEX_2_Fail_P'          , 380 , 6.33  , 'Butterfly position as male (fail)'),\nAnim(None , 'SEX'          , 'SEX_2_Fail_W'          , 380 , 6.33  , 'Butterfly position as female (fail)'),\nAnim(None , 'SEX'          , 'SEX_2_P'               , 20  , 0.33  , 'Butterfly position as male'),\nAnim(None , 'SEX'          , 'SEX_2_W'               , 20  , 0.33  , 'Butterfly position as female'),\nAnim(None , 'SEX'          , 'SEX_3to1_P'            , 60  , 1.00  , 'Change position from doggy to eagle as male'),\nAnim(None , 'SEX'          , 'SEX_3to1_W'            , 60  , 1.00  , 'Change position from doggy to eagle as female'),", "Anim(None , 'SEX'          , 'SEX_3to1_P'            , 60  , 1.00  , 'Change position from doggy to eagle as male'),\nAnim(None , 'SEX'          , 'SEX_3to1_W'            , 60  , 1.00  , 'Change position from doggy to eagle as female'),\nAnim(None , 'SEX'          , 'SEX_3_Fail_P'          , 260 , 4.33  , 'Doggy position as male (fail)'),\nAnim(None , 'SEX'          , 'SEX_3_Fail_W'          , 260 , 4.33  , 'Doggy position as female (fail)'),\nAnim(None , 'SEX'          , 'SEX_3_P'               , 20  , 0.33  , 'Doggy position as male'),\nAnim(None , 'SEX'          , 'SEX_3_W'               , 20  , 0.33  , 'Doggy position as female'),\nAnim(1420 , 'SHAMAL'       , 'SHAMAL_align'          , 12  , 0.20  , 'Aligning to enter a Shamal'),\nAnim(1421 , 'SHAMAL'       , 'SHAMAL_getin_LHS'      , 84  , 1.40  , 'Getting into a Shamal from the left'),\nAnim(1422 , 'SHAMAL'       , 'SHAMAL_getout_LHS'     , 82  , 1.37  , 'Getting off a Shamal from the left'),\nAnim(1423 , 'SHAMAL'       , 'SHAMAL_open'           , 36  , 0.60  , 'Opening a Shamal\\'s door'),", "Anim(1422 , 'SHAMAL'       , 'SHAMAL_getout_LHS'     , 82  , 1.37  , 'Getting off a Shamal from the left'),\nAnim(1423 , 'SHAMAL'       , 'SHAMAL_open'           , 36  , 0.60  , 'Opening a Shamal\\'s door'),\nAnim(1424 , 'SHOP'         , 'ROB_2Idle'             , 70  , 1.17  , 'Idle from robbing animation'),\nAnim(1425 , 'SHOP'         , 'ROB_Loop'              , 160 , 2.67  , 'Robbing loop'),\nAnim(1426 , 'SHOP'         , 'ROB_Loop_Threat'       , 120 , 2.00  , 'Robbing and threatening loop'),\nAnim(1427 , 'SHOP'         , 'ROB_Shifty'            , 340 , 5.67  , 'Putting on a mask'),\nAnim(1428 , 'SHOP'         , 'ROB_StickUp_In'        , 32  , 0.53  , 'Start of stickup animation'),\nAnim(1429 , 'SHOP'         , 'SHP_Duck'              , 40  , 0.67  , 'Ducking animation'),\nAnim(1430 , 'SHOP'         , 'SHP_Duck_Aim'          , 20  , 0.33  , 'Ducking and aiming animation'),\nAnim(1431 , 'SHOP'         , 'SHP_Duck_Fire'         , 50  , 0.83  , 'Ducking and shooting animation'),", "Anim(1430 , 'SHOP'         , 'SHP_Duck_Aim'          , 20  , 0.33  , 'Ducking and aiming animation'),\nAnim(1431 , 'SHOP'         , 'SHP_Duck_Fire'         , 50  , 0.83  , 'Ducking and shooting animation'),\nAnim(1432 , 'SHOP'         , 'SHP_Gun_Aim'           , 38  , 0.63  , 'Aiming a gun'),\nAnim(1433 , 'SHOP'         , 'SHP_Gun_Duck'          , 30  , 0.50  , 'Ducking with a gun'),\nAnim(1434 , 'SHOP'         , 'SHP_Gun_Fire'          , 52  , 0.87  , 'Firing a gun'),\nAnim(1435 , 'SHOP'         , 'SHP_Gun_Grab'          , 52  , 0.87  , 'Grabbing a gun from a counter'),\nAnim(1436 , 'SHOP'         , 'SHP_Gun_Threat'        , 50  , 0.83  , 'Threatening with a gun'),\nAnim(1437 , 'SHOP'         , 'SHP_HandsUp_Scr'       , 40  , 0.67  , 'Putting hands up'),\nAnim(1438 , 'SHOP'         , 'SHP_Jump_Glide'        , 20  , 0.33  , 'Putting foot up'),\nAnim(1439 , 'SHOP'         , 'SHP_Jump_Land'         , 42  , 0.70  , 'Climbing the counter and aiming a gun'),", "Anim(1438 , 'SHOP'         , 'SHP_Jump_Glide'        , 20  , 0.33  , 'Putting foot up'),\nAnim(1439 , 'SHOP'         , 'SHP_Jump_Land'         , 42  , 0.70  , 'Climbing the counter and aiming a gun'),\nAnim(1440 , 'SHOP'         , 'SHP_Jump_Launch'       , 34  , 0.57  , 'Jumping on a counter with a gun'),\nAnim(1441 , 'SHOP'         , 'SHP_Rob_GiveCash'      , 230 , 3.83  , 'Clerk giving cash'),\nAnim(1442 , 'SHOP'         , 'SHP_Rob_HandsUp'       , 160 , 2.67  , 'Clerk raising hands up'),\nAnim(1443 , 'SHOP'         , 'SHP_Rob_React'         , 160 , 2.67  , 'Reaction to being threatened with a gun'),\nAnim(1444 , 'SHOP'         , 'SHP_Serve_End'         , 330 , 5.50  , 'End of shop serving animation'),\nAnim(1445 , 'SHOP'         , 'SHP_Serve_Idle'        , 300 , 5.00  , 'Shop serving idle animation'),\nAnim(1446 , 'SHOP'         , 'SHP_Serve_Loop'        , 250 , 4.17  , 'Counting money from register loop'),\nAnim(1447 , 'SHOP'         , 'SHP_Serve_Start'       , 80  , 1.33  , 'Start of serving animation'),", "Anim(1446 , 'SHOP'         , 'SHP_Serve_Loop'        , 250 , 4.17  , 'Counting money from register loop'),\nAnim(1447 , 'SHOP'         , 'SHP_Serve_Start'       , 80  , 1.33  , 'Start of serving animation'),\nAnim(1448 , 'SHOP'         , 'Smoke_RYD'             , 400 , 6.67  , 'Smoking and leaning back'),\nAnim(1449 , 'SHOTGUN'      , 'shotgun_crouchfire'    , 88  , 1.47  , 'Shotgun crouch fire'),\nAnim(1450 , 'SHOTGUN'      , 'shotgun_fire'          , 88  , 1.47  , 'Shotgun fire'),\nAnim(1451 , 'SHOTGUN'      , 'shotgun_fire_poor'     , 90  , 1.50  , 'Shotgun fire with poor skill'),\nAnim(1452 , 'SILENCED'     , 'CrouchReload'          , 60  , 1.00  , 'Silenced pistol crouched reload'),\nAnim(1453 , 'SILENCED'     , 'SilenceCrouchfire'     , 56  , 0.93  , 'Silenced pistol crouched fire'),\nAnim(1454 , 'SILENCED'     , 'Silence_fire'          , 52  , 0.87  , 'Silenced pistol fire'),\nAnim(1455 , 'SILENCED'     , 'Silence_reload'        , 56  , 0.93  , 'Silenced pistol reload'),", "Anim(1454 , 'SILENCED'     , 'Silence_fire'          , 52  , 0.87  , 'Silenced pistol fire'),\nAnim(1455 , 'SILENCED'     , 'Silence_reload'        , 56  , 0.93  , 'Silenced pistol reload'),\nAnim(1456 , 'SKATE'        , 'skate_idle'            , 60  , 1.00  , 'Rollerblades idle'),\nAnim(1457 , 'SKATE'        , 'skate_run'             , 50  , 0.83  , 'Rollerblades run'),\nAnim(1458 , 'SKATE'        , 'skate_sprint'          , 40  , 0.67  , 'Rollerblades sprint'),\nAnim(1459 , 'SMOKING'      , 'F_smklean_loop'        , 240 , 4.00  , 'Female smoking and leaning loop'),\nAnim(1460 , 'SMOKING'      , 'M_smklean_loop'        , 300 , 5.00  , 'Male smoking and leaning loop'),\nAnim(1461 , 'SMOKING'      , 'M_smkstnd_loop'        , 320 , 5.33  , 'Male smoking and leaning loop'),\nAnim(1462 , 'SMOKING'      , 'M_smk_drag'            , 220 , 3.67  , 'Smoking drag animation'),\nAnim(1463 , 'SMOKING'      , 'M_smk_in'              , 400 , 6.67  , 'Start of smoking animation'),", "Anim(1462 , 'SMOKING'      , 'M_smk_drag'            , 220 , 3.67  , 'Smoking drag animation'),\nAnim(1463 , 'SMOKING'      , 'M_smk_in'              , 400 , 6.67  , 'Start of smoking animation'),\nAnim(1464 , 'SMOKING'      , 'M_smk_loop'            , 200 , 3.33  , 'Smoking animation loop'),\nAnim(1465 , 'SMOKING'      , 'M_smk_out'             , 180 , 3.00  , 'End of smoking animation'),\nAnim(1466 , 'SMOKING'      , 'M_smk_tap'             , 180 , 3.00  , 'Tapping cigarrette animation'),\nAnim(1467 , 'SNIPER'       , 'WEAPON_sniper'         , 88  , 1.47  , 'Aiming with a sniper rifle'),\nAnim(None , 'SnM'          , 'SnM_Caned_Idle_P'      , 120 , 2.00  , 'Bent at 90 degrees ready to be caned as male'),\nAnim(None , 'SnM'          , 'SnM_Caned_Idle_W'      , 120 , 2.00  , 'Position to caning as female'),\nAnim(None , 'SnM'          , 'SnM_Caned_P'           , 80  , 1.33  , 'Bent at 90 degrees being caned as male'),\nAnim(None , 'SnM'          , 'SnM_Caned_W'           , 80  , 1.33  , 'Caning as female'),", "Anim(None , 'SnM'          , 'SnM_Caned_P'           , 80  , 1.33  , 'Bent at 90 degrees being caned as male'),\nAnim(None , 'SnM'          , 'SnM_Caned_W'           , 80  , 1.33  , 'Caning as female'),\nAnim(None , 'SnM'          , 'SnM_Cane_Idle_P'       , 120 , 2.00  , 'Position to caning as male'),\nAnim(None , 'SnM'          , 'SnM_Cane_Idle_W'       , 120 , 2.00  , 'Bent at 90 degrees ready to be caned as female'),\nAnim(None , 'SnM'          , 'SnM_Cane_P'            , 80  , 1.33  , 'Caning as male'),\nAnim(None , 'SnM'          , 'SnM_Cane_W'            , 80  , 1.33  , 'Bent at 90 degrees being caned as female'),\nAnim(None , 'SnM'          , 'SpankedP'              , 80  , 1.33  , 'Bent at 90 degrees being spanked as male'),\nAnim(None , 'SnM'          , 'SpankedW'              , 80  , 1.33  , 'Spanking as female'),\nAnim(None , 'SnM'          , 'Spanked_IdleP'         , 80  , 1.33  , 'Bent at 90 degrees ready to be spanked as male'),\nAnim(None , 'SnM'          , 'Spanked_IdleW'         , 80  , 1.33  , 'Position to spank as female'),", "Anim(None , 'SnM'          , 'Spanked_IdleP'         , 80  , 1.33  , 'Bent at 90 degrees ready to be spanked as male'),\nAnim(None , 'SnM'          , 'Spanked_IdleW'         , 80  , 1.33  , 'Position to spank as female'),\nAnim(None , 'SnM'          , 'SpankingP'             , 80  , 1.33  , 'Spanking as male'),\nAnim(None , 'SnM'          , 'SpankingW'             , 80  , 1.33  , 'Bent over 90 degrees being spanked as female'),\nAnim(None , 'SnM'          , 'Spanking_endP'         , 400 , 6.67  , 'Finish spanking as male'),\nAnim(None , 'SnM'          , 'Spanking_endW'         , 400 , 6.67  , 'Finish being spanked as female'),\nAnim(None , 'SnM'          , 'Spanking_IdleP'        , 80  , 1.33  , 'Position to spank as male'),\nAnim(None , 'SnM'          , 'Spanking_IdleW'        , 80  , 1.33  , 'Bent over 90 degrees ready to be spanked as female'),\nAnim(None , 'SnM'          , 'Spanking_SittingIdleP' , 80  , 1.33  , 'Sitting position to spank as male'),\nAnim(None , 'SnM'          , 'Spanking_SittingIdleW' , 80  , 1.33  , 'Kneeling on the floor ready to be spanked as female'),", "Anim(None , 'SnM'          , 'Spanking_SittingIdleP' , 80  , 1.33  , 'Sitting position to spank as male'),\nAnim(None , 'SnM'          , 'Spanking_SittingIdleW' , 80  , 1.33  , 'Kneeling on the floor ready to be spanked as female'),\nAnim(None , 'SnM'          , 'Spanking_SittingP'     , 60  , 1.00  , 'Sitting and spanking as male'),\nAnim(None , 'SnM'          , 'Spanking_SittingW'     , 60  , 1.00  , 'Kneeling on the floor being spanked as female'),\nAnim(1468 , 'SPRAYCAN'     , 'spraycan_fire'         , 140 , 2.33  , 'Spraying with a spray can'),\nAnim(1469 , 'SPRAYCAN'     , 'spraycan_full'         , 270 , 4.50  , 'Pulling out a spray can'),\nAnim(1470 , 'STRIP'        , 'PLY_CASH'              , 100 , 1.67  , 'Player dropping cash for a stripper'),\nAnim(1471 , 'STRIP'        , 'PUN_CASH'              , 200 , 3.33  , 'Dropping cash for a stripper'),\nAnim(1472 , 'STRIP'        , 'PUN_HOLLER'            , 300 , 5.00  , 'Hollering at a stripper'),\nAnim(1473 , 'STRIP'        , 'PUN_LOOP'              , 116 , 1.93  , 'Entertained by a stripper loop'),", "Anim(1472 , 'STRIP'        , 'PUN_HOLLER'            , 300 , 5.00  , 'Hollering at a stripper'),\nAnim(1473 , 'STRIP'        , 'PUN_LOOP'              , 116 , 1.93  , 'Entertained by a stripper loop'),\nAnim(1474 , 'STRIP'        , 'strip_A'               , 124 , 2.07  , 'Stripper dance'),\nAnim(1475 , 'STRIP'        , 'strip_B'               , 60  , 1.00  , 'Stripper dance'),\nAnim(1476 , 'STRIP'        , 'strip_C'               , 58  , 0.97  , 'Stripper dance'),\nAnim(1477 , 'STRIP'        , 'strip_D'               , 114 , 1.90  , 'Stripper dance'),\nAnim(1478 , 'STRIP'        , 'strip_E'               , 200 , 3.33  , 'Stripper dance'),\nAnim(1479 , 'STRIP'        , 'strip_F'               , 62  , 1.03  , 'Stripper dance'),\nAnim(1480 , 'STRIP'        , 'strip_G'               , 136 , 2.27  , 'Stripper dance'),\nAnim(1481 , 'STRIP'        , 'STR_A2B'               , 240 , 4.00  , 'Stripper dance'),", "Anim(1480 , 'STRIP'        , 'strip_G'               , 136 , 2.27  , 'Stripper dance'),\nAnim(1481 , 'STRIP'        , 'STR_A2B'               , 240 , 4.00  , 'Stripper dance'),\nAnim(1482 , 'STRIP'        , 'STR_B2A'               , 30  , 0.50  , 'Stripper dance'),\nAnim(1483 , 'STRIP'        , 'STR_B2C'               , 300 , 5.00  , 'Stripper dance'),\nAnim(1484 , 'STRIP'        , 'STR_C1'                , 360 , 6.00  , 'Stripper dance'),\nAnim(1485 , 'STRIP'        , 'STR_C2'                , 360 , 6.00  , 'Stripper dance'),\nAnim(1486 , 'STRIP'        , 'STR_C2B'               , 60  , 1.00  , 'Stripper dance'),\nAnim(1487 , 'STRIP'        , 'STR_Loop_A'            , 60  , 1.00  , 'Stripper dance loop'),\nAnim(1488 , 'STRIP'        , 'STR_Loop_B'            , 120 , 2.00  , 'Stripper dance loop'),\nAnim(1489 , 'STRIP'        , 'STR_Loop_C'            , 180 , 3.00  , 'Stripper dance loop'),", "Anim(1488 , 'STRIP'        , 'STR_Loop_B'            , 120 , 2.00  , 'Stripper dance loop'),\nAnim(1489 , 'STRIP'        , 'STR_Loop_C'            , 180 , 3.00  , 'Stripper dance loop'),\nAnim(1490 , 'SUNBATHE'     , 'batherdown'            , 236 , 3.93  , 'Lay down to sunbathe'),\nAnim(1491 , 'SUNBATHE'     , 'batherup'              , 738 , 12.30 , 'Get up after sunbathing'),\nAnim(1492 , 'SUNBATHE'     , 'Lay_Bac_in'            , 140 , 2.33  , 'Start of male sunbathe animation'),\nAnim(1493 , 'SUNBATHE'     , 'Lay_Bac_out'           , 180 , 3.00  , 'End of male sunbathe animation'),\nAnim(1494 , 'SUNBATHE'     , 'ParkSit_M_IdleA'       , 200 , 3.33  , 'Male sitting idle animation'),\nAnim(1495 , 'SUNBATHE'     , 'ParkSit_M_IdleB'       , 160 , 2.67  , 'Male sitting idle animation'),\nAnim(1496 , 'SUNBATHE'     , 'ParkSit_M_IdleC'       , 260 , 4.33  , 'Male sitting idle animation'),\nAnim(1497 , 'SUNBATHE'     , 'ParkSit_M_in'          , 140 , 2.33  , 'Start of park sitting animation'),", "Anim(1496 , 'SUNBATHE'     , 'ParkSit_M_IdleC'       , 260 , 4.33  , 'Male sitting idle animation'),\nAnim(1497 , 'SUNBATHE'     , 'ParkSit_M_in'          , 140 , 2.33  , 'Start of park sitting animation'),\nAnim(1498 , 'SUNBATHE'     , 'ParkSit_M_out'         , 120 , 2.00  , 'End of park sitting animation'),\nAnim(1499 , 'SUNBATHE'     , 'ParkSit_W_idleA'       , 200 , 3.33  , 'Female park sitting idle animation'),\nAnim(1500 , 'SUNBATHE'     , 'ParkSit_W_idleB'       , 300 , 5.00  , 'Female park sitting idle animation'),\nAnim(1501 , 'SUNBATHE'     , 'ParkSit_W_idleC'       , 180 , 3.00  , 'Female park sitting idle animation'),\nAnim(1502 , 'SUNBATHE'     , 'ParkSit_W_in'          , 240 , 4.00  , 'Start of female park sitting'),\nAnim(1503 , 'SUNBATHE'     , 'ParkSit_W_out'         , 160 , 2.67  , 'End of female park sitting'),\nAnim(1504 , 'SUNBATHE'     , 'SBATHE_F_LieB2Sit'     , 100 , 1.67  , 'Lying to sitting position'),\nAnim(1505 , 'SUNBATHE'     , 'SBATHE_F_Out'          , 120 , 2.00  , 'Sitting to standing up postion'),", "Anim(1504 , 'SUNBATHE'     , 'SBATHE_F_LieB2Sit'     , 100 , 1.67  , 'Lying to sitting position'),\nAnim(1505 , 'SUNBATHE'     , 'SBATHE_F_Out'          , 120 , 2.00  , 'Sitting to standing up postion'),\nAnim(1506 , 'SUNBATHE'     , 'SitnWait_in_W'         , 280 , 4.67  , 'Sitting and waiting animation'),\nAnim(1507 , 'SUNBATHE'     , 'SitnWait_out_W'        , 160 , 2.67  , 'End of sitting and waiting animation'),\nAnim(1508 , 'SWAT'         , 'gnstwall_injurd'       , 120 , 2.00  , 'Injured up against a wall animation'),\nAnim(1509 , 'SWAT'         , 'JMP_Wall1m_180'        , 70  , 1.17  , 'Jumping a low wall and doing a 180'),\nAnim(1510 , 'SWAT'         , 'Rail_fall'             , 180 , 3.00  , 'Running and falling off a railing'),\nAnim(1511 , 'SWAT'         , 'Rail_fall_crawl'       , 340 , 5.67  , 'Crawling on the ground and dying'),\nAnim(1512 , 'SWAT'         , 'swt_breach_01'         , 328 , 5.47  , 'SWAT breaching'),\nAnim(1513 , 'SWAT'         , 'swt_breach_02'         , 320 , 5.33  , 'SWAT breaching'),", "Anim(1512 , 'SWAT'         , 'swt_breach_01'         , 328 , 5.47  , 'SWAT breaching'),\nAnim(1513 , 'SWAT'         , 'swt_breach_02'         , 320 , 5.33  , 'SWAT breaching'),\nAnim(1514 , 'SWAT'         , 'swt_breach_03'         , 258 , 4.30  , 'SWAT breaching'),\nAnim(1515 , 'SWAT'         , 'swt_go'                , 100 , 1.67  , 'SWAT command to move in'),\nAnim(1516 , 'SWAT'         , 'swt_lkt'               , 180 , 3.00  , 'SWAT command to watch back'),\nAnim(1517 , 'SWAT'         , 'swt_sty'               , 70  , 1.17  , 'SWAT command to hold/stay'),\nAnim(1518 , 'SWAT'         , 'swt_vent_01'           , 284 , 4.73  , 'Jumping down a vent'),\nAnim(1519 , 'SWAT'         , 'swt_vent_02'           , 266 , 4.43  , 'Jumping down a vent (feet first)'),\nAnim(1520 , 'SWAT'         , 'swt_vnt_sht_die'       , 40  , 0.67  , 'Getting shot in a vent'),\nAnim(1521 , 'SWAT'         , 'swt_vnt_sht_in'        , 96  , 1.60  , 'Looking down from a vent'),", "Anim(1520 , 'SWAT'         , 'swt_vnt_sht_die'       , 40  , 0.67  , 'Getting shot in a vent'),\nAnim(1521 , 'SWAT'         , 'swt_vnt_sht_in'        , 96  , 1.60  , 'Looking down from a vent'),\nAnim(1522 , 'SWAT'         , 'swt_vnt_sht_loop'      , 16  , 0.27  , 'Looking down from a vent'),\nAnim(1523 , 'SWAT'         , 'swt_wllpk_L'           , 160 , 2.67  , 'Peeking left from cover'),\nAnim(1524 , 'SWAT'         , 'swt_wllpk_L_back'      , 30  , 0.50  , 'Going back into cover from left'),\nAnim(1525 , 'SWAT'         , 'swt_wllpk_R'           , 220 , 3.67  , 'Peeking right from cover'),\nAnim(1526 , 'SWAT'         , 'swt_wllpk_R_back'      , 26  , 0.43  , 'Going back into cover from right'),\nAnim(1527 , 'SWAT'         , 'swt_wllshoot_in_L'     , 60  , 1.00  , 'Taking cover on left side'),\nAnim(1528 , 'SWAT'         , 'swt_wllshoot_in_R'     , 78  , 1.30  , 'Taking cover on right side'),\nAnim(1529 , 'SWAT'         , 'swt_wllshoot_out_L'    , 120 , 2.00  , 'Going back to left cover'),", "Anim(1528 , 'SWAT'         , 'swt_wllshoot_in_R'     , 78  , 1.30  , 'Taking cover on right side'),\nAnim(1529 , 'SWAT'         , 'swt_wllshoot_out_L'    , 120 , 2.00  , 'Going back to left cover'),\nAnim(1530 , 'SWAT'         , 'swt_wllshoot_out_R'    , 86  , 1.43  , 'Going back to right cover'),\nAnim(1531 , 'SWEET'        , 'ho_ass_slapped'        , 120 , 2.00  , 'Ho getting her ass slapped'),\nAnim(1532 , 'SWEET'        , 'LaFin_Player'          , 1600, 26.67 , 'Running up to injured person and kneeling down'),\nAnim(1533 , 'SWEET'        , 'LaFin_Sweet'           , 1600, 26.67 , 'Holding a stomach gunshot wound'),\nAnim(1534 , 'SWEET'        , 'plyr_hndshldr_01'      , 240 , 4.00  , 'Getting shoulder held by someone'),\nAnim(1535 , 'SWEET'        , 'sweet_ass_slap'        , 120 , 2.00  , 'Sweet slaps a ho\\'s ass'),\nAnim(1536 , 'SWEET'        , 'sweet_hndshldr_01'     , 240 , 4.00  , 'Holding onto someone\\'s shoulder'),\nAnim(1537 , 'SWEET'        , 'Sweet_injuredloop'     , 120 , 2.00  , 'Injured animation loop'),", "Anim(1536 , 'SWEET'        , 'sweet_hndshldr_01'     , 240 , 4.00  , 'Holding onto someone\\'s shoulder'),\nAnim(1537 , 'SWEET'        , 'Sweet_injuredloop'     , 120 , 2.00  , 'Injured animation loop'),\nAnim(1538 , 'SWIM'         , 'Swim_Breast'           , 78  , 1.30  , 'Breast swimming'),\nAnim(1539 , 'SWIM'         , 'SWIM_crawl'            , 54  , 0.90  , 'Crawl swimming'),\nAnim(1540 , 'SWIM'         , 'Swim_Dive_Under'       , 64  , 1.07  , 'Diving under the water'),\nAnim(1541 , 'SWIM'         , 'Swim_Glide'            , 88  , 1.47  , 'Gliding under water'),\nAnim(1542 , 'SWIM'         , 'Swim_jumpout'          , 20  , 0.33  , 'Jumping out the water'),\nAnim(1543 , 'SWIM'         , 'Swim_Tread'            , 78  , 1.30  , 'Idle swimming'),\nAnim(1544 , 'SWIM'         , 'Swim_Under'            , 90  , 1.50  , 'Swimming further below'),\nAnim(1545 , 'SWORD'        , 'sword_1'               , 52  , 0.87  , 'Sword swing'),", "Anim(1544 , 'SWIM'         , 'Swim_Under'            , 90  , 1.50  , 'Swimming further below'),\nAnim(1545 , 'SWORD'        , 'sword_1'               , 52  , 0.87  , 'Sword swing'),\nAnim(1546 , 'SWORD'        , 'sword_2'               , 64  , 1.07  , 'Sword swing'),\nAnim(1547 , 'SWORD'        , 'sword_3'               , 48  , 0.80  , 'Sword swing'),\nAnim(1548 , 'SWORD'        , 'sword_4'               , 66  , 1.10  , 'Sword swing'),\nAnim(1549 , 'SWORD'        , 'sword_block'           , 28  , 0.47  , 'Sword block'),\nAnim(1550 , 'SWORD'        , 'Sword_Hit_1'           , 50  , 0.83  , 'Getting hit by a sword'),\nAnim(1551 , 'SWORD'        , 'Sword_Hit_2'           , 62  , 1.03  , 'Getting hit by a sword'),\nAnim(1552 , 'SWORD'        , 'Sword_Hit_3'           , 52  , 0.87  , 'Getting hit by a sword'),\nAnim(1553 , 'SWORD'        , 'sword_IDLE'            , 60  , 1.00  , 'Sword idle'),", "Anim(1552 , 'SWORD'        , 'Sword_Hit_3'           , 52  , 0.87  , 'Getting hit by a sword'),\nAnim(1553 , 'SWORD'        , 'sword_IDLE'            , 60  , 1.00  , 'Sword idle'),\nAnim(1554 , 'SWORD'        , 'sword_part'            , 40  , 0.67  , 'Sword running attack'),\nAnim(1555 , 'TANK'         , 'TANK_align_LHS'        , 86  , 1.43  , 'Climbing a tank from the left'),\nAnim(1556 , 'TANK'         , 'TANK_close_LHS'        , 20  , 0.33  , 'Closing the hatch of a tank'),\nAnim(1557 , 'TANK'         , 'TANK_doorlocked'       , 32  , 0.53  , 'Trying to open a locked hatch of a tank'),\nAnim(1558 , 'TANK'         , 'TANK_getin_LHS'        , 26  , 0.43  , 'Getting into a tank from the left'),\nAnim(1559 , 'TANK'         , 'TANK_getout_LHS'       , 118 , 1.97  , 'Getting out of a tank from the left'),\nAnim(1560 , 'TANK'         , 'TANK_open_LHS'         , 18  , 0.30  , 'Opening the tank hatch from the left'),\nAnim(1561 , 'TATTOOS'      , 'TAT_ArmL_In_O'         , 50  , 0.83  , 'Bugged animation'),", "Anim(1560 , 'TANK'         , 'TANK_open_LHS'         , 18  , 0.30  , 'Opening the tank hatch from the left'),\nAnim(1561 , 'TATTOOS'      , 'TAT_ArmL_In_O'         , 50  , 0.83  , 'Bugged animation'),\nAnim(1562 , 'TATTOOS'      , 'TAT_ArmL_In_P'         , 50  , 0.83  , 'Pulling left sleeve down'),\nAnim(1563 , 'TATTOOS'      , 'TAT_ArmL_In_T'         , 50  , 0.83  , 'Examining tattoo on left lower arm'),\nAnim(1564 , 'TATTOOS'      , 'TAT_ArmL_Out_O'        , 56  , 0.93  , 'Bugged animation'),\nAnim(1565 , 'TATTOOS'      , 'TAT_ArmL_Out_P'        , 150 , 2.50  , 'Pulling left sleeve up'),\nAnim(1566 , 'TATTOOS'      , 'TAT_ArmL_Out_T'        , 56  , 0.93  , 'Stopping to examine tattoo'),\nAnim(1567 , 'TATTOOS'      , 'TAT_ArmL_Pose_O'       , 50  , 0.83  , 'Bugged animation'),\nAnim(1568 , 'TATTOOS'      , 'TAT_ArmL_Pose_P'       , 50  , 0.83  , 'Posing with left shoulder out'),\nAnim(1569 , 'TATTOOS'      , 'TAT_ArmL_Pose_T'       , 50  , 0.83  , 'Posing with left arm stretched out'),", "Anim(1568 , 'TATTOOS'      , 'TAT_ArmL_Pose_P'       , 50  , 0.83  , 'Posing with left shoulder out'),\nAnim(1569 , 'TATTOOS'      , 'TAT_ArmL_Pose_T'       , 50  , 0.83  , 'Posing with left arm stretched out'),\nAnim(1570 , 'TATTOOS'      , 'TAT_ArmR_In_O'         , 50  , 0.83  , 'Bugged animation'),\nAnim(1571 , 'TATTOOS'      , 'TAT_ArmR_In_P'         , 50  , 0.83  , 'Pulling right sleeve down'),\nAnim(1572 , 'TATTOOS'      , 'TAT_ArmR_In_T'         , 50  , 0.83  , 'Examining tattoo on right lower arm'),\nAnim(1573 , 'TATTOOS'      , 'TAT_ArmR_Out_O'        , 60  , 1.00  , 'Bugged animation'),\nAnim(1574 , 'TATTOOS'      , 'TAT_ArmR_Out_P'        , 150 , 2.50  , 'Pulling right sleeve up'),\nAnim(1575 , 'TATTOOS'      , 'TAT_ArmR_Out_T'        , 60  , 1.00  , 'Stopping to examine tattoo'),\nAnim(1576 , 'TATTOOS'      , 'TAT_ArmR_Pose_O'       , 50  , 0.83  , 'Bugged animation'),\nAnim(1577 , 'TATTOOS'      , 'TAT_ArmR_Pose_P'       , 50  , 0.83  , 'Posing with right shoulder out'),", "Anim(1576 , 'TATTOOS'      , 'TAT_ArmR_Pose_O'       , 50  , 0.83  , 'Bugged animation'),\nAnim(1577 , 'TATTOOS'      , 'TAT_ArmR_Pose_P'       , 50  , 0.83  , 'Posing with right shoulder out'),\nAnim(1578 , 'TATTOOS'      , 'TAT_ArmR_Pose_T'       , 50  , 0.83  , 'Posing with right arm stretched out'),\nAnim(1579 , 'TATTOOS'      , 'TAT_Back_In_O'         , 50  , 0.83  , 'Bugged animation'),\nAnim(1580 , 'TATTOOS'      , 'TAT_Back_In_P'         , 50  , 0.83  , 'Posing with back'),\nAnim(1581 , 'TATTOOS'      , 'TAT_Back_In_T'         , 50  , 0.83  , 'Posing with back'),\nAnim(1582 , 'TATTOOS'      , 'TAT_Back_Out_O'        , 56  , 0.93  , 'Bugged animation'),\nAnim(1583 , 'TATTOOS'      , 'TAT_Back_Out_P'        , 150 , 2.50  , 'Admiring back tattoo'),\nAnim(1584 , 'TATTOOS'      , 'TAT_Back_Out_T'        , 56  , 0.93  , 'End of admiring back tattoo animation'),\nAnim(1585 , 'TATTOOS'      , 'TAT_Back_Pose_O'       , 50  , 0.83  , 'Bugged animation'),", "Anim(1584 , 'TATTOOS'      , 'TAT_Back_Out_T'        , 56  , 0.93  , 'End of admiring back tattoo animation'),\nAnim(1585 , 'TATTOOS'      , 'TAT_Back_Pose_O'       , 50  , 0.83  , 'Bugged animation'),\nAnim(1586 , 'TATTOOS'      , 'TAT_Back_Pose_P'       , 50  , 0.83  , 'Posing with back'),\nAnim(1587 , 'TATTOOS'      , 'TAT_Back_Pose_T'       , 50  , 0.83  , 'Posing with back'),\nAnim(1588 , 'TATTOOS'      , 'TAT_Back_Sit_In_P'     , 50  , 0.83  , 'Correcting position while sitting'),\nAnim(1589 , 'TATTOOS'      , 'TAT_Back_Sit_Loop_P'   , 160 , 2.67  , 'Sitting loop'),\nAnim(1590 , 'TATTOOS'      , 'TAT_Back_Sit_Out_P'    , 50  , 0.83  , 'End of sitting loop'),\nAnim(1591 , 'TATTOOS'      , 'TAT_Bel_In_O'          , 50  , 0.83  , 'Bugged animation'),\nAnim(1592 , 'TATTOOS'      , 'TAT_Bel_In_T'          , 50  , 0.83  , 'Posing with back'),\nAnim(1593 , 'TATTOOS'      , 'TAT_Bel_Out_O'         , 58  , 0.97  , 'Bugged animation'),", "Anim(1592 , 'TATTOOS'      , 'TAT_Bel_In_T'          , 50  , 0.83  , 'Posing with back'),\nAnim(1593 , 'TATTOOS'      , 'TAT_Bel_Out_O'         , 58  , 0.97  , 'Bugged animation'),\nAnim(1594 , 'TATTOOS'      , 'TAT_Bel_Out_T'         , 58  , 0.97  , 'End of back tattoo animation'),\nAnim(1595 , 'TATTOOS'      , 'TAT_Bel_Pose_O'        , 50  , 0.83  , 'Bugged animation'),\nAnim(1596 , 'TATTOOS'      , 'TAT_Bel_Pose_T'        , 50  , 0.83  , 'Getting tattoo on the chest'),\nAnim(1597 , 'TATTOOS'      , 'TAT_Che_In_O'          , 50  , 0.83  , 'Bugged animation'),\nAnim(1598 , 'TATTOOS'      , 'TAT_Che_In_P'          , 50  , 0.83  , 'Start of tattoo animation'),\nAnim(1599 , 'TATTOOS'      , 'TAT_Che_In_T'          , 50  , 0.83  , 'Start of tattoo animation'),\nAnim(1600 , 'TATTOOS'      , 'TAT_Che_Out_O'         , 56  , 0.93  , 'Bugged animation'),\nAnim(1601 , 'TATTOOS'      , 'TAT_Che_Out_P'         , 150 , 2.50  , 'Admiring chest tattoo'),", "Anim(1600 , 'TATTOOS'      , 'TAT_Che_Out_O'         , 56  , 0.93  , 'Bugged animation'),\nAnim(1601 , 'TATTOOS'      , 'TAT_Che_Out_P'         , 150 , 2.50  , 'Admiring chest tattoo'),\nAnim(1602 , 'TATTOOS'      , 'TAT_Che_Out_T'         , 56  , 0.93  , 'End of chest tattoo'),\nAnim(1603 , 'TATTOOS'      , 'TAT_Che_Pose_O'        , 50  , 0.83  , 'Bugged animation'),\nAnim(1604 , 'TATTOOS'      , 'TAT_Che_Pose_P'        , 50  , 0.83  , 'Posing with chest tattoo'),\nAnim(1605 , 'TATTOOS'      , 'TAT_Che_Pose_T'        , 50  , 0.83  , 'Tattooing a body part'),\nAnim(1606 , 'TATTOOS'      , 'TAT_Drop_O'            , 30  , 0.50  , 'Bugged animation'),\nAnim(1607 , 'TATTOOS'      , 'TAT_Idle_Loop_O'       , 160 , 2.67  , 'Bugged animation'),\nAnim(1608 , 'TATTOOS'      , 'TAT_Idle_Loop_T'       , 160 , 2.67  , 'Sitting on a chair loop'),\nAnim(1609 , 'TATTOOS'      , 'TAT_Sit_In_O'          , 140 , 2.33  , 'Bugged animation'),", "Anim(1608 , 'TATTOOS'      , 'TAT_Idle_Loop_T'       , 160 , 2.67  , 'Sitting on a chair loop'),\nAnim(1609 , 'TATTOOS'      , 'TAT_Sit_In_O'          , 140 , 2.33  , 'Bugged animation'),\nAnim(1610 , 'TATTOOS'      , 'TAT_Sit_In_P'          , 140 , 2.33  , 'Walking and sitting on a chair'),\nAnim(1611 , 'TATTOOS'      , 'TAT_Sit_In_T'          , 140 , 2.33  , 'Tattoo artist getting a customer'),\nAnim(1612 , 'TATTOOS'      , 'TAT_Sit_Loop_O'        , 160 , 2.67  , 'Bugged animation'),\nAnim(1613 , 'TATTOOS'      , 'TAT_Sit_Loop_P'        , 160 , 2.67  , 'Browsing for tattoos'),\nAnim(1614 , 'TATTOOS'      , 'TAT_Sit_Loop_T'        , 160 , 2.67  , 'Waiting for tattoo order'),\nAnim(1615 , 'TATTOOS'      , 'TAT_Sit_Out_O'         , 170 , 2.83  , 'Bugged animation'),\nAnim(1616 , 'TATTOOS'      , 'TAT_Sit_Out_P'         , 130 , 2.17  , 'Getting off the chair and walking'),\nAnim(1617 , 'TATTOOS'      , 'TAT_Sit_Out_T'         , 170 , 2.83  , 'Tattoo artist wishing customer well'),", "Anim(1616 , 'TATTOOS'      , 'TAT_Sit_Out_P'         , 130 , 2.17  , 'Getting off the chair and walking'),\nAnim(1617 , 'TATTOOS'      , 'TAT_Sit_Out_T'         , 170 , 2.83  , 'Tattoo artist wishing customer well'),\nAnim(1618 , 'TEC'          , 'TEC_crouchfire'        , 58  , 0.97  , 'Tec9 crouch fire'),\nAnim(1619 , 'TEC'          , 'TEC_crouchreload'      , 80  , 1.33  , 'Tec9 crouch reload'),\nAnim(1620 , 'TEC'          , 'TEC_fire'              , 66  , 1.10  , 'Tec9 fire'),\nAnim(1621 , 'TEC'          , 'TEC_reload'            , 90  , 1.50  , 'Tec9 reload'),\nAnim(1622 , 'TRAIN'        , 'tran_gtup'             , 190 , 3.17  , 'Getting up on the train'),\nAnim(1623 , 'TRAIN'        , 'tran_hng'              , 140 , 2.33  , 'Hanging from a train'),\nAnim(1624 , 'TRAIN'        , 'tran_ouch'             , 70  , 1.17  , 'Getting killed by a steel beam'),\nAnim(1625 , 'TRAIN'        , 'tran_stmb'             , 140 , 2.33  , 'Stumbling on a train'),", "Anim(1624 , 'TRAIN'        , 'tran_ouch'             , 70  , 1.17  , 'Getting killed by a steel beam'),\nAnim(1625 , 'TRAIN'        , 'tran_stmb'             , 140 , 2.33  , 'Stumbling on a train'),\nAnim(1626 , 'TRUCK'        , 'TRUCK_ALIGN_LHS'       , 34  , 0.57  , 'Climb onto a truck from the left'),\nAnim(1627 , 'TRUCK'        , 'TRUCK_ALIGN_RHS'       , 34  , 0.57  , 'Climb onto a truck from the right'),\nAnim(1628 , 'TRUCK'        , 'TRUCK_closedoor_LHS'   , 24  , 0.40  , 'Close left truck door'),\nAnim(1629 , 'TRUCK'        , 'TRUCK_closedoor_RHS'   , 24  , 0.40  , 'Close right truck door'),\nAnim(1630 , 'TRUCK'        , 'TRUCK_close_LHS'       , 44  , 0.73  , 'Close door on the right'),\nAnim(1631 , 'TRUCK'        , 'TRUCK_close_RHS'       , 44  , 0.73  , 'Close door on the left'),\nAnim(1632 , 'TRUCK'        , 'TRUCK_getin_LHS'       , 36  , 0.60  , 'Getting into a truck on the left'),\nAnim(1633 , 'TRUCK'        , 'TRUCK_getin_RHS'       , 36  , 0.60  , 'Getting into a truck from the right'),", "Anim(1632 , 'TRUCK'        , 'TRUCK_getin_LHS'       , 36  , 0.60  , 'Getting into a truck on the left'),\nAnim(1633 , 'TRUCK'        , 'TRUCK_getin_RHS'       , 36  , 0.60  , 'Getting into a truck from the right'),\nAnim(1634 , 'TRUCK'        , 'TRUCK_getout_LHS'      , 48  , 0.80  , 'Getting out of a truck from the left'),\nAnim(1635 , 'TRUCK'        , 'TRUCK_getout_RHS'      , 48  , 0.80  , 'Getting out of a track from the right'),\nAnim(1636 , 'TRUCK'        , 'TRUCK_jackedLHS'       , 104 , 1.73  , 'Getting jacked from a truck on the left'),\nAnim(1637 , 'TRUCK'        , 'TRUCK_jackedRHS'       , 90  , 1.50  , 'Getting jacked from a truck on the right'),\nAnim(1638 , 'TRUCK'        , 'TRUCK_open_LHS'        , 32  , 0.53  , 'Open left truck door'),\nAnim(1639 , 'TRUCK'        , 'TRUCK_open_RHS'        , 32  , 0.53  , 'Open right truck door'),\nAnim(1640 , 'TRUCK'        , 'TRUCK_pullout_LHS'     , 54  , 0.90  , 'Pulling out the truck driver from the left'),\nAnim(1641 , 'TRUCK'        , 'TRUCK_pullout_RHS'     , 54  , 0.90  , 'Pulling out the truck passanger from the right'),", "Anim(1640 , 'TRUCK'        , 'TRUCK_pullout_LHS'     , 54  , 0.90  , 'Pulling out the truck driver from the left'),\nAnim(1641 , 'TRUCK'        , 'TRUCK_pullout_RHS'     , 54  , 0.90  , 'Pulling out the truck passanger from the right'),\nAnim(1642 , 'TRUCK'        , 'TRUCK_Shuffle'         , 24  , 0.40  , 'Truck shuffle'),\nAnim(1643 , 'UZI'          , 'UZI_crouchfire'        , 38  , 0.63  , 'Uzi crouch fire'),\nAnim(1644 , 'UZI'          , 'UZI_crouchreload'      , 82  , 1.37  , 'Uzi crouch reload'),\nAnim(1645 , 'UZI'          , 'UZI_fire'              , 34  , 0.57  , 'Uzi fire'),\nAnim(1646 , 'UZI'          , 'UZI_fire_poor'         , 32  , 0.53  , 'Uzi fire with poor skill'),\nAnim(1647 , 'UZI'          , 'UZI_reload'            , 84  , 1.40  , 'Uzi reload'),\nAnim(1648 , 'VAN'          , 'VAN_close_back_LHS'    , 20  , 0.33  , 'Closing the back left door of a van'),\nAnim(1649 , 'VAN'          , 'VAN_close_back_RHS'    , 20  , 0.33  , 'Closing the back right door of a van'),", "Anim(1648 , 'VAN'          , 'VAN_close_back_LHS'    , 20  , 0.33  , 'Closing the back left door of a van'),\nAnim(1649 , 'VAN'          , 'VAN_close_back_RHS'    , 20  , 0.33  , 'Closing the back right door of a van'),\nAnim(1650 , 'VAN'          , 'VAN_getin_Back_LHS'    , 36  , 0.60  , 'Getting into the back left seat of a van'),\nAnim(1651 , 'VAN'          , 'VAN_getin_Back_RHS'    , 36  , 0.60  , 'Getting into the back right seat of a van'),\nAnim(1652 , 'VAN'          , 'VAN_getout_back_LHS'   , 38  , 0.63  , 'Getting out of the left back seat of a van'),\nAnim(1653 , 'VAN'          , 'VAN_getout_back_RHS'   , 38  , 0.63  , 'Getting out of the right back seat of a van'),\nAnim(1654 , 'VAN'          , 'VAN_open_back_LHS'     , 58  , 0.97  , 'Opening the back left door of a van'),\nAnim(1655 , 'VAN'          , 'VAN_open_back_RHS'     , 58  , 0.97  , 'Opening the back right door of a van'),\nAnim(1656 , 'VENDING'      , 'VEND_Drink2_P'         , 200 , 3.33  , 'Drinking from a vending machine'),\nAnim(1657 , 'VENDING'      , 'VEND_Drink_P'          , 80  , 1.33  , 'Drinking from a vending machine'),", "Anim(1656 , 'VENDING'      , 'VEND_Drink2_P'         , 200 , 3.33  , 'Drinking from a vending machine'),\nAnim(1657 , 'VENDING'      , 'VEND_Drink_P'          , 80  , 1.33  , 'Drinking from a vending machine'),\nAnim(1658 , 'VENDING'      , 'vend_eat1_P'           , 260 , 4.33  , 'Eating from a vending machine'),\nAnim(1659 , 'VENDING'      , 'VEND_Eat_P'            , 100 , 1.67  , 'Eating from a vending machine'),\nAnim(1660 , 'VENDING'      , 'VEND_Use'              , 156 , 2.60  , 'Using a vending machine'),\nAnim(1661 , 'VENDING'      , 'VEND_Use_pt2'          , 24  , 0.40  , 'Using a vending machine'),\nAnim(1662 , 'VORTEX'       , 'CAR_jumpin_LHS'        , 60  , 1.00  , 'Entering a vortex from the left'),\nAnim(1663 , 'VORTEX'       , 'CAR_jumpin_RHS'        , 56  , 0.93  , 'Entering a vortex from the right'),\nAnim(1664 , 'VORTEX'       , 'vortex_getout_LHS'     , 60  , 1.00  , 'Exiting a vortex from the left'),\nAnim(1665 , 'VORTEX'       , 'vortex_getout_RHS'     , 60  , 1.00  , 'Exiting a vortex from the right'),", "Anim(1664 , 'VORTEX'       , 'vortex_getout_LHS'     , 60  , 1.00  , 'Exiting a vortex from the left'),\nAnim(1665 , 'VORTEX'       , 'vortex_getout_RHS'     , 60  , 1.00  , 'Exiting a vortex from the right'),\nAnim(1666 , 'WAYFARER'     , 'WF_Back'               , 6   , 0.10  , 'Wayfarer lean back'),\nAnim(1667 , 'WAYFARER'     , 'WF_drivebyFT'          , 12  , 0.20  , 'Wayfarer drive by front'),\nAnim(1668 , 'WAYFARER'     , 'WF_drivebyLHS'         , 12  , 0.20  , 'Wayfarer drive by left'),\nAnim(1669 , 'WAYFARER'     , 'WF_drivebyRHS'         , 12  , 0.20  , 'Wayfarer drive by right'),\nAnim(1670 , 'WAYFARER'     , 'WF_Fwd'                , 12  , 0.20  , 'Wayfarer lean front'),\nAnim(1671 , 'WAYFARER'     , 'WF_getoffBACK'         , 104 , 1.73  , 'Bailing from a Wayfarer at high speed'),\nAnim(1672 , 'WAYFARER'     , 'WF_getoffLHS'          , 54  , 0.90  , 'Getting off a Wayfarer from the left'),\nAnim(1673 , 'WAYFARER'     , 'WF_getoffRHS'          , 54  , 0.90  , 'Getting off a Wayfarer from the right'),", "Anim(1672 , 'WAYFARER'     , 'WF_getoffLHS'          , 54  , 0.90  , 'Getting off a Wayfarer from the left'),\nAnim(1673 , 'WAYFARER'     , 'WF_getoffRHS'          , 54  , 0.90  , 'Getting off a Wayfarer from the right'),\nAnim(1674 , 'WAYFARER'     , 'WF_hit'                , 2   , 0.03  , 'Getting hit on a Wayfarer'),\nAnim(1675 , 'WAYFARER'     , 'WF_jumponL'            , 54  , 0.90  , 'Getting on a Wayfarer from the left'),\nAnim(1676 , 'WAYFARER'     , 'WF_jumponR'            , 54  , 0.90  , 'Getting on a Wayfarer from the right'),\nAnim(1677 , 'WAYFARER'     , 'WF_kick'               , 62  , 1.03  , 'Getting on a Wayfarer from the front'),\nAnim(1678 , 'WAYFARER'     , 'WF_Left'               , 8   , 0.13  , 'Wayfarer sway left'),\nAnim(1679 , 'WAYFARER'     , 'WF_passenger'          , 2   , 0.03  , 'Wayfarer passanger anim'),\nAnim(1680 , 'WAYFARER'     , 'WF_pushes'             , 58  , 0.97  , 'Wayfarer reverse'),\nAnim(1681 , 'WAYFARER'     , 'WF_Ride'               , 2   , 0.03  , 'Wayfarer riding'),", "Anim(1680 , 'WAYFARER'     , 'WF_pushes'             , 58  , 0.97  , 'Wayfarer reverse'),\nAnim(1681 , 'WAYFARER'     , 'WF_Ride'               , 2   , 0.03  , 'Wayfarer riding'),\nAnim(1682 , 'WAYFARER'     , 'WF_Right'              , 8   , 0.13  , 'Wayfarer sway right'),\nAnim(1683 , 'WAYFARER'     , 'WF_Still'              , 2   , 0.03  , 'Wayfarer still riding'),\nAnim(1684 , 'WEAPONS'      , 'SHP_1H_Lift'           , 60  , 1.00  , 'Shop owner lifts a pistol'),\nAnim(1685 , 'WEAPONS'      , 'SHP_1H_Lift_End'       , 20  , 0.33  , 'Shop owner puts a pistol on the counter'),\nAnim(1686 , 'WEAPONS'      , 'SHP_1H_Ret'            , 50  , 0.83  , 'Shop owner retracts a pistol'),\nAnim(1687 , 'WEAPONS'      , 'SHP_1H_Ret_S'          , 20  , 0.33  , 'Shop owner puts back a pistol'),\nAnim(1688 , 'WEAPONS'      , 'SHP_2H_Lift'           , 56  , 0.93  , 'Shop owner lifts body armor'),\nAnim(1689 , 'WEAPONS'      , 'SHP_2H_Lift_End'       , 20  , 0.33  , 'Shop owner puts body armor on the counter'),", "Anim(1688 , 'WEAPONS'      , 'SHP_2H_Lift'           , 56  , 0.93  , 'Shop owner lifts body armor'),\nAnim(1689 , 'WEAPONS'      , 'SHP_2H_Lift_End'       , 20  , 0.33  , 'Shop owner puts body armor on the counter'),\nAnim(1690 , 'WEAPONS'      , 'SHP_2H_Ret'            , 54  , 0.90  , 'Shop owner retracts body armor'),\nAnim(1691 , 'WEAPONS'      , 'SHP_2H_Ret_S'          , 20  , 0.33  , 'Shop owner puts away body armor'),\nAnim(1692 , 'WEAPONS'      , 'SHP_Ar_Lift'           , 60  , 1.00  , 'Shop owner lifts an AR'),\nAnim(1693 , 'WEAPONS'      , 'SHP_Ar_Lift_End'       , 20  , 0.33  , 'Shop owner puts an AR on the counter'),\nAnim(1694 , 'WEAPONS'      , 'SHP_Ar_Ret'            , 70  , 1.17  , 'Shop owner retracts an AR'),\nAnim(1695 , 'WEAPONS'      , 'SHP_Ar_Ret_S'          , 20  , 0.33  , 'Shop owner puts back an AR'),\nAnim(1696 , 'WEAPONS'      , 'SHP_G_Lift_In'         , 40  , 0.67  , 'Shop owner lifts a weapon'),\nAnim(1697 , 'WEAPONS'      , 'SHP_G_Lift_Out'        , 40  , 0.67  , 'Shop owner puts a weapon on the counter'),", "Anim(1696 , 'WEAPONS'      , 'SHP_G_Lift_In'         , 40  , 0.67  , 'Shop owner lifts a weapon'),\nAnim(1697 , 'WEAPONS'      , 'SHP_G_Lift_Out'        , 40  , 0.67  , 'Shop owner puts a weapon on the counter'),\nAnim(1698 , 'WEAPONS'      , 'SHP_Tray_In'           , 40  , 0.67  , 'Shop owner pose start'),\nAnim(1699 , 'WEAPONS'      , 'SHP_Tray_Out'          , 40  , 0.67  , 'Shop owner pose end'),\nAnim(1700 , 'WEAPONS'      , 'SHP_Tray_Pose'         , 160 , 2.67  , 'Shop owner lean on table pose'),\nAnim(1729 , 'WOP'          , 'Dance_B1'              , 68  , 1.13  , 'Bad \"Funky president\" dance'),\nAnim(1730 , 'WOP'          , 'Dance_B2'              , 70  , 1.17  , 'Bad \"Funky president\" dance'),\nAnim(1731 , 'WOP'          , 'Dance_B3'              , 68  , 1.13  , 'Bad \"Funky president\" dance'),\nAnim(1732 , 'WOP'          , 'Dance_B4'              , 70  , 1.17  , 'Bad \"Funky president\" dance'),\nAnim(1733 , 'WOP'          , 'Dance_B5'              , 68  , 1.13  , 'Bad \"Funky president\" dance'),", "Anim(1732 , 'WOP'          , 'Dance_B4'              , 70  , 1.17  , 'Bad \"Funky president\" dance'),\nAnim(1733 , 'WOP'          , 'Dance_B5'              , 68  , 1.13  , 'Bad \"Funky president\" dance'),\nAnim(1734 , 'WOP'          , 'Dance_B6'              , 70  , 1.17  , 'Bad \"Funky president\" dance'),\nAnim(1735 , 'WOP'          , 'Dance_B7'              , 68  , 1.13  , 'Bad \"Funky president\" dance'),\nAnim(1736 , 'WOP'          , 'Dance_B8'              , 70  , 1.17  , 'Bad \"Funky president\" dance'),\nAnim(1737 , 'WOP'          , 'Dance_B9'              , 68  , 1.13  , 'Bad \"Funky president\" dance'),\nAnim(1738 , 'WOP'          , 'Dance_B10'             , 70  , 1.17  , 'Bad \"Funky president\" dance'),\nAnim(1739 , 'WOP'          , 'Dance_B11'             , 68  , 1.13  , 'Bad \"Funky president\" dance'),\nAnim(1740 , 'WOP'          , 'Dance_B12'             , 70  , 1.17  , 'Bad \"Funky president\" dance'),\nAnim(1741 , 'WOP'          , 'Dance_B13'             , 68  , 1.13  , 'Bad \"Funky president\" dance'),", "Anim(1740 , 'WOP'          , 'Dance_B12'             , 70  , 1.17  , 'Bad \"Funky president\" dance'),\nAnim(1741 , 'WOP'          , 'Dance_B13'             , 68  , 1.13  , 'Bad \"Funky president\" dance'),\nAnim(1742 , 'WOP'          , 'Dance_B14'             , 70  , 1.17  , 'Bad \"Funky president\" dance'),\nAnim(1743 , 'WOP'          , 'Dance_B15'             , 68  , 1.13  , 'Bad \"Funky president\" dance'),\nAnim(1744 , 'WOP'          , 'Dance_B16'             , 70  , 1.17  , 'Bad \"Funky president\" dance'),\nAnim(1713 , 'WOP'          , 'Dance_G1'              , 68  , 1.13  , 'Good \"Funky president\" dance'),\nAnim(1714 , 'WOP'          , 'Dance_G2'              , 70  , 1.17  , 'Good \"Funky president\" dance'),\nAnim(1715 , 'WOP'          , 'Dance_G3'              , 68  , 1.13  , 'Good \"Funky president\" dance'),\nAnim(1716 , 'WOP'          , 'Dance_G4'              , 70  , 1.17  , 'Good \"Funky president\" dance'),\nAnim(1717 , 'WOP'          , 'Dance_G5'              , 68  , 1.13  , 'Good \"Funky president\" dance'),", "Anim(1716 , 'WOP'          , 'Dance_G4'              , 70  , 1.17  , 'Good \"Funky president\" dance'),\nAnim(1717 , 'WOP'          , 'Dance_G5'              , 68  , 1.13  , 'Good \"Funky president\" dance'),\nAnim(1718 , 'WOP'          , 'Dance_G6'              , 70  , 1.17  , 'Good \"Funky president\" dance'),\nAnim(1719 , 'WOP'          , 'Dance_G7'              , 68  , 1.13  , 'Good \"Funky president\" dance'),\nAnim(1720 , 'WOP'          , 'Dance_G8'              , 70  , 1.17  , 'Good \"Funky president\" dance'),\nAnim(1721 , 'WOP'          , 'Dance_G9'              , 68  , 1.13  , 'Good \"Funky president\" dance'),\nAnim(1722 , 'WOP'          , 'Dance_G10'             , 70  , 1.17  , 'Good \"Funky president\" dance'),\nAnim(1723 , 'WOP'          , 'Dance_G11'             , 68  , 1.13  , 'Good \"Funky president\" dance'),\nAnim(1724 , 'WOP'          , 'Dance_G12'             , 70  , 1.17  , 'Good \"Funky president\" dance'),\nAnim(1725 , 'WOP'          , 'Dance_G13'             , 68  , 1.13  , 'Good \"Funky president\" dance'),", "Anim(1724 , 'WOP'          , 'Dance_G12'             , 70  , 1.17  , 'Good \"Funky president\" dance'),\nAnim(1725 , 'WOP'          , 'Dance_G13'             , 68  , 1.13  , 'Good \"Funky president\" dance'),\nAnim(1726 , 'WOP'          , 'Dance_G14'             , 70  , 1.17  , 'Good \"Funky president\" dance'),\nAnim(1727 , 'WOP'          , 'Dance_G15'             , 68  , 1.13  , 'Good \"Funky president\" dance'),\nAnim(1728 , 'WOP'          , 'Dance_G16'             , 70  , 1.17  , 'Good \"Funky president\" dance'),\nAnim(1745 , 'WOP'          , 'dance_loop'            , 70  , 1.17  , 'Dancing loop'),\nAnim(1701 , 'WUZI'         , 'CS_Dead_Guy'           , 304 , 5.07  , 'Cutscene dead guy animation'),\nAnim(1702 , 'WUZI'         , 'CS_Plyr_pt1'           , 226 , 3.77  , 'Cutscene player animation part 1'),\nAnim(1703 , 'WUZI'         , 'CS_Plyr_pt2'           , 580 , 9.67  , 'Cutscene player animation part 2'),\nAnim(1704 , 'WUZI'         , 'CS_Wuzi_pt1'           , 226 , 3.77  , 'Cutscene Wuzi animation part 1'),", "Anim(1703 , 'WUZI'         , 'CS_Plyr_pt2'           , 580 , 9.67  , 'Cutscene player animation part 2'),\nAnim(1704 , 'WUZI'         , 'CS_Wuzi_pt1'           , 226 , 3.77  , 'Cutscene Wuzi animation part 1'),\nAnim(1705 , 'WUZI'         , 'CS_Wuzi_pt2'           , 580 , 9.67  , 'Cutscene Wuzi animation part 2'),\nAnim(1706 , 'WUZI'         , 'Walkstart_Idle_01'     , 190 , 3.17  , 'Wuzi\\'s start walk idle'),\nAnim(1707 , 'WUZI'         , 'Wuzi_follow'           , 180 , 3.00  , 'Wuzi\\'s follow animation'),\nAnim(1708 , 'WUZI'         , 'Wuzi_Greet_Plyr'       , 240 , 4.00  , 'Wuzi greeting the player'),\nAnim(1709 , 'WUZI'         , 'Wuzi_Greet_Wuzi'       , 240 , 4.00  , 'Wuzi greeting'),\nAnim(1710 , 'WUZI'         , 'Wuzi_grnd_chk'         , 240 , 4.00  , 'Wuzi grenade chuck'),\nAnim(1711 , 'WUZI'         , 'Wuzi_stand_loop'       , 160 , 2.67  , 'Wuzi\\'s stand animation loop'),\nAnim(1712 , 'WUZI'         , 'Wuzi_Walk'             , 70  , 1.17  , 'Wuzi\\'s walk'),", "Anim(1711 , 'WUZI'         , 'Wuzi_stand_loop'       , 160 , 2.67  , 'Wuzi\\'s stand animation loop'),\nAnim(1712 , 'WUZI'         , 'Wuzi_Walk'             , 70  , 1.17  , 'Wuzi\\'s walk'),\n]\n\n# generate list to be indexable by animation id\nanimations = [None] * (max(anim.index for anim in anim_table if anim.index is not None) + 1)\nfor anim in anim_table:\n    if anim.index is not None:\n        animations[anim.index] = anim\n\nclass AnimData:\n    def __init__(self, id, flags):\n        self.id = id # i16\n        self.flags = flags # u16\n\n    def __str__(self):\n        return f'<AnimData id={self.id} flags=0x{self.flags:x}>'", "\nclass AnimData:\n    def __init__(self, id, flags):\n        self.id = id # i16\n        self.flags = flags # u16\n\n    def __str__(self):\n        return f'<AnimData id={self.id} flags=0x{self.flags:x}>'\n\ndef read_anim_data(self):\n    id = self.read_i16()\n    flags = self.read_u16()\n    if id > 0:\n        return AnimData(id, flags)\n    else:\n        return None", "\ndef read_anim_data(self):\n    id = self.read_i16()\n    flags = self.read_u16()\n    if id > 0:\n        return AnimData(id, flags)\n    else:\n        return None\n\ndef write_anim_data(self, anim_data):\n    self.write_i16(anim_data.id)\n    self.write_u16(anim_data.flags)", "\ndef write_anim_data(self, anim_data):\n    self.write_i16(anim_data.id)\n    self.write_u16(anim_data.flags)\n\ndef read_compressed_anim_data(self):\n    if has_anim := self.read_bit():\n        id = self.read_i16()\n        flags = self.read_u16()\n        if id > 0:\n            return AnimData(id, flags)\n    else:\n        return None", "\ndef write_compressed_anim_data(self, anim_data):\n    if anim_data is not None and anim_data.id > 0:\n        self.write_bit(1)\n        self.write_i16(anim_data.id)\n        self.write_u16(anim_data.flags)\n    else:\n        self.write_bit(0)\n\nBitstream.read_anim_data = read_anim_data", "\nBitstream.read_anim_data = read_anim_data\nBitstream.write_anim_data = write_anim_data\nBitstream.read_compressed_anim_data = read_compressed_anim_data\nBitstream.write_compressed_anim_data = write_compressed_anim_data\n"]}
{"filename": "sa/sa/samp/spots.py", "chunked_list": ["import enum\n\nfrom sa import *\n\nclass SPOT:\n    GROVE   = Vec3( 2490, -1670,  13)\n    LS_AIR  = Vec3( 1880, -2460,  14)\n    SF_AIR  = Vec3(-1360,   -50,  14)\n    LV_AIR  = Vec3( 1500,  1500,  11)\n    CHILIAD = Vec3(-2300, -1630, 483)"]}
{"filename": "sa/sa/samp/player.py", "chunked_list": ["from sa.player import Player as SaPlayer\nfrom .keys import KeyData\nfrom .anim import AnimData\nfrom .surf import SurfData\n\nfrom .common import pretty_format\n\nclass Player(SaPlayer):\n    def __init__(self):\n        super().__init__()\n        self.peer = None\n        self.id = None\n        self.name = ''\n        self.color = 0xffffffff\n        self.score = 0\n        self.ping = 0\n        self.in_world = False\n        self.in_fov = False\n        self.team = None\n        self.key_data = KeyData(0, 0, 0)\n        self.surf_data = None\n        self.anim_data = None\n        self.player_pool = None # reference to player pool; it is probably a shared pool\n        self.vehicle_pool = None # reference to vehicle pool; it is probably a shared pool\n        self.logged_in_rcon = False\n        self.spawn_info = None # SetSpawnInfo; we cannot spawn if this is None\n        self.waiting_request_spawn_response = False # Note: the wait never expires\n        self.players_in_fov = []\n    \n    def __str__(self):\n        return pretty_format(self, 0)", ""]}
{"filename": "sa/sa/samp/client.py", "chunked_list": ["import socket\nimport asyncio\nimport traceback\nimport enum\nimport random\nimport string\n\nfrom .rpcs import *\nfrom .player import Player\nfrom .encryption import encrypt_buffer", "from .player import Player\nfrom .encryption import encrypt_buffer\nfrom .raknet import *\nfrom .gpci import generate_random_gpci\nfrom .common import *\nfrom .auth_keys import auth_keys\nfrom .vehicle import *\n\nclass CLIENT_STATE(enum.IntEnum):\n    UNCONNECTED = enum.auto()\n    COOKIE = enum.auto(),\n    REQUEST = enum.auto(),\n    CONNECTED = enum.auto(),", "class CLIENT_STATE(enum.IntEnum):\n    UNCONNECTED = enum.auto()\n    COOKIE = enum.auto(),\n    REQUEST = enum.auto(),\n    CONNECTED = enum.auto(),\n\nclass Client(Player):\n    def __init__(self, server_addr=None, name=''.join(random.choices(string.ascii_uppercase, k=MAX_PLAYER_NAME_LENGTH)), gpci=generate_random_gpci(), version='0.3.7-R5', server_password=''):\n        super().__init__()\n        self.server_addr = server_addr\n        self.gpci = gpci\n        self.version = version\n        self.server_password = server_password\n\n        self.socket = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)\n        self.socket.bind(('0.0.0.0', 0)) # bind to all interfaces on a OS assigned port\n\n        self.server_peer = Peer(server_addr, is_server_peer=True, sendto=self.sendto_encrypted)\n        self.server_peer.connected_message_callbacks.append(self.on_connected_message)\n        self.server_peer.unconnected_message_callbacks.append(self.on_unconnected_message)\n\n        self.message_callbacks = [] # callback(message, internal_packet, peer, client)\n        self.post_message_callbacks = [] # callback(message, internal_packet, peer, client)\n\n        self.connected = False\n        self.state = CLIENT_STATE.UNCONNECTED\n\n        self.server_cookie = MAGIC_COOKIE\n        self.connection_cookie_task = None\n\n        self.recv_loop_task = asyncio.get_running_loop().create_task(self.recv_loop())\n\n        # attributes\n        self.player_pool = [None] * (MAX_PLAYER_ID + 1) # useful for lookup(O(1) time) by player id\n        self.players = [] # useful for quickly iterating connected players\n        #self.players_in_fov = [] # useful for quickly iterating over players in our field of view\n\n        self.vehicle_pool = [None] * (MAX_VEHICLE_ID + 1) # useful for lookup(O(1) time) by vehicle id\n        self.vehicles_in_fov = [] # useful for quickly iterating over vehicles in our field of view\n\n        self.dialog = None # the dialog visible on the screen, or None if there is no dialog\n\n        self.textdraw_pool = [None] * (MAX_TEXTDRAW_ID + 1) # useful for lookup(O(1) time) by textdraw id\n        self.textdraws = [] # useful for quickly iterating over present textdraws\n\n    def sendto_encrypted(self, buffer):\n        buffer = encrypt_buffer(buffer, self.server_addr[1])\n        self.socket.sendto(buffer, self.server_addr)\n\n    async def start(self):\n        if self.state != CLIENT_STATE.UNCONNECTED:\n            return\n\n        self.connection_cookie_task = asyncio.get_running_loop().create_task(self.retry_connection_cookie(delay=0))\n\n    def update(self):\n        self.server_peer.update()\n\n    async def recv_loop(self):\n        try:\n            loop = asyncio.get_running_loop()\n            while True: # receive UDP packet\n                data, addr = await loop.sock_recvfrom(self.socket, 2**16)\n                if addr == self.server_addr: # make sure the packet came from the server\n                    self.server_peer.handle_packet(data)\n        except asyncio.exceptions.CancelledError:\n            pass\n        except:\n            log(traceback.format_exc())\n\n    def on_connected_message(self, message, internal_packet, peer):\n        for callback in self.message_callbacks:\n            if callback(message, internal_packet, peer, self) is True:\n                break\n\n        if message.id == MSG.PLAYER_SYNC:\n            player_id = message.player_id\n            \n            if player_id > MAX_PLAYER_ID:\n                return\n                \n            player = self.player_pool[player_id]\n            \n            if not player:\n                return\n                \n            # update attributes\n            player.pos = message.pos\n            player.health = message.health\n            player.armor = message.armor\n            player.weapon_id = message.weapon_id\n            #player.vehicle = player.seat_id = None\n        elif message.id == MSG.DRIVER_SYNC:\n            vehicle_id = message.vehicle_id\n            driver_id = message.driver_id\n\n            if (\n                vehicle_id > MAX_VEHICLE_ID\n                or driver_id > MAX_PLAYER_ID\n            ):\n                return\n\n            vehicle = self.vehicle_pool[vehicle_id]\n            driver = self.player_pool[driver_id]\n        \n            if not vehicle or not driver:\n                return\n            \n            # update driver attributes\n            driver.pos = message.pos\n            driver.vehicle = vehicle\n            driver.seat_id = 0 # driver seat\n            driver.health = message.driver_health\n            driver.armor = message.driver_armor\n            driver.weapon_id = message.driver_weapon_id\n            # update vehicle attributes\n            vehicle.driver_id = message.driver_id\n            vehicle.pos = message.pos\n            vehicle.health = message.vehicle_health\n        elif message.id == MSG.PASSENGER_SYNC:\n            passenger_id = message.vehicle_id\n            vehicle_id = message.vehicle_id\n            \n            if (\n                passenger_id > MAX_PLAYER_ID\n                or vehicle_id > MAX_VEHICLE_ID\n            ):\n                return\n            \n            passenger = self.player_pool[passenger_id]\n            vehicle = self.vehicle_pool[vehicle_id]\n            \n            if not passenger or not vehicle:\n                return\n                \n            # update passenger attributes\n            passenger.pos = message.pos\n            passenger.vehicle = vehicle\n            passenger.seat_id = message.seat_id\n            passenger.health = message.passenger_health\n            passenger.armor = message.passenger_armor\n        elif message.id == MSG.RPC:\n            rpc = message\n            if rpc.rpc_id == RPC.SERVER_JOIN:\n                if rpc.player_id > MAX_PLAYER_ID:\n                    return\n                \n                if self.player_pool[rpc.player_id]: # player with the same id already connected\n                    log(f'warning: ServerJoin called twice without ServerQuit in between; player_id={rpc.player_id}')\n                    return\n                \n                player = Player(rpc.player_id, rpc.player_name, rpc.color)\n                \n                self.player_pool[rpc.player_id] = player\n                \n                player.players_in_fov_index = None  # used for later removing from 'players_in_fov' list in O(1) time\n                \n                player.players_index = len(self.players) # used for later removing from 'players' list in O(1) time\n                self.players.append(player)\n            elif rpc.rpc_id == RPC.SERVER_QUIT:\n                if rpc.player_id > MAX_PLAYER_ID:\n                    return\n                \n                player = self.player_pool[rpc.player_id]\n                \n                if not player:\n                    return\n                \n                self.player_pool[rpc.player_id] = None\n                \n                # remove from 'players' list in O(1) time\n                self.players[-1].players_index = player.players_index # update index\n                self.players[player.players_index] = self.players[-1]\n                self.players.pop(-1)\n                \n                # remove from 'players_in_fov' list in O(1) time\n                if player.players_in_fov_index is not None: # if present in 'players_in_fov' list\n                    self.players_in_fov[-1].players_in_fov_index = player.players_in_fov_index # update index\n                    self.players_in_fov[player.players_in_fov_index] = self.players_in_fov[-1]\n                    self.players_in_fov.pop(-1)\n            elif rpc.rpc_id == RPC.START_PLAYER_STREAM:\n                if rpc.player_id > MAX_PLAYER_ID:\n                    return\n                    \n                player = self.player_pool[rpc.player_id]\n                \n                if not player:\n                    return \n                    \n                # update attributes\n                player.in_fov = True\n                player.team = rpc.team\n                player.skin_id = rpc.skin_id\n                player.pos = rpc.pos\n                player.color = rpc.color\n                player.fighting_style = rpc.fighting_style\n                player.skill_level = rpc.skill_level\n                player.players_in_fov_index = len(self.players_in_fov) # used for later removing from 'players_in_fov' list in O(1) time\n                self.players_in_fov.append(player)\n            elif rpc.rpc_id == RPC.STOP_PLAYER_STREAM:\n                if rpc.player_id > MAX_PLAYER_ID:\n                    return\n                    \n                player = self.player_pool[rpc.player_id]\n                \n                if (\n                    not player\n                    or player.players_in_fov_index is None\n                ):\n                    return\n                \n                player.in_fov = False\n                \n                # remove 'player' from 'players_in_fov' list in O(1) time\n                self.players_in_fov[-1].players_in_fov_index = player.players_in_fov_index # update index\n                self.players_in_fov[player.players_in_fov_index] = self.players_in_fov[-1]\n                self.players_in_fov.pop(-1)\n                player.players_in_fov_index = None\n            elif rpc.rpc_id == RPC.ADD_VEHICLE:\n                if rpc.vehicle_id > MAX_VEHICLE_ID:\n                    return\n                    \n                vehicle = self.vehicle_pool[rpc.vehicle_id]\n                \n                if vehicle:\n                    return\n                 \n                try:\n                    vehicle = Vehicle(rpc.vehicle_id, rpc.model_id)\n                except IndexError: # bad model id\n                    return\n                \n                self.vehicle_pool[rpc.vehicle_id] = vehicle\n                \n                vehicle.vehicles_in_fov_index = len(self.vehicles_in_fov) # used for later removing from 'vehicles_in_fov' list in O(1) time\n                self.vehicles_in_fov.append(vehicle)\n            elif rpc.rpc_id == RPC.REMOVE_VEHICLE:\n                if rpc.vehicle_id > MAX_VEHICLE_ID:\n                    return\n                    \n                vehicle = self.vehicle_pool[rpc.vehicle_id]\n                \n                if not vehicle:\n                    return\n                    \n                self.vehicle_pool[rpc.vehicle_id] = None\n                \n                # remove 'vehicle' from 'vehicles_in_fov' in O(1) time\n                self.vehicles_in_fov[-1].vehicles_in_fov_index = vehicle.vehicles_in_fov_index # update index\n                self.vehicles_in_fov[vehicle.vehicles_in_fov_index] = self.vehicles_in_fov[-1]\n                self.vehicles_in_fov.pop(-1)\n            elif rpc.rpc_id == RPC.SHOW_DIALOG:\n                if rpc.dialog_id <= MAX_DIALOG_ID: # show dialog\n                    self.dialog = rpc\n                else: # close dialog\n                    self.dialog = None\n            elif rpc.rpc_id == RPC.SHOW_TEXTDRAW:\n                if rpc.textdraw_id > MAX_TEXTDRAW_ID:\n                    return\n                    \n                textdraw = self.textdraw_pool[rpc.textdraw_id]\n                \n                if not textdraw:\n                    return\n                \n                self.textdraw_pool[rpc.textdraw_id] = rpc\n                \n                rpc.textdraws_index = len(self.textdraws) # used for later removing from 'textdraws' list in O(1) time\n                self.textdraws.append(rpc)\n            elif rpc.rpc_id == RPC.HIDE_TEXTDRAW:\n                if rpc.textdraw_id > MAX_TEXTDRAW_ID:\n                    return\n                    \n                textdraw = self.textdraw_pool[rpc.textdraw_id]\n                \n                if not textdraw:\n                    return\n                \n                self.textdraw_pool[rpc.textdraw_id] = None\n                \n                # remove from 'textdraws' list in O(1) time\n                self.textdraws[-1].textdraws_index = textdraw.textdraws_index # update index\n                self.textdraws[textdraw.textdraws_index] = self.textdraws[-1]\n                self.textdraws.pop(-1)  \n            elif rpc.rpc_id == RPC.SET_SPAWN_INFO:\n                self.spawn_info = rpc\n            elif rpc.rpc_id == RPC.REQUEST_SPAWN_RESPONSE:\n                if not self.spawn_info: # server did not send SetSpawnInfo\n                    return\n                \n                if rpc.response == REQUEST_SPAWN.REJECT:\n                    self.waiting_request_spawn_response = False\n                # if we are forced to spawn or we we're waiting to spawn\n                # and the server accepted it\n                elif (\n                    rpc.response == REQUEST_SPAWN.FORCE\n                    or (self.waiting_request_spawn_response\n                    and rpc.response == REQUEST_SPAWN.ACCEPT)\n                ):\n                    # spawn\n                    self.pos = self.spawn_info.pos\n                    self.skin = self.spawn_info.skin\n                    self.team = self.spawn_info.team\n        elif message.id == MSG.CONNECTION_REQUEST_ACCEPTED:\n            self.id = message.player_id # save the id the server assigned to us\n            peer.push_message(ClientJoin(CLIENT_VERSION_37, 1, self.name, (message.cookie ^ CLIENT_VERSION_37), self.gpci, self.version))\n            peer.push_message(NewIncomingConnection(ip=peer.addr[0], port=peer.addr[1]))\n        elif message.id == MSG.AUTH_KEY:\n            server_key = bytes(message.key[:-1])\n            client_key = auth_keys[server_key]\n            peer.push_message(AuthKey(client_key))\n        \n        for callback in self.post_message_callbacks:\n            if callback(message, internal_packet, peer, self) is True:\n                break\n\n    async def retry_connection_cookie(self, delay):\n        await asyncio.sleep(delay)\n        self.server_peer.send_unconnected_message(OpenConnectionRequest(self.server_cookie))\n        self.connection_cookie_task = asyncio.get_running_loop().create_task(self.retry_connection_cookie(random.uniform(1.0, 3.0)))\n\n    def on_unconnected_message(self, message, peer):\n        if message.id == MSG.OPEN_CONNECTION_COOKIE: # server sent us the encoded server cookie\n            # calculate the secret cookie from it\n            self.server_cookie = message.cookie ^ MAGIC_COOKIE\n\n            if self.connection_cookie_task:\n                self.connection_cookie_task.cancel()\n            self.connection_cookie_task = asyncio.get_running_loop().create_task(self.retry_connection_cookie(delay=0))\n        elif message.id == MSG.CONNECTION_BANNED:\n            # oh no :(\n            pass\n        elif message.id == MSG.OPEN_CONNECTION_REPLY:\n            if self.connection_cookie_task:\n                self.connection_cookie_task.cancel()\n                self.connection_cookie_task = None\n            # nice, server granted us access\n            # we are now a connected peer\n            # Send connection request\n            peer.push_message(ConnectionRequest(self.server_password))", ""]}
{"filename": "sa/sa/samp/query.py", "chunked_list": ["import enum\nimport struct\nimport socket\n\nfrom .bitstream import *\nfrom .common import *\n\n'''\nSee /examples/query.py\n", "See /examples/query.py\n\nExamples:\n\nq = Query.decode_request(data) ; decodes any query request packet(e.g. request packets sent from the client)\nq = Query.decode_response(data) ; decode any query response packet(e.g. response packets sent from the server)\n\n# Sending request queries as a client\nSERVER_ADDR = ('127.0.0.1', 7777)\nclient_socket.sendto(PingQueryRequest(SERVER_ADDR[0], SERVER_ADDR[1], 12345).encode(), SERVER_ADDR)", "SERVER_ADDR = ('127.0.0.1', 7777)\nclient_socket.sendto(PingQueryRequest(SERVER_ADDR[0], SERVER_ADDR[1], 12345).encode(), SERVER_ADDR)\nclient_socket.sendto(InfoQueryRequest(SERVER_ADDR[0], SERVER_ADDR[1]).encode(), SERVER_ADDR)\nclient_socket.sendto(RulesQueryRequest(SERVER_ADDR[0], SERVER_ADDR[1]).encode(), SERVER_ADDR)\nclient_socket.sendto(ClientsQueryRequest(SERVER_ADDR[0], SERVER_ADDR[1]).encode(), SERVER_ADDR)\nclient_socket.sendto(DetailedQueryRequest(SERVER_ADDR[0], SERVER_ADDR[1]).encode(), SERVER_ADDR)\nclient_socket.sendto(RconQueryRequest(SERVER_ADDR[0], SERVER_ADDR[1], password='changeme', command='varlist').encode(), SERVER_ADDR)\n\n# Decoding query responses from the server\nwhile True:", "# Decoding query responses from the server\nwhile True:\n    data, addr = client_socket.recvfrom(4096)\n    print(Query.decode_response(data))\n\n\nnumber in parenthesis is how many bytes it uses\n\nall values follow little endian byte order, except ip and port\n", "all values follow little endian byte order, except ip and port\n\nquery packet structure: b'SAMP'(4) + IPV4(4) + PORT(2) + ID(1) + payload(varies)\nNote: the PORT does not need to be the port of the server nor the client's. It may be any 16-bit value\nthe server should send back to the peer whatever is in IPV4 and PORT\n\n\nCLIENT QUERY REQUESTS\n ID        NAME     PAYLOAD\n ord('p')  PING     timestamp(4)", " ID        NAME     PAYLOAD\n ord('p')  PING     timestamp(4)\n ord('i')  INFO     no payload\n ord('r')  RULES    no payload\n ord('c')  CLIENTS  no payload\n ord('d')  DETAILED no payload\n ord('x')  RCON     rcon_password_length(2) + rcon_password(rcon_password_length) + rcon_command_length(2) + rcon_command(rcon_command_length)\n\nSERVER QUERY RESPONSES\n ID        NAME     PAYLOAD", "SERVER QUERY RESPONSES\n ID        NAME     PAYLOAD\n ord('p')  PING     timestamp(4) ; just send back whatever was received from the client\n ord('i')  INFO     has_password(1) + player_count(2) + max_player_count(2) + hostname_length(32) + hostname(hostname_length) + gamemode_length(32) + gamemode(gamemode_length) + language_length(32) + language(language_length)\n ord('r')  RULES    rule_count(2) + [rule_length(1) + rule(rule_length) + value_length(1) + value(value_length)] * rule_count\n ord('c')  CLIENTS  client_count(2) + [player_name_length(1) + player_name(player_name_length) + score(4)] * client_count\n ord('d')  DETAILED player_count(2) + [player_id(1) + player_name_length(1) + player_name(player_name_length) + score(4) + ping(4)] * player_count\n ord('x')  RCON     rcon_response_length(2) + rcon_response(rcon_response_length)\n\nNOTES", "\nNOTES\na query packet must contain b\"SAMP\" at the start, otherwise it is ignored.\nadditional bytes at the end of a query packet are ignored. The packet is processed as usual.\nif too many query response packets are sent to the samp server browser it crashes after a few seconds.\nthe server may take as much time as it likes to send the query response back to the client, it will hapily receive it even after minutes.\nif a ping with a timestamp in the future is sent to the samp server browser, it shows an integer overflow exception in a message dialog\n'''\n\nQUERY_HEADER_SIZE = 4 + 4 + 2 + 1 # b'SAMP'(4) + ipv4(4) + port(2) + id(1)", "\nQUERY_HEADER_SIZE = 4 + 4 + 2 + 1 # b'SAMP'(4) + ipv4(4) + port(2) + id(1)\nQUERY_ID_OFFSET = 10 # 4 + 4 + 2\n\nclass QUERY(enum.IntEnum):\n    PING     = ord('p')\n    INFO     = ord('i')\n    RULES    = ord('r')\n    CLIENTS  = ord('c')\n    DETAILED = ord('d')\n    RCON     = ord('x')", "\nclass Query:\n    def __init__(self, id, ip, port):\n        self.id = id\n        self.ip = ip\n        self.port = port\n        \n    def __str__(self):\n        return pretty_format(self, skip_n=1)\n\n    def encode_header(self):\n        return b'SAMP' + socket.inet_aton(self.ip) \\\n                       + struct.pack('HB', self.port, self.id)\n\n    # return id, ip, port\n    @staticmethod\n    def decode_header(data):\n        magic, ip, port, id = struct.unpack_from('4s4sHB', data)\n        return QUERY(id), socket.inet_ntoa(ip), port\n\n    def encode(self):\n        return self.encode_header() + self.encode_payload()\n    \n    '''\n    Decodes any query request.\n    e.g. q = Query.decode_request(data)\n    '''\n    @staticmethod\n    def decode_request(data):\n        id, ip, port = Query.decode_header(data)\n        return id.decode_request_payload(data[QUERY_HEADER_SIZE:], ip, port)\n\n    '''\n    Decodes any query response.\n    e.g. q = Query.decode_response(data)\n    '''\n    @staticmethod\n    def decode_response(data):\n        id, ip, port = Query.decode_header(data)\n        return id.decode_response_payload(data[QUERY_HEADER_SIZE:], ip, port)", "\nclass PingQueryRequest(Query):\n    def __init__(self, ip, port, time):\n        super().__init__(QUERY.PING, ip, port)\n        self.time = time # timestamp in ms; same as raknet.get_time()\n        \n    @staticmethod\n    def decode(data):\n        id, ip, port = Query.decode_header(data)\n        return PingQueryRequest.decode_payload(data[QUERY_HEADER_SIZE:], ip, port)\n\n    def encode_payload(self):\n        return struct.pack('I', self.time)\n\n    @staticmethod\n    def decode_payload(data, ip, port):\n        ping_time, = struct.unpack_from('I', data)\n        return PingQueryRequest(ip, port, ping_time)", "QUERY.PING.decode_request_payload = PingQueryRequest.decode_payload\n\nclass PingQueryResponse(Query):\n    def __init__(self, ip, port, time):\n        super().__init__(QUERY.PING, ip, port)\n        self.time = time # timestamp in ms; same as raknet.get_time()\n        \n    @staticmethod\n    def decode(data):\n        id, ip, port = Query.decode_header(data)\n        return PingQueryResponse.decode_payload(data[QUERY_HEADER_SIZE:], ip, port)\n\n    def encode_payload(self):\n        return struct.pack('I', self.time)\n\n    @staticmethod\n    def decode_payload(data, ip, port):\n        ping_time, = struct.unpack_from('I', data)\n        return PingQueryResponse(ip, port, ping_time)", "QUERY.PING.decode_response_payload = PingQueryResponse.decode_payload\n\nclass InfoQueryRequest(Query):\n    def __init__(self, ip, port):\n        super().__init__(QUERY.INFO, ip, port)\n        \n    @staticmethod\n    def decode(data):\n        id, ip, port = Query.decode_header(data)\n        return InfoQueryRequest.decode_payload(data[QUERY_HEADER_SIZE:], ip, port)\n\n    def encode_payload(self):\n        return b''\n\n    @staticmethod\n    def decode_payload(data, ip, port):\n        return InfoQueryRequest(ip, port)", "QUERY.INFO.decode_request_payload = InfoQueryRequest.decode_payload\n\nclass InfoQueryResponse(Query):\n    def __init__(self, ip, port, has_password, player_count, max_player_count, hostname, gamemode, language):\n        super().__init__(QUERY.INFO, ip, port)\n        self.has_password = bool(has_password)\n        self.player_count = player_count\n        self.max_player_count = max_player_count\n        self.hostname = hostname\n        self.gamemode = gamemode\n        self.language = language\n        \n    @staticmethod\n    def decode(data):\n        id, ip, port = Query.decode_header(data)\n        return InfoQueryResponse.decode_payload(data[QUERY_HEADER_SIZE:], ip, port)\n\n    def encode_payload(self):\n        bs = Bitstream(capacity=128)\n        bs.write_u8(self.has_password)\n        bs.write_u16(self.player_count)\n        bs.write_u16(self.max_player_count)\n        bs.write_dynamic_str32(self.hostname)\n        bs.write_dynamic_str32(self.gamemode)\n        bs.write_dynamic_str32(self.language)\n        return bs.to_bytes()\n\n    @staticmethod\n    def decode_payload(data, ip, port):\n        bs = Bitstream(data)\n        has_password = bs.read_u8()\n        player_count = bs.read_u16()\n        max_player_count = bs.read_u16()\n        hostname = bs.read_dynamic_str32()\n        gamemode = bs.read_dynamic_str32()\n        language = bs.read_dynamic_str32()\n        return InfoQueryResponse(ip, port, has_password, player_count, max_player_count, hostname, gamemode, language)", "QUERY.INFO.decode_response_payload = InfoQueryResponse.decode_payload\n\nclass RulesQueryRequest(Query):\n    def __init__(self, ip, port):\n        super().__init__(QUERY.RULES, ip, port)\n        \n    @staticmethod\n    def decode(data):\n        id, ip, port = Query.decode_header(data)\n        return RulesQueryRequest.decode_payload(data[QUERY_HEADER_SIZE:], ip, port)\n\n    def encode_payload(self):\n        return b''\n\n    @staticmethod\n    def decode_payload(data, ip, port):\n        return RulesQueryRequest(ip, port)", "QUERY.RULES.decode_request_payload = RulesQueryRequest.decode_payload\n\nclass RulesQueryResponse(Query):\n    def __init__(self, ip, port, rules):\n        super().__init__(QUERY.RULES, ip, port)\n        self.rules = rules # {rule: value, ...} or [(rule, value), ...]\n        \n    @staticmethod\n    def decode(data):\n        id, ip, port = Query.decode_header(data)\n        return RulesQueryResponse.decode_payload(data[QUERY_HEADER_SIZE:], ip, port)\n\n    def encode_payload(self):\n        bs = Bitstream(capacity=256)\n        bs.write_u16(len(self.rules))\n        if isinstance(self.rules, dict):\n            for rule, value in self.rules.items():\n                bs.write_dynamic_str8(rule)\n                bs.write_dynamic_str8(value)\n        if isinstance(self.rules, list):\n            for rule, value in self.rules:\n                bs.write_dynamic_str8(rule)\n                bs.write_dynamic_str8(value)\n        \n        return bs.to_bytes()\n\n    @staticmethod\n    def decode_payload(data, ip, port):\n        bs = Bitstream(data)\n        rule_count = bs.read_u16()\n        rules = [(bs.read_dynamic_str8(), bs.read_dynamic_str8()) for _ in range(rule_count)]\n        return RulesQueryResponse(ip, port, rules)", "QUERY.RULES.decode_response_payload = RulesQueryResponse.decode_payload\n\nclass ClientsQueryRequest(Query):\n    def __init__(self, ip, port):\n        super().__init__(QUERY.CLIENTS, ip, port)\n        \n    @staticmethod\n    def decode(data):\n        id, ip, port = Query.decode_header(data)\n        return ClientsQueryRequest.decode_payload(data[QUERY_HEADER_SIZE:], ip, port)\n\n    def encode_payload(self):\n        return b''\n\n    @staticmethod\n    def decode_payload(data, ip, port):\n        return ClientsQueryRequest(ip, port)", "QUERY.CLIENTS.decode_request_payload = ClientsQueryRequest.decode_payload\n\nclass ClientsQueryResponse(Query):\n    def __init__(self, ip, port, clients):\n        super().__init__(QUERY.CLIENTS, ip, port)\n        self.clients = clients # {name: score, ...} or [(name, score), ...]\n        \n    @staticmethod\n    def decode(data):\n        id, ip, port = Query.decode_header(data)\n        return ClientsQueryResponse.decode_payload(data[QUERY_HEADER_SIZE:], ip, port)\n\n    def encode_payload(self):\n        bs = Bitstream(capacity=512)\n        bs.write_u16(len(self.clients))\n        if isinstance(self.clients, dict):\n            for name, score in self.clients.items():\n                bs.write_dynamic_str8(name)\n                bs.write_u32(score)\n        elif isinstance(self.clients, list):\n            for name, score in self.clients:\n                bs.write_dynamic_str8(name)\n                bs.write_u32(score)\n        return bs.to_bytes()\n\n    @staticmethod\n    def decode_payload(data, ip, port):\n        bs = Bitstream(data)\n        client_count = bs.read_u16()\n        clients = [(bs.read_dynamic_str8(), bs.read_u32()) for _ in range(client_count)]\n        return ClientsQueryResponse(ip, port, clients)", "QUERY.CLIENTS.decode_response_payload = ClientsQueryResponse.decode_payload\n\nclass DetailedQueryRequest(Query):\n    def __init__(self, ip, port):\n        super().__init__(QUERY.DETAILED, ip, port)\n        \n    @staticmethod\n    def decode(data):\n        id, ip, port = Query.decode_header(data)\n        return DetailedQueryRequest.decode_payload(data[QUERY_HEADER_SIZE:], ip, port)\n\n    def encode_payload(self):\n        return b''\n\n    @staticmethod\n    def decode_payload(data, ip, port):\n        return DetailedQueryRequest(ip, port)", "QUERY.DETAILED.decode_request_payload = DetailedQueryRequest.decode_payload\n\nclass DetailedQueryResponse(Query):\n    def __init__(self, ip, port, players):\n        super().__init__(QUERY.DETAILED, ip, port)\n        self.players = players # {id: (name, score, ping), ...} or [(id, name, score, ping), ...]\n        \n    @staticmethod\n    def decode(data):\n        id, ip, port = Query.decode_header(data)\n        return DetailedQueryResponse.decode_payload(data[QUERY_HEADER_SIZE:], ip, port)\n\n    def encode_payload(self):\n        bs = Bitstream(capacity=512)\n        bs.write_u16(len(self.players))\n        if isinstance(self.players, dict):\n            for id, (name, score, ping) in self.players.items():\n                bs.write_u8(id)\n                bs.write_dynamic_str8(name)\n                bs.write_u32(score)\n                bs.write_u32(ping)\n        elif isinstance(self.players, list):\n            for id, name, score, ping in self.players:\n                bs.write_u8(id)\n                bs.write_dynamic_str8(name)\n                bs.write_u32(score)\n                bs.write_u32(ping)\n        return bs.to_bytes()\n\n    @staticmethod\n    def decode_payload(data, ip, port):\n        bs = Bitstream(data)\n        player_count = bs.read_u16()\n        players = [(bs.read_u8(), bs.read_dynamic_str8(), bs.read_u32(), bs.read_u32()) for _ in range(player_count)]\n        return DetailedQueryResponse(ip, port, players)", "QUERY.DETAILED.decode_response_payload = DetailedQueryResponse.decode_payload\n\nclass RconQueryRequest(Query):\n    def __init__(self, ip, port, password, command):\n        super().__init__(QUERY.RCON, ip, port)\n        self.password = password\n        self.command = command\n        \n    @staticmethod\n    def decode(data):\n        id, ip, port = Query.decode_header(data)\n        return RconQueryRequest.decode_payload(data[QUERY_HEADER_SIZE:], ip, port)\n\n    def encode_payload(self):\n        bs = Bitstream(capacity=128)\n        bs.write_dynamic_str16(self.password)\n        bs.write_dynamic_str16(self.command)\n        return bs.to_bytes()\n\n    @staticmethod\n    def decode_payload(data, ip, port):\n        bs = Bitstream(data)\n        password = bs.read_dynamic_str16()\n        command = bs.read_dynamic_str16()\n        return RconQueryRequest(ip, port, password, command)", "QUERY.RCON.decode_request_payload = RconQueryRequest.decode_payload\n\nclass RconQueryResponse(Query):\n    def __init__(self, ip, port, response):\n        super().__init__(QUERY.RCON, ip, port)\n        self.response = response\n        \n    @staticmethod\n    def decode(data):\n        id, ip, port = Query.decode_header(data)\n        return RconQueryResponse.decode_payload(data[QUERY_HEADER_SIZE:], ip, port)\n\n    def encode_payload(self):\n        bs = Bitstream(capacity=128)\n        bs.write_dynamic_str16(self.response)\n        return bs.to_bytes()\n\n    @staticmethod\n    def decode_payload(data, ip, port):\n        bs = Bitstream(data)\n        response = bs.read_dynamic_str16()\n        return RconQueryResponse(ip, port, response)", "QUERY.RCON.decode_response_payload = RconQueryResponse.decode_payload\n"]}
{"filename": "sa/sa/samp/huffman_encoding.py", "chunked_list": ["import bisect\nfrom .bitstream import *\n\nenglish_character_frequencies = [ # 16x16\n    0,    0,    0,    0,    0,    0,   0,    0,    0,    0, 722,   0,    0,    2,    0,    0,\n    0,    0,    0,    0,    0,    0,   0,    0,    0,    0,   0,   0,    0,    0,    0,    0,\n11084,   58,   63,    1,    0,   31,   0,  317,   64,   64,  44,   0,  695,   62,  980,  266,\n   69,   67,   56,    7,   73,    3,  14,    2,   69,    1, 167,   9,    1,    2,   25,   94,\n    0,  195,  139,   34,   96,   48, 103,   56,  125,  653,  21,   5,   23,   64,   85,   44,\n   34,    7,   92,   76,  147,   12,  14,   57,   15,   39,  15,   1,    1,    1,    2,    3,", "    0,  195,  139,   34,   96,   48, 103,   56,  125,  653,  21,   5,   23,   64,   85,   44,\n   34,    7,   92,   76,  147,   12,  14,   57,   15,   39,  15,   1,    1,    1,    2,    3,\n    0, 3611,  845, 1077, 1884, 5870, 841, 1057, 2501, 3212, 164, 531, 2019, 1330, 3056, 4037,\n  848,   47, 2586, 2919, 4771, 1707, 535, 1106,  152, 1243, 100,   0,    2,    0,   10,    0,\n    0,    0,    0,    0,    0,    0,   0,    0,    0,    0,   0,   0,    0,    0,    0,    0,\n    0,    0,    0,    0,    0,    0,   0,    0,    0,    0,   0,   0,    0,    0,    0,    0,\n    0,    0,    0,    0,    0,    0,   0,    0,    0,    0,   0,   0,    0,    0,    0,    0,\n    0,    0,    0,    0,    0,    0,   0,    0,    0,    0,   0,   0,    0,    0,    0,    0,\n    0,    0,    0,    0,    0,    0,   0,    0,    0,    0,   0,   0,    0,    0,    0,    0,\n    0,    0,    0,    0,    0,    0,   0,    0,    0,    0,   0,   0,    0,    0,    0,    0,", "    0,    0,    0,    0,    0,    0,   0,    0,    0,    0,   0,   0,    0,    0,    0,    0,\n    0,    0,    0,    0,    0,    0,   0,    0,    0,    0,   0,   0,    0,    0,    0,    0,\n    0,    0,    0,    0,    0,    0,   0,    0,    0,    0,   0,   0,    0,    0,    0,    0,\n    0,    0,    0,    0,    0,    0,   0,    0,    0,    0,   0,   0,    0,    0,    0,    0,\n]\n\nclass HuffmanNode:\n    def __init__(self, value, weight, left=None, right=None, parent=None):\n        self.value = value\n        self.weight = weight\n        self.left = left\n        self.right = right\n        self.parent = parent", "\nclass HuffmanTree:\n    def __init__(self, frequency_table):\n        assert len(frequency_table) == 256\n\n        # sort table\n        leaf_nodes = [None] * 256 # used to generate the encoding table\n        sorted_nodes = []\n        for i, frequency in enumerate(frequency_table):\n            node = HuffmanNode(value=i, weight=max(1, frequency))\n            leaf_nodes[i] = node\n            bisect.insort_left(sorted_nodes, node, key=lambda e: e.weight)\n\n        # generate binary tree\n        while True:\n            lesser = sorted_nodes.pop(0)\n            greater = sorted_nodes.pop(0)\n            node = HuffmanNode(value=None, weight=lesser.weight+greater.weight, left=lesser, right=greater)\n            lesser.parent = greater.parent = node\n\n            if len(sorted_nodes) == 0:\n                self.root_node = node\n                break\n\n            # insertion sort\n            bisect.insort_left(sorted_nodes, node, key=lambda e:e.weight)\n\n        # generate encoding table\n        self.encoding_table = [None] * 256\n        path = bytearray(256)\n        for i, node in enumerate(leaf_nodes):\n            # calculate sequence\n            path_length = 0\n            while node != self.root_node:\n                path[path_length] = int(node.parent.left != node)\n                path_length += 1\n                node = node.parent\n\n            # write sequence in reverse order\n            bs = Bitstream(capacity=path_length)\n            for j in range(path_length-1, 0-1, -1):\n                bs.write_bit(path[j] == 1)\n            self.encoding_table[i] = bs", "\ndefault_huffman_tree = HuffmanTree(english_character_frequencies)\n"]}
{"filename": "sa/sa/samp/surf.py", "chunked_list": ["from .bitstream import *\n\nclass SurfData:\n    def __init__(self, vehicle_id, offset):\n        self.vehicle_id = vehicle_id\n        self.offset = offset\n    \n    def __str__(self):\n        return f'<SurfData vehicle_id={self.vehicle_id} offset={self.offset}>'\n\ndef read_compressed_surf_data(self):\n    if has_surf := self.read_bit():\n        vehicle_id = self.read_i16()\n        offset = self.read_vec3()\n        if vehicle_id > 0:\n            return SurfData(vehicle_id, offset)\n    else:\n        return None", "\ndef read_compressed_surf_data(self):\n    if has_surf := self.read_bit():\n        vehicle_id = self.read_i16()\n        offset = self.read_vec3()\n        if vehicle_id > 0:\n            return SurfData(vehicle_id, offset)\n    else:\n        return None\n\ndef write_compressed_surf_data(self, surf_data):\n    if surf_data != None and surf_data.vehicle_id > 0:\n        self.write_bit(1)\n        self.write_i16(surf_data.vehicle_id)\n        self.write_vec3(surf_data.offset)\n    else:\n        self.write_bit(0)", "\ndef write_compressed_surf_data(self, surf_data):\n    if surf_data != None and surf_data.vehicle_id > 0:\n        self.write_bit(1)\n        self.write_i16(surf_data.vehicle_id)\n        self.write_vec3(surf_data.offset)\n    else:\n        self.write_bit(0)\n\ndef read_surf_data(self):\n    offset = self.read_vec3()\n    vehicle_id = self.read_i16()\n    if vehicle_id > 0:\n        return SurfData(vehicle_id, offset)\n    else:\n        return None", "\ndef read_surf_data(self):\n    offset = self.read_vec3()\n    vehicle_id = self.read_i16()\n    if vehicle_id > 0:\n        return SurfData(vehicle_id, offset)\n    else:\n        return None\n\ndef write_surf_data(self, surf_data):\n    self.write_vec3(surf_data.offset)\n    self.write_i16(surf_data.vehicle_id)", "\ndef write_surf_data(self, surf_data):\n    self.write_vec3(surf_data.offset)\n    self.write_i16(surf_data.vehicle_id)\n\nBitstream.read_surf_data = read_surf_data\nBitstream.write_surf_data = write_surf_data\nBitstream.read_compressed_surf_data = read_compressed_surf_data\nBitstream.write_compressed_surf_data = write_compressed_surf_data\n", "Bitstream.write_compressed_surf_data = write_compressed_surf_data\n"]}
{"filename": "sa/sa/samp/__init__.py", "chunked_list": ["from .server import *\nfrom .client import *\nfrom .messages import *\nfrom .rpcs import *\nfrom .player import *\nfrom .common import *\nfrom .anim import *\nfrom .spots import *"]}
{"filename": "sa/sa/samp/vehicle.py", "chunked_list": ["from sa.vehicle import Vehicle as SaVehicle\n\nfrom .common import pretty_format\n\nclass Vehicle(SaVehicle):\n    def __init__(self, id, model_id):\n        super().__init__(id, model_id)\n        self.plate = None\n\n    def __str__(self):\n        return pretty_format(self, 0)", ""]}
{"filename": "sa/sa/samp/ac.py", "chunked_list": ["'''\nWrapper around Server\nbuiltin anti cheat\n'''\n\nfrom .server import Server\n\nclass ACServer(Server):\n    pass\n", ""]}
{"filename": "sa/sa/samp/keys.py", "chunked_list": ["import enum\n\n# https://team.sa-mp.com/wiki/Keys.html\n# https://www.open.mp/docs/scripting/resources/keys\n\nfrom .bitstream import *\n\nclass PLAYER_KEY(enum.IntEnum):\n    ACTION           = 1 << 0  # TAB           ~k~~PED_ANSWER_PHONE~\n    CROUCH           = 1 << 1  # C             ~k~~PED_DUCK~\n    FIRE             = 1 << 2  # LCTRL/LMB     ~k~~PED_FIREWEAPON~\n    SPRINT           = 1 << 3  # SPACE         ~k~~PED_SPRINT~\n    SECONDARY_ATTACK = 1 << 4  # ENTER         ~k~~VEHICLE_ENTER_EXIT~\n    JUMP             = 1 << 5  # LSHIFT        ~k~~PED_JUMPING~\n    LOOK_RIGHT       = 1 << 6  # -             -\n    AIM              = 1 << 7  # RMB           ~k~~PED_LOCK_TARGET~\n    LOOK_LEFT        = 1 << 8  # -             -\n    LOOK_BEHIND      = 1 << 9  # NUM1/MMB      ~k~~PED_LOOKBEHIND~\n    WALK             = 1 << 10 # LALT          ~k~~SNEAK_ABOUT~\n    ANALOG_UP        = 1 << 11 # NUM8          -\n    ANALOG_DOWN      = 1 << 12 # NUM2          -\n    ANALOG_LEFT      = 1 << 13 # NUM4          ~k~~VEHICLE_LOOKLEFT~\n    ANALOG_RIGHT     = 1 << 14 # NUM6          ~k~~VEHICLE_LOOKRIGHT~\n    YES              = 1 << 16 # Y             ~k~~CONVERSATION_YES~\n    NO               = 1 << 17 # N             ~k~~CONVERSATION_NO~\n    CTRL_BACK        = 1 << 18 # H             ~k~~GROUP_CONTROL_BWD~", "    #                          # G             ~k~~GROUP_CONTROL_FWD~ ; cannot be detected in SA-MP, as it used internally to enter vehicles as passenger. However, the gametext definition still exists.\n\nclass VEHICLE_KEY(enum.IntEnum):\n    ACTION            = 1 << 0  # LCTRL/NUM0    ~k~~VEHICLE_FIREWEAPON_ALT~\n    HORN              = 1 << 1  # H/CAPSLOCK    ~k~~VEHICLE_HORN~\n    FIRE              = 1 << 2  # LALT          ~k~~VEHICLE_FIREWEAPON~\n    ACCELERATE        = 1 << 3  # W             ~k~~VEHICLE_ACCELERATE~\n    SECONDARY_ATTACK  = 1 << 4  # ENTER         ~k~~VEHICLE_ENTER_EXIT~\n    BRAKE             = 1 << 5  # S             ~k~~VEHICLE_BRAKE~\n    LOOK_RIGHT        = 1 << 6  # E             ~k~~VEHICLE_LOOKRIGHT~\n    HANDBRAKE         = 1 << 7  # SPACE         ~k~~VEHICLE_HANDBRAKE~\n    LOOK_LEFT         = 1 << 8  # Q             ~k~~VEHICLE_LOOKLEFT~\n    TOGGLE_SUBMISSION = 1 << 9  # 2             ~k~~TOGGLE_SUBMISSIONS~\n    #                 = 1 << 10 # -             -\n    ANALOG_UP         = 1 << 11 # NUM8          ~k~~VEHICLE_TURRETUP~\n    ANALOG_DOWN       = 1 << 12 # NUM2          ~k~~VEHICLE_TURRETDOWN~\n    ANALOG_LEFT       = 1 << 13 # NUM4          ~k~~VEHICLE_TURRETLEFT~\n    ANALOG_RIGHT      = 1 << 14 # NUM6          ~k~~VEHICLE_TURRETRIGHT~\n    YES               = 1 << 16 # Y             ~k~~CONVERSATION_YES~\n    NO                = 1 << 17 # N             ~k~~CONVERSATION_NO~\n    CTRL_BACK         = 1 << 18 # H             ~k~~GROUP_CONTROL_BWD~", "\nclass LR_KEY(enum.IntEnum):\n    NONE  = 0\n    LEFT  = -128 # LEFT     ~k~~GO_LEFT~     ~k~~VEHICLE_STEERLEFT~\n    RIGHT = 128 # RIGHT    ~k~~GO_RIGHT~    ~k~~VEHICLE_STEERRIGHT~\n\nclass UD_KEY(enum.IntEnum):\n    NONE = 0\n    UP   = -128 # UP      ~k~~GO_FORWARD~    ~k~~VEHICLE_STEERUP~\n    DOWN = 128  # DOWN    ~k~~GO_BACK~       ~k~~VEHICLE_STEERDOWN~", "\n# lr_keys and ud_keys are just for animation, they do not actually make the player move, 'vel' does\nclass KeyData:\n    def __init__(self, lr_keys, ud_keys, keys):\n        self.lr_keys = lr_keys #LR_KEY(lr_keys) # i16; LR_KEY.LEFT, LR_KEY.RIGHT or 0(neither)\n        self.ud_keys = ud_keys #UD_KEY(ud_keys) # i16; UD_KEY.UP, UD_KEY.DOWN or 0(neither)\n        self.keys = keys # u32; bitmask of constants in PLAYER_KEY(if on foot) or VEHICLE_KEY(if in vehicle)\n\n    def __str__(self):\n        bitmask = ''\n        for constants in PLAYER_KEY, VEHICLE_KEY:\n            bitmask += '('\n            count = 0\n            x = self.keys\n            while constant := next((c for c in constants if x & c), 0):\n                bitmask += f'{constant.name} '\n                x = x & ~constant\n                count += 1\n            if count == 0:\n                bitmask += 'NONE) '\n            else:\n                bitmask = bitmask[:-1] + ') '\n        #return f'<KeyData lr_keys={self.lr_keys.name} ud_keys={self.ud_keys.name} keys={bitmask[:-1]}>'\n        return f'<KeyData lr_keys={self.lr_keys} ud_keys={self.ud_keys} keys={bitmask[:-1]}>'", "\ndef read_key_data(self):\n    lr_keys = self.read_i16()\n    ud_keys = self.read_i16()\n    keys = self.read_u16()\n    return KeyData(lr_keys, ud_keys, keys)\n\ndef write_key_data(self, key_data):\n    self.write_i16(key_data.lr_keys)\n    self.write_i16(key_data.ud_keys)\n    self.write_u16(key_data.keys)", "\ndef read_compressed_key_data(self):\n    if has_lr := self.read_bit():\n        lr_keys = self.read_i16()\n    else:\n        lr_keys = 0\n\n    if has_ud := self.read_bit():\n        ud_keys = self.read_i16()\n    else:\n        ud_keys = 0\n\n    keys = self.read_u16()\n\n    return KeyData(lr_keys, ud_keys, keys)", "\ndef write_compressed_key_data(self, key_data):\n    if key_data.lr_keys != 0:\n        self.write_bit(1)\n        self.write_i16(key_data.lr_keys)\n    else:\n        self.write_bit(0)\n\n    if key_data.ud_keys != 0:\n        self.write_bit(1)\n        self.write_i16(key_data.ud_keys)\n    else:\n        self.write_bit(0)\n\n    self.write_u16(key_data.keys)", "\nBitstream.read_key_data = read_key_data\nBitstream.write_key_data = write_key_data\nBitstream.read_compressed_key_data = read_compressed_key_data\nBitstream.write_compressed_key_data = write_compressed_key_data"]}
{"filename": "sa/sa/samp/rpcs.py", "chunked_list": ["import enum\n\nfrom .bitstream import *\nfrom .common import *\nfrom .huffman_encoding import default_huffman_tree\nfrom sa import *\n\n'''\nOverview\n", "Overview\n\nWhen the RPC has no \"target\" in the name(e.g. SetPos, ) it likely refers to the character of the player the RPC is sent to.\n\ne.g. SetHealth(50) sets the health of the character of the player you send to RPC to.\nIf there is 'Player' in the name, it likely refers to a specific player where you may need to specify the player id.\n\n\nRelated: list of words related to the RPC; useful for finding something with CTRL+F if you know an alternate name\n'''", "Related: list of words related to the RPC; useful for finding something with CTRL+F if you know an alternate name\n'''\n\n# samp rpc ids\nclass RPC(enum.IntEnum):\n    SET_PLAYER_NAME             = 11  # SetPlayerName\n    SET_POS                     = 12  # SetPos\n    SET_POS_FIND_Z              = 13  # SetPosFindZ\n    SET_HEALTH                  = 14  # SetHealth\n    TOGGLE_CONTROLLABLE         = 15  # ToggleControllable\n    PLAY_SOUND                  = 16  # PlaySound\n    SET_WORLD_BOUNDS            = 17  # SetWorldBounds\n    GIVE_MONEY                  = 18  # GiveMoney\n    SET_DIR_Z                   = 19  # SetDirZ\n    RESET_MONEY                 = 20  # ResetMoney\n    REMOVE_ALL_WEAPONS          = 21  # RemoveAllWeapons\n    GIVE_WEAPON                 = 22  # GiveWeapon\n    CLICK_SCOREBOARD_PLAYER     = 23  # ClickScoreboardPlayer\n    SET_VEHICLE_PARAMS_EX       = 24  # SetVehicleParamsEx\n    CLIENT_JOIN                 = 25  # ClientJoin\n    PLAYER_ENTER_VEHICLE        = 26  # PlayerEnterVehicle\n    ENTER_VEHICLE               = 26  # EnterVehicle\n    ENTER_EDIT_OBJECT           = 27  # EnterEditObject\n    CANCEL_EDIT_OBJECT          = 28  # CancelEditObject\n    SET_TIME                    = 29  # SetTime\n    TOGGLE_CLOCK                = 30  # ToggleClock\n    START_PLAYER_STREAM         = 32  # StartPlayerStream\n    SET_SHOP_NAME               = 33  # SetShopName\n    SET_PLAYER_SKILL_LEVEL      = 34  # SetPlayerSkillLevel\n    SET_DRUNK_LEVEL             = 35  # SetDrunkLevel\n    SHOW_3D_TEXT_LABEL          = 36  # Show3DTextLabel\n    DISABLE_CHECKPOINT          = 37  # DisableCheckpoint\n    SHOW_RACE_CHECKPOINT        = 38  # ShowRaceCheckpoint\n    HIDE_RACE_CHECKPOINT        = 39  # HideRaceCheckpoint\n    GAME_MODE_RESTART           = 40  # GameModeRestart\n    PLAY_AUDIO_STREAM           = 41  # PlayAudioStream\n    STOP_AUDIO_STREAM           = 42  # StopAudioStream\n    REMOVE_BUILDING             = 43  # RemoveBuilding\n    CREATE_OBJECT               = 44  # CreateObject\n    SET_OBJECT_POS              = 45  # SetObjectPos\n    SET_OBJECT_ROTATION         = 46  # SetObjectRotation\n    DESTROY_OBJECT              = 47  # DestroyObject\n    REQUEST_CHAT_COMMAND        = 50  # RequestChatCommand\n    SEND_SPAWN                  = 52  # SendSpawn\n    DEATH_NOTIFICATION          = 53  # DeathNotification\n    NPC_JOIN                    = 54  # NpcJoin\n    KILL_FEED_MESSAGE           = 55  # KillFeedMessage\n    SET_MAP_ICON                = 56  # SetMapIcon\n    REMOVE_VEHICLE_COMPONENT    = 57  # RemoveVehicleComponent\n    HIDE_3D_TEXT_LABEL          = 58  # Hide3DTextLabel\n    SET_PLAYER_CHAT_BUBBLE      = 59  # SetPlayerChatBubble\n    SEND_GAME_TIME_UPDATE       = 60  # SendGameTimeUpdate\n    SHOW_DIALOG                 = 61  # ShowDialog\n    DIALOG_RESPONSE             = 62  # DialogResponse\n    DESTROY_PICKUP              = 63  # DestroyPickup\n    LINK_VEHICLE_TO_INTERIOR    = 65  # LinkVehicleToInterior\n    SET_ARMOR                   = 66  # SetArmor\n    SET_ARMED_WEAPON            = 67  # SetArmedWeapon\n    SET_SPAWN_INFO              = 68  # SetSpawnInfo\n    SET_PLAYER_TEAM             = 69  # SetPlayerTeam\n    PUT_IN_VEHICLE              = 70  # PutInVehicle\n    REMOVE_FROM_VEHICLE         = 71  # RemoveFromVehicle\n    SET_PLAYER_COLOR            = 72  # SetPlayerColor\n    SHOW_GAME_TEXT              = 73  # ShowGameText\n    FORCE_CLASS_SELECTION       = 74  # ForceClassSelection\n    ATTACH_OBJECT_TO_PLAYER     = 75  # AttachObjectToPlayer\n    INIT_MENU                   = 76  # InitMenu\n    SHOW_MENU                   = 77  # ShowMenu\n    HIDE_MENU                   = 78  # HideMenu\n    CREATE_EXPLOSION            = 79  # CreateExplosion\n    TOGGLE_PLAYER_NAME_TAG      = 80  # TogglePlayerNameTag\n    ATTACH_CAMERA_TO_OBJECT     = 81  # AttachCameraToObject\n    INTERPOLATE_CAMERA          = 82  # InterpolateCamera\n    CLICK_TEXTDRAW              = 83  # ClickTextdraw\n    TOGGLE_TEXTDRAWS_CLICKABLE  = 83  # ToggleTextdrawsClickable\n    SET_PLAYER_OBJECT_MATERIAL  = 84  # SetPlayerObjectMaterial\n    STOP_FLASH_GANG_ZONE        = 85  # StopFlashGangZone\n    APPLY_PLAYER_ANIMATION      = 86  # ApplyPlayerAnimation\n    CLEAR_PLAYER_ANIMATION      = 87  # ClearPlayerAnimation\n    SET_SPECIAL_ACTION          = 88  # SetSpecialAction\n    SET_PLAYER_FIGHTING_STYLE   = 89  # SetPlayerFightingStyle\n    SET_VELOCITY                = 90  # SetVelocity\n    SET_VEHICLE_VELOCITY        = 91  # SetVehicleVelocity\n    CHAT_MESSAGE                = 93  # ChatMessage\n    SET_WORLD_TIME              = 94  # SetWorldTime\n    CREATE_PICKUP               = 95  # CreatePickup\n    SCM_EVENT                   = 96  # ScmEvent\n    DESTROY_WEAPON_PICKUP       = 97  # DestroyWeaponPickup\n    MOVE_OBJECT                 = 99  # MoveObject\n    REQUEST_CHAT_MESSAGE        = 101 # RequestChatMessage\n    PLAYER_CHAT_MESSAGE         = 101 # PlayerChatMessage\n    SVR_STATS                   = 102 # SvrStats\n    CLIENT_CHECK                = 103 # ClientCheck\n    CLIENT_CHECK_RESPONSE       = 103 # ClientCheckResponse\n    TOGGLE_STUNT_BONUS          = 104 # ToggleStuntBonus\n    SET_TEXTDRAW_TEXT           = 105 # SetTextdrawText\n    DAMAGE_VEHICLE              = 106 # DamageVehicle\n    SET_CHECKPOINT              = 107 # SetCheckpoint\n    ADD_GANG_ZONE               = 108 # AddGangZone\n    PLAY_CRIME_REPORT           = 112 # PlayCrimeReport\n    SET_PLAYER_ATTACHED_OBJECT  = 113 # SetPlayerAttachedObject\n    GIVE_TAKE_DAMAGE            = 115 # GiveTakeDamage\n    EDIT_ATTACHED_OBJECT        = 116 # EditAttachedObject\n    EDIT_OBJECT                 = 117 # EditObject\n    INTERIOR_CHANGE             = 118 # InteriorChange\n    MAP_MARKER                  = 119 # MapMarker\n    REMOVE_GANG_ZONE            = 120 # RemoveGangZone\n    FLASH_GANG_ZONE             = 121 # FlashGangZone\n    STOP_OBJECT                 = 122 # StopObject\n    SET_VEHICLE_NUMBER_PLATE    = 123 # SetVehicleNumberPlate\n    TOGGLE_SPECTATE             = 124 # ToggleSpectate\n    SPECTATE_PLAYER             = 126 # SpectatePlayer\n    SPECTATE_VEHICLE            = 127 # SpectateVehicle\n    REQUEST_CLASS               = 128 # RequestClass\n    REQUEST_CLASS_RESPONSE      = 128 # RequestClassResponse\n    REQUEST_SPAWN               = 129 # RequestSpawn\n    REQUEST_SPAWN_RESPONSE      = 129 # RequestSpawnResponse\n    CONNECTION_REJECTED         = 130 # ConnectionRejected\n    PICKED_UP_PICKUP            = 131 # PickedUpPickup\n    MENU_SELECT                 = 132 # MenuSelect\n    SET_WANTED_LEVEL            = 133 # SetWantedLevel\n    SHOW_TEXTDRAW               = 134 # ShowTextdraw\n    HIDE_TEXTDRAW               = 135 # HideTextdraw\n    VEHICLE_DESTROYED           = 136 # VehicleDestroyed\n    SERVER_JOIN                 = 137 # ServerJoin\n    SERVER_QUIT                 = 138 # ServerQuit\n    INIT_GAME                   = 139 # InitGame\n    MENU_QUIT                   = 140 # MenuQuit\n    REMOVE_MAP_ICON             = 144 # RemoveMapIcon\n    SET_WEAPON_AMMO             = 145 # SetWeaponAmmo\n    SET_GRAVITY                 = 146 # SetGravity\n    SET_VEHICLE_HEALTH          = 147 # SetVehicleHealth\n    ATTACH_TRAILER_TO_VEHICLE   = 148 # AttachTrailerToVehicle\n    DETACH_TRAILER_FROM_VEHICLE = 149 # DetachTrailerFromVehicle\n    SET_WEATHER                 = 152 # SetWeather\n    SET_PLAYER_SKIN             = 153 # SetPlayerSkin\n    PLAYER_EXIT_VEHICLE         = 154 # PlayerExitVehicle\n    EXIT_VEHICLE                = 154 # ExitVehicle\n    REQUEST_SCORES_AND_PINGS    = 155 # RequestScoresAndPings\n    SET_INTERIOR                = 156 # SetInterior\n    SET_CAMERA_POS              = 157 # SetCameraPos\n    SET_CAMERA_LOOK_AT          = 158 # SetCameraLookAt\n    SET_VEHICLE_POS             = 159 # SetVehiclePos\n    SET_VEHICLE_DIR_Z           = 160 # SetVehicleDirZ\n    SET_VEHICLE_PARAMS          = 161 # SetVehicleParams\n    SET_CAMERA_BEHIND_PLAYER    = 162 # SetCameraBehindPlayer\n    STOP_PLAYER_STREAM          = 163 # StopPlayerStream\n    ADD_VEHICLE                 = 164 # AddVehicle\n    REMOVE_VEHICLE              = 165 # RemoveVehicle\n    DEATH_BROADCAST             = 166 # DeathBroadcast\n    TOGGLE_VEHICLE_COLLISIONS   = 167 # ToggleVehicleCollisions\n    CAMERA_TARGET               = 168 # CameraTarget\n    TOGGLE_CAMERA_TARGET        = 170 # ToggleCameraTarget\n    ADD_ACTOR                   = 171 # AddActor\n    REMOVE_ACTOR                = 172 # RemoveActor\n    APPLY_ACTOR_ANIMATION       = 173 # ApplyActorAnimation\n    CLEAR_ACTOR_ANIMATION       = 174 # ClearActorAnimation\n    SET_ACTOR_DIR_Z             = 175 # SetActorDirZ\n    SET_ACTOR_POS               = 176 # SetActorPos\n    SET_ACTOR_HEALTH            = 178 # SetActorHealth", "\nfrom . import raknet\nraknet.RPC = RPC\nfrom .raknet import Rpc\n\n# S2C means server to client\n# C2S means client to server\n\n''' S2C\nplayer_id: id of the player to change the name", "''' S2C\nplayer_id: id of the player to change the name\nname: new name; length=[1,24]\nsuccess: should be 1?; if 0 also changes the name so idk what it means\n'''\nclass SetPlayerName(Rpc):\n    def __init__(self, player_id, name, success=1):\n        super().__init__(RPC.SET_PLAYER_NAME)\n        self.player_id = player_id\n        self.name = name\n        self.success = success\n\n    def encode_rpc_payload(self, bs):\n        bs.write_u16(self.player_id)\n        bs.write_dynamic_str8(self.name)\n        bs.write_u8(self.success)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        player_id = bs.read_u16()\n        name = bs.read_dynamic_str8()\n        success = bs.read_u8()\n        return SetPlayerName(player_id, name, success)", "\n''' S2C\nSets the positon.\npos: new position\ne.g. SetPos(Vec3(0.0, 0.0, 3.0))\ne.g. SetPos(SPOT.GROVE)\nRelated: SetPlayerPos\n'''\nclass SetPos(Rpc):\n    def __init__(self, pos):\n        super().__init__(RPC.SET_POS)\n        self.pos = pos\n\n    def encode_rpc_payload(self, bs):\n        bs.write_vec3(self.pos)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        pos = bs.read_vec3()\n        return SetPos(pos)", "class SetPos(Rpc):\n    def __init__(self, pos):\n        super().__init__(RPC.SET_POS)\n        self.pos = pos\n\n    def encode_rpc_payload(self, bs):\n        bs.write_vec3(self.pos)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        pos = bs.read_vec3()\n        return SetPos(pos)", "\n''' S2C\nSets the position.\nThe final Z position may not be the value in the RPC, but rather the Z position of the closest solid object below Z(usually the ground)\ne.g. SetPosFindZ(0, 0, 100) will set the position to Vec3(0, 0, 2) because Z=2 is the height of the floor below Z=100\n'''\nclass SetPosFindZ(Rpc):\n    def __init__(self, pos):\n        super().__init__(RPC.SET_POS_FIND_Z)\n        self.pos = pos\n\n    def encode_rpc_payload(self, bs):\n        bs.write_vec3(self.pos)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        pos = bs.read_vec3()\n        return SetPosFindZ(pos)", "\n''' S2C\nSets the health of the player this rpc is sent to.\nhealth: new health value\ne.g. SetHealth(50.0)\n'''\nclass SetHealth(Rpc):\n    def __init__(self, health):\n        super().__init__(RPC.SET_HEALTH)\n        self.health = health\n\n    def encode_rpc_payload(self, bs):\n        bs.write_float(self.health)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        health = bs.read_float()\n        return SetHealth(health)", "\n''' S2C\nFreezes or unfreezes the player.\ncontrollable: True or False\nNote: The player cannot look nor move around when frozen.\nRelated: TogglePlayerControllable\ne.g. ToggleControllable(False) # freezes the player\n'''\nclass ToggleControllable(Rpc):\n    def __init__(self, controllable):\n        super().__init__(RPC.TOGGLE_CONTROLLABLE)\n        self.controllable = bool(controllable)\n\n    def encode_rpc_payload(self, bs):\n        bs.write_u8(self.controllable)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        controllable = bs.read_u8()\n        return ToggleControllable(controllable)", "class ToggleControllable(Rpc):\n    def __init__(self, controllable):\n        super().__init__(RPC.TOGGLE_CONTROLLABLE)\n        self.controllable = bool(controllable)\n\n    def encode_rpc_payload(self, bs):\n        bs.write_u8(self.controllable)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        controllable = bs.read_u8()\n        return ToggleControllable(controllable)", "\n''' S2C\nPlays/Stops the specified sound for the player this rpc is sent to.\nsound_id:\n - use 0 to stop the sound that is currently playing\n - see https://www.open.mp/docs/scripting/resources/sound-ids\n - see https://raw.githubusercontent.com/WoutProvost/samp-sound-array/master/sound.inc\npos: where the sound will played; use Vec3(0, 0, 0) for no position\n'''\nclass PlaySound(Rpc):\n    def __init__(self, sound_id, pos=Vec3(0,0,0)):\n        super().__init__(RPC.PLAY_SOUND)\n        self.sound_id = sound_id\n        self.pos = pos\n\n    def encode_rpc_payload(self, bs):\n        bs.write_u32(self.sound_id)\n        bs.write_vec3(self.pos)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        sound_id = bs.read_u32()\n        pos = bs.read_vec3()\n        return PlaySound(sound_id, pos)", "'''\nclass PlaySound(Rpc):\n    def __init__(self, sound_id, pos=Vec3(0,0,0)):\n        super().__init__(RPC.PLAY_SOUND)\n        self.sound_id = sound_id\n        self.pos = pos\n\n    def encode_rpc_payload(self, bs):\n        bs.write_u32(self.sound_id)\n        bs.write_vec3(self.pos)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        sound_id = bs.read_u32()\n        pos = bs.read_vec3()\n        return PlaySound(sound_id, pos)", "\n''' S2C\nSets the world boundaries for the player this rpc is sent to.\nIf the player tries to go out of the boundaries they will be pushed back in.\nDefault value: SetWorldBounds(20_000.0, -20_000.0, 20_000.0, -20_000.0)\n                (North)\n                 max_y\n             \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n             \u2502          \u2502\n(West) min_x \u2502          \u2502 max_x (East)", "             \u2502          \u2502\n(West) min_x \u2502          \u2502 max_x (East)\n             \u2502          \u2502\n             \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                 min_y\n                (South)\n'''\nclass SetWorldBounds(Rpc):\n    def __init__(self, max_x, min_x, max_y, min_y):\n        super().__init__(RPC.SET_WORLD_BOUNDS)\n        self.max_x = max_x\n        self.min_x = min_x\n        self.max_y = max_y\n        self.min_y = min_y\n\n    def encode_rpc_payload(self, bs):\n        bs.write_float(self.max_x)\n        bs.write_float(self.min_x)\n        bs.write_float(self.max_y)\n        bs.write_float(self.min_y)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        max_x = bs.read_float()\n        min_x = bs.read_float()\n        max_y = bs.read_float()\n        min_y = bs.read_float()\n        return SetWorldBounds(max_x, min_x, max_y, min_y)", "\n''' S2C\nGive money to or take money from the player this rpc is sent to.\ne.g. GiveMoney(123)\ne.g. GiveMoney(-200)\ne.g. GiveMoney(0) # nothing happens\nRelated: GivePlayerMoney\n'''\nclass GiveMoney(Rpc):\n    def __init__(self, amount):\n        super().__init__(RPC.GIVE_MONEY)\n        self.amount = amount\n\n    def encode_rpc_payload(self, bs):\n        bs.write_i32(self.amount)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        amount = bs.read_i32()\n        return GiveMoney(amount)", "class GiveMoney(Rpc):\n    def __init__(self, amount):\n        super().__init__(RPC.GIVE_MONEY)\n        self.amount = amount\n\n    def encode_rpc_payload(self, bs):\n        bs.write_i32(self.amount)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        amount = bs.read_i32()\n        return GiveMoney(amount)", "\n''' S2C\nSets the Z component of the direction(orientation)\ne.g. SetDirZ(0.0) # Player faces north\n\n           (North)\n              0\u00b0\n              \u2502\n(West) 90\u00b0 \u2500\u2500   \u2500\u2500 270\u00b0 (East)\n              \u2502", "(West) 90\u00b0 \u2500\u2500   \u2500\u2500 270\u00b0 (East)\n              \u2502\n             180\u00b0\n           (South)\nRelated: SetPlayerFacingAngle\n'''\nclass SetDirZ(Rpc):\n    def __init__(self, angle):\n        super().__init__(RPC.SET_DIR_Z)\n        self.angle = angle\n\n    def encode_rpc_payload(self, bs):\n        bs.write_float(self.angle)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        angle = bs.read_float()\n        return SetDirZ(angle)", "\n''' S2C\nSets the money amount to zero of the player this rpc is sent to.\ne.g. ResetMoney()\nRelated: ResetPlayerMoney\n'''\nclass ResetMoney(Rpc):\n    def __init__(self):\n        super().__init__(RPC.RESET_MONEY)\n\n    def encode_rpc_payload(self, bs):\n        pass\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        return ResetMoney()", "\n''' S2C\nRemoves all weapons from the player this rpc is sent to.\nNote: To remove specific weapons, set ammo to 0 using SetWeaponAmmo.\nRelated: ResetPlayerWeapons\n'''\nclass RemoveAllWeapons(Rpc):\n    def __init__(self):\n        super().__init__(RPC.REMOVE_ALL_WEAPONS)\n\n    def encode_rpc_payload(self, bs):\n        pass\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        return RemoveAllWeapons()", "\n''' S2C\nGive a weapon with ammo to the player this rpc is sent to.\nSee weapons at sa/weapon.py\ne.g. GiveWeapon(WEAPON.M4, 250)\nNote: it accumulates, so giving it twice will double the ammo\nRelated: GivePlayerWeapon\n'''\nclass GiveWeapon(Rpc):\n    def __init__(self, weapon_id, ammo):\n        super().__init__(RPC.GIVE_WEAPON)\n        self.weapon_id = weapon_id\n        self.ammo = ammo\n\n    def encode_rpc_payload(self, bs):\n        bs.write_u32(self.weapon_id)\n        bs.write_u32(self.ammo)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        weapon_id = bs.read_u32()\n        ammo = bs.read_u32()\n        return GiveWeapon(weapon_id, ammo)", "class GiveWeapon(Rpc):\n    def __init__(self, weapon_id, ammo):\n        super().__init__(RPC.GIVE_WEAPON)\n        self.weapon_id = weapon_id\n        self.ammo = ammo\n\n    def encode_rpc_payload(self, bs):\n        bs.write_u32(self.weapon_id)\n        bs.write_u32(self.ammo)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        weapon_id = bs.read_u32()\n        ammo = bs.read_u32()\n        return GiveWeapon(weapon_id, ammo)", "\n''' C2S\nClient sends this rpc when it clicks a player on the scoreboard(TAB)\nplayer_id: the id of the player that has been clicked\nsource: seems to always be 0\nRelated: ClickPlayer, OnPlayerClickPlayer\n'''\nclass ClickScoreboardPlayer(Rpc):\n    def __init__(self, player_id, source):\n        super().__init__(RPC.CLICK_SCOREBOARD_PLAYER)\n        self.player_id = player_id\n        self.source = source\n\n    def encode_rpc_payload(self, bs):\n        bs.write_u16(self.player_id)\n        bs.write_u8(self.source)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        player_id = bs.read_u16()\n        source = bs.read_u8()\n        return ClickScoreboardPlayer(player_id, source)", "\nclass SetVehicleParamsEx(Rpc):\n    def __init__(self, vehicle_id, engine, lights=255, alarm=255, doors=255, bonnet=255, boot=255, objective=255, siren=255, door_driver=255, door_passenger=255, door_back_left=255, door_back_right=255, window_driver=255, window_passenger=255, window_back_left=255, window_back_right=255):\n        super().__init__(RPC.SET_VEHICLE_PARAMS_EX)\n        self.vehicle_id = vehicle_id\n        self.engine = engine\n        self.lights = lights\n        self.alarm = alarm\n        self.doors = doors\n        self.bonnet = bonnet\n        self.boot = boot\n        self.objective = objective\n        self.siren = siren\n        self.door_driver = door_driver\n        self.door_passenger = door_passenger\n        self.door_back_left = door_back_left\n        self.door_back_right = door_back_right\n        self.window_driver = window_driver\n        self.window_passenger = window_passenger\n        self.window_back_left = window_back_left\n        self.window_back_right = window_back_right\n\n    def encode_rpc_payload(self, bs):\n        bs.write_u16(self.vehicle_id)\n        bs.write_u8(self.engine)\n        bs.write_u8(self.lights)\n        bs.write_u8(self.alarm)\n        bs.write_u8(self.doors)\n        bs.write_u8(self.bonnet)\n        bs.write_u8(self.boot)\n        bs.write_u8(self.objective)\n        bs.write_u8(self.siren)\n        bs.write_u8(self.door_driver)\n        bs.write_u8(self.door_passenger)\n        bs.write_u8(self.door_back_left)\n        bs.write_u8(self.door_back_right)\n        bs.write_u8(self.window_driver)\n        bs.write_u8(self.window_passenger)\n        bs.write_u8(self.window_back_left)\n        bs.write_u8(self.window_back_right)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        vehicle_id = bs.read_u16()\n        engine = bs.read_u8()\n        lights = bs.read_u8()\n        alarm = bs.read_u8()\n        doors = bs.read_u8()\n        bonnet = bs.read_u8()\n        boot = bs.read_u8()\n        objective = bs.read_u8()\n        siren = bs.read_u8()\n        door_driver = bs.read_u8()\n        door_passenger = bs.read_u8()\n        door_back_left = bs.read_u8()\n        door_back_right = bs.read_u8()\n        window_driver = bs.read_u8()\n        window_passenger = bs.read_u8()\n        window_back_left = bs.read_u8()\n        window_back_right = bs.read_u8()\n        return SetVehicleParamsEx(vehicle_id, engine, lights, alarm, doors, bonnet, boot, objective, siren, door_driver, door_passenger, door_back_left, door_back_right, window_driver, window_passenger, window_back_left, window_back_right)", "\n''' C2S\nThe client sends this RPC to the server in the connection process, after the server sends ConnectionRequestAccepted.\n'''\nclass ClientJoin(Rpc):\n    def __init__(self, version_code, mod, name, challenge_response, gpci, version):\n        super().__init__(RPC.CLIENT_JOIN)\n        self.version_code = version_code\n        self.mod = mod\n        self.name = name\n        self.challenge_response = challenge_response\n        self.gpci = gpci # \"gpci\"; (stands for get player client id)\n        self.version = version\n\n    def encode_rpc_payload(self, bs):\n        bs.write_u32(self.version_code)\n        bs.write_u8(self.mod)\n        bs.write_dynamic_str8(self.name)\n        bs.write_u32(self.challenge_response)\n        bs.write_dynamic_str8(self.gpci)\n        bs.write_dynamic_str8(self.version)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        version_code = bs.read_u32()\n        mod = bs.read_u8()\n        name = bs.read_dynamic_str8()\n        challenge_response = bs.read_u32()\n        gpci = bs.read_dynamic_str8()\n        version = bs.read_dynamic_str8()\n        return ClientJoin(version_code, mod, name, challenge_response, gpci, version)", "\n''' S2C\nMakes the specified player do the animation of entering the specified vehicle for the player this RPC is sent to.\nplayer_id: the id of the player entering the vehicle\nvehicle_id: the id of the vehicle about to be entered\nas_passenger: 0 if entering the driver seat; 1 if entering any passenger seat\n'''\nclass PlayerEnterVehicle(Rpc):\n    def __init__(self, player_id, vehicle_id, as_passenger):\n        super().__init__(RPC.PLAYER_ENTER_VEHICLE)\n        self.player_id = player_id\n        self.vehicle_id = vehicle_id\n        self.as_passenger = as_passenger\n\n    def encode_rpc_payload(self, bs):\n        bs.write_u16(self.player_id)\n        bs.write_u16(self.vehicle_id)\n        bs.write_u8(self.as_passenger)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        player_id = bs.read_u16()\n        vehicle_id = bs.read_u16()\n        as_passenger = bs.read_u8()\n        return PlayerEnterVehicle(player_id, vehicle_id, as_passenger)", "\n''' C2S\nClient sends when it enters a vehicle\nvehicle_id: the id of the vehicle about to be entered\nas_passenger: 0 if entering the driver seat; 1 if entering any passenger seat\n'''\nclass EnterVehicle(Rpc):\n    def __init__(self, vehicle_id, as_passenger):\n        super().__init__(RPC.ENTER_VEHICLE)\n        self.vehicle_id = vehicle_id\n        self.as_passenger = as_passenger\n\n    def encode_rpc_payload(self, bs):\n        bs.write_u16(self.vehicle_id)\n        bs.write_u8(self.as_passenger)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        vehicle_id = bs.read_u16()\n        as_passenger = bs.read_u8()\n        return EnterVehicle(vehicle_id, as_passenger)", "RPC.ENTER_VEHICLE.decode_client_rpc_payload = EnterVehicle.decode_rpc_payload\n\nclass EnterEditObject(Rpc):\n    def __init__(self):\n        super().__init__(RPC.ENTER_EDIT_OBJECT)\n\n    def encode_rpc_payload(self, bs):\n        pass\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        return EnterEditObject()", "\nclass CancelEditObject(Rpc):\n    def __init__(self):\n        super().__init__(RPC.CANCEL_EDIT_OBJECT)\n\n    def encode_rpc_payload(self, bs):\n        pass\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        return CancelEditObject()", "\n''' S2C\nSets the world time for the player this rpc is sent to.\ne.g. SetTime(0, 0) # 00:00\ne.g. SetTime(12, 30) # 12:30\nRelated: SetPlayerTime\n'''\nclass SetTime(Rpc):\n    def __init__(self, hour, minute=0):\n        super().__init__(RPC.SET_TIME)\n        self.hour = hour\n        self.minute = minute\n\n    def encode_rpc_payload(self, bs):\n        bs.write_u8(self.hour)\n        bs.write_u8(self.minute)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        hour = bs.read_u8()\n        minute = bs.read_u8()\n        return SetTime(hour, minute)", "\n''' S2C\nShows or hides the clock in the top right corner of the screen.\nshow: True or False\nNote: The time of the clock may be modified by the SetTime RPC\nNote: The time on the clock changes at a rate of one minute per one real world second, so one hour goes by every real world minute\ne.g. ToggleClock(show=True)\n'''\nclass ToggleClock(Rpc):\n    def __init__(self, show):\n        super().__init__(RPC.TOGGLE_CLOCK)\n        self.show = bool(show)\n\n    def encode_rpc_payload(self, bs):\n        bs.write_u8(self.show)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        show = bs.read_u8()\n        return ToggleClock(show)", "class ToggleClock(Rpc):\n    def __init__(self, show):\n        super().__init__(RPC.TOGGLE_CLOCK)\n        self.show = bool(show)\n\n    def encode_rpc_payload(self, bs):\n        bs.write_u8(self.show)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        show = bs.read_u8()\n        return ToggleClock(show)", "\n''' S2C\nAdds the specified player to the world.\nIf this rpc is sent twice(without a StopPlayerStream in between) it just overwrites the values.\nteam: valid team values are 0-254; None specifies the player is not in any team(internally it is defined as 255)\nNote: The server MUST send the ServerJoin RPC before StartPlayerStream; i.e. logically a player has to first join the server, then be added to the world.\nRelated: WorldPlayerAdd, PlayerStreamIn\n'''\nclass StartPlayerStream(Rpc):\n    def __init__(self, player_id, team=None, skin_id=SKIN.CJ, pos=Vec3(0,0,3), dir_z=0.0, color=0xffffffff, fighting_style=0, skill_level=0):\n        super().__init__(RPC.START_PLAYER_STREAM)\n        self.player_id = player_id\n        self.team = team\n        self.skin_id = SKIN(skin_id)\n        self.pos = pos\n        self.dir_z = dir_z\n        self.color = Color(color)\n        self.fighting_style = fighting_style\n        self.skill_level = skill_level\n\n    def encode_rpc_payload(self, bs):\n        bs.write_u16(self.player_id)\n        bs.write_u8(NO_TEAM_ID if self.team is None else self.team)\n        bs.write_u32(self.skin_id)\n        bs.write_vec3(self.pos)\n        bs.write_float(self.dir_z)\n        bs.write_u32(self.color)\n        bs.write_u8(self.fighting_style)\n        bs.write_u16(self.skill_level)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        player_id = bs.read_u16()\n        team = bs.read_u8()\n        if team == NO_TEAM_ID:\n            team = None\n        skin_id = bs.read_u32()\n        pos = bs.read_vec3()\n        dir_z = bs.read_float()\n        color = bs.read_u32()\n        fighting_style = bs.read_u8()\n        skill_level = bs.read_u16()\n        return StartPlayerStream(player_id, team, skin_id, pos, dir_z, color, fighting_style, skill_level)", "class StartPlayerStream(Rpc):\n    def __init__(self, player_id, team=None, skin_id=SKIN.CJ, pos=Vec3(0,0,3), dir_z=0.0, color=0xffffffff, fighting_style=0, skill_level=0):\n        super().__init__(RPC.START_PLAYER_STREAM)\n        self.player_id = player_id\n        self.team = team\n        self.skin_id = SKIN(skin_id)\n        self.pos = pos\n        self.dir_z = dir_z\n        self.color = Color(color)\n        self.fighting_style = fighting_style\n        self.skill_level = skill_level\n\n    def encode_rpc_payload(self, bs):\n        bs.write_u16(self.player_id)\n        bs.write_u8(NO_TEAM_ID if self.team is None else self.team)\n        bs.write_u32(self.skin_id)\n        bs.write_vec3(self.pos)\n        bs.write_float(self.dir_z)\n        bs.write_u32(self.color)\n        bs.write_u8(self.fighting_style)\n        bs.write_u16(self.skill_level)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        player_id = bs.read_u16()\n        team = bs.read_u8()\n        if team == NO_TEAM_ID:\n            team = None\n        skin_id = bs.read_u32()\n        pos = bs.read_vec3()\n        dir_z = bs.read_float()\n        color = bs.read_u32()\n        fighting_style = bs.read_u8()\n        skill_level = bs.read_u16()\n        return StartPlayerStream(player_id, team, skin_id, pos, dir_z, color, fighting_style, skill_level)", "\nclass SetShopName(Rpc):\n    def __init__(self):\n        super().__init__(RPC.SET_SHOP_NAME)\n\n    def encode_rpc_payload(self, bs):\n        pass\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        return SetShopName()", "\nclass WEAPON_SKILL(enum.IntEnum):\n    PISTOL          = 0\n    PISTOL_SILENCED = 1\n    DESERT_EAGLE    = 2\n    SHOTGUN         = 3\n    SAWNOFF_SHOTGUN = 4\n    SPAS12_SHOTGUN  = 5\n    MICRO_UZI       = 6\n    MP5             = 7\n    AK47            = 8\n    M4              = 9\n    SNIPERRIFLE     = 10", "\n''' S2C\nSets the skill level of the specified player.\nplayer_id: id of the player to set the level of the specified weapon(skill_id)\nskill_id: a member of WEAPON_SKILL\nlevel: skill level\n\ne.g. SetPlayerSkillLevel(244, WEAPON_SKILL.M4, 600)\n\nThere are 3 classes: Poor, Gangster and Hitman", "\nThere are 3 classes: Poor, Gangster and Hitman\nThis table shows the levels needed to advance to the next class\n\nWeapon          Poor  Gangster  Hitman\nPistol          0     40        999\nSlienced Pistol 0     500       999\nDesert Eagle    0     200       999\nShotgun         0     200       999\nSawnoff         0     200       999", "Shotgun         0     200       999\nSawnoff         0     200       999\nCombat          0     200       999\nMicro Uzi       0     50        999\nTEC-9           0     50        999\nMP5             0     250       999\nAK47            0     200       999\nM4              0     200       999\nSniper Rifle    0     300       999\nCountry Rifle   0     300       999", "Sniper Rifle    0     300       999\nCountry Rifle   0     300       999\n'''\nclass SetPlayerSkillLevel(Rpc):\n    def __init__(self, player_id, skill_id, level):\n        super().__init__(RPC.SET_PLAYER_SKILL_LEVEL)\n        self.player_id = player_id\n        self.skill_id = skill_id\n        self.level = level\n\n    def encode_rpc_payload(self, bs):\n        bs.write_u16(self.player_id)\n        bs.write_u32(self.skill_id)\n        bs.write_u16(self.level)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        player_id = bs.read_u16()\n        skill_id = bs.read_u32()\n        level = bs.read_u16()\n        return SetPlayerSkillLevel(player_id, skill_id, level)", "\n''' S2C\nSets the drunk level of the player this rpc is sent to.\ne.g. SetDrunkLevel(2000+3*60) # camera sways for ~3 seconds and goes back to normal (assuming FPS=60)\nThe level automatically decreases over time\nThe rate of depends on the client FPS (i.e. FPS=X means it loses X levels per second), thus it is possible to estimate the FPS\nIn 0.3a the drunk level will decrement and stop at 2000. In 0.3b+ the drunk level decrements to zero.)\nMax level: 50000\nLevel  Effect\n<=2000 No effect", "Level  Effect\n<=2000 No effect\n>2000  Camera swaying and hard to drive\n>5000  Hidden HUD (i.e. radar, health/armor bar, ...)\nRelated: SetPlayerDrunkLevel\n'''\nclass SetDrunkLevel(Rpc):\n    def __init__(self, level):\n        super().__init__(RPC.SET_DRUNK_LEVEL)\n        self.level = level\n\n    def encode_rpc_payload(self, bs):\n        bs.write_i32(self.level)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        level = bs.read_i32()\n        return SetDrunkLevel(level)", "\n''' S2C\nlabel_id: integer in the interval [0, 2047]; max id = MAX_3D_TEXT_LABEL_ID\ntext: text\ncolor: color of the text\npos: position of the text as Vec3\ndraw_distance: maximum distance the text is still visible\ntest_los: 1 or 0; Test the line-of-sight(LOS) so the text can't be seen through objects\nattached_player_id:nothing attached=None if it is the id of a player then the text is attached to the player; note: the player the 3d text is attached to cannot see it, only others\nattached_vehicle_id:nothing attached=None; if it is the id of a vehicle then the text is attached to the player", "attached_player_id:nothing attached=None if it is the id of a player then the text is attached to the player; note: the player the 3d text is attached to cannot see it, only others\nattached_vehicle_id:nothing attached=None; if it is the id of a vehicle then the text is attached to the player\nnote: if the text is attached to a player or vehicle, 'pos' becomes an offset relative to the player/vehicle.\n\nUse the Hide3DTextLabel RPC to hide a 3d text label.\n'''\nclass Show3DTextLabel(Rpc):\n    def __init__(self, label_id, text, color, pos, draw_distance=50.0, test_los=1, attached_player_id=None, attached_vehicle_id=None):\n        super().__init__(RPC.SHOW_3D_TEXT_LABEL)\n        self.label_id = label_id\n        self.color = Color(color)\n        self.pos = pos\n        self.draw_distance = draw_distance\n        self.test_los = test_los\n        self.attached_player_id = attached_player_id\n        self.attached_vehicle_id = attached_vehicle_id\n        self.text = text\n\n    def encode_rpc_payload(self, bs):\n        bs.write_u16(self.label_id)\n        bs.write_u32(self.color)\n        bs.write_vec3(self.pos)\n        bs.write_float(self.draw_distance)\n        bs.write_u8(self.test_los)\n        bs.write_i16(-1 if self.attached_player_id is None else self.attached_player_id)\n        bs.write_i16(-1 if self.attached_vehicle_id is None else self.attached_vehicle_id)\n        bs.write_huffman_buffer(self.text.encode(SAMP_ENCODING), default_huffman_tree.encoding_table)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        label_id = bs.read_u16()\n        color = bs.read_u32()\n        pos = bs.read_vec3()\n        draw_distance = bs.read_float()\n        test_los = bs.read_u8()\n\n        attached_player_id = bs.read_i16()\n        if attached_player_id < 0:\n            attached_player_id = None\n\n        attached_vehicle_id = bs.read_i16()\n        if attached_vehicle_id < 0:\n            attached_vehicle_id = None\n\n        text = bs.read_huffman_buffer(default_huffman_tree.root_node).decode(SAMP_ENCODING)\n        return Show3DTextLabel(label_id, text, color, pos, draw_distance, test_los, attached_player_id, attached_vehicle_id)", "RPC.SHOW_3D_TEXT_LABEL.decode_server_rpc_payload = Show3DTextLabel.decode_rpc_payload\n\nclass DisableCheckpoint(Rpc):\n    def __init__(self):\n        super().__init__(RPC.DISABLE_CHECKPOINT)\n\n    def encode_rpc_payload(self, bs):\n        pass\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        return DisableCheckpoint()", "\n''' S2C\nShows a race checkpoint.\ntype: 0=Normal, 1=Finish, 2=Nothing(Only the checkpoint without anything in it), 3=Air normal(torus), 4=Air finish, 5=Air (rotates and stops), 6=Air (increases, decreases and disappears), 7=Air (swings down and up), 8=Air (swings up and down)\npos: position of the race checkpoint\nnext_pos: this vector is used to set the direction of the arrow of the checkpoint\ndiameter: race checkpoint diameter\nNote: only one checkpoint is shown at a time\nRelated: SetPlayerRaceCheckpoint, SetRaceCheckpoint\n'''\nclass ShowRaceCheckpoint(Rpc):\n    def __init__(self, type, pos, next_pos, diameter):\n        super().__init__(RPC.SHOW_RACE_CHECKPOINT)\n        self.type = type\n        self.pos = pos\n        self.next_pos = next_pos\n        self.diameter = diameter\n\n    def encode_rpc_payload(self, bs):\n        bs.write_u8(self.type)\n        bs.write_vec3(self.pos)\n        bs.write_vec3(self.next_pos)\n        bs.write_float(self.diameter)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        type = bs.read_u8()\n        pos = bs.read_vec3()\n        next_pos = bs.read_vec3()\n        diameter = bs.read_float()\n        return ShowRaceCheckpoint(type, pos, next_pos, diameter)", "Related: SetPlayerRaceCheckpoint, SetRaceCheckpoint\n'''\nclass ShowRaceCheckpoint(Rpc):\n    def __init__(self, type, pos, next_pos, diameter):\n        super().__init__(RPC.SHOW_RACE_CHECKPOINT)\n        self.type = type\n        self.pos = pos\n        self.next_pos = next_pos\n        self.diameter = diameter\n\n    def encode_rpc_payload(self, bs):\n        bs.write_u8(self.type)\n        bs.write_vec3(self.pos)\n        bs.write_vec3(self.next_pos)\n        bs.write_float(self.diameter)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        type = bs.read_u8()\n        pos = bs.read_vec3()\n        next_pos = bs.read_vec3()\n        diameter = bs.read_float()\n        return ShowRaceCheckpoint(type, pos, next_pos, diameter)", "\n''' S2C\nHides the active race checkpoint(if any).\nRelated: DisablePlayerRaceCheckpoint, DisableRaceCheckpoint\n'''\nclass HideRaceCheckpoint(Rpc):\n    def __init__(self):\n        super().__init__(RPC.HIDE_RACE_CHECKPOINT)\n\n    def encode_rpc_payload(self, bs):\n        pass\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        return HideRaceCheckpoint()", "\nclass GameModeRestart(Rpc):\n    def __init__(self):\n        super().__init__(RPC.GAME_MODE_RESTART)\n\n    def encode_rpc_payload(self, bs):\n        pass\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        return GameModeRestart()", "\n''' S2C\nPlays an audio stream.\nurl: address of the stream\nuse_pos: True or False; If false, the audio is played no matter where the player is(i.e. pos and radius are unused).\npos and radius: specify a sphere; audio is only played this sphere.\ne.g. PlayAudioStream('https://upload.wikimedia.org/wikipedia/commons/a/ac/Pig_grunt_-_Erdie.ogg') makes player hear a pig oinking .\n'''\nclass PlayAudioStream(Rpc):\n    def __init__(self, url, use_pos=False, pos=Vec3(0.0, 0.0, 0.0), radius=0.0):\n        super().__init__(RPC.PLAY_AUDIO_STREAM)\n        self.url = url\n        self.use_pos = use_pos\n        self.pos = pos\n        self.radius = radius\n\n    def encode_rpc_payload(self, bs):\n        bs.write_dynamic_str8(self.url)\n        bs.write_vec3(self.pos)\n        bs.write_float(self.radius)\n        bs.write_u8(self.use_pos)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        url = bs.read_dynamic_str8()\n        pos = bs.read_vec3()\n        radius = bs.read_float()\n        use_pos = bs.read_u8()\n        return PlayAudioStream(url, use_pos, pos, radius)", "class PlayAudioStream(Rpc):\n    def __init__(self, url, use_pos=False, pos=Vec3(0.0, 0.0, 0.0), radius=0.0):\n        super().__init__(RPC.PLAY_AUDIO_STREAM)\n        self.url = url\n        self.use_pos = use_pos\n        self.pos = pos\n        self.radius = radius\n\n    def encode_rpc_payload(self, bs):\n        bs.write_dynamic_str8(self.url)\n        bs.write_vec3(self.pos)\n        bs.write_float(self.radius)\n        bs.write_u8(self.use_pos)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        url = bs.read_dynamic_str8()\n        pos = bs.read_vec3()\n        radius = bs.read_float()\n        use_pos = bs.read_u8()\n        return PlayAudioStream(url, use_pos, pos, radius)", "\n''' S2C\nStops an audio stream.\ne.g. StopAudioStream() makes the currently playing stream(if any) stop.\n'''\nclass StopAudioStream(Rpc):\n    def __init__(self):\n        super().__init__(RPC.STOP_AUDIO_STREAM)\n\n    def encode_rpc_payload(self, bs):\n        pass\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        return StopAudioStream()", "\n''' S2C\nRemoves zero or more objects.\nmodel_id: a specific model id, or None(matches all model ids)\npos and radius are used to specify a sphere; objects are only removed if they are inside this imaginary sphere\n'''\nclass RemoveBuilding(Rpc):\n    def __init__(self, model_id, pos, radius):\n        super().__init__(RPC.REMOVE_BUILDING)\n        self.model_id = model_id\n        self.pos = pos\n        self.radius = radius\n\n    def encode_rpc_payload(self, bs):\n        bs.write_i32(-1 if self.model_id == None else self.model_id)\n        bs.write_vec3(self.pos)\n        bs.write_float(self.radius)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        model_id = bs.read_i32()\n        if model_id == -1:\n            model_id = None\n        pos = bs.read_vec3()\n        radius = bs.read_float()\n        return RemoveBuilding(model_id, pos, radius)", "\nclass CreateObject(Rpc):\n    def __init__(self, object_id, model_id, pos, dir=Vec3(0.0, 0.0, 0.0), draw_distance=100.0, no_camera_col=True, attached_object_id=None, attached_vehicle_id=None, attach_offset=None, attach_dir=None, sync_rotation=None):\n        super().__init__(RPC.CREATE_OBJECT)\n        self.object_id = object_id\n        self.model_id = model_id\n        self.pos = pos # Object position as Vec3\n        self.dir = dir # Object direction as Vec3\n        self.draw_distance = float(draw_distance)\n        self.no_camera_col = no_camera_col\n        self.attached_object_id = attached_object_id\n        self.attached_vehicle_id = attached_vehicle_id\n        self.attach_offset = attach_offset\n        self.attach_dir = attach_dir\n        self.sync_rotation = sync_rotation\n\n    def encode_rpc_payload(self, bs):\n        bs.write_u16(self.object_id)\n        bs.write_u32(self.model_id)\n        bs.write_vec3(self.pos)\n        bs.write_vec3(self.dir)\n        bs.write_float(self.draw_distance)\n        bs.write_u8(self.no_camera_col)\n        bs.write_i16(-1 if self.attached_object_id is None else self.attached_object_id)\n        bs.write_i16(-1 if self.attached_vehicle_id is None else self.attached_vehicle_id)\n        if self.attached_object_id is not None or self.attached_vehicle_id is not None:\n            bs.write_vec3(self.attach_offset)\n            bs.write_vec3(self.attach_dir)\n            bs.write_u8(self.sync_rotation)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        object_id = bs.read_u16()\n        model_id = bs.read_u32()\n        pos = bs.read_vec3()\n        dir = bs.read_vec3()\n        draw_distance = bs.read_float()\n        no_camera_col = bs.read_u8()\n        attached_object_id = bs.read_i16()\n        if attached_object_id == -1:\n            attached_object_id = None\n        attached_vehicle_id = bs.read_i16()\n        if attached_vehicle_id == -1:\n            attached_vehicle_id = None\n        if attached_object_id is not None or attached_vehicle_id is not None:\n            attach_offset = bs.read_vec3()\n            attach_dir = bs.read_vec3()\n            sync_rotation = bs.read_u8()\n        else:\n            attach_offset = None\n            attach_dir = None\n            sync_rotation = None\n        return CreateObject(object_id, model_id, pos, dir, draw_distance, no_camera_col, attached_object_id, attached_vehicle_id, attach_offset, attach_dir, sync_rotation)", "\nclass SetObjectPos(Rpc):\n    def __init__(self):\n        super().__init__(RPC.SET_OBJECT_POS)\n\n    def encode_rpc_payload(self, bs):\n        pass\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        return SetObjectPos()", "\nclass SetObjectRotation(Rpc):\n    def __init__(self):\n        super().__init__(RPC.SET_OBJECT_ROTATION)\n\n    def encode_rpc_payload(self, bs):\n        pass\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        return SetObjectRotation()", "\nclass DestroyObject(Rpc):\n    def __init__(self, object_id):\n        super().__init__(RPC.DESTROY_OBJECT)\n        self.object_id = object_id\n\n    def encode_rpc_payload(self, bs):\n        bs.write_u16(self.object_id)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        object_id = bs.read_u16()\n        return DestroyObject(object_id)", "\n''' C2S\nClient sends a command to the server, e.g. \"/help\"\ncommand: command.\nRelated: PlayerRequestCommandMessage, SendCommand \n'''\nclass RequestChatCommand(Rpc):\n    def __init__(self, command):\n        super().__init__(RPC.REQUEST_CHAT_COMMAND)\n        self.command = command\n\n    def encode_rpc_payload(self, bs):\n        bs.write_dynamic_str32(self.command)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        command = bs.read_dynamic_str32()\n        return RequestChatCommand(command)", "\n''' C2S\nClients notifies the server when it has spawned\n'''\nclass SendSpawn(Rpc):\n    def __init__(self):\n        super().__init__(RPC.SEND_SPAWN)\n\n    def encode_rpc_payload(self, bs):\n        pass\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        return SendSpawn()", "\nclass DeathNotification(Rpc):\n    def __init__(self, reason, killer_id):\n        super().__init__(RPC.DEATH_NOTIFICATION)\n        self.reason = reason\n        self.killer_id = killer_id\n\n    def encode_rpc_payload(self, bs):\n        bs.write_u8(self.reason)\n        bs.write_u16(self.killer_id)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        reason = bs.read_u8()\n        killer_id = bs.read_u16()\n        return DeathNotification(reason, killer_id)", "\nclass NpcJoin(Rpc):\n    def __init__(self):\n        super().__init__(RPC.NPC_JOIN)\n\n    def encode_rpc_payload(self, bs):\n        pass\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        return NpcJoin()", "\n''' S2C\nAdds a message to the kill feed.\nA kill feed message has the following format: KILLER REASON VICTIM\nkiller_id: player id of the killer; this value should be None if there is no killer(e.g. suicide)\nvictim_id: player id of the victim\nreason: a weapon id; see sa/weapon.py\nNote: kill feed(or death chat/window) is the area on the screen on the right(F9)\n'''\nclass KillFeedMessage(Rpc):\n    def __init__(self, killer_id, victim_id, reason):\n        super().__init__(RPC.KILL_FEED_MESSAGE)\n        self.killer_id = killer_id\n        self.victim_id = victim_id\n        self.reason = WEAPON(reason)\n\n    def encode_rpc_payload(self, bs):\n        bs.write_i16(self.killer_id)\n        bs.write_i16(-1 if self.victim_id == None else self.victim_id)\n        bs.write_u8(self.reason)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        killer_id = bs.read_i16()\n        if killer_id == -1:\n            killer_id = None\n        victim_id = bs.read_i16()\n        reason = bs.read_u8()\n        return KillFeedMessage(killer_id, victim_id, reason)", "'''\nclass KillFeedMessage(Rpc):\n    def __init__(self, killer_id, victim_id, reason):\n        super().__init__(RPC.KILL_FEED_MESSAGE)\n        self.killer_id = killer_id\n        self.victim_id = victim_id\n        self.reason = WEAPON(reason)\n\n    def encode_rpc_payload(self, bs):\n        bs.write_i16(self.killer_id)\n        bs.write_i16(-1 if self.victim_id == None else self.victim_id)\n        bs.write_u8(self.reason)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        killer_id = bs.read_i16()\n        if killer_id == -1:\n            killer_id = None\n        victim_id = bs.read_i16()\n        reason = bs.read_u8()\n        return KillFeedMessage(killer_id, victim_id, reason)", "\nclass SetMapIcon(Rpc):\n    def __init__(self, icon_id, pos, type, color, style):\n        super().__init__(RPC.SET_MAP_ICON)\n        self.icon_id = icon_id\n        self.pos = pos\n        self.type = type\n        self.color = Color(color)\n        self.style = style\n\n    def encode_rpc_payload(self, bs):\n        bs.write_u8(self.icon_id)\n        bs.write_vec3(self.pos)\n        bs.write_u8(self.type)\n        bs.write_u32(self.color)\n        bs.write_u8(self.style)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        icon_id = bs.read_u8()\n        pos = bs.read_vec3()\n        type_ = bs.read_u8()\n        color = bs.read_u32()\n        style = bs.read_u8()\n        return SetMapIcon(icon_id, pos, type_, color, style)", "\nclass RemoveVehicleComponent(Rpc):\n    def __init__(self):\n        super().__init__(RPC.REMOVE_VEHICLE_COMPONENT)\n\n    def encode_rpc_payload(self, bs):\n        pass\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        return RemoveVehicleComponent()", "\n''' S2C\nHides a 3D Text Label.\n'''\nclass Hide3DTextLabel(Rpc):\n    def __init__(self, label_id):\n        super().__init__(RPC.HIDE_3D_TEXT_LABEL)\n        self.label_id = label_id\n\n    def encode_rpc_payload(self, bs):\n        bs.write_u16(self.label_id)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        label_id = bs.read_u16()\n        return Hide3DTextLabel(label_id)", "RPC.HIDE_3D_TEXT_LABEL.decode_server_rpc_payload = Hide3DTextLabel.decode_rpc_payload\n\n''' S2C\nShows a text above the name tag of the specified player.\nplayer_id: id of the player to create the chat bubble for.\ntext: text inside the bubble\ncolor: The text color\ndraw_distance: distance that players are able to see the bubble\nexpire_time: time in miliseconds the bubble should be displayed for.\nNote: You can't see your own text bubble. The same applies to attached 3D text labels.", "expire_time: time in miliseconds the bubble should be displayed for.\nNote: You can't see your own text bubble. The same applies to attached 3D text labels.\n'''\nclass SetPlayerChatBubble(Rpc):\n    def __init__(self, player_id, text, color=0xffffffff, draw_distance=100.0, expire_time=1000):\n        super().__init__(RPC.SET_PLAYER_CHAT_BUBBLE)\n        self.player_id = player_id\n        self.color = Color(color)\n        self.draw_distance = draw_distance\n        self.expire_time = expire_time\n        self.text = text\n\n    def encode_rpc_payload(self, bs):\n        bs.write_u16(self.player_id)\n        bs.write_u32(self.color)\n        bs.write_float(self.draw_distance)\n        bs.write_u32(self.expire_time)\n        bs.write_dynamic_str8(self.text)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        player_id = bs.read_u16()\n        color = bs.read_u32()\n        draw_distance = bs.read_float()\n        expire_time = bs.read_u32()\n        text = bs.read_dynamic_str8()\n        return SetPlayerChatBubble(player_id, text, color, draw_distance, expire_time)", "\nclass SendGameTimeUpdate(Rpc):\n    def __init__(self, time):\n        super().__init__(RPC.SEND_GAME_TIME_UPDATE)\n        self.time = time\n\n    def encode_rpc_payload(self, bs):\n        bs.write_u32(self.time)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        time = bs.read_u32()\n        return SendGameTimeUpdate(time)", "\nclass DIALOG_STYLE(enum.IntEnum):\n    MESSAGE            = 0\n    INPUT              = 1\n    LIST               = 2\n    PASSWORD           = 3\n    TABLE              = 4\n    TABLE_WITH_HEADERS = 5\n\n''' S2C", "\n''' S2C\nMax dialog id = 32767 = 2^15-1 = 0x7fff\nA negative id closes any open dialog\ne.g. ShowDialog(-1, 0, '', '', '', '') ; -1 closes any open dialog\n'''\nclass ShowDialog(Rpc):\n    def __init__(self, dialog_id, style, title, button1, button2, text):\n        super().__init__(RPC.SHOW_DIALOG)\n        self.dialog_id = dialog_id\n        self.style = DIALOG_STYLE(style)\n        self.title = title\n        self.button1 = button1\n        self.button2 = button2\n        self.text = text\n\n    def encode_rpc_payload(self, bs):\n        bs.write_i16(self.dialog_id)\n        bs.write_u8(self.style)\n        bs.write_dynamic_str8(self.title)\n        bs.write_dynamic_str8(self.button1)\n        bs.write_dynamic_str8(self.button2)\n        bs.write_huffman_buffer(self.text.encode(SAMP_ENCODING), default_huffman_tree.encoding_table)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        dialog_id = bs.read_i16()\n        style = DIALOG_STYLE(bs.read_u8())\n        title = bs.read_dynamic_str8()\n        button1 = bs.read_dynamic_str8()\n        button2 = bs.read_dynamic_str8()\n        text = bs.read_huffman_buffer(default_huffman_tree.root_node).decode(SAMP_ENCODING)\n        return ShowDialog(dialog_id, style, title, button1, button2, text)", "\nclass DIALOG_BUTTON(enum.IntEnum):\n    LEFT  = 1\n    RIGHT = 0\n\n'''\nRespond to the current dialog on the screen\ndialog_id:  id of the dialog on the screen\nbutton: the button selected; DIALOG_BUTTON.LEFT(selected when ENTER is pressed) or DIALOG_BUTTON.RIGHT\nlist_index: the index of the row if LIST/TABLE/TABLE_WITH_HEADERS style, otherwise None", "button: the button selected; DIALOG_BUTTON.LEFT(selected when ENTER is pressed) or DIALOG_BUTTON.RIGHT\nlist_index: the index of the row if LIST/TABLE/TABLE_WITH_HEADERS style, otherwise None\ntext: depends on the dialog style; textbox input value(INPUT/PASSWORD styles), row text(LIST/TABLE/TABLE_WITH_HEADERS styles), empty string(MESSAGE style)\n'''\nclass DialogResponse(Rpc):\n    def __init__(self, dialog_id, button=DIALOG_BUTTON.LEFT, list_index=None, text=''):\n        super().__init__(RPC.DIALOG_RESPONSE)\n        self.dialog_id = dialog_id\n        self.button = button\n        self.list_index = list_index\n        self.text = text\n\n    def encode_rpc_payload(self, bs):\n        bs.write_u16(self.dialog_id)\n        bs.write_u8(self.button)\n        bs.write_i16(-1 if self.list_index is None else self.list_index)\n        bs.write_dynamic_str8(self.text)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        dialog_id = bs.read_u16()\n        button = bs.read_u8()\n        list_index = bs.read_i16()\n        if list_index == -1:\n            list_index = None\n        text = bs.read_dynamic_str8()\n        return DialogResponse(dialog_id, button, list_index, text)", "\n''' S2C\nServer sends to destroy a pickup created with CreatePickup\npickup_id: id of the pickup to destroy\n'''\nclass DestroyPickup(Rpc):\n    def __init__(self, pickup_id):\n        super().__init__(RPC.DESTROY_PICKUP)\n        self.pickup_id = pickup_id\n\n    def encode_rpc_payload(self, bs):\n        bs.write_u32(self.pickup_id)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        pickup_id = bs.read_u32()\n        return DestroyPickup(pickup_id)", "\nclass LinkVehicleToInterior(Rpc):\n    def __init__(self):\n        super().__init__(RPC.LINK_VEHICLE_TO_INTERIOR)\n\n    def encode_rpc_payload(self, bs):\n        pass\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        return LinkVehicleToInterior()", "\nclass SetArmor(Rpc):\n    def __init__(self, armor):\n        super().__init__(RPC.SET_ARMOR)\n        self.armor = float(armor)\n\n    def encode_rpc_payload(self, bs):\n        bs.write_float(self.armor)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        armor = bs.read_float()\n        return SetArmor(armor)", "\nclass SetArmedWeapon(Rpc):\n    def __init__(self):\n        super().__init__(RPC.SET_ARMED_WEAPON)\n\n    def encode_rpc_payload(self, bs):\n        pass\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        return SetArmedWeapon()", "\n''' S2C\nSets spawn info.\nteam: valid team values are 0-254; None specifies the player is not in any team(internally it is defined as 255)\npos: coordinate where client will spawn\ndir_z: Z component of the direction(orientation) of the player's character and camera(because they are the same value when the player spawns); 0.0 is North\nNote: The client is only able to spawn(even if the server tries to force a spawn) after the server sends SetSpawnInfo\nNote: To make a client spawn after connection, you may send SetSpawnInfo, followed by RequestSpawnResponse(REQUEST_SPAWN.FORCE)\n'''\nclass SetSpawnInfo(Rpc):\n    def __init__(self, team=None, skin=SKIN.CJ, pos=Vec3(0.0, 0.0, 3.0), dir_z=0.0, weapon1=Weapon(), weapon2=Weapon(), weapon3=Weapon()):\n        super().__init__(RPC.SET_SPAWN_INFO)\n        self.team = team\n        self.skin = SKIN(skin)\n        self.pos = pos\n        self.dir_z = float(dir_z)\n        self.weapon1 = weapon1\n        self.weapon2 = weapon2\n        self.weapon3 = weapon3\n\n    def encode_rpc_payload(self, bs):\n        bs.write_u8(NO_TEAM_ID if self.team is None else self.team)\n        bs.write_u32(self.skin)\n        bs.write_u8(0) # unknown\n        bs.write_vec3(self.pos)\n        bs.write_float(self.dir_z)\n        bs.write_u32(self.weapon1.id)\n        bs.write_u32(self.weapon2.id)\n        bs.write_u32(self.weapon2.id)\n        bs.write_u32(self.weapon1.ammo)\n        bs.write_u32(self.weapon2.ammo)\n        bs.write_u32(self.weapon3.ammo)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        team = bs.read_u8()\n        if team == NO_TEAM_ID:\n            team = None\n        skin = bs.read_u32()\n        bs.skip_bits(8) # unused\n        pos = bs.read_vec3()\n        dir_z = bs.read_float()\n        weapon1_id = bs.read_u32()\n        weapon2_id = bs.read_u32()\n        weapon3_id = bs.read_u32()\n        weapon1_ammo = bs.read_u32()\n        weapon2_ammo = bs.read_u32()\n        weapon3_ammo = bs.read_u32()\n        weapon1 = Weapon(weapon1_id, weapon1_ammo)\n        weapon2 = Weapon(weapon2_id, weapon2_ammo)\n        weapon3 = Weapon(weapon3_id, weapon3_ammo)\n        return SetSpawnInfo(team, skin, pos, dir_z, weapon1, weapon2, weapon3)", "'''\nclass SetSpawnInfo(Rpc):\n    def __init__(self, team=None, skin=SKIN.CJ, pos=Vec3(0.0, 0.0, 3.0), dir_z=0.0, weapon1=Weapon(), weapon2=Weapon(), weapon3=Weapon()):\n        super().__init__(RPC.SET_SPAWN_INFO)\n        self.team = team\n        self.skin = SKIN(skin)\n        self.pos = pos\n        self.dir_z = float(dir_z)\n        self.weapon1 = weapon1\n        self.weapon2 = weapon2\n        self.weapon3 = weapon3\n\n    def encode_rpc_payload(self, bs):\n        bs.write_u8(NO_TEAM_ID if self.team is None else self.team)\n        bs.write_u32(self.skin)\n        bs.write_u8(0) # unknown\n        bs.write_vec3(self.pos)\n        bs.write_float(self.dir_z)\n        bs.write_u32(self.weapon1.id)\n        bs.write_u32(self.weapon2.id)\n        bs.write_u32(self.weapon2.id)\n        bs.write_u32(self.weapon1.ammo)\n        bs.write_u32(self.weapon2.ammo)\n        bs.write_u32(self.weapon3.ammo)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        team = bs.read_u8()\n        if team == NO_TEAM_ID:\n            team = None\n        skin = bs.read_u32()\n        bs.skip_bits(8) # unused\n        pos = bs.read_vec3()\n        dir_z = bs.read_float()\n        weapon1_id = bs.read_u32()\n        weapon2_id = bs.read_u32()\n        weapon3_id = bs.read_u32()\n        weapon1_ammo = bs.read_u32()\n        weapon2_ammo = bs.read_u32()\n        weapon3_ammo = bs.read_u32()\n        weapon1 = Weapon(weapon1_id, weapon1_ammo)\n        weapon2 = Weapon(weapon2_id, weapon2_ammo)\n        weapon3 = Weapon(weapon3_id, weapon3_ammo)\n        return SetSpawnInfo(team, skin, pos, dir_z, weapon1, weapon2, weapon3)", "\n''' S2C\nSets the team of the specified player.\nplayer_id: id of the player to change the team\nteam: new team; valid team values are 0-254; None specifies the player is not in any team(internally it is defined as 255)\n'''\nclass SetPlayerTeam(Rpc):\n    def __init__(self, player_id, team=None):\n        super().__init__(RPC.SET_PLAYER_TEAM)\n        self.player_id = player_id\n        self.team = team\n\n    def encode_rpc_payload(self, bs):\n        bs.write_u16(self.player_id)\n        bs.write_u8(NO_TEAM_ID if self.team is None else self.team)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        player_id = bs.read_u16()\n        team = bs.read_u8()\n        if team == NO_TEAM_ID:\n            team = None\n        return SetPlayerTeam(player_id, team)", "\n''' S2C\nPuts(i.e. instantly teleports) the player inside the specified vehicle at the specified seat\nvehicle_id: id of the vehicle to put the player in\nseat_id: 0=driver, 1=front passenger, 2=back left passenger, 3=back right passenger, 4+=other seats(e.g. coach)\nNote: The player does not seem to crash if the seat is invalid.\ne.g. PutInVehicle(100, 0) # puts the player as driver\n'''\nclass PutInVehicle(Rpc):\n    def __init__(self, vehicle_id, seat_id):\n        super().__init__(RPC.PUT_IN_VEHICLE)\n        self.vehicle_id = vehicle_id\n        self.seat_id = seat_id\n\n    def encode_rpc_payload(self, bs):\n        bs.write_u16(self.vehicle_id)\n        bs.write_u8(self.seat_id)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        vehicle_id = bs.read_u16()\n        seat_id = bs.read_u8()\n        return PutInVehicle(vehicle_id, seat_id)", "class PutInVehicle(Rpc):\n    def __init__(self, vehicle_id, seat_id):\n        super().__init__(RPC.PUT_IN_VEHICLE)\n        self.vehicle_id = vehicle_id\n        self.seat_id = seat_id\n\n    def encode_rpc_payload(self, bs):\n        bs.write_u16(self.vehicle_id)\n        bs.write_u8(self.seat_id)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        vehicle_id = bs.read_u16()\n        seat_id = bs.read_u8()\n        return PutInVehicle(vehicle_id, seat_id)", "\n''' S2C\nPlays the animation of exiting the vehicle.\nNote: Depending on the vehicle velocity the animation may not play, causing the player not to exit.\ne.g. RemoveFromVehicle() # If the player is a driver in a car, they'll open the door and step out of the car.\n'''\nclass RemoveFromVehicle(Rpc):\n    def __init__(self):\n        super().__init__(RPC.REMOVE_FROM_VEHICLE)\n\n    def encode_rpc_payload(self, bs):\n        pass\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        return RemoveFromVehicle()", "\n''' S2C\nSets the color of the specified player.\nplayer_id: id of the player to change the color\ncolor: new color as RRGGBBAA\n'''\nclass SetPlayerColor(Rpc):\n    def __init__(self, player_id, color):\n        super().__init__(RPC.SET_PLAYER_COLOR)\n        self.player_id = player_id\n        self.color = Color(color)\n\n    def encode_rpc_payload(self, bs):\n        bs.write_u16(self.player_id)\n        bs.write_u32(self.color)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        player_id = bs.read_u16()\n        color = bs.read_u32()\n        return SetPlayerColor(player_id, color)", "\n''' S2C\nMakes 'text' appear in 'style' for 'duration' milliseconds on the screen of\nthe client.\n- style: integer in the range [0,15]\n- duration: duration in milliseconds\n- text: text\n'''\nclass ShowGameText(Rpc):\n    def __init__(self, style, duration, text):\n        super().__init__(RPC.SHOW_GAME_TEXT)\n        self.style = style\n        self.duration = duration\n        self.text = text\n\n    def encode_rpc_payload(self, bs):\n        bs.write_u32(self.style)\n        bs.write_u32(self.duration)\n        bs.write_dynamic_str32(self.text)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        style = bs.read_u32()\n        duration = bs.read_u32()\n        text = bs.read_dynamic_str32()\n        return ShowGameText(style, duration, text)", "class ShowGameText(Rpc):\n    def __init__(self, style, duration, text):\n        super().__init__(RPC.SHOW_GAME_TEXT)\n        self.style = style\n        self.duration = duration\n        self.text = text\n\n    def encode_rpc_payload(self, bs):\n        bs.write_u32(self.style)\n        bs.write_u32(self.duration)\n        bs.write_dynamic_str32(self.text)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        style = bs.read_u32()\n        duration = bs.read_u32()\n        text = bs.read_dynamic_str32()\n        return ShowGameText(style, duration, text)", "\nclass ForceClassSelection(Rpc):\n    def __init__(self):\n        super().__init__(RPC.FORCE_CLASS_SELECTION)\n\n    def encode_rpc_payload(self, bs):\n        pass\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        return ForceClassSelection()", "\nclass AttachObjectToPlayer(Rpc):\n    def __init__(self):\n        super().__init__(RPC.ATTACH_OBJECT_TO_PLAYER)\n\n    def encode_rpc_payload(self, bs):\n        pass\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        return AttachObjectToPlayer()", "\nclass InitMenu(Rpc):\n    def __init__(self):\n        super().__init__(RPC.INIT_MENU)\n\n    def encode_rpc_payload(self, bs):\n        pass\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        return InitMenu()", "\nclass ShowMenu(Rpc):\n    def __init__(self):\n        super().__init__(RPC.SHOW_MENU)\n\n    def encode_rpc_payload(self, bs):\n        pass\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        return ShowMenu()", "\nclass HideMenu(Rpc):\n    def __init__(self):\n        super().__init__(RPC.HIDE_MENU)\n\n    def encode_rpc_payload(self, bs):\n        pass\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        return HideMenu()", "\n'''\nType  Visible  Splits  Creates Fire  Physical Blast  Audible Sound       Range  Special\n   0      Yes       -             -             Yes            Yes       Large   Normal\n   1      Yes       -           Yes               -            Yes      Normal   Normal\n   2      Yes       -           Yes             Yes            Yes       Large   Normal\n   3      Yes       -    Sometimes?             Yes            Yes       Large   Normal\n   4      Yes     Yes             -             Yes              -      Normal   Unusual explosion, produces just special blast burn FX effects and blasts things away, NO SOUND EFFECTS.\n   5      Yes     Yes             -             Yes              -      Normal   Unusual explosion, produces just special blast burn FX effects and blasts things away, NO SOUND EFFECTS.\n   6      Yes       -             -             Yes            Yes  Very Large   Additional reddish explosion after-glow", "   5      Yes     Yes             -             Yes              -      Normal   Unusual explosion, produces just special blast burn FX effects and blasts things away, NO SOUND EFFECTS.\n   6      Yes       -             -             Yes            Yes  Very Large   Additional reddish explosion after-glow\n   7      Yes       -             -             Yes            Yes        Huge   Additional reddish explosion after-glow\n   8        -       -             -             Yes            Yes      Normal   Invisible\n   9        -       -           Yes             Yes            Yes      Normal   Creates fires at ground level, otherwise explosion is heard but invisible.\n  10      Yes       -             -             Yes            Yes       Large   Normal\n  11      Yes       -             -             Yes            Yes       Small   Normal\n  12      Yes       -             -             Yes            Yes  Very Small   Really Small\n  13        -       -             -                -             -       Large   roduces no special effects other than black burn effects on the ground, does no damage either.\n'''\nclass CreateExplosion(Rpc):\n    def __init__(self, pos, type, radius):\n        super().__init__(RPC.CREATE_EXPLOSION)\n        self.pos = pos\n        self.type = type\n        self.radius = radius\n\n    def encode_rpc_payload(self, bs):\n        bs.write_vec3(self.pos)\n        bs.write_u32(self.type)\n        bs.write_float(self.radius)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        pos = bs.read_vec3()\n        type = bs.read_u32()\n        radius = bs.read_float()\n        return CreateExplosion(pos, type, radius)", "  13        -       -             -                -             -       Large   roduces no special effects other than black burn effects on the ground, does no damage either.\n'''\nclass CreateExplosion(Rpc):\n    def __init__(self, pos, type, radius):\n        super().__init__(RPC.CREATE_EXPLOSION)\n        self.pos = pos\n        self.type = type\n        self.radius = radius\n\n    def encode_rpc_payload(self, bs):\n        bs.write_vec3(self.pos)\n        bs.write_u32(self.type)\n        bs.write_float(self.radius)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        pos = bs.read_vec3()\n        type = bs.read_u32()\n        radius = bs.read_float()\n        return CreateExplosion(pos, type, radius)", "\n''' S2C\nShows or hides the name tag of the specified player.\nshow: True or False\n'''\nclass TogglePlayerNameTag(Rpc):\n    def __init__(self, player_id, show):\n        super().__init__(RPC.TOGGLE_PLAYER_NAME_TAG)\n        self.player_id = player_id\n        self.show = bool(show)\n\n    def encode_rpc_payload(self, bs):\n        bs.write_u16(self.player_id)\n        bs.write_u8(self.show)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        player_id = bs.read_u16()\n        show = bs.read_u8()\n        return TogglePlayerNameTag(player_id, show)", "\nclass AttachCameraToObject(Rpc):\n    def __init__(self):\n        super().__init__(RPC.ATTACH_CAMERA_TO_OBJECT)\n\n    def encode_rpc_payload(self, bs):\n        pass\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        return AttachCameraToObject()", "\n'''\npos_set:\nfrom_pos: start position\nto_pos: end position\ntime: duration in milliseconds of the interpolation\ncut_type: CUT_TYPE.MOVE or CUT_TYPE.CUT\n'''\nclass InterpolateCamera(Rpc):\n    def __init__(self, pos_set, from_pos, to_pos, time, cut_type):\n        super().__init__(RPC.INTERPOLATE_CAMERA)\n        self.pos_set = pos_set\n        self.from_pos = from_pos\n        self.to_pos = to_pos\n        self.time = time\n        self.cut_type = cut_type\n\n    def encode_rpc_payload(self, bs):\n        bs.write_bit(self.pos_set)\n        self.from_pos.encode(bs)\n        self.to_pos.encode(bs)\n        bs.write_u32(self.time)\n        bs.write_u8(self.cut_type)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        pos_set = bs.read_bit()\n        from_pos = bs.read_vec3()\n        to_pos = bs.read_vec3()\n        time = bs.read_u32()\n        cut_type = bs.read_u8()\n        return InterpolateCamera(pos_set, from_pos, to_pos, time, cut_type)", "class InterpolateCamera(Rpc):\n    def __init__(self, pos_set, from_pos, to_pos, time, cut_type):\n        super().__init__(RPC.INTERPOLATE_CAMERA)\n        self.pos_set = pos_set\n        self.from_pos = from_pos\n        self.to_pos = to_pos\n        self.time = time\n        self.cut_type = cut_type\n\n    def encode_rpc_payload(self, bs):\n        bs.write_bit(self.pos_set)\n        self.from_pos.encode(bs)\n        self.to_pos.encode(bs)\n        bs.write_u32(self.time)\n        bs.write_u8(self.cut_type)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        pos_set = bs.read_bit()\n        from_pos = bs.read_vec3()\n        to_pos = bs.read_vec3()\n        time = bs.read_u32()\n        cut_type = bs.read_u8()\n        return InterpolateCamera(pos_set, from_pos, to_pos, time, cut_type)", "\n''' C2S\nClient sends when it clicks a textdraw\ntextdraw_id: id of the textdraw that was clicked\n'''\nclass ClickTextdraw(Rpc):\n    def __init__(self, textdraw_id):\n        super().__init__(RPC.CLICK_TEXTDRAW)\n        self.textdraw_id = textdraw_id\n\n    def encode_rpc_payload(self, bs):\n        bs.write_u16(self.textdraw_id)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        textdraw_id = bs.read_u16()\n        return ClickTextdraw(textdraw_id)", "\n''' S2C\nDetermines whether or not the player may click textdraws.\nclickable: True or False\ncolor: hover color?\n'''\nclass ToggleTextdrawsClickable(Rpc):\n    def __init__(self, clickable, color):\n        super().__init__(RPC.TOGGLE_TEXTDRAWS_CLICKABLE)\n        self.clickable = bool(clickable)\n        self.color = Color(color)\n\n    def encode_rpc_payload(self, bs):\n        bs.write_bit(self.clickable)\n        bs.write_u32(self.color)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        clickable = bs.read_bit()\n        color = bs.read_u32()\n        return ToggleTextdrawsClickable(clickable, color)", "\nclass SetPlayerObjectMaterial(Rpc):\n    def __init__(self):\n        super().__init__(RPC.SET_PLAYER_OBJECT_MATERIAL)\n\n    def encode_rpc_payload(self, bs):\n        pass\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        return SetPlayerObjectMaterial()", "\nclass StopFlashGangZone(Rpc):\n    def __init__(self):\n        super().__init__(RPC.STOP_FLASH_GANG_ZONE)\n\n    def encode_rpc_payload(self, bs):\n        pass\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        return StopFlashGangZone()", "\nclass ApplyPlayerAnimation(Rpc):\n    def __init__(self, player_id, anim_lib, anim_name, delta, loop, lockx, locky, freeze, time):\n        super().__init__(RPC.APPLY_PLAYER_ANIMATION)\n        self.player_id = player_id\n        self.anim_lib = anim_lib\n        self.anim_name = anim_name\n        self.delta = float(delta)\n        self.loop = loop\n        self.lockx = lockx\n        self.locky = locky\n        self.freeze = freeze\n        self.time = time\n\n    def encode_rpc_payload(self, bs):\n        bs.write_u16(self.player_id)\n        bs.write_dynamic_str8(self.anim_lib)\n        bs.write_dynamic_str8(self.anim_name)\n        bs.write_float(self.delta)\n        bs.write_bit(self.loop)\n        bs.write_bit(self.lockx)\n        bs.write_bit(self.locky)\n        bs.write_bit(self.freeze)\n        bs.write_u32(self.time)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        player_id = bs.read_u16()\n        anim_lib = bs.read_dynamic_str8()\n        anim_name = bs.read_dynamic_str8()\n        delta = bs.read_float()\n        loop = bs.read_bit()\n        lockx = bs.read_bit()\n        locky = bs.read_bit()\n        freeze = bs.read_bit()\n        time = bs.read_u32()\n        return ApplyPlayerAnimation(player_id, anim_lib, anim_name, delta, loop, lockx, locky, freeze, time)", "\nclass ClearPlayerAnimation(Rpc):\n    def __init__(self, player_id):\n        super().__init__(RPC.CLEAR_PLAYER_ANIMATION)\n        self.player_id = player_id\n\n    def encode_rpc_payload(self, bs):\n        bs.write_u16(self.player_id)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        player_id = bs.read_u16()\n        return ClearPlayerAnimation(player_id)", "\n''' S2C\nSets the special action.\naction_id: see the SPECIAL_ACTION enum class\nBUG: Removing jetpacks from players by setting their special action to 0 causes the sound to stay until death.\n'''\nclass SetSpecialAction(Rpc):\n    def __init__(self, action_id):\n        super().__init__(RPC.SET_SPECIAL_ACTION)\n        self.action_id = action_id\n\n    def encode_rpc_payload(self, bs):\n        bs.write_u8(self.action_id)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        action_id = bs.read_u8()\n        return SetSpecialAction(action_id)", "\n''' S2C\nSets the fighting style of the specified player.\nplayer_id: id of the player to set the fighting style\nfighting_style: value to set; see the FIGHTING_STYLE class enum\n'''\nclass SetPlayerFightingStyle(Rpc):\n    def __init__(self, player_id, fighting_style):\n        super().__init__(RPC.SET_PLAYER_FIGHTING_STYLE)\n        self.player_id = player_id\n        self.fighting_style = fighting_style\n\n    def encode_rpc_payload(self, bs):\n        bs.write_u16(self.player_id)\n        bs.write_u8(self.fighting_style)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        player_id = bs.read_u16()\n        fighting_style = bs.read_u8()\n        return SetPlayerFightingStyle(player_id, fighting_style)", "\n''' S2C\nSets the velocity of the player this RPC is sent to.\nvel: velocity to set (Vec3)\nRelated: SetPlayerVelocity\n'''\nclass SetVelocity(Rpc):\n    def __init__(self, vel):\n        super().__init__(RPC.SET_VELOCITY)\n        self.vel = vel # new player velocity as Vec3\n\n    def encode_rpc_payload(self, bs):\n        bs.write_vec3(self.vel)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        vel = bs.read_vec3()\n        return SetVelocity(vel)", "\nclass VEHICLE_VELOCITY(enum.IntEnum):\n    LINEAR  = 0\n    ANGULAR = 1\n\n''' S2C\nSets the (linear or angular)velocity of the vehicle the player is in.\nThis RPC has no affect on un-occupied vehicles and does not affect trains.\ntype: either VEHICLE_VELOCITY.LINEAR or VEHICLE_VELOCITY.ANGULAR\n'''\nclass SetVehicleVelocity(Rpc):\n    def __init__(self, type, vel):\n        super().__init__(RPC.SET_VEHICLE_VELOCITY)\n        self.type = VEHICLE_VELOCITY(type)\n        self.vel = vel\n\n    def encode_rpc_payload(self, bs):\n        bs.write_u8(self.type)\n        bs.write_vec3(self.vel)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        type = bs.read_u8()\n        vel = bs.read_vec3()\n        return SetVehicleVelocity(type, vel)", "type: either VEHICLE_VELOCITY.LINEAR or VEHICLE_VELOCITY.ANGULAR\n'''\nclass SetVehicleVelocity(Rpc):\n    def __init__(self, type, vel):\n        super().__init__(RPC.SET_VEHICLE_VELOCITY)\n        self.type = VEHICLE_VELOCITY(type)\n        self.vel = vel\n\n    def encode_rpc_payload(self, bs):\n        bs.write_u8(self.type)\n        bs.write_vec3(self.vel)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        type = bs.read_u8()\n        vel = bs.read_vec3()\n        return SetVehicleVelocity(type, vel)", "\n''' S2C\nSends a chat message.\nmessage: message\ncolor: color as RRGGBBAA\ne.g. ChatMessage('Invalid command', 0xdd0000ff) shows as 'Invalid command' (in red)\nRelated: SendClientMessage\n'''\nclass ChatMessage(Rpc):\n    def __init__(self, message, color=0xffffffff):\n        super().__init__(RPC.CHAT_MESSAGE)\n        self.message = message\n        self.color = Color(color)\n\n    def encode_rpc_payload(self, bs):\n        bs.write_u32(self.color)\n        bs.write_dynamic_str32(self.message)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        color = bs.read_u32()\n        message = bs.read_dynamic_str32()\n        return ChatMessage(message, color)", "class ChatMessage(Rpc):\n    def __init__(self, message, color=0xffffffff):\n        super().__init__(RPC.CHAT_MESSAGE)\n        self.message = message\n        self.color = Color(color)\n\n    def encode_rpc_payload(self, bs):\n        bs.write_u32(self.color)\n        bs.write_dynamic_str32(self.message)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        color = bs.read_u32()\n        message = bs.read_dynamic_str32()\n        return ChatMessage(message, color)", "\nclass SetWorldTime(Rpc):\n    def __init__(self, hour):\n        super().__init__(RPC.SET_WORLD_TIME)\n        self.hour = hour\n\n    def encode_rpc_payload(self, bs):\n        bs.write_u8(self.hour)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        hour = bs.read_u8()\n        return SetWorldTime(hour)", "\n''' S2C\nType Description\n0    It has no special attributes and cannot be picked up. It also does not trigger OnPlayerPickUpPickup, and is not removed when closing the server\n1    Exists always. Disables pickup scripts such as horseshoes and oysters to allow for scripted actions ONLY. Will trigger OnPlayerPickUpPickup every few seconds. This is likely a SA-MP bug\n2    Disappears after pickup, respawns after 30 seconds if the player is at a distance of at least 15 meters (used for money pickups)\n3    Disappears after pickup, respawns after death\n4    Disappears after 20 seconds. Respawns after death\n5    Disappears after 120 seconds. Respawns after death\n8    Disappears after pickup, but has no effect (used for money pickups)", "5    Disappears after 120 seconds. Respawns after death\n8    Disappears after pickup, but has no effect (used for money pickups)\n9    Explodes on contact with any ground vehicle in 10 seconds after creation (used for land mines)\n10   Explodes on contact with any ground vehicle (used for land mines)\n11   Explodes on contact with any vessel in 10 seconds after creation (used for nautical/sea mines)\n12   Explodes on contact with any vessel (used for nautical/sea mines)\n13   Invisible. Triggers checkpoint sound when picked up with a vehicle, but doesn't trigger OnPlayerPickUpPickup (floating pickup)\n14   Disappears after pickup, can only be picked up with a vehicle. Triggers checkpoint sound (floating pickup)\n15   Same as type 2, however the pickup will respawn after 12 minutes. If the model ID is a bribe, it will respawn after just 5 minutes.\n18   Similar to type 1. Pressing Tab (KEY_ACTION) makes it disappear but the key press doesn't trigger OnPlayerPickUpPickup (used for properties)", "15   Same as type 2, however the pickup will respawn after 12 minutes. If the model ID is a bribe, it will respawn after just 5 minutes.\n18   Similar to type 1. Pressing Tab (KEY_ACTION) makes it disappear but the key press doesn't trigger OnPlayerPickUpPickup (used for properties)\n19   Disappears after pickup, but doesn't respawn. Makes \"cash pickup\" sound if picked up\n20   Similar to type 1. Disappears when you take a picture of it with the Camera weapon, which triggers \"Snapshot # out of 0\" message. Taking a picture doesn't trigger OnPlayerPickUpPickup (used for snapshot locations)\n22   Same as type 3 (used for missions)\n'''\nclass CreatePickup(Rpc):\n    def __init__(self, pickup_id, model_id, type, pos):\n        super().__init__(RPC.CREATE_PICKUP)\n        self.pickup_id = pickup_id\n        self.model_id = model_id\n        self.type = type\n        self.pos = pos\n\n    def encode_rpc_payload(self, bs):\n        bs.write_u32(self.pickup_id)\n        bs.write_u32(self.model_id)\n        bs.write_u32(self.type)\n        bs.write_vec3(self.pos)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        pickup_id = bs.read_u32()\n        model_id = bs.read_u32()\n        type = bs.read_u32()\n        pos = bs.read_vec3()\n        return CreatePickup(pickup_id, model_id, type, pos)", "\nclass ScmEvent(Rpc):\n    def __init__(self):\n        super().__init__(RPC.SCM_EVENT)\n\n    def encode_rpc_payload(self, bs):\n        pass\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        return ScmEvent()", "\nclass DestroyWeaponPickup(Rpc):\n    def __init__(self):\n        super().__init__(RPC.DESTROY_WEAPON_PICKUP)\n\n    def encode_rpc_payload(self, bs):\n        pass\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        return DestroyWeaponPickup()", "\nclass MoveObject(Rpc):\n    def __init__(self, object_id, pos, target, speed, target_r):\n        super().__init__(RPC.MOVE_OBJECT)\n        self.object_id = object_id\n        self.pos = pos\n        self.target = target\n        self.speed = speed\n        self.target_r = target_r\n\n    def encode_rpc_payload(self, bs):\n        bs.write_u16(self.object_id)\n        bs.write_vec3(self.pos)\n        self.target.encode(bs)\n        bs.write_float(self.speed)\n        self.target_r.encode(bs)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        object_id = bs.read_u16()\n        pos = bs.read_vec3()\n        target = bs.read_vec3()\n        speed = bs.read_float()\n        target_r = bs.read_vec3()\n        return MoveObject(object_id, pos, target, speed, target_r)", "\n''' C2S\nSent when something is typed in chat that doesn't start with '/'(because it would then be a RequestChatCommand RPC).\nNote: Ideally the server processes the request and sends a PlayerChatMessage RPC to whoever should get our message\ne.g. RequestChatMessage('Hello, I am a player!')\nRelated: PlayerRequestChatMessage, ChatMessage \n'''\nclass RequestChatMessage(Rpc):\n    def __init__(self, message):\n        super().__init__(RPC.REQUEST_CHAT_MESSAGE)\n        self.message = message\n\n    def encode_rpc_payload(self, bs):\n        bs.write_dynamic_str8(self.message)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        message = bs.read_dynamic_str8()\n        return RequestChatMessage(message)", "RPC.REQUEST_CHAT_MESSAGE.decode_client_rpc_payload = RequestChatMessage.decode_rpc_payload\n\n''' S2C\nSends a player chat message\ne.g. assuming 'Bob' has id 123, then PlayerChatMessage(123, 'Hello, I am bob!') shows in chat as 'Bob: Hello I am bob'.\nRelated: PlayerChatMessage, ChatMessage\n'''\nclass PlayerChatMessage(Rpc):\n    def __init__(self, player_id, message):\n        super().__init__(RPC.PLAYER_CHAT_MESSAGE)\n        self.player_id = player_id\n        self.message = message\n\n    def encode_rpc_payload(self, bs):\n        bs.write_u16(self.player_id)\n        bs.write_dynamic_str8(self.message)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        player_id = bs.read_u16()\n        message = bs.read_dynamic_str8()\n        return PlayerChatMessage(player_id, message)", "RPC.PLAYER_CHAT_MESSAGE.decode_server_rpc_payload = PlayerChatMessage.decode_rpc_payload\n\nclass SvrStats(Rpc):\n    def __init__(self):\n        super().__init__(RPC.SVR_STATS)\n\n    def encode_rpc_payload(self, bs):\n        pass\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        return SvrStats()", "\n# https://www.blast.hk/threads/11140/\n#unknown types? (5, 69)\nclass CLIENT_CHECK(enum.IntEnum):\n    # server sends ClientCheck(arg=0, offset=0, size=2)\n    # clients answers ClientCheckResponse(arg=flags, checksum=?)\n    # returns 32 flags from the CPhysicalSA structure\n    # flags include: if in vehicle, on foot, in water, vulnerable to damage...\n    FLAGS = 2\n\n    # server sends ClientCheck(arg=model id, offset=0, size=size)\n    # client answers ClientCheckResponse(arg=model id in request, checksum=checksum)\n    # reads the data of the specified model's CBaseModelInfoSA structure and returns a one-byte checksum\n    BASE_MODEL_CHECKSUM = 70\n\n    # server sends ClientCheck(arg=model id, offset=0, size=size)\n    # client answers ClientCheckResponse(arg=model id in request, checksum=checksum)\n    # reads the data of the specified model's CColModelSA structure and returns a one-byte checksum\n    COLLISION_MODEL_CHECKSUM = 71\n\n    # server sends ClientCheck(arg=0, offset=0, size=2)\n    # client answers ClientCheckResponse(arg=boot time in ms, checksum=0)\n    # may be used to detect PC/Android, because apparently android clients do not respond to it\n    BOOT_TIME = 72", "\n''' S2C\nPerform a memory check on the client\ntype: see the CLIENT_CHECK enum\narg: depends on type\noffset: depends on type\nsize: 2 or greater\n'''\nclass ClientCheck(Rpc):\n    def __init__(self, type, arg, offset, size):\n        super().__init__(RPC.CLIENT_CHECK)\n        self.type = type\n        self.arg = arg\n        self.offset = offset\n        self.size = size\n\n    def encode_rpc_payload(self, bs):\n        bs.write_u8(self.type)\n        bs.write_u32(self.arg)\n        bs.write_u16(self.offset)\n        bs.write_u16(self.size)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        type = bs.read_u8()\n        arg = bs.read_u32()\n        offset = bs.read_u16()\n        size = bs.read_u16()\n        return ClientCheck(type, arg, offset, size)", "class ClientCheck(Rpc):\n    def __init__(self, type, arg, offset, size):\n        super().__init__(RPC.CLIENT_CHECK)\n        self.type = type\n        self.arg = arg\n        self.offset = offset\n        self.size = size\n\n    def encode_rpc_payload(self, bs):\n        bs.write_u8(self.type)\n        bs.write_u32(self.arg)\n        bs.write_u16(self.offset)\n        bs.write_u16(self.size)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        type = bs.read_u8()\n        arg = bs.read_u32()\n        offset = bs.read_u16()\n        size = bs.read_u16()\n        return ClientCheck(type, arg, offset, size)", "CLIENT_CHECK.decode_server_rpc_payload = ClientCheck.decode_rpc_payload\n\n''' C2S\nResponds to a server ClientCheck\ntype: see the CLIENT_CHECK enum\narg: depends on type\nchecksum: depends on type\n'''\nclass ClientCheckResponse(Rpc):\n    def __init__(self, type, arg, checksum):\n        super().__init__(RPC.CLIENT_CHECK_RESPONSE)\n        self.type = type\n        self.arg = arg\n        self.checksum = checksum\n\n    def encode_rpc_payload(self, bs):\n        bs.write_u8(self.type)\n        bs.write_u32(self.arg)\n        bs.write_u8(self.checksum)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        type = bs.read_u8()\n        arg = bs.read_u32()\n        checksum = bs.read_u8()\n        return ClientCheckResponse(type, arg, checksum)", "class ClientCheckResponse(Rpc):\n    def __init__(self, type, arg, checksum):\n        super().__init__(RPC.CLIENT_CHECK_RESPONSE)\n        self.type = type\n        self.arg = arg\n        self.checksum = checksum\n\n    def encode_rpc_payload(self, bs):\n        bs.write_u8(self.type)\n        bs.write_u32(self.arg)\n        bs.write_u8(self.checksum)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        type = bs.read_u8()\n        arg = bs.read_u32()\n        checksum = bs.read_u8()\n        return ClientCheckResponse(type, arg, checksum)", "RPC.CLIENT_CHECK_RESPONSE.decode_client_rpc_payload = ClientCheckResponse.decode_rpc_payload\n\n''' S2C\nEnables or disables stunt bonuses.\nenable: True or False\n'''\nclass ToggleStuntBonus(Rpc):\n    def __init__(self, enable):\n        super().__init__(RPC.TOGGLE_STUNT_BONUS)\n        self.enable = bool(enable)\n\n    def encode_rpc_payload(self, bs):\n        bs.write_bit(self.enable)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        enable = bs.read_bit()\n        return ToggleStuntBonus(enable)", "\nclass SetTextdrawText(Rpc):\n    def __init__(self, textdraw_id, text):\n        super().__init__(RPC.SET_TEXTDRAW_TEXT)\n        self.textdraw_id = textdraw_id\n        self.text = text\n\n    def encode_rpc_payload(self, bs):\n        bs.write_u16(self.textdraw_id)\n        bs.write_dynamic_str16(self.text)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        textdraw_id = bs.read_u16()\n        text = bs.read_dynamic_str16()\n        return SetTextdrawText(textdraw_id, text)", "\nclass DamageVehicle(Rpc):\n    def __init__(self, vehicle_id, panels, doors, lights, tires):\n        super().__init__(RPC.DAMAGE_VEHICLE)\n        self.vehicle_id = vehicle_id\n        self.panels = panels\n        self.doors = doors\n        self.lights = lights\n        self.tires = tires\n\n    def encode_rpc_payload(self, bs):\n        bs.write_u16(self.vehicle_id)\n        bs.write_u32(self.panels)\n        bs.write_u32(self.doors)\n        bs.write_u8(self.lights)\n        bs.write_u8(self.tires)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        vehicle_id = bs.read_u16()\n        panels = bs.read_u32()\n        doors = bs.read_u32()\n        lights = bs.read_u8()\n        tires = bs.read_u8()\n        return DamageVehicle(vehicle_id, panels, doors, lights, tires)", "\nclass SetCheckpoint(Rpc):\n    def __init__(self, pos, radius):\n        super().__init__(RPC.SET_CHECKPOINT)\n        self.pos = pos\n        self.radius = radius\n\n    def encode_rpc_payload(self, bs):\n        bs.write_vec3(self.pos)\n        bs.write_float(self.radius)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        pos = bs.read_vec3()\n        radius = bs.read_float()\n        return SetCheckpoint(pos, radius)", "\nclass AddGangZone(Rpc):\n    def __init__(self):\n        super().__init__(RPC.ADD_GANG_ZONE)\n\n    def encode_rpc_payload(self, bs):\n        pass\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        return AddGangZone()", "\nclass PlayCrimeReport(Rpc):\n    def __init__(self):\n        super().__init__(RPC.PLAY_CRIME_REPORT)\n\n    def encode_rpc_payload(self, bs):\n        pass\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        return PlayCrimeReport()", "\nclass SetPlayerAttachedObject(Rpc):\n    def __init__(self):\n        super().__init__(RPC.SET_PLAYER_ATTACHED_OBJECT)\n\n    def encode_rpc_payload(self, bs):\n        pass\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        return SetPlayerAttachedObject()", "\n# Used by GiveTakeDamage and GiveActorDamage\nclass BODY_PART(enum.IntEnum):\n    TORSO     = 3\n    GROIN     = 4\n    LEFT_ARM  = 5\n    RIGHT_ARM = 6\n    LEFT_LEG  = 7\n    RIGHT_LEG = 8\n    HEAD      = 9", "\n''' C2S\nClient sends when takes or gives damage\ntake: 1=took damage; 0=gave damage\nplayer_id: id of the player the client damaged; only used if take is 0(i.e. client damaged someone)\namount: amount of damage given or taken\nweapon_id: weapon used to inflict damage; see WEAPON enum\nbody_part: body part where damage was applied to; see BODY_PART enum\n'''\nclass GiveTakeDamage(Rpc):\n    def __init__(self, take, player_id, amount, weapon_id, body_part):\n        super().__init__(RPC.GIVE_TAKE_DAMAGE)\n        self.take = take\n        self.player_id = player_id\n        self.amount = amount\n        self.weapon_id = weapon_id\n        self.body_part = body_part\n\n    def encode_rpc_payload(self, bs):\n        bs.write_bit(self.take)\n        bs.write_u16(self.player_id)\n        bs.write_float(self.amount)\n        bs.write_u32(self.weapon_id)\n        bs.write_u32(self.body_part)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        take = bs.read_bit()\n        player_id = bs.read_u16()\n        amount = bs.read_float()\n        weapon_id = bs.read_u32()\n        body_part = bs.read_u32()\n        return GiveTakeDamage(take, player_id, amount, weapon_id, body_part)", "'''\nclass GiveTakeDamage(Rpc):\n    def __init__(self, take, player_id, amount, weapon_id, body_part):\n        super().__init__(RPC.GIVE_TAKE_DAMAGE)\n        self.take = take\n        self.player_id = player_id\n        self.amount = amount\n        self.weapon_id = weapon_id\n        self.body_part = body_part\n\n    def encode_rpc_payload(self, bs):\n        bs.write_bit(self.take)\n        bs.write_u16(self.player_id)\n        bs.write_float(self.amount)\n        bs.write_u32(self.weapon_id)\n        bs.write_u32(self.body_part)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        take = bs.read_bit()\n        player_id = bs.read_u16()\n        amount = bs.read_float()\n        weapon_id = bs.read_u32()\n        body_part = bs.read_u32()\n        return GiveTakeDamage(take, player_id, amount, weapon_id, body_part)", "\nclass EditAttachedObject(Rpc):\n    def __init__(self):\n        super().__init__(RPC.EDIT_ATTACHED_OBJECT)\n\n    def encode_rpc_payload(self, bs):\n        pass\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        return EditAttachedObject()", "\nclass EditObject(Rpc):\n    def __init__(self):\n        super().__init__(RPC.EDIT_OBJECT)\n\n    def encode_rpc_payload(self, bs):\n        pass\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        return EditObject()", "\n''' C2S\nClient sends when the interior changes\n'''\nclass InteriorChange(Rpc):\n    def __init__(self, interior_id):\n        super().__init__(RPC.INTERIOR_CHANGE)\n        self.interior_id = interior_id\n\n    def encode_rpc_payload(self, bs):\n        bs.write_u8(self.interior_id)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        interior_id = bs.read_u8()\n        return InteriorChange(interior_id)", "\nclass MapMarker(Rpc):\n    def __init__(self):\n        super().__init__(RPC.MAP_MARKER)\n\n    def encode_rpc_payload(self, bs):\n        pass\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        return MapMarker()", "\nclass RemoveGangZone(Rpc):\n    def __init__(self):\n        super().__init__(RPC.REMOVE_GANG_ZONE)\n\n    def encode_rpc_payload(self, bs):\n        pass\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        return RemoveGangZone()", "\nclass FlashGangZone(Rpc):\n    def __init__(self):\n        super().__init__(RPC.FLASH_GANG_ZONE)\n\n    def encode_rpc_payload(self, bs):\n        pass\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        return FlashGangZone()", "\nclass StopObject(Rpc):\n    def __init__(self):\n        super().__init__(RPC.STOP_OBJECT)\n\n    def encode_rpc_payload(self, bs):\n        pass\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        return StopObject()", "\nclass SetVehicleNumberPlate(Rpc):\n    def __init__(self, vehicle_id, text):\n        super().__init__(RPC.SET_VEHICLE_NUMBER_PLATE)\n        self.vehicle_id = vehicle_id\n        self.text = text\n\n    def encode_rpc_payload(self, bs):\n        bs.write_u16(self.vehicle_id)\n        bs.write_dynamic_str8(self.text)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        vehicle_id = bs.read_u16()\n        text = bs.read_dynamic_str8()\n        return SetVehicleNumberPlate(vehicle_id, text)", "\n''' S2C\nEnables or disables spectator mode.\nenable: True or False\nNote: The server should send SpectatePlayer or SpectateVehicle after sending this RPC\n'''\nclass ToggleSpectate(Rpc):\n    def __init__(self, enable):\n        super().__init__(RPC.TOGGLE_SPECTATE)\n        self.enable = bool(enable)\n\n    def encode_rpc_payload(self, bs):\n        bs.write_u32(self.enable)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        enable = bs.read_u32()\n        return ToggleSpectate(enable)", "\nclass SPECTATE_MODE(enum.IntEnum):\n    NORMAL = 1 # Normal spectate mode (third person point of view). Camera can not be changed\n    FIXED = 2 # Use SetPlayerCameraPos after this to position the player's camera, and it will track the player/vehicle set with PlayerSpectatePlayer/PlayerSpectateVehicle\n    SIDE = 3 # The camera will be attached to the side of the player/vehicle (like when you're in first-person camera on a bike and you do a wheelie)\n\n''' S2C\n'''\nclass SpectatePlayer(Rpc):\n    def __init__(self, player_id, mode):\n        super().__init__(RPC.SPECTATE_PLAYER)\n        self.player_id = player_id\n        self.mode = SPECTATE_MODE(mode)\n\n    def encode_rpc_payload(self, bs):\n        bs.write_u16(self.player_id)\n        bs.write_u8(self.mode)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        player_id = bs.read_u16()\n        mode = bs.read_u8()\n        return SpectatePlayer(player_id, mode)", "class SpectatePlayer(Rpc):\n    def __init__(self, player_id, mode):\n        super().__init__(RPC.SPECTATE_PLAYER)\n        self.player_id = player_id\n        self.mode = SPECTATE_MODE(mode)\n\n    def encode_rpc_payload(self, bs):\n        bs.write_u16(self.player_id)\n        bs.write_u8(self.mode)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        player_id = bs.read_u16()\n        mode = bs.read_u8()\n        return SpectatePlayer(player_id, mode)", "\n''' S2C\n'''\nclass SpectateVehicle(Rpc):\n    def __init__(self, vehicle_id, mode):\n        super().__init__(RPC.SPECTATE_VEHICLE)\n        self.vehicle_id = vehicle_id\n        self.mode = SPECTATE_MODE(mode)\n\n    def encode_rpc_payload(self, bs):\n        bs.write_u16(self.vehicle_id)\n        bs.write_u8(self.mode)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        vehicle_id = bs.read_u16()\n        mode = bs.read_u8()\n        return SpectateVehicle(vehicle_id, mode)", "\n''' C2S\n'''\nclass RequestClass(Rpc):\n    def __init__(self, class_id=None):\n        super().__init__(RPC.REQUEST_CLASS)\n        self.class_id = class_id\n\n    def encode_rpc_payload(self, bs):\n        bs.write_u32(self.class_id)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        class_id = bs.read_u32()\n        return RequestClass(class_id)", "\n''' S2C\nif response is 0 then all other parameters will be ignored\nresponse: either 1 or 0\nteam: new team; valid team values are 0-254; None specifies the player is not in any team(internally it is defined as 255)\ndir_z: Z component of the direction(orientation) of the player's character and camera(because they are the same value when the player spawns); 0.0 is North\n'''\nclass RequestClassResponse(Rpc):\n    def __init__(self, response, team=None, skin=None, pos=None, dir_z=None, weapon1=None, weapon2=None, weapon3=None):\n        super().__init__(RPC.REQUEST_CLASS_RESPONSE)\n        self.response = response\n        self.team = team\n        self.skin = None if skin is None else SKIN(skin)\n        self.pos = pos\n        self.dir_z = dir_z\n        self.weapon1 = weapon1\n        self.weapon2 = weapon2\n        self.weapon3 = weapon3\n\n    def encode_rpc_payload(self, bs):\n        bs.write_u8(self.response)\n        if self.response == 0:\n            return\n        bs.write_u8(NO_TEAM_ID if self.team is None else self.team)\n        bs.write_u32(self.skin)\n        bs.write_u8(0) # unused\n        bs.write_vec3(self.pos)\n        bs.write_float(self.dir_z)\n        bs.write_u32(self.weapon1.id)\n        bs.write_u32(self.weapon2.id)\n        bs.write_u32(self.weapon2.id)\n        bs.write_u32(self.weapon1.ammo)\n        bs.write_u32(self.weapon2.ammo)\n        bs.write_u32(self.weapon3.ammo)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        team = skin = pos = dir_z = weapon1 = weapon2 = weapon3 = None\n        if (response := bool(bs.read_u8())) is True:\n            team = bs.read_u8()\n            skin = bs.read_u32()\n            bs.skip_bits(8) # unused\n            pos = bs.read_vec3()\n            dir_z = bs.read_float()\n            weapon1_id = bs.read_u32()\n            weapon2_id = bs.read_u32()\n            weapon3_id = bs.read_u32()\n            weapon1_ammo = bs.read_u32()\n            weapon2_ammo = bs.read_u32()\n            weapon3_ammo = bs.read_u32()\n            weapon1 = Weapon(weapon1_id, weapon1_ammo)\n            weapon2 = Weapon(weapon2_id, weapon2_ammo)\n            weapon3 = Weapon(weapon3_id, weapon3_ammo)\n        return RequestClassResponse(response, team, skin, pos, dir_z, weapon1, weapon2, weapon3)", "RPC.REQUEST_CLASS_RESPONSE.decode_server_rpc_payload = RequestClassResponse.decode_rpc_payload\n\n''' C2S\nSent when the client clicks the SPAWN button.\n'''\nclass RequestSpawn(Rpc):\n    def __init__(self):\n        super().__init__(RPC.REQUEST_SPAWN)\n\n    def encode_rpc_payload(self, bs):\n        pass\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        return RequestSpawn()", "RPC.REQUEST_SPAWN.decode_client_rpc_payload = RequestSpawn.decode_rpc_payload\n\nclass REQUEST_SPAWN(enum.IntEnum):\n    REJECT = 0\n    ACCEPT = 1\n    FORCE  = 2\n\n''' S2C\nWhen the client sends a RequestSpawn RPC, the server should respond with this RPC.\nNote: The server may send this RPC at any point with the REQUEST_SPAWN.FORCE response to make the client spawn or respawn(if already spawned)", "When the client sends a RequestSpawn RPC, the server should respond with this RPC.\nNote: The server may send this RPC at any point with the REQUEST_SPAWN.FORCE response to make the client spawn or respawn(if already spawned)\nNote: Make sure to send SetSpawnInfo before attempting to make the client spawn(otherwise it won't spawn)\n'''\nclass RequestSpawnResponse(Rpc):\n    def __init__(self, response):\n        super().__init__(RPC.REQUEST_SPAWN_RESPONSE)\n        self.response = REQUEST_SPAWN(response)\n\n    def encode_rpc_payload(self, bs):\n        bs.write_u8(self.response)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        response = bs.read_u8()\n        return RequestSpawnResponse(response)", "RPC.REQUEST_SPAWN_RESPONSE.decode_server_rpc_payload = RequestSpawnResponse.decode_rpc_payload\n\nclass REJECT_REASON(enum.IntEnum):\n    BAD_VERSION  = 1\n    BAD_NICKNAME = 2\n    BAD_MOD      = 3\n    BAD_PLAYERID = 4\n\nclass ConnectionRejected(Rpc):\n    def __init__(self, reason):\n        super().__init__(RPC.CONNECTION_REJECTED)\n        self.reason = REJECT_REASON(reason)\n\n    def encode_rpc_payload(self, bs):\n        bs.write_u8(self.reason)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        reason = bs.read_u8()\n        return ConnectionRejected(reason)", "class ConnectionRejected(Rpc):\n    def __init__(self, reason):\n        super().__init__(RPC.CONNECTION_REJECTED)\n        self.reason = REJECT_REASON(reason)\n\n    def encode_rpc_payload(self, bs):\n        bs.write_u8(self.reason)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        reason = bs.read_u8()\n        return ConnectionRejected(reason)", "\nclass PickedUpPickup(Rpc):\n    def __init__(self, pickup_id):\n        super().__init__(RPC.PICKED_UP_PICKUP)\n        self.pickup_id = pickup_id\n\n    def encode_rpc_payload(self, bs):\n        bs.write_u32(self.pickup_id)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        pickup_id = bs.read_u32()\n        return PickedUpPickup(pickup_id)", "\nclass MenuSelect(Rpc):\n    def __init__(self):\n        super().__init__(RPC.MENU_SELECT)\n\n    def encode_rpc_payload(self, bs):\n        pass\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        return MenuSelect()", "\n''' S2C\nSet the wanted level.\nlevel: new wanted value.\nRelated: SetPlayerWantedLevel\n'''\nclass SetWantedLevel(Rpc):\n    def __init__(self, level):\n        super().__init__(RPC.SET_WANTED_LEVEL)\n        self.level = level\n\n    def encode_rpc_payload(self, bs):\n        bs.write_u8(self.level)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        level = bs.read_u8()\n        return SetWantedLevel(level)", "\n# resources\n# https://www.mixmods.com.br/2013/07/fontes-das-letras-do-gta-sa/\n# https://team.sa-mp.com/wiki/PlayerTextDrawFont.html\n# https://www.open.mp/docs/scripting/functions/PlayerTextDrawFont\n\nclass TEXTDRAW_FLAG(enum.IntEnum):\n    BOX = (1 << 7),\n    LEFT = (1 << 6),\n    RIGHT = (1 << 5),\n    CENTER = (1 << 4),\n    PROPORTIONAL = (1 << 3),", "\nclass TEXTDRAW_STYLE(enum.IntEnum):\n\tFONT_BECKETT_REGULAR = 0 # Font\n\tFONT_AHARONI_BOLD    = 1 # Font\n\tFONT_BANK_GOTHIC     = 2 # Font\n\tFONT_PRICEDOWN       = 3 # Font\n\tSPRITE               = 4 # TXD sprite\n\tMODEL                = 5 # Model\n\n''' S2C", "\n''' S2C\nShows a textdraw.\ntextdraw_id: [0, 2303]\npos: screen coordinate; Vec2(x, y) based on a 640x480 \"imaginary canvas\" (irrespective of screen resolution).\nleter_size: Vec2(character_width, character_height); Recommended: height to width ratio of 4 to 1 (e.g. if x is 0.5 then y should be 2).\nflags: a member of TEXTDRAW_FLAG\nstyle: a member of TEXTDRAW_STYLE\n'''\nclass ShowTextdraw(Rpc):\n    def __init__(self, textdraw_id, text, pos, flags=0, letter_size=Vec2(1,1), letter_color=0xffffffff, line_size=Vec2(0,0), box_color=0, shadow=0, outline=0, background_color=0x00000000, style=TEXTDRAW_STYLE.FONT_BECKETT_REGULAR, clickable=False, model_id=None, model_dir=None, model_zoom=None, model_color1=None, model_color2=None):\n        super().__init__(RPC.SHOW_TEXTDRAW)\n        self.textdraw_id = textdraw_id\n        self.text = text\n        self.pos = pos\n        self.flags = flags\n        self.letter_size = letter_size\n        self.letter_color = Color(letter_color)\n        self.line_size = line_size\n        self.box_color = Color(box_color)\n        self.shadow = shadow\n        self.outline = outline\n        self.background_color = Color(background_color)\n        self.style = TEXTDRAW_STYLE(style)\n        self.clickable = bool(clickable)\n        self.model_id = model_id\n        self.model_dir = model_dir\n        self.model_zoom = model_zoom\n        self.model_color1 = model_color1\n        self.model_color2 = model_color2\n\n    def encode_rpc_payload(self, bs):\n        bs.write_u16(self.textdraw_id)\n        bs.write_u8(self.flags)\n        bs.write_vec2(self.letter_size)\n        bs.write_u32(self.letter_color)\n        bs.write_vec2(self.line_size)\n        bs.write_u32(self.box_color)\n        bs.write_u8(self.shadow)\n        bs.write_u8(self.outline)\n        bs.write_u32(self.background_color)\n        bs.write_u8(self.style)\n        bs.write_u8(self.clickable)\n        bs.write_vec2(self.pos)\n        bs.write_u16(0 if self.model_id is None else self.model_id)\n        bs.write_vec3(Vec3(0.0, 0.0, 0.0) if self.model_dir is None else self.model_dir)\n        bs.write_float(1.0 if self.model_zoom is None else self.model_zoom)\n        bs.write_i16(-1 if self.model_color1 is None else self.model_color1)\n        bs.write_i16(-1 if self.model_color2 is None else self.model_color2)\n        bs.write_dynamic_str16(self.text)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        textdraw_id = bs.read_u16()\n        flags = bs.read_u8()\n        letter_size = bs.read_vec2()\n        letter_color = bs.read_u32()\n        line_size = bs.read_vec2()\n        box_color = bs.read_u32()\n        shadow = bs.read_u8()\n        outline = bs.read_u8()\n        background_color = bs.read_u32()\n        style = bs.read_u8()\n        clickable = bs.read_u8()\n        pos = bs.read_vec2()\n        model_id = bs.read_u16()\n        model_dir = bs.read_vec3()\n        model_zoom = bs.read_float()\n        model_color1 = bs.read_u16()\n        model_color2 = bs.read_u16()\n        if style != TEXTDRAW_STYLE.MODEL:\n            model_id = model_dir = model_zoom = model_color1 = model_color2 = None\n        text = bs.read_dynamic_str16()\n        return ShowTextdraw(textdraw_id, text, pos, flags, letter_size, letter_color, line_size, box_color, shadow, outline, background_color, style, clickable, model_id, model_dir, model_zoom, model_color1, model_color2)", "'''\nclass ShowTextdraw(Rpc):\n    def __init__(self, textdraw_id, text, pos, flags=0, letter_size=Vec2(1,1), letter_color=0xffffffff, line_size=Vec2(0,0), box_color=0, shadow=0, outline=0, background_color=0x00000000, style=TEXTDRAW_STYLE.FONT_BECKETT_REGULAR, clickable=False, model_id=None, model_dir=None, model_zoom=None, model_color1=None, model_color2=None):\n        super().__init__(RPC.SHOW_TEXTDRAW)\n        self.textdraw_id = textdraw_id\n        self.text = text\n        self.pos = pos\n        self.flags = flags\n        self.letter_size = letter_size\n        self.letter_color = Color(letter_color)\n        self.line_size = line_size\n        self.box_color = Color(box_color)\n        self.shadow = shadow\n        self.outline = outline\n        self.background_color = Color(background_color)\n        self.style = TEXTDRAW_STYLE(style)\n        self.clickable = bool(clickable)\n        self.model_id = model_id\n        self.model_dir = model_dir\n        self.model_zoom = model_zoom\n        self.model_color1 = model_color1\n        self.model_color2 = model_color2\n\n    def encode_rpc_payload(self, bs):\n        bs.write_u16(self.textdraw_id)\n        bs.write_u8(self.flags)\n        bs.write_vec2(self.letter_size)\n        bs.write_u32(self.letter_color)\n        bs.write_vec2(self.line_size)\n        bs.write_u32(self.box_color)\n        bs.write_u8(self.shadow)\n        bs.write_u8(self.outline)\n        bs.write_u32(self.background_color)\n        bs.write_u8(self.style)\n        bs.write_u8(self.clickable)\n        bs.write_vec2(self.pos)\n        bs.write_u16(0 if self.model_id is None else self.model_id)\n        bs.write_vec3(Vec3(0.0, 0.0, 0.0) if self.model_dir is None else self.model_dir)\n        bs.write_float(1.0 if self.model_zoom is None else self.model_zoom)\n        bs.write_i16(-1 if self.model_color1 is None else self.model_color1)\n        bs.write_i16(-1 if self.model_color2 is None else self.model_color2)\n        bs.write_dynamic_str16(self.text)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        textdraw_id = bs.read_u16()\n        flags = bs.read_u8()\n        letter_size = bs.read_vec2()\n        letter_color = bs.read_u32()\n        line_size = bs.read_vec2()\n        box_color = bs.read_u32()\n        shadow = bs.read_u8()\n        outline = bs.read_u8()\n        background_color = bs.read_u32()\n        style = bs.read_u8()\n        clickable = bs.read_u8()\n        pos = bs.read_vec2()\n        model_id = bs.read_u16()\n        model_dir = bs.read_vec3()\n        model_zoom = bs.read_float()\n        model_color1 = bs.read_u16()\n        model_color2 = bs.read_u16()\n        if style != TEXTDRAW_STYLE.MODEL:\n            model_id = model_dir = model_zoom = model_color1 = model_color2 = None\n        text = bs.read_dynamic_str16()\n        return ShowTextdraw(textdraw_id, text, pos, flags, letter_size, letter_color, line_size, box_color, shadow, outline, background_color, style, clickable, model_id, model_dir, model_zoom, model_color1, model_color2)", "\nclass HideTextdraw(Rpc):\n    def __init__(self, textdraw_id):\n        super().__init__(RPC.HIDE_TEXTDRAW)\n        self.textdraw_id = textdraw_id\n\n    def encode_rpc_payload(self, bs):\n        bs.write_u16(self.textdraw_id)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        textdraw_id = bs.read_u16()\n        return HideTextdraw(textdraw_id)", "\nclass VehicleDestroyed(Rpc):\n    def __init__(self):\n        super().__init__(RPC.VEHICLE_DESTROYED)\n\n    def encode_rpc_payload(self, bs):\n        pass\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        return VehicleDestroyed()", "\n''' S2C\nNotifies that the specified player has connected to the server.\nplayer_id: id(index) of the player in the player pool to be added\ncolor: color as RRGGBBAA; shows in the scoreboard and ingame as the tag color\nis_npc: True or False\nplayer_name: name\n'''\nclass ServerJoin(Rpc):\n    def __init__(self, player_id, player_name, color=0xffffffff, is_npc=False):\n        super().__init__(RPC.SERVER_JOIN)\n        self.player_id = player_id\n        self.color = Color(color)\n        self.is_npc = bool(is_npc)\n        self.player_name = player_name\n\n    def encode_rpc_payload(self, bs):\n        bs.write_u16(self.player_id)\n        bs.write_u32(self.color)\n        bs.write_u8(self.is_npc)\n        bs.write_dynamic_str8(self.player_name)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        player_id = bs.read_u16()\n        color = bs.read_u32()\n        is_npc = bs.read_u8()\n        player_name = bs.read_dynamic_str8()\n        return ServerJoin(player_id, player_name, color, is_npc)", "class ServerJoin(Rpc):\n    def __init__(self, player_id, player_name, color=0xffffffff, is_npc=False):\n        super().__init__(RPC.SERVER_JOIN)\n        self.player_id = player_id\n        self.color = Color(color)\n        self.is_npc = bool(is_npc)\n        self.player_name = player_name\n\n    def encode_rpc_payload(self, bs):\n        bs.write_u16(self.player_id)\n        bs.write_u32(self.color)\n        bs.write_u8(self.is_npc)\n        bs.write_dynamic_str8(self.player_name)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        player_id = bs.read_u16()\n        color = bs.read_u32()\n        is_npc = bs.read_u8()\n        player_name = bs.read_dynamic_str8()\n        return ServerJoin(player_id, player_name, color, is_npc)", "\nclass QUIT_REASON(enum.IntEnum):\n    TIMEOUT  = 0\n    QUIT     = 1\n    KICK_BAN = 2\n\n''' S2C\nNotifies that the specified player has disconnected from the server.\nreason: a member of QUIT_REASON\n'''\nclass ServerQuit(Rpc):\n    def __init__(self, player_id, reason=QUIT_REASON.QUIT):\n        super().__init__(RPC.SERVER_QUIT)\n        self.player_id = player_id\n        self.reason = QUIT_REASON(reason)\n\n    def encode_rpc_payload(self, bs):\n        bs.write_u16(self.player_id)\n        bs.write_u8(self.reason)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        player_id = bs.read_u16()\n        reason = bs.read_u8()\n        return ServerQuit(player_id, reason)", "reason: a member of QUIT_REASON\n'''\nclass ServerQuit(Rpc):\n    def __init__(self, player_id, reason=QUIT_REASON.QUIT):\n        super().__init__(RPC.SERVER_QUIT)\n        self.player_id = player_id\n        self.reason = QUIT_REASON(reason)\n\n    def encode_rpc_payload(self, bs):\n        bs.write_u16(self.player_id)\n        bs.write_u8(self.reason)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        player_id = bs.read_u16()\n        reason = bs.read_u8()\n        return ServerQuit(player_id, reason)", "\n''' S2C\nUsually sent to a client after it sends a ClientJoin RPC.\n'''\nclass InitGame(Rpc):\n    def __init__(self, zone_names, use_cj_walk, allow_weapons, limit_global_chat_radius, global_chat_radius, stunt_bonus, name_tag_draw_distance, disable_enter_exits, name_tag_los, manual_vehicle_engine_and_light, spawns_available, player_id, show_player_tags, show_player_markers, world_time, weather, gravity, lan_mode, death_drop_money, instagib, onfoot_rate, incar_rate, weapon_rate, multiplier, lag_comp, hostname, vehicle_models, vehicle_friendly_fire):\n        super().__init__(RPC.INIT_GAME)\n        self.zone_names = zone_names\n        self.use_cj_walk = use_cj_walk\n        self.allow_weapons = allow_weapons\n        self.limit_global_chat_radius = limit_global_chat_radius\n        self.global_chat_radius = global_chat_radius\n        self.stunt_bonus = stunt_bonus\n        self.name_tag_draw_distance = name_tag_draw_distance\n        self.disable_enter_exits = disable_enter_exits\n        self.name_tag_los = name_tag_los\n        self.manual_vehicle_engine_and_light = manual_vehicle_engine_and_light\n        self.spawns_available = spawns_available\n        self.player_id = player_id\n        self.show_player_tags = show_player_tags\n        self.show_player_markers = show_player_markers\n        self.world_time = world_time\n        self.weather = weather\n        self.gravity = float(gravity)\n        self.lan_mode = lan_mode\n        self.death_drop_money = death_drop_money\n        self.instagib = instagib\n        self.onfoot_rate = onfoot_rate\n        self.incar_rate = incar_rate\n        self.weapon_rate = weapon_rate\n        self.multiplier = multiplier\n        self.lag_comp = lag_comp\n        self.hostname = hostname\n        self.vehicle_models = vehicle_models\n        self.vehicle_friendly_fire = vehicle_friendly_fire\n\n    def encode_rpc_payload(self, bs):\n        bs.write_bit(self.zone_names)\n        bs.write_bit(self.use_cj_walk)\n        bs.write_bit(self.allow_weapons)\n        bs.write_bit(self.limit_global_chat_radius)\n        bs.write_float(self.global_chat_radius)\n        bs.write_bit(self.stunt_bonus)\n        bs.write_float(self.name_tag_draw_distance)\n        bs.write_bit(self.disable_enter_exits)\n        bs.write_bit(self.name_tag_los)\n        bs.write_bit(self.manual_vehicle_engine_and_light)\n        bs.write_u32(self.spawns_available)\n        bs.write_u16(self.player_id)\n        bs.write_bit(self.show_player_tags)\n        bs.write_u32(self.show_player_markers)\n        bs.write_u8(self.world_time)\n        bs.write_u8(self.weather)\n        bs.write_float(self.gravity)\n        bs.write_bit(self.lan_mode)\n        bs.write_u32(self.death_drop_money)\n        bs.write_bit(self.instagib)\n        bs.write_u32(self.onfoot_rate)\n        bs.write_u32(self.incar_rate)\n        bs.write_u32(self.weapon_rate)\n        bs.write_u32(self.multiplier)\n        bs.write_u32(self.lag_comp)\n        bs.write_dynamic_str8(self.hostname)\n        bs.write_bits(bytearray(self.vehicle_models), TO_BITS(212))\n        bs.write_u32(self.vehicle_friendly_fire)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        zone_names                       = bs.read_bit()\n        use_cj_walk                      = bs.read_bit()\n        allow_weapons                    = bs.read_bit()\n        limit_global_chat_radius         = bs.read_bit()\n        global_chat_radius               = bs.read_float()\n        stunt_bonus                      = bs.read_bit()\n        name_tag_draw_distance           = bs.read_float()\n        disable_enter_exits              = bs.read_bit()\n        name_tag_los                     = bs.read_bit()\n        manual_vehicle_engine_and_light  = bs.read_bit()\n        spawns_available                 = bs.read_u32()\n        player_id                        = bs.read_u16()\n        show_player_tags                 = bs.read_bit()\n        show_player_markers              = bs.read_u32()\n        world_time                       = bs.read_u8()\n        weather                          = bs.read_u8()\n        gravity                          = bs.read_float()\n        lan_mode                         = bs.read_bit()\n        death_drop_money                 = bs.read_u32()\n        instagib                         = bs.read_bit()\n        onfoot_rate                      = bs.read_u32()\n        incar_rate                       = bs.read_u32()\n        weapon_rate                      = bs.read_u32()\n        multiplier                       = bs.read_u32()\n        lag_comp                         = bs.read_u32()\n\n        hostname_size = bs.read_u8()\n        hostname = bytearray(hostname_size)\n        bs.read_bits(hostname, TO_BITS(hostname_size))\n        hostname = hostname.decode(SAMP_ENCODING)\n\n        vehicle_models = bytearray(212)\n        bs.read_bits(vehicle_models, TO_BITS(212))\n\n        vehicle_friendly_fire = bs.read_u32()\n\n        return InitGame(zone_names, use_cj_walk, allow_weapons, limit_global_chat_radius, global_chat_radius, stunt_bonus, name_tag_draw_distance, disable_enter_exits, name_tag_los, manual_vehicle_engine_and_light, spawns_available, player_id, show_player_tags, show_player_markers, world_time, weather, gravity, lan_mode, death_drop_money, instagib, onfoot_rate, incar_rate, weapon_rate, multiplier, lag_comp, hostname, vehicle_models, vehicle_friendly_fire)", "\nclass MenuQuit(Rpc):\n    def __init__(self):\n        super().__init__(RPC.MENU_QUIT)\n\n    def encode_rpc_payload(self, bs):\n        pass\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        return MenuQuit()", "\nclass RemoveMapIcon(Rpc):\n    def __init__(self, icon_id):\n        super().__init__(RPC.REMOVE_MAP_ICON)\n        self.icon_id = icon_id\n\n    def encode_rpc_payload(self, bs):\n        bs.write_u8(self.icon_id)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        icon_id = bs.read_u8()\n        return RemoveMapIcon(icon_id)", "\n''' S2C\nSets the ammo of the specified weapon.\ne.g. SetWeaponAmmo(WEAPON.MP5, 30) ; Set MP5 ammo to 30; it gives an MP5 if the player did not have one(will not be selected weapon, use GiveWeapon for that)\ne.g. SetWeaponAmmo(WEAPON.MP5, 0) ; Removes MP5\nRelated: SetPlayerAmmo\n'''\nclass SetWeaponAmmo(Rpc):\n    def __init__(self, weapon_id, ammo):\n        super().__init__(RPC.SET_WEAPON_AMMO)\n        self.weapon_id = weapon_id\n        self.ammo = ammo\n\n    def encode_rpc_payload(self, bs):\n        bs.write_u8(self.weapon_id)\n        bs.write_u16(self.ammo)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        weapon_id = bs.read_u8()\n        ammo = bs.read_u16()\n        return SetWeaponAmmo(weapon_id, ammo)", "\n''' S2C\nSets the gravity value.\ngravity: new gravity value; default value is 0.008\ne.g. SetGravity(0.008) # resets gravity\nRelated: SetPlayerGravity\n'''\nclass SetGravity(Rpc):\n    def __init__(self, gravity):\n        super().__init__(RPC.SET_GRAVITY)\n        self.gravity = gravity\n    \n    def __str__(self): # because of precision\n        return f'<SetGravity gravity={self.gravity:.5f}'\n\n    def encode_rpc_payload(self, bs):\n        bs.write_float(self.gravity)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        gravity = bs.read_float()\n        return SetGravity(gravity)", "\n''' S2C\nSets the health of the specified vehicle.\nvehicle_id: id of the vehicle to set the health\nhealth: new health value\nNote: A value less than 250.0(represents 25% in a 1000 hp vehicle) makes the vehicle catch on fire and after a few seconds explode.\nNote: If the vehicle is on fire(i.e. hp < 250) and the health is set to a value greater or equal to 250 the fire will disappear and the vehicle won't explode.\ne.g. SetVehicleHealth(53, 2500) # sets the hp of the vehicle with id 53 to 2500\n'''\nclass SetVehicleHealth(Rpc):\n    def __init__(self, vehicle_id, health):\n        super().__init__(RPC.SET_VEHICLE_HEALTH)\n        self.vehicle_id = vehicle_id\n        self.health = health\n\n    def encode_rpc_payload(self, bs):\n        bs.write_u16(self.vehicle_id)\n        bs.write_float(self.health)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        vehicle_id = bs.read_u16()\n        health = bs.read_float()\n        return SetVehicleHealth(vehicle_id, health)", "'''\nclass SetVehicleHealth(Rpc):\n    def __init__(self, vehicle_id, health):\n        super().__init__(RPC.SET_VEHICLE_HEALTH)\n        self.vehicle_id = vehicle_id\n        self.health = health\n\n    def encode_rpc_payload(self, bs):\n        bs.write_u16(self.vehicle_id)\n        bs.write_float(self.health)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        vehicle_id = bs.read_u16()\n        health = bs.read_float()\n        return SetVehicleHealth(vehicle_id, health)", "\nclass AttachTrailerToVehicle(Rpc):\n    def __init__(self):\n        super().__init__(RPC.ATTACH_TRAILER_TO_VEHICLE)\n\n    def encode_rpc_payload(self, bs):\n        pass\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        return AttachTrailerToVehicle()", "\nclass DetachTrailerFromVehicle(Rpc):\n    def __init__(self):\n        super().__init__(RPC.DETACH_TRAILER_FROM_VEHICLE)\n\n    def encode_rpc_payload(self, bs):\n        pass\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        return DetachTrailerFromVehicle()", "\n''' S2C\nID  Name                    Type                                   Description (in singleplayer)\n0   EXTRASUNNY_LA           Blue skies                             Los Santos specific weather\n1   SUNNY_LA                Blue skies                             Los Santos specific weather\n2   EXTRASUNNY_SMOG_LA      Blue skies                             Los Santos specific weather\n3   SUNNY_SMOG_LA           Blue skies                             Los Santos specific weather\n4   CLOUDY_LA               Blue skies                             Los Santos specific weather\n5   SUNNY_SF                Blue skies                             San Fierro specific weather\n6   EXTRASUNNY_SF           Blue skies                             San Fierro specific weather", "5   SUNNY_SF                Blue skies                             San Fierro specific weather\n6   EXTRASUNNY_SF           Blue skies                             San Fierro specific weather\n7   CLOUDY_SF               Blue skies                             San Fierro specific weather\n8   RAINY_SF                Stormy                                 San Fierro specific weather\n9   FOGGY_SF                Cloudy and foggy                       San Fierro specific weather\n10  SUNNY_VEGAS             Clear blue sky                         Las Venturas specific weather\n11  EXTRASUNNY_VEGAS        Heat waves                             Las Venturas specific weather\n12  CLOUDY_VEGAS            Dull, colourless                       Las Venturas specific weather\n13  EXTRASUNNY_COUNTRYSIDE  Dull, colourless                       Countryside specific weather\n14  SUNNY_COUNTRYSIDE       Dull, colourless                       Countryside specific weather", "13  EXTRASUNNY_COUNTRYSIDE  Dull, colourless                       Countryside specific weather\n14  SUNNY_COUNTRYSIDE       Dull, colourless                       Countryside specific weather\n15  CLOUDY_COUNTRYSIDE      Dull, colourless                       Countryside specific weather\n16  RAINY_COUNTRYSIDE       Dull, cloudy, rainy                    Countryside specific weather\n17  EXTRASUNNY_DESERT       Heat waves                             Bone County specific weather\n18  SUNNY_DESERT            Heat waves                             Bone County specific weather\n19  SANDSTORM_DESERT        Sandstorm                              Bone County specific weather\n20  UNDERWATER              Greenish, foggy                        Used internally when camera is underwater\n21  EXTRACOLOURS_1          Very dark, gradiented skyline, purple  Weather used in interiors\n22  EXTRACOLOURS_2          Very dark, gradiented skyline, purple  Weather used in interiors", "21  EXTRACOLOURS_1          Very dark, gradiented skyline, purple  Weather used in interiors\n22  EXTRACOLOURS_2          Very dark, gradiented skyline, purple  Weather used in interiors\n'''\nclass SetWeather(Rpc):\n    def __init__(self, weather_id):\n        super().__init__(RPC.SET_WEATHER)\n        self.weather_id = weather_id\n\n    def encode_rpc_payload(self, bs):\n        bs.write_u8(self.weather_id)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        weather_id = bs.read_u8()\n        return SetWeather(weather_id)", "\n''' S2C\nSets the skin of the specified player.\nplayer_id: id of the player to set the skin\nskin_id: id of the skin to set; see the SKIN enumeration\n'''\nclass SetPlayerSkin(Rpc):\n    def __init__(self, player_id, skin_id):\n        super().__init__(RPC.SET_PLAYER_SKIN)\n        self.player_id = player_id # id of the player to change the skin\n        self.skin_id = skin_id # skin to change to\n\n    def encode_rpc_payload(self, bs):\n        bs.write_u32(self.player_id)\n        bs.write_u32(self.skin_id)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        player_id = bs.read_u32()\n        skin_id = bs.read_u32()\n        return SetPlayerSkin(player_id, skin_id)", "\n''' S2C\nMakes the specified player do the animation of exiting the specified vehicle.\nplayer_id: id of the player that will do the animation\nvehicle_id: the id of the vehicle about to be exited\n'''\nclass PlayerExitVehicle(Rpc):\n    def __init__(self, player_id, vehicle_id):\n        super().__init__(RPC.PLAYER_EXIT_VEHICLE)\n        self.player_id = player_id\n        self.vehicle_id = vehicle_id\n\n    def encode_rpc_payload(self, bs):\n        bs.write_u16(self.player_id)\n        bs.write_u16(self.vehicle_id)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        player_id = bs.read_u16()\n        vehicle_id = bs.read_u16()\n        return PlayerExitVehicle(player_id, vehicle_id)", "\n''' C2S\nClient sends when it exits a vehicle\nvehicle_id: the id of the vehicle about to be exited\n'''\nclass ExitVehicle(Rpc):\n    def __init__(self, vehicle_id):\n        super().__init__(RPC.EXIT_VEHICLE)\n        self.vehicle_id = vehicle_id\n\n    def encode_rpc_payload(self, bs):\n        bs.write_u16(self.vehicle_id)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        vehicle_id = bs.read_u16()\n        return ExitVehicle(vehicle_id)", "RPC.EXIT_VEHICLE.decode_client_rpc_payload = ExitVehicle.decode_rpc_payload\n\n''' C2S\nClient sends when the scoreboard is opened.\nRelated: OnPlayerRequestScoresAndPings, UpdateScoresAndPings \n'''\nclass RequestScoresAndPings(Rpc):\n    def __init__(self):\n        super().__init__(RPC.REQUEST_SCORES_AND_PINGS)\n\n    def encode_rpc_payload(self, bs):\n        pass\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        return RequestScoresAndPings()", "\n''' S2C\nResponse for the RequestScoresAndPings RPC\nProvides scoreboard data(score and pings) for ids\nplayers = [(id, score, ping), ...]\nRelated: SendPlayerScoresAndPings, UpdateScoresAndPings\n'''\nclass RequestScoresAndPingsResponse(Rpc):\n    def __init__(self, players):\n        super().__init__(RPC.REQUEST_SCORES_AND_PINGS)\n        self.players = players\n\n    def encode_rpc_payload(self, bs):\n        for id, score, ping in self.players:\n            bs.write_u16(id)\n            bs.write_u32(score)\n            bs.write_u32(ping)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        player_count = TO_BYTES(bs.unread_bits_count()) // 10\n        players = [None] * player_count\n        for i in range(player_count):\n            id = bs.read_u16()\n            score = bs.read_u32()\n            ping = bs.read_u32()\n            players[i] = (id, score, ping)\n        return RequestScoresAndPingsResponse(players)", "RPC.REQUEST_SCORES_AND_PINGS.decode_server_rpc_payload = RequestScoresAndPingsResponse.decode_rpc_payload\n\nclass SetInterior(Rpc):\n    def __init__(self, interior_id):\n        super().__init__(RPC.SET_INTERIOR)\n        self.interior_id = interior_id\n\n    def encode_rpc_payload(self, bs):\n        bs.write_u8(self.interior_id)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        interior_id = bs.read_u8()\n        return SetInterior(interior_id)", "\nclass SetCameraPos(Rpc):\n    def __init__(self, pos):\n        super().__init__(RPC.SET_CAMERA_POS)\n        self.pos = pos\n\n    def encode_rpc_payload(self, bs):\n        bs.write_vec3(self.pos)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        pos = bs.read_vec3()\n        return SetCameraPos(pos)", "\nclass CAMERA_CUT(enum.IntEnum):\n    MOVE = 1 # The camera position and/or target will move to its new value over time.\n    CUT = 2 # The camera position and/or target will move to its new value instantly.\n\nclass SetCameraLookAt(Rpc):\n    def __init__(self, pos, cut_type):\n        super().__init__(RPC.SET_CAMERA_LOOK_AT)\n        self.pos = pos\n        self.cut_type = CAMERA_CUT(cut_type)\n\n    def encode_rpc_payload(self, bs):\n        bs.write_vec3(self.pos)\n        bs.write_u8(self.cut_type)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        pos = bs.read_vec3()\n        cut_type = bs.read_u8()\n        return SetCameraLookAt(pos, cut_type)", "\nclass SetVehiclePos(Rpc):\n    def __init__(self, vehicle_id, pos):\n        super().__init__(RPC.SET_VEHICLE_POS)\n        self.vehicle_id = vehicle_id\n        self.pos = pos\n\n    def encode_rpc_payload(self, bs):\n        bs.write_u16(self.vehicle_id)\n        bs.write_vec3(self.pos)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        vehicle_id = bs.read_u16()\n        pos = bs.read_vec3()\n        return SetVehiclePos(vehicle_id, pos)", "\n''' S2C\nSets the Z component of the vehicle's direction(orientation).\nangle: new Z value.\nRelated: SetVehicleZAngle\n'''\nclass SetVehicleDirZ(Rpc):\n    def __init__(self, vehicle_id, angle):\n        super().__init__(RPC.SET_VEHICLE_DIR_Z)\n        self.vehicle_id = vehicle_id\n        self.angle = angle\n\n    def encode_rpc_payload(self, bs):\n        bs.write_u16(self.vehicle_id)\n        bs.write_float(self.angle)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        vehicle_id = bs.read_u16()\n        angle = bs.read_float()\n        return SetVehicleDirZ(vehicle_id, angle)", "\nclass SetVehicleParams(Rpc):\n    def __init__(self, vehicle_id, objective, doors_locked):\n        super().__init__(RPC.SET_VEHICLE_PARAMS)\n        self.vehicle_id = vehicle_id\n        self.objective = objective\n        self.doors_locked = doors_locked\n\n    def encode_rpc_payload(self, bs):\n        bs.write_u16(self.vehicle_id)\n        bs.write_u8(self.objective)\n        bs.write_u8(self.doors_locked)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        vehicle_id = bs.read_u16()\n        objective = bs.read_u8()\n        doors_locked = bs.read_u8()\n        return SetVehicleParams(vehicle_id, objective, doors_locked)", "\nclass SetCameraBehindPlayer(Rpc):\n    def __init__(self):\n        super().__init__(RPC.SET_CAMERA_BEHIND_PLAYER)\n\n    def encode_rpc_payload(self, bs):\n        pass\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        return SetCameraBehindPlayer()", "\n''' S2C\nRemoves the specified player from the world.\nRelated: WorldPlayerRemove, PlayerStreamOut\n'''\nclass StopPlayerStream(Rpc):\n    def __init__(self, player_id):\n        super().__init__(RPC.STOP_PLAYER_STREAM)\n        self.player_id = player_id\n\n    def encode_rpc_payload(self, bs):\n        bs.write_u16(self.player_id)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        player_id = bs.read_u16()\n        return StopPlayerStream(player_id)", "\n''' S2C\nAdds a vehicle to the world.\nvehicle_id: [1, 1999] ; 0 is an invalid id\nNote: If the RPC is sent twice(without RemoveVehicle in between) the vehicle respawns and a warning message is shown in the chat\nRelated: WorldVehicleAdd, StreamInVehicle\ne.g. AddVehicle(1, VEHICLE.RHINO, Vec3(0, 0, 3))\n'''\nclass AddVehicle(Rpc):\n    def __init__(self, vehicle_id, model_id, pos, health=1000.0, dir_z=0.0, interior_color1=0, interior_color2=0, interior=0, door_damage_status=0, panel_damage_status=0, light_damage_status=0, tire_damage_status=0, add_siren=False, mods=[0]*14, paint_job=0, body_color1=0, body_color2=0):\n        super().__init__(RPC.ADD_VEHICLE)\n        self.vehicle_id = vehicle_id\n        self.model_id = VEHICLE(model_id) # model id of the vehicle; see sa/vehicle.py\n        self.pos = pos # position of the vehicle\n        self.health = health\n        self.dir_z = dir_z # Z component of the vehicle's direction; a.k.a. \"yaw\"\n        self.interior_color1 = interior_color1\n        self.interior_color2 = interior_color2\n        self.interior = interior\n        self.door_damage_status = door_damage_status\n        self.panel_damage_status = panel_damage_status\n        self.light_damage_status = light_damage_status\n        self.tire_damage_status = tire_damage_status\n        self.add_siren = add_siren\n        self.mods = mods\n        self.paint_job = paint_job\n        self.body_color1 = Color(body_color1)\n        self.body_color2 = Color(body_color2)\n\n    def encode_rpc_payload(self, bs):\n        bs.write_u16(self.vehicle_id)\n        bs.write_u32(self.model_id)\n        bs.write_vec3(self.pos)\n        bs.write_float(self.dir_z)\n        bs.write_u8(self.interior_color1)\n        bs.write_u8(self.interior_color2)\n        bs.write_float(self.health)\n        bs.write_u8(self.interior)\n        bs.write_u32(self.door_damage_status)\n        bs.write_u32(self.panel_damage_status)\n        bs.write_u8(self.light_damage_status)\n        bs.write_u8(self.tire_damage_status)\n        bs.write_u8(self.add_siren)\n        for i in range(14): # 14 mods\n            bs.write_u8(self.mods[i])\n        bs.write_u8(self.paint_job)\n        bs.write_u32(self.body_color1)\n        bs.write_u32(self.body_color2)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        vehicle_id = bs.read_u16()\n        model_id = bs.read_u32()\n        pos = bs.read_vec3()\n        dir_z = bs.read_float()\n        interior_color1 = bs.read_u8()\n        interior_color2 = bs.read_u8()\n        health = bs.read_float()\n        interior = bs.read_u8()\n        door_damage_status = bs.read_u32()\n        panel_damage_status = bs.read_u32()\n        light_damage_status = bs.read_u8()\n        tire_damage_status = bs.read_u8()\n        add_siren = bs.read_u8()\n        mods = [bs.read_u8() for _ in range(14)]\n        paint_job = bs.read_u8()\n        body_color1 = bs.read_u32()\n        body_color2 = bs.read_u32()\n        return AddVehicle(vehicle_id, model_id, pos, health, dir_z, interior_color1, interior_color2, interior, door_damage_status, panel_damage_status, light_damage_status, tire_damage_status, add_siren, mods, paint_job, body_color1, body_color2)", "class AddVehicle(Rpc):\n    def __init__(self, vehicle_id, model_id, pos, health=1000.0, dir_z=0.0, interior_color1=0, interior_color2=0, interior=0, door_damage_status=0, panel_damage_status=0, light_damage_status=0, tire_damage_status=0, add_siren=False, mods=[0]*14, paint_job=0, body_color1=0, body_color2=0):\n        super().__init__(RPC.ADD_VEHICLE)\n        self.vehicle_id = vehicle_id\n        self.model_id = VEHICLE(model_id) # model id of the vehicle; see sa/vehicle.py\n        self.pos = pos # position of the vehicle\n        self.health = health\n        self.dir_z = dir_z # Z component of the vehicle's direction; a.k.a. \"yaw\"\n        self.interior_color1 = interior_color1\n        self.interior_color2 = interior_color2\n        self.interior = interior\n        self.door_damage_status = door_damage_status\n        self.panel_damage_status = panel_damage_status\n        self.light_damage_status = light_damage_status\n        self.tire_damage_status = tire_damage_status\n        self.add_siren = add_siren\n        self.mods = mods\n        self.paint_job = paint_job\n        self.body_color1 = Color(body_color1)\n        self.body_color2 = Color(body_color2)\n\n    def encode_rpc_payload(self, bs):\n        bs.write_u16(self.vehicle_id)\n        bs.write_u32(self.model_id)\n        bs.write_vec3(self.pos)\n        bs.write_float(self.dir_z)\n        bs.write_u8(self.interior_color1)\n        bs.write_u8(self.interior_color2)\n        bs.write_float(self.health)\n        bs.write_u8(self.interior)\n        bs.write_u32(self.door_damage_status)\n        bs.write_u32(self.panel_damage_status)\n        bs.write_u8(self.light_damage_status)\n        bs.write_u8(self.tire_damage_status)\n        bs.write_u8(self.add_siren)\n        for i in range(14): # 14 mods\n            bs.write_u8(self.mods[i])\n        bs.write_u8(self.paint_job)\n        bs.write_u32(self.body_color1)\n        bs.write_u32(self.body_color2)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        vehicle_id = bs.read_u16()\n        model_id = bs.read_u32()\n        pos = bs.read_vec3()\n        dir_z = bs.read_float()\n        interior_color1 = bs.read_u8()\n        interior_color2 = bs.read_u8()\n        health = bs.read_float()\n        interior = bs.read_u8()\n        door_damage_status = bs.read_u32()\n        panel_damage_status = bs.read_u32()\n        light_damage_status = bs.read_u8()\n        tire_damage_status = bs.read_u8()\n        add_siren = bs.read_u8()\n        mods = [bs.read_u8() for _ in range(14)]\n        paint_job = bs.read_u8()\n        body_color1 = bs.read_u32()\n        body_color2 = bs.read_u32()\n        return AddVehicle(vehicle_id, model_id, pos, health, dir_z, interior_color1, interior_color2, interior, door_damage_status, panel_damage_status, light_damage_status, tire_damage_status, add_siren, mods, paint_job, body_color1, body_color2)", "\n''' S2C\nRemoves the specified vehicle from the world.\nNote: if the id is invalid, the client ignores the RPC.\nRelated: WorldVehicleRemove, StreamOutVehicle\n'''\nclass RemoveVehicle(Rpc):\n    def __init__(self, vehicle_id):\n        super().__init__(RPC.REMOVE_VEHICLE)\n        self.vehicle_id = vehicle_id # id of the vehicle to remove\n\n    def encode_rpc_payload(self, bs):\n        bs.write_u16(self.vehicle_id)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        vehicle_id = bs.read_u16()\n        return RemoveVehicle(vehicle_id)", "\nclass DeathBroadcast(Rpc):\n    def __init__(self, player_id):\n        super().__init__(RPC.DEATH_BROADCAST)\n        self.player_id = player_id\n\n    def encode_rpc_payload(self, bs):\n        bs.write_u16(self.player_id)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        player_id = bs.read_u16()\n        return DeathBroadcast(player_id)", "\n''' S2C\nEnables or disables vehicle collisions.\nenable: True or False\n'''\nclass ToggleVehicleCollisions(Rpc):\n    def __init__(self, enable):\n        super().__init__(RPC.TOGGLE_VEHICLE_COLLISIONS)\n        self.enable = bool(enable)\n\n    def encode_rpc_payload(self, bs):\n        bs.write_bit(self.enable)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        enable = bs.read_bit()\n        return ToggleVehicleCollisions(enable)", "\n''' C2S\n'''\nclass CameraTarget(Rpc):\n    def __init__(self):\n        super().__init__(RPC.CAMERA_TARGET)\n\n    def encode_rpc_payload(self, bs):\n        pass\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        return CameraTarget()", "\n''' S2C\nEnable or disables camera targeting functions to the specified.\n'''\nclass ToggleCameraTarget(Rpc):\n    def __init__(self, enable):\n        super().__init__(RPC.TOGGLE_CAMERA_TARGET)\n        self.enable = bool(enable)\n\n    def encode_rpc_payload(self, bs):\n        bs.write_bit(self.enable)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        enable = bs.read_bit()\n        return ToggleCameraTarget(enable)", "\n''' S2C\nAdds an actor to the world.\nactor_id: id of the actor; [0, 999]\nRelated: CreateActor, ShowActor, ShowActorForPlayer\n'''\nclass AddActor(Rpc):\n    def __init__(self, actor_id, pos, skin_id=SKIN.CJ, dir_z=0.0, health=100.0, invulnerable=True):\n        super().__init__(RPC.ADD_ACTOR)\n        self.actor_id = actor_id\n        self.pos = pos\n        self.skin_id = skin_id\n        self.dir_z = dir_z\n        self.health = health\n        self.invulnerable = invulnerable\n\n    def encode_rpc_payload(self, bs):\n        bs.write_u16(self.actor_id)\n        bs.write_u32(self.skin_id)\n        bs.write_vec3(self.pos)\n        bs.write_float(self.dir_z)\n        bs.write_float(self.health)\n        bs.write_u8(self.invulnerable)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        actor_id = bs.read_u16()\n        skin_id = bs.read_u32()\n        pos = bs.read_vec3()\n        dir_z = bs.read_float()\n        health = bs.read_float()\n        invulnerable = bs.read_u8()\n        return AddActor(actor_id, pos, skin_id, dir_z, health, invulnerable)", "\n''' S2C\nRemoves the specified actor from the world.\nactor_id: id of the actor to hide\nRelated: DestroyActor, HideActor, HideActorForPlayer\n'''\nclass RemoveActor(Rpc):\n    def __init__(self, actor_id):\n        super().__init__(RPC.REMOVE_ACTOR)\n        self.actor_id = actor_id\n\n    def encode_rpc_payload(self, bs):\n        bs.write_u16(self.actor_id)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        actor_id = bs.read_u16()\n        return RemoveActor(actor_id)", "\n''' S2C\nMakes the actor play an animation.\nactor_id: id of the actor.\n\n'''\nclass ApplyActorAnimation(Rpc):\n    def __init__(self, actor_id, anim_lib, anim_name, delta, loop, lock_x, lock_y, freeze, time):\n        super().__init__(RPC.APPLY_ACTOR_ANIMATION)\n        self.actor_id = actor_id\n        self.anim_lib = anim_lib\n        self.anim_name = anim_name\n        self.delta = delta\n        self.loop = loop\n        self.lock_x = lock_x\n        self.lock_y = lock_y\n        self.freeze = freeze\n        self.time = time\n\n    def encode_rpc_payload(self, bs):\n        bs.write_u16(self.actor_id)\n        bs.write_dynamic_str8(self.anim_lib)\n        bs.write_dynamic_str8(self.anim_name)\n        bs.write_float(self.delta)\n        bs.write_bit(self.loop)\n        bs.write_bit(self.lock_x)\n        bs.write_bit(self.lock_y)\n        bs.write_bit(self.freeze)\n        bs.write_float(self.time)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        actor_id = bs.read_u16()\n        anim_lib = bs.read_dynamic_str8()\n        anim_name = bs.read_dynamic_str8()\n        delta = bs.read_float()\n        loop = bs.read_bit()\n        lock_x = bs.read_bit()\n        lock_y = bs.read_bit()\n        freeze = bs.read_bit()\n        time = bs.read_float()\n        return ApplyActorAnimation(actor_id, anim_lib, anim_name, delta, loop, lock_x, lock_y, freeze, time)", "\n''' S2C\nStop any animation the actor is playing.\nactor_id: id of the actor\n'''\nclass ClearActorAnimation(Rpc):\n    def __init__(self, actor_id):\n        super().__init__(RPC.CLEAR_ACTOR_ANIMATION)\n        self.actor_id = actor_id\n\n    def encode_rpc_payload(self, bs):\n        bs.write_u16(self.actor_id)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        actor_id = bs.read_u16()\n        return ClearActorAnimation(actor_id)", "\n''' S2C\nSets the Z component of the actor's direction(orientation)\nactor_id: id of the actor\nangle: new value for Z\nRelated: SetActorFacingAngle\n'''\nclass SetActorDirZ(Rpc):\n    def __init__(self, actor_id, angle):\n        super().__init__(RPC.SET_ACTOR_DIR_Z)\n        self.actor_id = actor_id\n        self.angle = angle\n\n    def encode_rpc_payload(self, bs):\n        bs.write_u16(self.actor_id)\n        bs.write_float(self.angle)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        actor_id = bs.read_u16()\n        angle = bs.read_float()\n        return SetActorDirZ(actor_id, angle)", "\n''' S2C\nSets the position of the actor.\nactor_id: id of the actor.\npos: new position value\n'''\nclass SetActorPos(Rpc):\n    def __init__(self, actor_id, pos):\n        super().__init__(RPC.SET_ACTOR_POS)\n        self.actor_id = actor_id\n        self.pos = pos\n\n    def encode_rpc_payload(self, bs):\n        bs.write_u16(self.actor_id)\n        bs.write_vec3(self.pos)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        actor_id = bs.read_u16()\n        pos = bs.read_vec3()\n        return SetActorPos(actor_id, pos)", "\n''' S2C\nSets the health of the actor.\nactor_id: id of the actor.\nhealth: new health value.\n'''\nclass SetActorHealth(Rpc):\n    def __init__(self, actor_id, health):\n        super().__init__(RPC.SET_ACTOR_HEALTH)\n        self.actor_id = actor_id\n        self.health = health\n\n    def encode_rpc_payload(self, bs):\n        bs.write_u16(self.actor_id)\n        bs.write_float(self.health)\n\n    @staticmethod\n    def decode_rpc_payload(bs):\n        actor_id = bs.read_u16()\n        health = bs.read_float()\n        return SetActorHealth(actor_id, health)", "\nimport inspect\nmodule = inspect.getmodule(inspect.currentframe())\nfor rpc in RPC:\n    # get SomeSampRpc class from RPC.SOME_SAMP_RPC\n    class_name = ''.join(w.capitalize() for w in rpc.name.split('_'))\n    try:\n        rpc_class = getattr(module, class_name)\n        if rpc.__dict__.get('decode_client_rpc_payload') is None:\n            rpc.decode_client_rpc_payload = rpc_class.decode_rpc_payload\n        if rpc.__dict__.get('decode_server_rpc_payload') is None:\n            rpc.decode_server_rpc_payload = rpc_class.decode_rpc_payload\n    except AttributeError:\n        continue", ""]}
{"filename": "sa/sa/samp/raknet.py", "chunked_list": ["import queue # Queue\nimport socket # inet_aton\nimport enum\nimport ctypes # QueryPerformanceFrequency, QueryPerformanceCounter\nimport ctypes.wintypes # LARGE_INTEGER\nimport time\nimport traceback\n\n'''\nRAKNET ARCHITECTURE:", "'''\nRAKNET ARCHITECTURE:\nWe always use UDP in this raknet implementation\n\nby default a peer is unconnected\n\nAll raknet packets(from unconnected peers) have exactly one message at the start.\n A peer becomes connected after the server send an OpenConnectionReply message\n\nAll raknet packets(from connected peers) have two parts(in this order):", "\nAll raknet packets(from connected peers) have two parts(in this order):\n 1. reliable message acknowlegements(see Acknowledgments)\n 2. zero or more internal packets(see InternalPacket)\n\nAn internal packet has a whole message or part of a split message\n\nSA-MP protocol\n(Client.OpenConnectionRequest + Server.OpenConnectionCookie) * n ; until the client sends the correct cookie\nServer.OpenConnectionReply", "(Client.OpenConnectionRequest + Server.OpenConnectionCookie) * n ; until the client sends the correct cookie\nServer.OpenConnectionReply\nClient.ConnectionRequest\nServer.AuthKey\nClient.AuthKey\nServer.ConnectionRequestAccepted\nClient.NewIncomingConnection\nClient.ClientJoin\n\nClient.DisconnectNotification when disconnecting from a server", "\nClient.DisconnectNotification when disconnecting from a server\n\nTODO:\n check if acknowledgments will fit before encoding all of them\n implement resend reliable messages\n'''\n\nfrom .bitstream import *\n", "from .bitstream import *\n\nfrom .common import *\n\n# raknet internal message identifiers\nclass MSG(enum.IntEnum):\n    INTERNAL_PING                     = 6   # 0x06\n    #PING                              = 7   # 0x07\n    #PING_OPEN_CONNECTIONS             = 8   # 0x08\n    CONNECTED_PONG                    = 9   # 0x09\n    #REQUEST_STATIC_DATA               = 10  # 0x0a\n    CONNECTION_REQUEST                = 11  # 0x0b\n    AUTH_KEY                          = 12  # 0x0c ; used in the connection process; see auth_keys.py\n    #BROADCAST_PINGS                   = 14  # 0x0e\n    #SECURED_CONNECTION_RESPONSE       = 15  # 0x0f\n    #SECURED_CONNECTION_CONFIRMATION   = 16  # 0x10\n    #RPC_MAPPING                       = 17  # 0x11\n    #SET_RANDOM_NUMBER_SEED            = 19  # 0x13\n    RPC                               = 20  # 0x14\n    #RPC_REPLY                         = 21  # 0x15\n    DETECT_LOST_CONNECTIONS           = 23  # 0x16\n    OPEN_CONNECTION_REQUEST           = 24  # 0x18  ; cookie challenge\n    OPEN_CONNECTION_REPLY             = 25  # 0x19  ; cookie challenge\n    OPEN_CONNECTION_COOKIE            = 26  # 0x1a  ; cookie challenge\n    #RSA_PUBLIC_KEY_MISMATCH           = 28  # 0x1c\n    #CONNECTION_ATTEMPT_FAILED         = 29  # 0x1d\n    NEW_INCOMING_CONNECTION           = 30  # 0x1e\n    #NO_FREE_INCOMING_CONNECTIONS      = 31  # 0x1f\n    DISCONNECTION_NOTIFICATION        = 32  # 0x20\n    #CONNECTION_LOST                   = 33  # 0x21\n    CONNECTION_REQUEST_ACCEPTED       = 34  # 0x22\n    CONNECTION_BANNED                 = 36  # 0x24\n    #INVALID_PASSWORD                  = 37  # 0x25\n    #MODIFIED_PACKET                   = 38  # 0x26\n    #PONG                              = 39  # 0x27\n    TIMESTAMP                         = 40  # 0x28\n    RECEIVED_STATIC_DATA              = 41  # 0x29\n    #REMOTE_DISCONNECTION_NOTIFICATION = 42  # 0x2a\n    #REMOTE_CONNECTION_LOST            = 43  # 0x2b\n    REMOTE_NEW_INCOMING_CONNECTION    = 44  # 0x2c\n    REMOTE_EXISTING_CONNECTION        = 45  # 0x2d\n    #REMOTE_STATIC_DATA                = 46  # 0x2e\n    #ADVERTISE_SYSTEM                  = 55  # 0x37\n\n    # samp message identifiers\n    DRIVER_SYNC             = 200  # 0xc8\n    RCON_COMMAND            = 201  # 0xc9\n    #RCON_RESPONSE           = 202  # 0xca\n    AIM_SYNC                = 203  # 0xcb\n    WEAPONS_UPDATE          = 204  # 0xcc\n    STATS_UPDATE            = 205  # 0xcd\n    BULLET_SYNC             = 206  # 0xce\n    PLAYER_SYNC             = 207  # 0xcf\n    MARKERS_SYNC            = 208  # 0xd0\n    UNOCCUPIED_VEHICLE_SYNC = 209  # 0xd1\n    TRAILER_SYNC            = 210  # 0xd2\n    PASSENGER_SYNC          = 211  # 0xd3\n    SPECTATOR_SYNC          = 212  # 0xd4\n\n    def is_samp(self):\n        return self.value >= MSG.DRIVER_SYNC", "\nclass PRIORITY(enum.IntEnum):\n    SYSTEM = 0\n    HIGH   = 1\n    MEDIUM = 2\n    LOW    = 3\nNUMBER_OF_PRIORITIES = len(PRIORITY)\n\n''' raknet reliability constants\nRELIABLE: messages require the remote peer to acknowledge that it was received; if they do not the message is sent again", "''' raknet reliability constants\nRELIABLE: messages require the remote peer to acknowledge that it was received; if they do not the message is sent again\nUNRELIABLE: messages do not use acknowledgments\nSEQUENCED: messages use an ordering index; if we receive a message with ordering index X and later receive a message with ordering index X-1 we drop it because we only care about the most recent sequenced message\nORDERED: messages are delivered in the exact same order as they were pushed\n'''\nclass RELIABILITY(enum.IntEnum):\n    UNRELIABLE           = 6\n    UNRELIABLE_SEQUENCED = 7\n    RELIABLE             = 8\n    RELIABLE_ORDERED     = 9\n    RELIABLE_SEQUENCED   = 10\n    BEGIN                = UNRELIABLE\n    END                  = RELIABLE_SEQUENCED\n\n    def reliable(self):\n        return self.value == RELIABILITY.RELIABLE or self.value == RELIABILITY.RELIABLE_ORDERED or self.value == RELIABILITY.RELIABLE_SEQUENCED\n\n    def ordered(self):\n        return self.value == RELIABILITY.RELIABLE_ORDERED\n\n    def sequenced(self):\n        return self.value == RELIABILITY.UNRELIABLE_SEQUENCED or self.value == RELIABILITY.RELIABLE_SEQUENCED", "\nclass RPC(enum.IntEnum):\n    pass\n\nORDERED_STREAMS_COUNT = 32\n\nMTU_SIZE = 576 # 1500\nIPV4_HEADER_SIZE = 20\nUDP_HEADER_SIZE = 8\nMAX_UDP_PACKET_PAYLOAD_SIZE = MTU_SIZE - IPV4_HEADER_SIZE - UDP_HEADER_SIZE", "UDP_HEADER_SIZE = 8\nMAX_UDP_PACKET_PAYLOAD_SIZE = MTU_SIZE - IPV4_HEADER_SIZE - UDP_HEADER_SIZE\n\nMIN_ACKS_SIZE = 1\n\nMAX_INTERNAL_PACKET_HEADER_SIZE = 19\n\n# MAX_MESSAGE_SIZE in other words is the maximum internal packet payload size\nMAX_MESSAGE_SIZE = MAX_UDP_PACKET_PAYLOAD_SIZE - MIN_ACKS_SIZE - MAX_INTERNAL_PACKET_HEADER_SIZE\n", "MAX_MESSAGE_SIZE = MAX_UDP_PACKET_PAYLOAD_SIZE - MIN_ACKS_SIZE - MAX_INTERNAL_PACKET_HEADER_SIZE\n\nkernel32 = ctypes.windll.kernel32\nperf_frequency = ctypes.wintypes.LARGE_INTEGER()\nkernel32.QueryPerformanceFrequency(ctypes.byref(perf_frequency))\n\n# return in ms\ndef get_time():\n    timestamp = ctypes.wintypes.LARGE_INTEGER()\n    kernel32.QueryPerformanceCounter(ctypes.byref(timestamp))\n    return int(timestamp.value * 1000 / perf_frequency.value)", "\nclass InternalPacket:\n    def __init__(self, sequence_number, reliability, ordering_channel, ordering_index, split_id=None, split_index=None, split_count=None, payload=b''):\n        self.sequence_number = sequence_number\n        self.reliability = reliability\n        self.ordering_channel = ordering_channel\n        self.ordering_index = ordering_index\n        self.split_id = split_id\n        self.split_index = split_index\n        self.split_count = split_count\n        self.payload = payload\n\n    def __str__(self):\n        return pretty_format(self, 0)\n\n    def encode(self, bs):\n        # encode sequence number\n        bs.write_u16(self.sequence_number)\n\n        # encode reliability attributes\n        bs.write_bits_num(self.reliability, 4)\n        if self.reliability.sequenced() or self.reliability.ordered():\n            bs.write_bits_num(self.ordering_channel, 5)\n            bs.write_u16(self.ordering_index)\n\n        # encode split packet attributes\n        if is_split_message := self.split_id is not None:\n            bs.write_bit(1)\n            bs.write_u16(self.split_id)\n            bs.write_compressed_u32(self.split_index)\n            bs.write_compressed_u32(self.split_count)\n        else:\n            bs.write_bit(0)\n\n        # encode payload size\n        bs.write_compressed_u16(TO_BITS(len(self.payload)))\n\n        # copy payload\n        bs.write_aligned(self.payload)\n\n    @staticmethod\n    def decode(bs):\n        # decode sequence number\n        sequence_number = bs.read_u16()\n\n        # decode reliability attributes\n        reliability = RELIABILITY(bs.read_bits_num(4)) # the enum should raise an exception if the reliability is invalid\n        if reliability.sequenced() or reliability.ordered():\n            ordering_channel = bs.read_bits_num(5)\n            ordering_index = bs.read_u16()\n        else:\n            ordering_channel = None\n            ordering_index = None\n\n        # decode split packet attributes\n        is_split = bs.read_bit()\n        if is_split:\n            split_id = bs.read_u16()\n            split_index = bs.read_compressed_u32()\n            split_count = bs.read_compressed_u32()\n            # do some sanity checks; change it if you need it...\n            if split_index >= split_count or split_count >= 100:\n                raise Exception('bad split packet')\n        else:\n            split_id = None\n            split_index = None\n            split_count = None\n\n        # decode payload size\n        payload_size = TO_BYTES(bs.read_compressed_u16())\n        if payload_size > 1500:\n            raise Exception('packet payload too big')\n\n        # copy payload\n        payload = bytearray(payload_size)\n        bs.read_aligned(payload, payload_size)\n\n        return InternalPacket(sequence_number, reliability, ordering_channel, ordering_index, split_id, split_index, split_count, payload)", "\nclass Message:\n    def __init__(self, id):\n        self.id = id\n\n    def __str__(self):\n        return pretty_format(self, 1)\n\n    def encode_header(self):\n        return self.id.to_bytes(1, 'little')\n\n    @staticmethod\n    def decode_header(data):\n        try:\n            id = MSG(data[0])\n            # skip timestamp if present\n            if id == MSG.TIMESTAMP:\n                # data[1:4] # skip timestamp\n                id = MSG(data[5]) # decode real id\n                return id, data[6:]\n            else:\n                return id, data[1:]\n        except Exception as e:\n            e.add_note(f'id=0x{id:x} data={data.hex(\" \")}')\n            raise e\n\n    # in case they are the same\n    # note: derived Rpc classes override this\n    def encode(self):\n        return self.encode_header() + self.encode_payload()\n\n    def encode_from_client(self):\n        return self.encode_header() + self.id.encode_client_payload(self)\n\n    def encode_from_server(self):\n        return self.encode_header() + self.id.encode_server_payload(self)\n\n    @staticmethod\n    def decode_from_client(data):\n        id, data = Message.decode_header(data)\n        try:\n            return id.decode_client_payload(data)\n        except Exception as e:\n            e.add_note(f'id=0x{id:x} data=[{data.hex(\" \")}]')\n            raise e\n\n    @staticmethod\n    def decode_from_server(data):\n        id, data = Message.decode_header(data)\n        try:\n            return id.decode_server_payload(data)\n        except Exception as e:\n            e.add_note(f'id=0x{id:x}; data=[{data.hex(\" \")}]')\n            raise e", "\nclass Rpc(Message):\n    def __init__(self, rpc_id):\n        super().__init__(MSG.RPC)\n        self.rpc_id = rpc_id\n\n    def __str__(self):\n        return pretty_format(self, 2)\n\n    # encode message payload\n    def encode_payload(self):\n        # encode rpc payload\n        payload_bs = Bitstream(capacity=64)\n        self.encode_rpc_payload(payload_bs)\n        # encode rpc header\n        bs = Bitstream(capacity=64)\n        bs.write_u8(self.rpc_id)\n        bs.write_compressed_u32(payload_bs.len)\n        # copy rpc payload\n        bs.write_bits(payload_bs.data, payload_bs.len)\n        return bs.data[:TO_BYTES(bs.len)]\n\n    # decode message payload\n    @staticmethod\n    def decode_client_payload(data):\n        rpc_id, bs = Rpc.decode_payload_header(data)\n        return rpc_id.decode_client_rpc_payload(bs)\n\n    # decode message payload\n    @staticmethod\n    def decode_server_payload(data):\n        rpc_id, bs = Rpc.decode_payload_header(data)\n        return rpc_id.decode_server_rpc_payload(bs)\n\n    @staticmethod\n    def decode_payload_header(data):\n        bs = Bitstream(data)\n\n        # decode rpc id\n        rpc_id = bs.read_u8()\n        rpc_id = RPC(rpc_id)\n\n        # decode rpc payload size\n        rpc_payload_size_in_bits = bs.read_compressed_u32()\n        if rpc_payload_size_in_bits > TO_BITS(len(data) + 16):\n            raise Exception('bad rpc: invalid size')\n\n        return rpc_id, bs", "MSG.RPC.decode_client_payload = Rpc.decode_client_payload\nMSG.RPC.decode_server_payload = Rpc.decode_server_payload\n\nclass OpenConnectionRequest(Message):\n    def __init__(self, cookie):\n        super().__init__(MSG.OPEN_CONNECTION_REQUEST)\n        self.cookie = cookie\n\n    def encode_payload(self):\n        return struct.pack('<H', self.cookie)\n\n    @staticmethod\n    def decode_payload(data):\n        cookie, = struct.unpack('<H', data)\n        return OpenConnectionRequest(cookie)", "\nclass OpenConnectionCookie(Message):\n    def __init__(self, cookie):\n        super().__init__(MSG.OPEN_CONNECTION_COOKIE)\n        self.cookie = cookie\n\n    def encode_payload(self):\n        return struct.pack('<H', self.cookie)\n\n    @staticmethod\n    def decode_payload(data):\n        cookie, = struct.unpack('<H', data)\n        return OpenConnectionCookie(cookie)", "\nclass OpenConnectionReply(Message):\n    def __init__(self):\n        super().__init__(MSG.OPEN_CONNECTION_REPLY)\n\n    def encode_payload(self):\n        return b'\\x00'\n\n    @staticmethod\n    def decode_payload(data):\n        return OpenConnectionReply()", "\nclass NewIncomingConnection(Message):\n    def __init__(self, ip, port):\n        super().__init__(MSG.NEW_INCOMING_CONNECTION)\n        self.ip = ip\n        self.port = port\n\n    def encode_payload(self):\n        return socket.inet_aton(self.ip) + self.port.to_bytes(2, 'little')\n\n    @staticmethod\n    def decode_payload(data):\n        ip = socket.inet_ntoa(data[:4])\n        port, = struct.unpack_from('<H', data, 4)\n        return NewIncomingConnection(ip, port)", "\nclass ConnectionRequest(Message):\n    def __init__(self, password):\n        super().__init__(MSG.CONNECTION_REQUEST)\n        self.password = password\n\n    def encode_payload(self):\n        return self.password.encode(SAMP_ENCODING)\n\n    @staticmethod\n    def decode_payload(data):\n        password = data.decode(SAMP_ENCODING)\n        return ConnectionRequest(password)", "\nclass ConnectionRequestAccepted(Message):\n    def __init__(self, ip, port, player_id, cookie):\n        super().__init__(MSG.CONNECTION_REQUEST_ACCEPTED)\n        self.ip = ip\n        self.port = port\n        self.player_id = player_id\n        self.cookie = cookie\n\n    def encode_payload(self):\n        return socket.inet_aton(self.ip) + struct.pack('HHI', self.port, self.player_id, self.cookie)\n\n    @staticmethod\n    def decode_payload(data):\n        ip = socket.inet_ntoa(data[:4])\n        port, player_id, cookie = struct.unpack_from('<HHI', data, 4)\n        return ConnectionRequestAccepted(ip, port, player_id, cookie)", "\nclass InternalPing(Message):\n    def __init__(self, time):\n        super().__init__(MSG.INTERNAL_PING)\n        self.time = time\n\n    def encode_payload(self):\n        return struct.pack('<I', self.time)\n\n    @staticmethod\n    def decode_payload(data):\n        ping_time, = struct.unpack_from('<I', data)\n        return InternalPing(ping_time)", "\nclass ConnectedPong(Message):\n    def __init__(self, ping_time, pong_time):\n        super().__init__(MSG.CONNECTED_PONG)\n        self.ping_time = ping_time\n        self.pong_time = pong_time\n\n    def encode_payload(self):\n        return struct.pack('<II', self.ping_time, self.pong_time)\n\n    @staticmethod\n    def decode_payload(data):\n        ping_time, pong_time = struct.unpack_from('<II', data)\n        return ConnectedPong(ping_time, pong_time)", "\nclass Timestamp(Message):\n    def __init__(self):\n        super().__init__(MSG.TIMESTAMP)\n\n    @staticmethod\n    def decode_payload(data):\n        return Timestamp()\n\nclass ReceivedStaticData(Message):\n    def __init__(self, local_static_data):\n        super().__init__(MSG.RECEIVED_STATIC_DATA)\n        self.local_static_data = local_static_data\n\n    def encode_payload(self):\n        return self.local_static_data\n\n    @staticmethod\n    def decode_payload(data):\n        local_static_data = data\n        return ReceivedStaticData(local_static_data)", "\nclass ReceivedStaticData(Message):\n    def __init__(self, local_static_data):\n        super().__init__(MSG.RECEIVED_STATIC_DATA)\n        self.local_static_data = local_static_data\n\n    def encode_payload(self):\n        return self.local_static_data\n\n    @staticmethod\n    def decode_payload(data):\n        local_static_data = data\n        return ReceivedStaticData(local_static_data)", "\nclass DetectLostConnections(Message):\n    def __init__(self):\n        super().__init__(MSG.DETECT_LOST_CONNECTIONS)\n\n    def encode_payload(self):\n        return b''\n\n    @staticmethod\n    def decode_payload(data):\n        return DetectLostConnections()", "\nclass AuthKey(Message):\n    def __init__(self, key):\n        super().__init__(MSG.AUTH_KEY)\n        self.key = key\n\n    def encode_payload(self):\n        return len(self.key).to_bytes(1, 'little') + self.key\n\n    @staticmethod\n    def decode_payload(data):\n        key_size = data[0]\n        key = data[1:1+key_size]\n        return AuthKey(key)", "\n'''\nThe client sees the message \"Server closed the connection.\" when the server sends\n'''\nclass DisconnectionNotification(Message):\n    def __init__(self):\n        super().__init__(MSG.DISCONNECTION_NOTIFICATION)\n\n    def encode_payload(self):\n        return b''\n\n    @staticmethod\n    def decode_payload(data):\n        return DisconnectionNotification()", "\nclass RemoteNewIncomingConnection(Message):\n    def __init__(self, ip, port, player_id):\n        super().__init__(MSG.REMOTE_NEW_INCOMING_CONNECTION)\n        self.ip = ip\n        self.port = port\n        self.player_id = player_id\n\n    def encode_payload(self):\n        return socket.inet_aton(self.ip) + struct.pack('HH', self.port, self.player_id)\n\n    @staticmethod\n    def decode_payload(data):\n        ip = socket.inet_ntoa(data[:4])\n        port, player_id = struct.unpack_from('<HH', data, 4)\n        return RemoteNewIncomingConnection(ip, port, player_id)", "\nclass RemoteExistingConnection(Message):\n    def __init__(self, ip, port, player_id):\n        super().__init__(MSG.REMOTE_EXISTING_CONNECTION)\n        self.ip = ip\n        self.port = port\n        self.player_id = player_id\n\n    def encode_payload(self):\n        return socket.inet_aton(self.ip) + struct.pack('HH', self.port, self.player_id)\n\n    @staticmethod\n    def decode_payload(data):\n        ip = socket.inet_ntoa(data[:4])\n        port, player_id = struct.unpack_from('<HH', data, 4)\n        return RemoteExistingConnection(ip, port, player_id)", "\nclass ConnectionBanned(Message):\n    def __init__(self):\n        super().__init__(MSG.CONNECTION_BANNED)\n\n    def encode_payload(self):\n        return b''\n\n    @staticmethod\n    def decode_payload(data):\n        return ConnectionBanned()", "\nfrom .messages import *\nimport inspect\nmodule = inspect.getmodule(inspect.currentframe())\nfor msg in MSG:\n    # get SomeRaknetMessage class from MSG.SOME_RAKNET_MESSAGE\n    class_name = ''.join(w.capitalize() for w in msg.name.split('_'))\n    try:\n        msg_class = getattr(module, class_name)\n\n        if msg_class.__dict__.get('encode_payload') is not None:\n            msg.encode_client_payload = msg_class.encode_payload\n            msg.encode_server_payload = msg_class.encode_payload\n        else:\n            if msg_class.__dict__.get('encode_client_payload') is not None:\n                msg.encode_client_payload = msg_class.encode_client_payload\n            if msg_class.__dict__.get('encode_server_payload') is not None:\n                msg.encode_server_payload = msg_class.encode_server_payload\n\n        if msg_class.__dict__.get('decode_payload') is not None:\n            msg.decode_client_payload = msg_class.decode_payload\n            msg.decode_server_payload = msg_class.decode_payload\n        else:\n            if msg_class.__dict__.get('decode_client_payload') is not None:\n                msg.decode_client_payload = msg_class.decode_client_payload\n            if msg_class.__dict__.get('decode_server_payload') is not None:\n                msg.decode_server_payload = msg_class.decode_server_payload\n\n    except AttributeError:\n        continue", "\nclass BadAck(Exception):\n    pass\n\nclass Range:\n    def __init__(self, min=None, max=None):\n        self.min = min\n        self.max = max\n\n    def __str__(self):\n        return f'[{self.min},{self.max}]'", "\nclass Acknowledgments:\n    def __init__(self, ranges=list()):\n        # [Range(min,max), Range(min,max), ...]\n        self.ranges = ranges\n\n    def __str__(self):\n        return f'<Acknowledgments {\"\".join([str(r) for r in self.ranges])}>'\n\n    def add(self, n):\n        #self.acks.append(number)\n        for r in self.ranges:\n            if r.min <= n <= r.max: # already present\n                return\n            elif n == r.min - 1: # add n to the start\n                r.min -= 1\n                # check if we can merge\n                for r2 in self.ranges:\n                    if r.min - 1 == r2.max:\n                        r.min = r2.min\n                        self.ranges.remove(r2)\n                        return\n                return\n            elif n == r.max + 1: # add n to the end\n                r.max += 1\n                # check if we can merge\n                for r2 in self.ranges:\n                    if r.max + 1 == r2.min:\n                        r.max = r2.max\n                        self.ranges.remove(r2)\n                        return\n                return\n        # if we get we could not add 'n'; lets make a new range\n        self.ranges.append(Range(n, n))\n\n    def remove(self, ranges):\n        for r in self.ranges[:]:\n            for r2 in ranges:\n                if not (r2.max < r.min or r2.min > r.max): # check if it will remove\n                    if r2.min <= r.min and r2.max >= r.max: # remove\n                        self.ranges.remove(r)\n                    elif r2.min > r.min and r2.max < r.max: # split\n                        self.ranges.append(Range(r2.max + 1, r.max))\n                        r.max = r2.min - 1\n                    elif r2.min <= r.min: # trim left\n                        r.min = r2.max + 1\n                    elif r2.max >= r.max: # trim right\n                        r.max = r2.min - 1\n\n    def encode(self, bs):\n        if len(self.ranges) > 0:\n            # write ack data\n            bs.write_bit(1) # has acks\n            bs.write_compressed_u16(len(self.ranges))\n            for r in self.ranges:\n                bs.write_bit(int(r.min == r.max))\n                bs.write_u16(r.min)\n                if r.min != r.max: # only write max if min!=max otherwise it'd redundant\n                    bs.write_u16(r.max)\n\n    @staticmethod\n    def decode(bs):\n        ranges = []\n        has_acks = bs.read_bit()\n        if has_acks: # parse them\n            range_count = bs.read_compressed_u16() # read the amount of ranges\n            for i in range(range_count): # iterate and decode each range\n                min_equals_max = bs.read_bit()\n                min = bs.read_u16()\n                if min_equals_max == 0:\n                    max = bs.read_u16()\n                    if min > max:\n                        raise BadAck # Exception(f'bad acks: min({min}) > max({max})')\n                    ranges.append(Range(min, max))\n        return Acknowledgments(ranges)", "\nclass Peer:\n    def __init__(self, addr, is_server_peer=True, sendto=None):\n        self.addr = addr\n        if sendto is not None:\n            self.sendto = sendto\n\n        if is_server_peer:\n            self.encode_message = Message.encode_from_client\n            self.decode_message = Message.decode_from_server\n        else:\n            self.encode_message = Message.encode_from_server\n            self.decode_message = Message.decode_from_client\n\n        self.first_packet_time = None\n        self.last_packet_time = None\n        self.first_message_time = None\n        self.out_bs = Bitstream(capacity=1500)\n\n        '''\n        For every reliable message received from the peer, we add its sequence\n        number to 'send_acks'. For every packet we send, we send as much\n        acknowledgments as we can from 'send_acks' so the peer knows we received\n        the reliable messages sent in the past.\n        '''\n        self.send_acks = Acknowledgments()\n        self.expected_acks = Acknowledgments()\n        #self.send_acks_lock = threading.Lock()\n\n        self.split_packets = []\n\n        self.ordered_packet_write_index = [0] * ORDERED_STREAMS_COUNT\n        self.ordered_packet_read_index = [0] * ORDERED_STREAMS_COUNT\n\n        self.sequenced_packet_write_index = [0] * ORDERED_STREAMS_COUNT\n        self.sequenced_packet_read_index = [0] * ORDERED_STREAMS_COUNT\n\n        self.ordering_list = [[]] * ORDERED_STREAMS_COUNT\n\n        self.send_internal_packet_queues = [queue.Queue()] * NUMBER_OF_PRIORITIES\n        #self.local_static_data = bytearray()\n\n        # incremented for every messaged pushed\n        self.sequence_number = 0\n\n        # incremented after each split message pushed\n        self.split_message_id = 0\n\n        self.connected_message_callbacks = [] # callback(message, internal_packet, peer)\n        self.unconnected_message_callbacks = [] # callback(message, peer)\n\n        self.connected = False\n\n    def sendto(self, buffer):\n        raise NotImplementedError('You must implement Peer.sendto()')\n\n    def push_message(self, message, reliability=RELIABILITY.RELIABLE, priority=PRIORITY.HIGH, ordering_channel=None):\n        self.push_encoded_message(self.encode_message(message), reliability, priority, ordering_channel)\n\n    def push_encoded_message(self, message_data, reliability=RELIABILITY.RELIABLE, priority=PRIORITY.HIGH, ordering_channel=None):\n        if reliability.sequenced():\n            ordering_index = self.sequenced_packet_write_index[ordering_channel]\n            self.sequenced_packet_write_index[ordering_channel] = (self.sequenced_packet_write_index[ordering_channel] + 1) % (2**16)\n        elif reliability.ordered():\n            ordering_index = self.ordered_packet_write_index[ordering_channel]\n            self.ordered_packet_write_index[ordering_channel] = (self.ordered_packet_write_index[ordering_channel] + 1) % (2**16)\n        else:\n            ordering_index = None\n\n        # check if message has to be split\n        split_message_count = DIV_INT_CEIL(len(message_data), MAX_MESSAGE_SIZE)\n        if split_message_count > 1:\n            remaining_size = len(message_data)\n\n            for i in range(split_message_count):\n                split_size = min(MAX_MESSAGE_SIZE, remaining_size)\n                remaining_size -= MAX_MESSAGE_SIZE\n\n                split_data_offset = i * MAX_MESSAGE_SIZE\n                split_data = message_data[split_data_offset : split_data_offset + split_size]\n\n                packet = InternalPacket(self.sequence_number, reliability, ordering_channel, ordering_index, self.split_message_id, i, split_message_count, split_data)\n                self.sequence_number = (self.sequence_number + 1) % (2**16)\n                self.send_internal_packet_queues[priority].put(packet)\n            self.split_message_id = (self.split_message_id + 1) % (2**32)\n        else:\n            packet = InternalPacket(self.sequence_number, reliability, ordering_channel, ordering_index, payload=message_data)\n            self.sequence_number = (self.sequence_number + 1) % (2**16)\n            self.send_internal_packet_queues[priority].put(packet)\n\n    def generate_packet(self, bs):\n        #with self.send_acks_lock:\n        self.send_acks.encode(bs)\n\n        for internal_packet_queue in self.send_internal_packet_queues:\n            try:\n                internal_packet = internal_packet_queue.get_nowait()\n            except queue.Empty:\n                continue\n\n            # check if fits\n            internal_packet_size = MAX_INTERNAL_PACKET_HEADER_SIZE + len(internal_packet.payload)\n            if bs.write_offset + TO_BITS(internal_packet_size) > TO_BITS(MAX_UDP_PACKET_PAYLOAD_SIZE):\n                internal_packet_queue.put(internal_packet) # put back into queue\n                break\n\n            if bs.write_offset == 0: # if nothing was written\n                bs.write_bit(0) # no acks\n\n            internal_packet.encode(bs)\n\n        self.send_acks.ranges = []\n\n        return bs.len > 0\n\n    def update(self):\n        # process send queue\n        # send all available data(acks + messages in send queue) to the socket\n        while self.generate_packet(self.out_bs):\n            buffer_size = TO_BYTES(self.out_bs.len)\n            buffer = self.out_bs.data[:buffer_size]\n            self.sendto(buffer)\n            self.out_bs.reset()\n\n    def handle_unconnected_packet(self, data):\n        # if this peer is not connected, a message is present at the\n        # start of the packet, instead of acks or internal packet headers\n        try:\n            message = self.decode_message(data)\n        except Exception as e:\n            e.add_note(f'Peer.handle_packet(data={data.hex(\" \")})')\n            raise e\n        self.handle_unconnected_message(message)\n\n    def handle_connected_packet(self, data):\n        bs = Bitstream(data)\n        try:\n            '''\n            Decode acknowlegements for reliable raknet messages we sent in the\n            past. We use these to know the peer receive our reliable message.\n            If we do not receive an acknowlegement we need to send the message\n            again. 'self.expected_acks' tracks these.\n            '''\n            # decode acknowledgments in this packet\n            acks = Acknowledgments.decode(bs)\n\n            # remove these acknowledgments from 'expected_acks'\n            self.expected_acks.remove(acks.ranges)\n            #todo reliable send list; resend\n\n            # decode raknet messages\n            # do not decode leftover bits(<16; not necessarily a bad packet)\n            while bs.unread_bits_count() > 16:\n                packet = InternalPacket.decode(bs)\n                # if we didn't have GIl I guess I'd be beneficial to push the packet\n                # into a queue and process it on another thread potentially in\n                # parallel; but because we use asyncio I guess I won't matter if we\n                # just handle it here\n\n                if packet.reliability.reliable():\n                    #with self.send_acks_lock:\n                    # add message to acknowlegements queue so we can later tell the peer we received this [reliable] message\n                    self.send_acks.add(packet.sequence_number)\n\n                if packet.reliability.sequenced():\n                    expected_index = self.sequenced_packet_read_index[packet.ordering_channel]\n                    if packet.ordering_index < expected_index:\n                        # ignore old sequenced packet\n                        continue\n                    else:\n                        # update expected index\n                        self.sequenced_packet_read_index[packet.ordering_channel] = (packet.ordering_index + 1) % (2**16)\n\n                if packet.split_id is not None:\n                    now = time.time()\n                    packet.time = now\n                    self.split_packets.append(packet)\n\n                    index_sum = 0\n                    count = 0\n                    for p in self.split_packets[:]:\n                        # remove split packets older than 10s\n                        if now - p.time > 10 * 1000:\n                            self.split_packets.remove(p)\n                            continue\n\n                        # find related split packets\n                        if p.split_id == packet.split_id:\n                            index_sum += p.split_index\n                            count += 1\n\n                    # check if this was the last part of a split packet\n                    if count == packet.split_count and index_sum == sum(range(count)):\n                        parts = [None] * count\n\n                        # remove split packets from list\n                        for p in self.split_packets[:]:\n                            if p.split_id == packet.split_id:\n                                parts[p.split_index] = p\n                                self.split_packets.remove(p)\n\n                        payload = bytearray()\n                        for part in parts:\n                            payload += part.payload\n\n                        # make internal packet to represent the assembled split messages\n                        packet.split_id = packet.split_count = packet.split_index = None\n                        packet.payload = payload\n                        # assemble whole packet and handle it\n                    else: # could not assemble whole packet from split packets; do not handle it yet\n                        continue\n                else: # internal packet contains a whole message; handle it\n                    pass\n\n                if packet.reliability.ordered():\n                    expected_index = self.ordered_packet_read_index[packet.ordering_channel]\n                    if packet.ordering_index == expected_index:\n                        self.ordered_packet_read_index[packet.ordering_channel] = (self.ordered_packet_read_index[packet.ordering_channel] + 1) % (2**16)\n\n                        # handle expected ordered packet\n                        message = self.decode_message(packet.payload)\n                        self.handle_connected_message(message, packet)\n\n                        # handle all adjacent sucessors\n                        while True:\n                            expected_index = self.ordered_packet_read_index[packet.ordering_channel]\n                            try:\n                                p = next(p for p in self.ordering_list[packet.ordering_channel] if p.ordering_index == expected_index)\n                                message = self.decode_message(p.payload)\n                                self.handle_connected_message(message, p)\n                                self.ordering_list[packet.ordering_channel].remove(p)\n                                self.ordered_packet_read_index[packet.ordering_channel] = (self.ordered_packet_read_index[packet.ordering_channel] + 1) % (2**16)\n                            except StopIteration: # no more adjacent sucessors\n                                break\n                        continue\n\n                        #0 1 2   4 5 6  3\n                    else: # packet out of order\n                        if packet.ordering_index < expected_index: # bad packet\n                            continue\n                        # save to handle in the future\n                        self.ordering_list[packet.ordering_channel].append(packet)\n                        continue\n\n                message = self.decode_message(packet.payload)\n                self.handle_connected_message(message, packet)\n        except Exception as e: # bad packet\n            e.add_note(f'Peer.handle_packet(data={data.hex(\" \")})')\n            log(traceback.format_exc())\n\n    def handle_packet(self, data):\n        if self.connected:\n            self.handle_connected_packet(data)\n        else:\n            self.handle_unconnected_packet(data)\n\n    def handle_unconnected_message(self, message):\n        if message.id == MSG.OPEN_CONNECTION_REPLY:\n            self.connected = True\n        for callback in self.unconnected_message_callbacks:\n            if callback(message, self) is True:\n                return\n\n    def handle_connected_message(self, message, internal_packet):\n        for callback in self.connected_message_callbacks:\n            if callback(message, internal_packet, self) is True:\n                return\n        if message.id == MSG.INTERNAL_PING:\n            ping = message\n            self.push_message(ConnectedPong(ping.time, get_time()))\n\n    def send_unconnected_message(self, message):\n        if message.id == MSG.OPEN_CONNECTION_REPLY:\n            self.connected = True\n        self.sendto(self.encode_message(message))", ""]}
{"filename": "sa/sa/samp/bitstream.py", "chunked_list": ["import struct\nfrom sa import Vec2, Vec3, Quat\nfrom .common import SAMP_ENCODING\n\ndef TO_BYTES(bit_count): return (bit_count + 7) // 8\ndef TO_BITS(byte_count): return byte_count * 8\ndef DIV_INT_CEIL(a, b): return (a - 1) // b + 1\n\n# copy n bits from i(at offset io) to o(at offset oo)\n# i: input buffer", "# copy n bits from i(at offset io) to o(at offset oo)\n# i: input buffer\n# o: output buffer (bytearray)\n# n: number of bits to copy\n# io: input offset in bits\n# oo: output offset in bits\ndef copy_bits(i, o, n, io, oo):\n    # determine helper variables\n    ibi = io // 8 # index(in bytes) in input of first byte read from\n    obi = oo // 8 # index(in bytes) in output first byte written to\n\n    # determine how many bytes will be written to in o\n    # n      pattern  write_byte_count\n    # 0      P0       0        =   0\n    # 1      P1       1        =   1 + 0\n    # 2-8    P2       1 or 2   =   1 + 0 + (0 or 1)\n    # 9      P1       2        =   1 + 1\n    # 10-16  P2       2 or 3   =   1 + 1 + (0 or 1)\n    # 17     P1       3        =   1 + 2\n    # 18-24  P2       3 or 4   =   1 + 2 + (0 or 1)\n    # 25     P1       4        =   1 + 3\n    #\n    # 3 patterns:\n    # PATTERN 0(P0) n = 0     -> write_byte_count = 0\n    # PATTERN 1(P1) n % 8 = 1 -> write_byte_count = 1 + ((n-1) // 8)\n    # PATTERN 2(P2) else      -> write_byte_count = 1 + ((n-2) // 8) + (0 if (((oo%8)+((n-2)%8)+2)<=8) else 1)\n    if n == 0:       write_byte_count = 0\n    elif n % 8 == 1: write_byte_count = 1 + ((n-1) // 8)\n    else:            write_byte_count = 1 + ((n-2) // 8) + (0 if (((oo % 8)+((n-2) % 8)+2)<=8) else 1)\n\n    k = 0\n    bits_written = 0\n    bits_just_written = 0\n    #print(f'write_byte_count={write_byte_count} ibi={ibi} obi={obi}')\n\n    # iterate each byte written to in output and modify it\n    for j in range(write_byte_count):\n        #calculate some helper variables; determine if input bits are in one or two bytes\n        if j == 0:\n            obo = oo % 8\n            if obo + n < 8:\n                obr = 8 - obo - n\n            else:\n                obr = 0\n            bits_just_written = 8 - obo - obr\n\n            ibo = io % 8\n        else:\n            ibo = (ibo + bits_just_written) % 8\n\n            obo = 0\n            if j != write_byte_count - 1:\n                obr = 0\n                bits_just_written = 8\n            else:\n                obr = 8 - (n - bits_written)\n                bits_just_written = n - bits_written\n\n        if ibo + bits_just_written <= 8:\n            # bits come from ONE byte in input\n            ibr = 8 - ibo - bits_just_written\n            input_one_byte = True # 1\n        else:\n            # bits come from TWO byte in input\n            ibr = 16 - ibo - bits_just_written\n            input_one_byte = False # 2\n\n        bits_written += bits_just_written\n\n        # calculate input bits\n        if input_one_byte:\n            byte = (i[ibi + k] >> ibr) & (0xff >> (ibo+ibr))\n        else:\n            bit_count = 16 - ibo - ibr\n            hi_bit_count = 8 - ibo\n            lo_bit_count = bit_count - hi_bit_count\n            hi = (i[ibi + k] & (0xff >> ibo))\n            lo = i[ibi + k + 1] >> ibr\n            byte = (hi << lo_bit_count) | lo\n        if ibo + bits_just_written >= 8:\n            k += 1\n\n        # clear bits\n        clear_mask = ((0xff >> (obo + obr)) << obr) & 0xff\n        o[obi + j] &= ~clear_mask\n\n        # or bits\n        o[obi + j] |= (byte << obr)", "\nclass Bitstream:\n    def __init__(self, data=None, data_len_in_bits=0, capacity=0):\n        maximum_data_len_in_bits = len(data) * 8 if data else 0\n        if data_len_in_bits == 0:\n            self.len = maximum_data_len_in_bits\n        else:\n            if data_len_in_bits > maximum_data_len_in_bits:\n                raise ValueError('bad data_len_in_bits')\n            self.len = data_len_in_bits\n        self.data = data if data else bytearray(max(capacity, TO_BYTES(self.len)))\n        self.read_offset = 0 # read offset in bits\n        self.write_offset = 0 # write offset in bits\n\n    def to_bytes(self):\n        return self.data[:TO_BYTES(self.len)]\n\n    def reserve(self, size_in_bytes):\n        if len(self.data) >= size_in_bytes:\n            return\n        self.data += bytearray(size_in_bytes - len(self.data))\n\n    def empty(self):\n        return self.len == 0\n\n    def capacity(self):\n        return len(self.data)\n\n    def skip_bits(self, bit_count):\n        self.read_offset += bit_count\n\n    def skip_bytes(self, byte_count):\n        self.read_offset += byte_count * 8\n\n    def get_read(self):\n        return self.read_offset\n\n    def set_read(self, offset):\n        self.read_offset = offset\n\n    def get_write(self):\n        return self.write_offset\n\n    def set_write(self, offset):\n        self.write_offset = offset\n\n    def align_read_to_byte_boundary(self):\n        # if not aligned to byte boundary\n        if self.read_offset % 8 != 0:\n            # add the number of bits remaining to be aligned\n            self.read_offset += 8 - (self.read_offset % 8)\n\n    def align_write_to_byte_boundary(self):\n        # if not aligned to byte boundary\n        if self.write_offset % 8 != 0:\n            # add the number of bits remaining to be aligned\n            self.write_offset += 8 - (self.write_offset % 8)\n\n    def reset(self):\n        self.read_offset = 0\n        self.write_offset = 0\n        self.len = 0\n\n    def unread_bits_count(self):\n        return self.len - self.read_offset\n\n    def read_bit(self):\n        bit = (self.data[self.read_offset // 8] >> (7 - self.read_offset % 8)) & 1\n        self.read_offset += 1\n        return bit\n\n    # o: bytearray that receives the data\n    # n: number of bits to read from the Bitstream\n    # oo(in bits) output offset in the dst bytearray to write the data to\n    def read_bits(self, o, n, oo=0):\n        copy_bits(self.data, o, n, self.read_offset, oo)\n        self.read_offset += n\n\n    def read_bits_num(self, n):\n        num = 0\n        for i in range(n):\n            num += self.read_bit() << (n - 1 - i)\n        return num\n\n    def read_aligned(self, o, byte_count):\n        bit_count = byte_count * 8\n        self.align_read_to_byte_boundary()\n        for j in range(byte_count):\n            o[j] = self.data[(self.read_offset // 8) + j]\n        self.read_offset += bit_count\n\n    def read_u8(self):\n        return struct.unpack('B', self.read_buffer(8))[0]\n\n    def read_i8(self):\n        return struct.unpack('b', self.read_buffer(8))[0]\n\n    def read_u16(self):\n        return struct.unpack('H', self.read_buffer(16))[0]\n\n    def read_i16(self):\n        return struct.unpack('h', self.read_buffer(16))[0]\n\n    def read_u32(self):\n        return struct.unpack('I', self.read_buffer(32))[0]\n\n    def read_i32(self):\n        return struct.unpack('i', self.read_buffer(32))[0]\n\n    def read_u64(self):\n        return struct.unpack('Q', self.read_buffer(64))[0]\n\n    def read_i64(self):\n        return struct.unpack('q', self.read_buffer(64))[0]\n\n    def read_float(self):\n        return struct.unpack('f', self.read_buffer(32))[0]\n\n    # 00 00 00 20\n    # 1 1 1 + bin(20h)\n    # o: bytearray that receives the data\n    def read_compressed(self, o, byte_count):\n        one_count = 0\n        for i in range(byte_count):\n            if one_count == byte_count - 1:\n                break\n            if self.read_bit() == 1:\n                one_count += 1\n            else: break\n        for i in range(one_count): # fill zeros\n            o[byte_count - one_count + i] = 0x00\n        if one_count < byte_count - 1:\n            self.read_bits(o, (byte_count - one_count) * 8)\n        else:\n            bits_to_read = 4 if self.read_bit() else 8\n            self.read_bits(o, bits_to_read, bits_to_read % 8)\n\n    def read_compressed_u16(self):\n        b = bytearray(2)\n        self.read_compressed(b, 2)\n        return struct.unpack('H', b)[0]\n\n    def read_compressed_u32(self):\n        b = bytearray(4)\n        self.read_compressed(b, 4)\n        return struct.unpack('I', b)[0]\n\n    # return [-1, +1]\n    def read_compressed_float(self):\n        return (self.read_u16() / 32767.5) - 1.0\n\n    # n: bit count\n    def read_buffer(self, n):\n        buffer = bytearray(TO_BYTES(n))\n        self.read_bits(buffer, n)\n        return buffer\n\n    def read_dynamic_buf8(self):\n        return self.read_buffer(TO_BITS(self.read_u8()))\n\n    def read_dynamic_buf16(self):\n        return self.read_buffer(TO_BITS(self.read_u16()))\n\n    def read_dynamic_buf32(self):\n        return self.read_buffer(TO_BITS(self.read_u32()))\n\n    def read_dynamic_str8(self):\n        return self.read_dynamic_buf8().decode(SAMP_ENCODING)\n\n    def read_dynamic_str16(self):\n        return self.read_dynamic_buf16().decode(SAMP_ENCODING)\n\n    def read_dynamic_str32(self):\n        return self.read_dynamic_buf32().decode(SAMP_ENCODING)\n\n    def read_huffman_buffer(self, root_node):\n        output = bytearray()\n        node = root_node\n        bit_count = self.read_compressed_u16()\n        for _ in range(bit_count):\n            node = node.left if (self.read_bit() == 0) else node.right\n            if node.left is None and node.right is None:\n                output += bytearray([node.value])\n                node = root_node\n        return output\n\n    def read_vec2(self):\n        x = self.read_float()\n        y = self.read_float()\n        return Vec2(x, y)\n\n    def read_vec3(self):\n        x = self.read_float()\n        y = self.read_float()\n        z = self.read_float()\n        return Vec3(x, y, z)\n\n    def read_compressed_vec3(self):\n        length = self.read_float()\n        if length > 0.00001:\n            x = self.read_compressed_float()\n            y = self.read_compressed_float()\n            z = self.read_compressed_float()\n        else:\n            x = y = z = 0.0\n        return Vec3(x, y, z)\n\n    def read_quat(self):\n        w = self.read_float()\n        x = self.read_float()\n        y = self.read_float()\n        z = self.read_float()\n        return Quat(w, x, y, z)\n\n    def read_norm_quat(self):\n        w_sign = -1 if self.read_bit() else 1\n        x_sign = -1 if self.read_bit() else 1\n        y_sign = -1 if self.read_bit() else 1\n        z_sign = -1 if self.read_bit() else 1\n        x = x_sign * (self.read_u16() / 2**16)\n        y = y_sign * (self.read_u16() / 2**16)\n        z = z_sign * (self.read_u16() / 2**16)\n        w = w_sign * min(1 - x*x - y*y - z*z, 0)**0.5\n        return Quat(w, x, y, z)\n\n    # WRITE METHODS\n\n    # n: size of bit sequence to be written\n    def check_resize(self, n):\n        if n + self.len > TO_BITS(len(self.data)): # resize buffer\n            self.data = self.data + bytearray(max(TO_BYTES(n*2), len(self.data)))\n\n    def update_len(self):\n        self.len = self.write_offset if (self.write_offset > self.len) else self.len\n\n    def write_bit(self, bit):\n        self.check_resize(1)\n        if bit == 1: # set bit\n            self.data[self.write_offset // 8] |= 1 << (7 - (self.write_offset % 8))\n        else: # clear bit\n            self.data[self.write_offset // 8] &= ~(1 << (7 - (self.write_offset % 8)))\n        self.write_offset += 1\n        self.update_len()\n\n    def write_bits(self, i, n, io=0):\n        self.check_resize(n)\n        copy_bits(i, self.data, n, io, self.write_offset)\n        self.write_offset += n\n        self.update_len()\n\n    def write_bits_num(self, num, n):\n        for i in range(n):\n            self.write_bit(int(not not (num & (1 << (n - 1 - i)))))\n\n    def write_aligned(self, buffer):\n        self.check_resize(len(buffer))\n        self.align_write_to_byte_boundary()\n        for i in range(len(buffer)):\n            self.data[self.write_offset // 8 + i] = buffer[i]\n        self.write_offset += len(buffer) * 8\n        self.update_len()\n\n    def write_u8(self, n):\n        self.write_bits(struct.pack('B', n), 8)\n\n    def write_i8(self, n):\n        self.write_bits(struct.pack('b', n), 8)\n\n    def write_u16(self, n):\n        self.write_bits(struct.pack('H', n), 16)\n\n    def write_i16(self, n):\n        self.write_bits(struct.pack('h', n), 16)\n\n    def write_u32(self, n):\n        self.write_bits(struct.pack('I', n), 32)\n\n    def write_i32(self, n):\n        self.write_bits(struct.pack('i', n), 32)\n\n    def write_u64(self, n):\n        self.write_bits(struct.pack('Q', n), 32)\n\n    def write_i64(self, n):\n        self.write_bits(struct.pack('q', n), 32)\n\n    def write_float(self, float):\n        self.write_bits(struct.pack('f', float), 32)\n\n    def write_compressed(self, b):\n        i = len(b) - 1\n        while i > 0:\n            if b[i] == 0x00:\n                self.write_bit(1)\n            else:\n                self.write_bit(0)\n                self.write_bits(b, (i + 1) * 8)\n                return\n            i -= 1\n\n        bit = int((b[i] & 0xF0) == 0x00)\n        self.write_bit(bit)\n        sz = 4 if bit else 8\n        self.write_bits(b[i:i+1], sz, sz % 8)\n\n    def write_compressed_u16(self, value):\n        self.write_compressed(struct.pack('H', value))\n\n    def write_compressed_u32(self, value):\n        self.write_compressed(struct.pack('I', value))\n\n    # value = [-1, +1]\n    def write_compressed_float(self, value):\n        if value < -1.0: value = -1.0\n        elif value > 1.0: value = 1.0\n        self.write_u16(int((value + 1.0) * 32767.5))\n\n    def write_buffer(self, buffer, n):\n        self.write_bits(buffer, n)\n\n    def write_dynamic_buf8(self, buffer):\n        self.write_u8(len(buffer))\n        self.write_buffer(buffer, TO_BITS(len(buffer)))\n\n    def write_dynamic_buf16(self, buffer):\n        self.write_u16(len(buffer))\n        self.write_buffer(buffer, TO_BITS(len(buffer)))\n\n    def write_dynamic_buf32(self, buffer):\n        self.write_u32(len(buffer))\n        self.write_buffer(buffer, TO_BITS(len(buffer)))\n    \n    def write_dynamic_str8(self, s):\n        self.write_dynamic_buf8(s.encode(SAMP_ENCODING))\n\n    def write_dynamic_str16(self, s):\n        self.write_dynamic_buf16(s.encode(SAMP_ENCODING))\n\n    def write_dynamic_str32(self, s):\n        self.write_dynamic_buf32(s.encode(SAMP_ENCODING))\n\n    def write_huffman_buffer(self, buffer, encoding_table):\n        bit_count = sum(encoding_table[byte].len for byte in buffer)\n        self.write_compressed_u16(bit_count)\n        for byte in buffer:\n            self.write_bits(encoding_table[byte].data, encoding_table[byte].len)\n\n    def write_vec2(self, v):\n        self.write_float(v.x)\n        self.write_float(v.y)\n\n    def write_vec3(self, v):\n        self.write_float(v.x)\n        self.write_float(v.y)\n        self.write_float(v.z)\n\n    def write_compressed_vec3(self, v):\n        length = (v.x**2 + v.y**2 + v.z**2)**0.5 # theorem of pitagoras\n        self.write_float(length)\n        if length > 0.00001:\n            self.write_compressed_float(v.x / length)\n            self.write_compressed_float(v.y / length)\n            self.write_compressed_float(v.z / length)\n\n    def write_quat(self, q):\n        self.write_float(q.w)\n        self.write_float(q.x)\n        self.write_float(q.y)\n        self.write_float(q.z)\n\n    def write_norm_quat(self, q):\n        self.write_bit(q.w < 0)\n        self.write_bit(q.x < 0)\n        self.write_bit(q.y < 0)\n        self.write_bit(q.z < 0)\n        self.write_u16(int(abs(q.x) * 2**16))\n        self.write_u16(int(abs(q.y) * 2**16))\n        self.write_u16(int(abs(q.z) * 2**16))", ""]}
{"filename": "sa/sa/samp/gpci.py", "chunked_list": ["import random\n\n# gpci is a client serial(not very unique though)\n\n# length must be in the interval [4,48] and be odd, otherwise the server may\n# reject it; 40 is a good value\ndef generate_random_gpci(length=42, factor=1001):\n    '''\n    The gcpi is an uppercase hex string(0-9 + A-Z).\n    It is the representation(in little endian byte order) of a big number that\n    is a multiple of 1001(default samp constant). So given the constraints the\n    number has 2 to 24 bytes.\n    '''\n\n    # calculate the size of the number in bytes\n    byte_count = length // 2\n\n    # calculate how many integers exist with byte_count bytes(excluding the ones with fewer bytes)\n    top_number = 2**(byte_count*8) # how many integers exist with byte_count bytes(including the ones with fewer bytes)\n    base_number = 2**((byte_count-1)*8) # how many integers exist with (byte_count-1) bytes(including the ones with fewer bytes)\n    possibilities_count = top_number - base_number\n\n    # calculates how many of these ingetegers are multiples of factor\n    possibilities_count //= factor\n\n    # choose one of these factors\n    nth_multiple_index = random.randint(0, possibilities_count)\n\n    first_multiple = (base_number + factor)\n    first_multiple -= first_multiple % factor\n\n    # calculate the gcpi number\n    number = first_multiple + factor * nth_multiple_index\n\n    return f'{number:X}'", "\n# returns True if gpci is valid, False otherwise\n# gpci: string containing a hexadecimal representation of a number\ndef validate_gpci(gpci, factor=1001):\n    return int(gpci, 16) % factor == 0\n"]}
{"filename": "sa/sa/samp/encryption.py", "chunked_list": ["'''\nThe client encrypts datagrams before sending them to the server\nThe server decrypts datagrams received from the client before processing them\n\nNote: the server does not encrypt datagrams\n'''\n\nencryption_table = bytes.fromhex('''\n27 69 FD 87 60 7D 83 02 F2 3F 71 99 A3 7C 1B 9D\n76 30 23 25 C5 82 9B EB 1E FA 46 4F 98 C9 37 88", "27 69 FD 87 60 7D 83 02 F2 3F 71 99 A3 7C 1B 9D\n76 30 23 25 C5 82 9B EB 1E FA 46 4F 98 C9 37 88\n18 A2 68 D6 D7 22 D1 74 7A 79 2E D2 6D 48 0F B1\n62 97 BC 8B 59 7F 29 B6 B9 61 BE C8 C1 C6 40 EF\n11 6A A5 C7 3A F4 4C 13 6C 2B 1C 54 56 55 53 A8\nDC 9C 9A 16 DD B0 F5 2D FF DE 8A 90 FC 95 EC 31\n85 C2 01 06 DB 28 D8 EA A0 DA 10 0E F0 2A 6B 21\nF1 86 FB 65 E1 6F F6 26 33 39 AE BF D4 E4 E9 44\n75 3D 63 BD C0 7B 9E A6 5C 1F B2 A4 C4 8D B3 FE\n8F 19 8C 4D 5E 34 CC F9 B5 F3 F8 A1 50 04 93 73", "75 3D 63 BD C0 7B 9E A6 5C 1F B2 A4 C4 8D B3 FE\n8F 19 8C 4D 5E 34 CC F9 B5 F3 F8 A1 50 04 93 73\nE0 BA CB 45 35 1A 49 47 6E 2F 51 12 E2 4A 72 05\n66 70 B8 CD 00 E5 BB 24 58 EE B4 80 81 36 A9 67\n5A 4B E8 CA CF 9F E3 AC AA 14 5B 5F 0A 3B 77 92\n09 15 4E 94 AD 17 64 52 D3 38 43 0D 0C 07 3C 1D\nAF ED E7 08 B7 03 E6 8E AB 91 89 3E 2C 96 42 D9\n78 DF D0 57 5D 84 41 7E CE F7 32 C3 D5 20 0B A7\n''')\n\ndef encrypt_buffer(buffer, server_port):\n    encryption_byte = (server_port & 0xff) ^ 0xcc\n\n    buffer = bytearray(buffer) # make sure it is mutable\n\n    # calculate checksum\n    checksum = 0\n    for byte in buffer:\n        checksum ^= byte & 0xaa\n\n    # encrypt buffer\n    for i in range(len(buffer)):\n        buffer[i] = encryption_table[buffer[i]]\n        if i % 2 == 1: # if i is odd\n            buffer[i] ^= encryption_byte\n\n    return checksum.to_bytes(1, 'little') + buffer", "''')\n\ndef encrypt_buffer(buffer, server_port):\n    encryption_byte = (server_port & 0xff) ^ 0xcc\n\n    buffer = bytearray(buffer) # make sure it is mutable\n\n    # calculate checksum\n    checksum = 0\n    for byte in buffer:\n        checksum ^= byte & 0xaa\n\n    # encrypt buffer\n    for i in range(len(buffer)):\n        buffer[i] = encryption_table[buffer[i]]\n        if i % 2 == 1: # if i is odd\n            buffer[i] ^= encryption_byte\n\n    return checksum.to_bytes(1, 'little') + buffer", "\ndecryption_table = bytes.fromhex('''\nB4 62 07 E5 9D AF 63 DD E3 D0 CC FE DC DB 6B 2E\n6A 40 AB 47 C9 D1 53 D5 20 91 A5 0E 4A DF 18 89\nFD 6F 25 12 B7 13 77 00 65 36 6D 49 EC 57 2A A9\n11 5F FA 78 95 A4 BD 1E D9 79 44 CD DE 81 EB 09\n3E F6 EE DA 7F A3 1A A7 2D A6 AD C1 46 93 D2 1B\n9C AA D7 4E 4B 4D 4C F3 B8 34 C0 CA 88 F4 94 CB\n04 39 30 82 D6 73 B0 BF 22 01 41 6E 48 2C A8 75\nB1 0A AE 9F 27 80 10 CE F0 29 28 85 0D 05 F7 35", "04 39 30 82 D6 73 B0 BF 22 01 41 6E 48 2C A8 75\nB1 0A AE 9F 27 80 10 CE F0 29 28 85 0D 05 F7 35\nBB BC 15 06 F5 60 71 03 1F EA 5A 33 92 8D E7 90\n5B E9 CF 9E D3 5D ED 31 1C 0B 52 16 51 0F 86 C5\n68 9B 21 0C 8B 42 87 FF 4F BE C8 E8 C7 D4 7A E0\n55 2F 8A 8E BA 98 37 E4 B2 38 A1 B6 32 83 3A 7B\n84 3C 61 FB 8C 14 3D 43 3B 1D C3 A2 96 B3 F8 C4\nF2 26 2B D8 7C FC 23 24 66 EF 69 64 50 54 59 F1\nA0 74 AC C6 7D B5 E6 E2 C2 7E 67 17 5E E1 B9 3F\n6C 70 08 99 45 56 76 F9 9A 97 19 72 5C 02 8F 58", "A0 74 AC C6 7D B5 E6 E2 C2 7E 67 17 5E E1 B9 3F\n6C 70 08 99 45 56 76 F9 9A 97 19 72 5C 02 8F 58\n''')\n\ndef decrypt_buffer(buffer, server_port):\n    decryption_byte = (server_port & 0xff) ^ 0xcc\n\n    packet_checksum = buffer[0] # save checksum to compare later\n\n    buffer = bytearray(buffer[1:]) # make sure it is mutable\n\n    # decrypt buffer\n    for i in range(len(buffer)):\n        if i % 2 == 1: # if i is odd\n            buffer[i] ^= decryption_byte\n        buffer[i] = decryption_table[buffer[i]]\n\n    # calculate checksum\n    #checksum = 0\n    #for byte in buffer:\n    #    checksum ^= byte & 0xaa\n    #if checksum != packet_checksum:\n    #    print('bad checksum')\n\n    return buffer", ""]}
{"filename": "sa/sa/samp/auth_keys.py", "chunked_list": ["auth_keys = {\nb'6C407EC29DE59E2'  : b'D9412F235647BAA582089C6F66817F8B8811C057',\nb'277C2AD934406F33' : b'132770E4744F6E78F2CBB4D3F3638EC05D7EA79D',\nb'3A968DE22423B39'  : b'D1080D41AD614649282887E4001C93AAEDBCA570',\nb'479E294F68A7AB7'  : b'D2A4C61BB6D9FAB47FF4732B70497FAD91BB7FC2',\nb'583C3D05A2A3CCA'  : b'CD8856BDA216335F3D275587E57D75E62FC8ED3A',\nb'70A2762B77CD22CC' : b'B028F73A7B37AB5EF9B990ECA397C78841B7A086',\nb'4EBF34953B6E1779' : b'45AB65DF7D64D902A3B130CEA3F9529AC4F260B6',\nb'29B6F33709B1150'  : b'180ED6A653ECBB56A5DC9DD5E4FD862FEE792990',\nb'58E30DCFA7343C'   : b'4E50D5C757887821522338185A32DC1A2B263D5E',", "b'29B6F33709B1150'  : b'180ED6A653ECBB56A5DC9DD5E4FD862FEE792990',\nb'58E30DCFA7343C'   : b'4E50D5C757887821522338185A32DC1A2B263D5E',\nb'6F2B3B214EFD2674' : b'6C3F004F320AE3B70FA8BAB7EEB8D66A176497F6',\nb'347D638A5EB52CA0' : b'50E366B9D4EF5EFDBFD7BC128FE9F339B19CB873',\nb'6CF77623265513D'  : b'EBBD29EFED75C5C5D2816F86B737FC4F5021A231',\nb'664361377D3A1B42' : b'B9B72B3FA9C877AF292087F765112F859B72C64D',\nb'49342E5C4471804'  : b'EC664F610315BD0B049A6A42B7003BBAFF99CAF1',\nb'AFCCAF2B1C3C57'   : b'6E87E67009B19014A2714DB2E174474B3A5C303F',\nb'7E9F50617E9B60F6' : b'90D62A04AC0B96827FB0EA67514D3B9A1E3BF91F',\nb'1AA7B7342075E25'  : b'BF43CD93D89C5285E27B84FE8EFB4E1AC501A3B1',", "b'7E9F50617E9B60F6' : b'90D62A04AC0B96827FB0EA67514D3B9A1E3BF91F',\nb'1AA7B7342075E25'  : b'BF43CD93D89C5285E27B84FE8EFB4E1AC501A3B1',\nb'471A23BD25EA94'   : b'A17C2F9CE17F09BA78D846F8C8CFC7F7079C23B2',\nb'47A9A3573E92187'  : b'AC4E454B5D51815B18867CA04560EB5AD8838D7E',\nb'162A776E4E115434' : b'E188A468F6A8EE07441C4A1AC63FB29F8D53951B',\nb'4148515F1974A6C'  : b'E20C4BEB9A4166188C49D8AC7715E759902AF87B',\nb'23791E662438167E' : b'DAC1332B09E674A4A619D5A1A1855B17A4D97F8D',\nb'631298D109F6059'  : b'AEF468EE84F95E064042E7B6D0DCE0608677401A',\nb'5563C0B31DC4BF0'  : b'99C56BD48BCD93D555D708A1D78E3F4F259B4A79',\nb'46F3100E2B265EE3' : b'D8A6A2017ED4EC0717AAE74CF6409D6814E13052',", "b'5563C0B31DC4BF0'  : b'99C56BD48BCD93D555D708A1D78E3F4F259B4A79',\nb'46F3100E2B265EE3' : b'D8A6A2017ED4EC0717AAE74CF6409D6814E13052',\nb'5B3060B750A695B'  : b'77E63FDEA5EDD8B5ED8563D0F38E0E83CDECE996',\nb'58823B662D053635' : b'A56B5A1E4F8938B7B02E043CD0E02E1AD92E080B',\nb'81F76391352664'   : b'0FDBD2E992763F49120A5B424BDE97D578303FEF',\nb'36B56FCF5B015B90' : b'18CFC66AB764D902910E7A1C6300442CE501CFBF',\nb'7D5B7C5250495603' : b'C6F997E2A56407A82F384DB2BB23041B1252C680',\nb'16C823B4191F29C6' : b'A309F3B06CB2316FEB4A67E1D3953D63F51D00EA',\nb'14C2153854076F07' : b'AD777E54C165C0A09871C37DE42EEFE09B81DFF3',\nb'9DA7435192B51BE'  : b'0D273519B1154DB6FA1DCF4CE2752D0A69D96218',", "b'14C2153854076F07' : b'AD777E54C165C0A09871C37DE42EEFE09B81DFF3',\nb'9DA7435192B51BE'  : b'0D273519B1154DB6FA1DCF4CE2752D0A69D96218',\nb'7B57621711AA6491' : b'E163DBDE328DC9A9F43060C7DF162D157B10400A',\nb'2F7069A619321AF4' : b'DE4DB227F4891DB3B5C0C9ACCC7991AAD3780CFA',\nb'2BBE2F8B1DD12E94' : b'8776CC093D240126E58F125BE7858E259AF8B5FF',\nb'77F0C0F320873F6'  : b'D94EAFF471FE5CC6976909F4DCD77AC2AA765D88',\nb'78C17227522625B'  : b'39E962FC90673235224A76D48C8CA530CC2B9A6C',\nb'772747AE35C352E8' : b'F44374A4DBE562211BA7179F19CC8E1861220218',\nb'27CD12F132C43B03' : b'1E385E9446FB0605BA96D9DB4A603304DFEAF90B',\nb'46C421701E3E6600' : b'AA66E00E75CB893196A84DBC29009BF614C66084',", "b'27CD12F132C43B03' : b'1E385E9446FB0605BA96D9DB4A603304DFEAF90B',\nb'46C421701E3E6600' : b'AA66E00E75CB893196A84DBC29009BF614C66084',\nb'1B76BE366E571FD'  : b'7365966472CDB73AC8D4E42C02838C6FFA5C991F',\nb'78DB3B7CB98140A'  : b'38C0E472DB303430DED2205FAE4596AF08603580',\nb'DEF546C3D36678E'  : b'5BCF5C415256E41CF8BD9F5BE2A42F7AD7996750',\nb'1A6329A852B24CE6' : b'C2AE658442E941A1ADEFA2C96DCA9E1D3B97A23E',\nb'5B921DED436A1B4E' : b'62A24EA43DC2E7FDFE89AAB5F7B587EAD0771DC8',\nb'45B816011BB42A05' : b'FA52DB6492A87A0078ABD837468A4AD7B4B7E6ED',\nb'5D5E603D1FBA74AC' : b'D8E1BF3412E8172CB3710A03F0CAB73E009565DF',\nb'4519354810895EEF' : b'085DC16D7C4A3975337FCA16C30E785CADDFDEFE',", "b'5D5E603D1FBA74AC' : b'D8E1BF3412E8172CB3710A03F0CAB73E009565DF',\nb'4519354810895EEF' : b'085DC16D7C4A3975337FCA16C30E785CADDFDEFE',\nb'5374362547645B68' : b'B126F73BDA26767C36DF0261E10C5556B96C9379',\nb'452BB701B5E79C0'  : b'CA0BC7D627C3B33F1834189D9183F2F19A2D233F',\nb'5F9A9E445282018'  : b'18A1FC58F1A5DFBEFA1281DF46090A7A50E03C48',\nb'177421352773A7'   : b'D85E24B5C5E0F8E9BA5D07A261ECA3F26EE40D48',\nb'FB811ACFC934A4'   : b'2731E85667DF3DF9255EEBEC8FB1D4830939B8EA',\nb'4E14338441A1166'  : b'2E680524E8873363574778D78EFFE8C4D690D7A6',\nb'785E1C24709234CA' : b'940F34C2D41245E4524E1D5434463B5F8AECEE76',\nb'3041144A3113D5'   : b'457B799050C64D09B68E2FDDB2F40BD0F7216A30',", "b'785E1C24709234CA' : b'940F34C2D41245E4524E1D5434463B5F8AECEE76',\nb'3041144A3113D5'   : b'457B799050C64D09B68E2FDDB2F40BD0F7216A30',\nb'5F3B2CE479CF3E9A' : b'F191F014E3204211EBB782445473F6637C277EDC',\nb'8C8680A23AD385E'  : b'D2BC447A6745048E7E91E6A9A573773B406C0EB6',\nb'75A768FCD4F1AFB'  : b'15E28C2087874A7076425385572F92817436F8C3',\nb'4C8D7B02158E982'  : b'89A10043BFA4FBAEC3FB4C4B8B30FC00B51C5EEF',\nb'231A536D72E93624' : b'B8EA6126891D8ED83D8716DAE90D9D297BBF6220',\nb'1B0C37D86C1C7F53' : b'50100256B8B3B827E2932017333B11F87390D3ED',\nb'5FB359AE7EF46824' : b'CFC5A84B3CF3D04D1FDEE82B91972B90A5D8EAEE',\nb'17A5AED69616FF8'  : b'F21D89EB25B1263DE5871A60E9407C7A98D0381D',", "b'5FB359AE7EF46824' : b'CFC5A84B3CF3D04D1FDEE82B91972B90A5D8EAEE',\nb'17A5AED69616FF8'  : b'F21D89EB25B1263DE5871A60E9407C7A98D0381D',\nb'1EB2302948CDD5B'  : b'674AF510B26CB1F8E1835B396945C911CDB0F7F0',\nb'1C1A13D343AC502C' : b'419C59FE61200D6E59F0774C7E4A0B9FEB0D8543',\nb'48FE7EBB71546EFF' : b'A13E3C1959CB65EF9E524BD24F0FDCF8DD11DA1B',\nb'7B1539D4740F43BF' : b'FC4F1E495122C86D1605F2C720D307A4F23DA704',\nb'47A05D37796F7B98' : b'FB508D6CDDAFE62F088ECC07834BA165A6D9484B',\nb'52A0106B14E27E13' : b'AFD221F0E28AB16BF0F3E9570034AB8F949F10FB',\nb'1E461FE428864F83' : b'45841042BC967C22FDAE981407BBB57A7081DD45',\nb'6EABBC9503F72A1'  : b'B0BF1A5B7A3A0586917A84315D210B7DDB652FBC',", "b'1E461FE428864F83' : b'45841042BC967C22FDAE981407BBB57A7081DD45',\nb'6EABBC9503F72A1'  : b'B0BF1A5B7A3A0586917A84315D210B7DDB652FBC',\nb'15C173FB306D73'   : b'B7E04B553D665F0C4F59542491B45B9D2EB47248',\nb'3B8A5525E845572'  : b'FDAD5B7B2C5DC84BE49F07FD03C80EF634EA9C82',\nb'76874C2A50DF6EB'  : b'F8B0FD3504390C79256C984B7BADA1806D94EE3E',\nb'4874101E14D46BA6' : b'87F8E07CE86EBCDD2B98E949F0C3CE79A7258DD7',\nb'53321D13340634C6' : b'D64EC2AF19D96CC95D97CFF37C88463DC555EB1B',\nb'5A051D793952BF0'  : b'152AB05E3464C03EA308DF51B6D4771FAA8E2F8B',\nb'62FF69CD4EF37FAF' : b'0DB9491C3D55DED81E3A3C72E40E88C8919758AE',\nb'CBC716224F32F17'  : b'B8F3114F4DA2779075CBA5574D4B6BDDEEC3CF7D',", "b'62FF69CD4EF37FAF' : b'0DB9491C3D55DED81E3A3C72E40E88C8919758AE',\nb'CBC716224F32F17'  : b'B8F3114F4DA2779075CBA5574D4B6BDDEEC3CF7D',\nb'6C5020627B2358A9' : b'BC293BD1438D6FB4C10D1A5BC778A88B9BD6C99D',\nb'77E670F1B5C7077'  : b'CA08EE157A0B0A775C3FC516762EE4EDBE90A0B3',\nb'3F2B464FF972189'  : b'918A09C3659C45882555011270B8460CE6EC9F92',\nb'3E1156825E7E'     : b'492927CD4E61C8BB6FEF9DF926C1C2D9EC925359',\nb'3FB8750837546576' : b'F9E62B21E68DEF3CA5304096E80A45764A6CBAA6',\nb'43A26388415D3B30' : b'93369612310EB002BFD93634D17B7A0BC929B30D',\nb'C6267157E16170'   : b'7AFAF784571E4BEA4CE07906B62A2D5F2D04C03B',\nb'2D415D4011A64CA4' : b'E60B8A2D516AA68759272E807052FD3862D7B75C',", "b'C6267157E16170'   : b'7AFAF784571E4BEA4CE07906B62A2D5F2D04C03B',\nb'2D415D4011A64CA4' : b'E60B8A2D516AA68759272E807052FD3862D7B75C',\nb'6E4751667CC5CC6'  : b'76679E3836E8EAED90B6F10B121B52FE4F03339B',\nb'45F1793655D5D84'  : b'B8EDB6CC12E29A032A80A5F98D695B182B32556D',\nb'7D056341525519F'  : b'8143B0D90476820C30FBACD470D2C433B229CB84',\nb'4956553B1C4D91'   : b'CA8F2BD50C66A24FDC14506452DE038FC119D40A',\nb'2B1A3B1E1C016572' : b'D4F20851FBB40B1606436C0B9D3B470DCC5743B5',\nb'5E11B221B61721C'  : b'96FD906C1EABF6570C4E43B5C1D31149CDB09C85',\nb'6E8438D92CF9318E' : b'3411A0F24E8F3B93BC5E6533044B8423B86A2CDF',\nb'6FA024E948068E'   : b'C6183E48AADE981C56FE4F73AAE7CA43637B8EBA',", "b'6E8438D92CF9318E' : b'3411A0F24E8F3B93BC5E6533044B8423B86A2CDF',\nb'6FA024E948068E'   : b'C6183E48AADE981C56FE4F73AAE7CA43637B8EBA',\nb'B8E17103A85B93'   : b'21334344D203C35901E4793CB60F55C04FC89058',\nb'1A9629656BAE6CE1' : b'6BA21F9467E0D25D2A940E5B8332367260799462',\nb'595F58E14D307DF6' : b'358D0593F129EF431EDA37C1B93478A39CA49846',\nb'3BAA6F1D2A407E25' : b'1B08562483516AD6B34E38131DC148742685D8AB',\nb'5740395D7EB66081' : b'50132A03C5931C67565600527B145BF736F03238',\nb'7B2930CE22CA2AFC' : b'EFCB215CAF75CCECE4925FBA0192F6F6ACC9F9D6',\nb'471F780C3BE2D0'   : b'E2089098F1CE0AB3729F62AFAE75F29EE5B88624',\nb'574351E72FA82C1E' : b'A5737572A642FDF51B111E04E4E2F48C3336C4AE',", "b'471F780C3BE2D0'   : b'E2089098F1CE0AB3729F62AFAE75F29EE5B88624',\nb'574351E72FA82C1E' : b'A5737572A642FDF51B111E04E4E2F48C3336C4AE',\nb'580E75674D606AD5' : b'92CDAB5A10FAFB4702DB000171DB011451F6C504',\nb'1689630E21792D6'  : b'EBF13AE17C7EAF5903E938B21519C138B6109E28',\nb'60C11F5C27616156' : b'AD3D181D621E4778E4CE285FE5D177A31375F947',\nb'4A7576994D9E4983' : b'2F2E103ECAD7EA2E5EADC0DD12DDD05898C934B4',\nb'2A132DCE1B566A'   : b'7AC50947A514153C84515C96C8B66354B11745C4',\nb'61E345152CBF5418' : b'5CDB078FCFEB311A1B174A9EA47B6BA8875A0CA3',\nb'49812F12764433FF' : b'A3D6F3D6B29810463835A320840D9E8482560BF1',\nb'4B9021C2947209C'  : b'91A4F3384BE48B758F14181BE065B4E523EA20E3',", "b'49812F12764433FF' : b'A3D6F3D6B29810463835A320840D9E8482560BF1',\nb'4B9021C2947209C'  : b'91A4F3384BE48B758F14181BE065B4E523EA20E3',\nb'BAD6473479B7457'  : b'DF1753449635CD25656BCB47933BF05ABDF952C5',\nb'28A23F143DE317AB' : b'334E33CEA02105B5AB9DD4290D20EF1CE2FD7955',\nb'6EDC6EAF1760A86'  : b'7F370CE0F99A3CAA9929A915DAF9175B7EC5437D',\nb'F2043344071CF3'   : b'3958D8F27C3E2CCF23DF30EF9826B8B4AE012345',\nb'2D794A7844D71AF6' : b'7CE44A1AB70E70334A040BB97948F90F7529CA08',\nb'5C752C7D52696FB7' : b'64EAD04A4FD68F0DB9A33F87FC3167C666BCD32C',\nb'58901CF451C93E3'  : b'A24C762722180B42D75D32641BA1F5BD5705498A',\nb'17F16004B845B50'  : b'C460C7370F9630FDC5DCE592E9D4673CBA0FA769',", "b'58901CF451C93E3'  : b'A24C762722180B42D75D32641BA1F5BD5705498A',\nb'17F16004B845B50'  : b'C460C7370F9630FDC5DCE592E9D4673CBA0FA769',\nb'254503D590235E0'  : b'A7BF359223A37F0A3455636EBCF249E92E8A7EE8',\nb'65486C013C1637A7' : b'C026C91160AFA9B715D50328CE3B71C802E59EEA',\nb'789A7FE214D45C50' : b'3F22A66F651B682C24DEC04FE0F4006E8CFD154D',\nb'711607829A339BC'  : b'24035C6EC8AF3CEE8C58F90249C717BFE51D8338',\nb'F5B3564759355ED'  : b'752C905020077D8F524A8616402E12DDCBDE351C',\nb'71486F9070F01423' : b'34C6031CEE4EE12BD62EB2F3472D56CA74E34D0F',\nb'7B3674B948177D44' : b'1AD6B4FCEC9D0D05B4EFEFA11200B4D9892C6895',\nb'6BCD242B74886781' : b'03679F4624B21CF0979722545B783845E3398306',", "b'7B3674B948177D44' : b'1AD6B4FCEC9D0D05B4EFEFA11200B4D9892C6895',\nb'6BCD242B74886781' : b'03679F4624B21CF0979722545B783845E3398306',\nb'3BEC18CC6C3D4137' : b'ADC16DB34679B031D4B5BBEE184B50083BB9B8A0',\nb'44E24C5C5B3A313'  : b'5CFA7F8A5334D8F5AE4867A28A25586AEC4AAF4F',\nb'16E27FFB1B66D7A'  : b'4454AF95AF5B8460D4D5BD1798E2656ED174FB2F',\nb'13B1DEC5E997528'  : b'453B2549AF80225BC7F638DE7276DD0857B8032F',\nb'21A28983EF6317'   : b'35E8537F84FD7C1F0E2D5C3A1B50C39C6FFD34C3',\nb'AC44AD6297B6BA2'  : b'64CBAFE90E809320092A1FB98E1A14572C50CFEF',\nb'5C5A5D6956D6EA'   : b'73FA1B06A7159BF92AFB50FA455A0B82A28FF548',\nb'5A8B55CA467A6479' : b'1A1C51732728D88F55C8AC2755E16B2C72081383',", "b'5C5A5D6956D6EA'   : b'73FA1B06A7159BF92AFB50FA455A0B82A28FF548',\nb'5A8B55CA467A6479' : b'1A1C51732728D88F55C8AC2755E16B2C72081383',\nb'5C5B12296FF37C25' : b'25DFE45F13CEC422AF94A4F8C4D5933CFBD855B9',\nb'23DA76AE1E762E37' : b'C92B05E20B8728F1C9A337920EE73A9810CBAF2E',\nb'69B10042ABD28CD'  : b'FD7E61C06C9036F8845E982C8560964B8A143E87',\nb'7A683F18712387D'  : b'53BB915F5ECEED59F0C92AB903135E9FDF60BF6C',\nb'5A34521E51A9723B' : b'F80C175C517ADDAF3C70E4F3F884026081A0B0EC',\nb'77512ED66132347D' : b'F835ADB252311789710633D89D13AEF8742D342A',\nb'4AE4720D7FAF439D' : b'63D38A575B69E435526A49EB0B2BF5376A903A7C',\nb'5B952866478357E'  : b'8FD27820677C48DF887A94BE76147ADACFE32513',", "b'4AE4720D7FAF439D' : b'63D38A575B69E435526A49EB0B2BF5376A903A7C',\nb'5B952866478357E'  : b'8FD27820677C48DF887A94BE76147ADACFE32513',\nb'2B8B45A56CC2072'  : b'259F8C16BA6468B3BE6C4456E5ECAE85574CE4FB',\nb'4297357E4CF315B'  : b'19B390F6FE5CB0192C289F53706C1542FB0A0D39',\nb'28AF45044682D11'  : b'E3926F6FFC7DDF8AEE8C6F41FFE706302A1470CC',\nb'649F1B854B35104'  : b'6E0893E674F14528FABB970FCF592E3F94C3DCFA',\nb'52FB13FE62534723' : b'0A392FB24304303AE7DF4C83BAAADBFAF9E394BC',\nb'69584018413E40FC' : b'C341AC8EAE4E3433FA4F63F7A4521FBEC4E33BB0',\nb'39BB41AC48494E24' : b'334A90A161C6774DACA6C7C5E2D920D85D236056',\nb'4A525D8641CB11D9' : b'6DAF4BB4110666179DD2278C364D544955CF8F67',", "b'39BB41AC48494E24' : b'334A90A161C6774DACA6C7C5E2D920D85D236056',\nb'4A525D8641CB11D9' : b'6DAF4BB4110666179DD2278C364D544955CF8F67',\nb'15622B6917723BE6' : b'2B25F4B09D664BD72971367601F92109D3B6C7AB',\nb'458175471D958C7'  : b'0C98F3E92244EA1C40E537D706AE3956BAAA76DE',\nb'2052804765C6D0E'  : b'E15406041F2A256A2209B47539E3FE5A5793CC39',\nb'5FBC7EBA172B6005' : b'2DE29755238B3769C6565C379652B98C1BE612B4',\nb'49DE443E299D7995' : b'FCC9B7CE8F1249F82BF6E98A48EED5393110090F',\nb'773F572436C77766' : b'1BFA8AD640401259216B04A43F160A6810866163',\nb'3FC94F4E3A4E7D48' : b'2393D160295BD5A03F42CA1D1932C0D8DE940FC9',\nb'662A6AB2437964D2' : b'144A22F14F2EA79A588D22D78B3F1E462D152896',", "b'3FC94F4E3A4E7D48' : b'2393D160295BD5A03F42CA1D1932C0D8DE940FC9',\nb'662A6AB2437964D2' : b'144A22F14F2EA79A588D22D78B3F1E462D152896',\nb'29CA375D2C8A3048' : b'C848B7B9C0F4B31A84926C0A48E3A012E2FAB253',\nb'35001EB85C4F24C2' : b'0EC322D4E644AB352B8C990EC66F9D6C707C8A1A',\nb'3B85360B45F44F8B' : b'6A244AC02399BAC7D4ABCB6B87199AEF377B0177',\nb'5D29783F1B1B7AC8' : b'6BE2A3D98D0A8C09417F42CBDDC358219EB33C92',\nb'20C44CE8642E555A' : b'97E4E8B37712D2E6D9E0BEF95CD95951116381FB',\nb'1B708372F45205'   : b'AF76765DFA4A47E500092C55101D73CD31ECFB89',\nb'17F511FB63631D1'  : b'A55ACFA72989539D611ED1C03481C531D2689A7A',\nb'528579731EB66DB0' : b'C51B71C95640001B3A91ADB393C90EEB3C60E7DB',", "b'17F511FB63631D1'  : b'A55ACFA72989539D611ED1C03481C531D2689A7A',\nb'528579731EB66DB0' : b'C51B71C95640001B3A91ADB393C90EEB3C60E7DB',\nb'1CAA4C3F14BF3362' : b'80DD8A137A0F8D2B3027DAE1D7B0F2A22DC02BB3',\nb'7D7C62331F7D6996' : b'95260B015F7763AA5111E2460BE7DAE82964C709',\nb'2217602144F1F52'  : b'AAF19B7400E7C12EFB19E0D58F300A9A51B7ADAB',\nb'324C4B9D4B2EA94'  : b'88E9316C6F822752A71A3337D90F49D29AD47298',\nb'5D97C0352B07A3A'  : b'E66595B115971A6AF745938D5D426AFBCD9FEA6D',\nb'34517CBC6AEE5F1F' : b'246E6FF71D6CA74ADD99363E464A8F30BEEC04AC',\nb'212774BC55326087' : b'E72876080826370E4348ED487BAD25175893AA48',\nb'16CB674F69A92FBD' : b'FF802A0B2398CCCD3930E8C87F1C8A8DFCB82011',", "b'212774BC55326087' : b'E72876080826370E4348ED487BAD25175893AA48',\nb'16CB674F69A92FBD' : b'FF802A0B2398CCCD3930E8C87F1C8A8DFCB82011',\nb'45E921652B64EFA'  : b'433558B16219F93CCD61E4CC8DE618DE407607C1',\nb'6F5D6C4C128C3F89' : b'5444893CD7F73746EFAD8BF8133E5D57AAE6927B',\nb'26A3B4E6FC5B29'   : b'4E186672D64DB2A8028F0AEB6D3A767BB1F59CD1',\nb'188F705B5F8B5CB3' : b'375D20FBD0A05DECCAB08367E15E5FA5A77A3729',\nb'2A3E539839C85BFC' : b'9383AB215ED09F2B996F7DD905E6C69C4D6F734B',\nb'44C405757DD40FD'  : b'3FA7B99D35480465EC276CBA5B287595BE34BE98',\nb'5E47569825637231' : b'B105A621B98C4DCEC677119FF8FB02237B662156',\nb'1E6445D07E7B423F' : b'43A554222D382FA10936FA1A296A47CCF7A4726A',", "b'5E47569825637231' : b'B105A621B98C4DCEC677119FF8FB02237B662156',\nb'1E6445D07E7B423F' : b'43A554222D382FA10936FA1A296A47CCF7A4726A',\nb'217164EA6D1A60D9' : b'1ADFA13B14C69694CE4DA9F94EF6E5AF83BBF020',\nb'3F0BB8C50A452E4'  : b'8D684C13AC99106FD8FEA3E5626C12A6B97CD01A',\nb'5E11109B23BD35D9' : b'269D40DF5E98637F665FFDEA8532ED5E02F360DB',\nb'2D591201545C526B' : b'73D1386CBC760FA57BFD1504E47FDEA1F1EA59C6',\nb'54A169AE6220426A' : b'74E2C35A7E54AFAC89209B4D0579877F5DA98F13',\nb'31C873DC36E82DE7' : b'2C1BE06F66EF376632810A872519BFD18F2CEA6F',\nb'763EA986D9E6399'  : b'BA59F7B390B0D49CFC7E12D4A835AA337DF01F5E',\nb'38B95A7E7B53507F' : b'7C322DB43AC0B97EBEA4881EF138B9DC528DC346',", "b'763EA986D9E6399'  : b'BA59F7B390B0D49CFC7E12D4A835AA337DF01F5E',\nb'38B95A7E7B53507F' : b'7C322DB43AC0B97EBEA4881EF138B9DC528DC346',\nb'4F2974C46E911AC7' : b'19C722C8D0EE4D1D228019AD003FBCF173AB05A3',\nb'4EF427A38EC63EF'  : b'83EDD7778BFB69DA52B86B3B5767726DD204DB34',\nb'1493D0F36DB762A'  : b'8426C0C07C699A93B12CF0B53661541726F6A555',\nb'7211101869C66105' : b'59C0C177142EDCA420714A730E662CA182EAD9AC',\nb'4EA884D1860494A'  : b'B51D6195915BBA8A5CAC1581C6423B83E1B9D21B',\nb'472D73D449377024' : b'50018A8C9C4551E01BE38DC675460357544E28B3',\nb'33F257C34B8A3585' : b'FBC5E2EE7F584506302A9AC668275D84079AC51E',\nb'19301EE0425A19C5' : b'98DCACE879EA22A55AAEB4DF557F0112750538C0',", "b'33F257C34B8A3585' : b'FBC5E2EE7F584506302A9AC668275D84079AC51E',\nb'19301EE0425A19C5' : b'98DCACE879EA22A55AAEB4DF557F0112750538C0',\nb'12F925AB65C328C'  : b'4867AEC4BC3405FEB6D1D612F0FE5FBACED0FF64',\nb'3D6F479E6E8D46F1' : b'56EF5FC757D8080D0C33C00C2F96FAA00948734D',\nb'6D3451B35FFF46E3' : b'9EDF0B6A2D06A6BB4DD592CC4FB910F5C071BF5B',\nb'4C217E2723F311C8' : b'9C6AE1A930350CB45517994FC5B3D918F5003A96',\nb'2E3B5D7D2D306065' : b'84B3C7FD6C1A4E8FC59297ECDFC286C298C246A5',\nb'32E250C713F365FE' : b'5F574D100C5906595F1A53E1CAEDAE8B7D75321E',\nb'64C792160CF3CBE'  : b'52E6215ABA22F11801D868BEE5E0D1C706371D31',\nb'5732407E79B77159' : b'C61CAD6746318287AF0BF5B2003868AF6982003C',", "b'64C792160CF3CBE'  : b'52E6215ABA22F11801D868BEE5E0D1C706371D31',\nb'5732407E79B77159' : b'C61CAD6746318287AF0BF5B2003868AF6982003C',\nb'54C95FA7655A71EF' : b'5E5DE0E176014FEF75047CF57C62610D59F2AF59',\nb'48F458058AF6434'  : b'3480702908DB81BEBD2FF6DB0A7A3A276DFAB13D',\nb'22B838D42D026CE'  : b'029A6C2159DF3195513211DD5B7331A580AEA502',\nb'4F023B64B0B1FE'   : b'8521241F6EC0D396A9D50C1842DDBB9109167565',\nb'2D42B4775364B83'  : b'6F748D92EC9D010F16AEFB57759C678B4060C7E5',\nb'47514F3B60441BB'  : b'0A5C6E3E271360346C6FB1BF9E580EDC758525AD',\nb'341DBA5316220C'   : b'7A11536F824A625D4D88CC5EFC754F52F6C86AEC',\nb'6E2820E0B933E82'  : b'173AF0F1EE5EB356140E40182583F8C4E6C873E3',", "b'341DBA5316220C'   : b'7A11536F824A625D4D88CC5EFC754F52F6C86AEC',\nb'6E2820E0B933E82'  : b'173AF0F1EE5EB356140E40182583F8C4E6C873E3',\nb'20817EC03FB16B9'  : b'5DEEBFA4CB6E03CD16C063E211D20640FACA4B4A',\nb'6BE71AA9227837FE' : b'6DDFA1F4595A70906C71958B9CBF06582ECC8D3D',\nb'46BE7BA86F768B1'  : b'C1B8BDC35596EFB40826BE0DF6A7303A1459AD72',\nb'49E67C4D6B3562ED' : b'78AF9E59782B0F590464CF9936138798B5F2CF48',\nb'29A527B2491D226C' : b'D9C08A2FA2D0AC2A8FE53CCEBD4F2EC31474B9BA',\nb'3AE167BA3B5149A4' : b'7704AC660058B05F1A3ECC308FA91A18FFFF84F9',\nb'589368974C076236' : b'E4F9B6827BE31BDE47454E28560A9FAD8E3CDBA0',\nb'3D78558F26167C89' : b'3EEC56001D9EA511C1F4CC8BBE830BC47BD8BB0A',", "b'589368974C076236' : b'E4F9B6827BE31BDE47454E28560A9FAD8E3CDBA0',\nb'3D78558F26167C89' : b'3EEC56001D9EA511C1F4CC8BBE830BC47BD8BB0A',\nb'260A52FF5C5072B2' : b'9A05010BF879AD36D43327DAD911382D50903FF7',\nb'4EAE59A03B135298' : b'B491A64DE34519D96E0D428880AD86B0B0F0735F',\nb'222F5709581B3355' : b'45B0A24B64A678C5B6A434FCE00016C49A1C75F6',\nb'2C6B3775549A79DF' : b'66B37BEFCF9399108C27DC72208E00AB827A7DD2',\nb'254C3CC758B50E7'  : b'193BC88CFAE3B57050BEAEA9E8AFA097BF8F3B5C',\nb'27FA46CB76435801' : b'6D3B25F5B6A0DFD6146AF305781D34E57C5D682C',\nb'6A4F70BF79494E06' : b'1A29C1131308250744818611B8329117EE594C1B',\nb'88C28123B673AB6'  : b'133F545A93DAC8A15DB200C6C0A21090D38541A0',", "b'6A4F70BF79494E06' : b'1A29C1131308250744818611B8329117EE594C1B',\nb'88C28123B673AB6'  : b'133F545A93DAC8A15DB200C6C0A21090D38541A0',\nb'394A206BD015BA2'  : b'C2F2FDF47C6BD12310FCDB3B564A5AAA4EE4C627',\nb'7DB348ED55A6584A' : b'EE1869A8D0AF990C1D58EF7C683CC6E23BCF0BB1',\nb'21F126BA65E5182'  : b'E239256C1CB03967F46C9B24005FC8C0E20B1A0D',\nb'21E738B51B62201A' : b'E88733B15DC9396B1B20EF094771CF44C818A69A',\nb'461F488DB2916BD'  : b'24BA1E079FF6BB3CF7F57DC63E1FBCA5C1C6A2F8',\nb'D044CF726415B1A'  : b'69FC69EE7C95738F917AEA73D1FB6B907AD91953',\nb'3452413AC85A42'   : b'D66A8D7BC90A297726DFED969FDAA6EF19939864',\nb'76CA15F11AF1C51'  : b'CB2084E4290C216DF0D0AD8A445A362F8799648A',", "b'3452413AC85A42'   : b'D66A8D7BC90A297726DFED969FDAA6EF19939864',\nb'76CA15F11AF1C51'  : b'CB2084E4290C216DF0D0AD8A445A362F8799648A',\nb'522A1F0C38B67B51' : b'2CB76D8A0993DE62D0C108D6814D4F7DE0D4C8D1',\nb'695C2319695A15B'  : b'F097275236912E370955E54509C0E554D28A45A5',\nb'56EE6FC263FC21FF' : b'84DE0DD44B8155E58D8E324CBDE2D69E6FC6DD21',\nb'3C2179617B442E7'  : b'5BCA55150CE749AED97A0CE7B1A7EB205735E7E7',\nb'56073D0C3E9E7B6'  : b'E4CAADA710179666EA035F509681F9B8DE7FFCFC',\nb'4C67EC424741536'  : b'B64DC756FD081BBC106EA069708B3C6596222898',\nb'598259113B62FB3'  : b'BF6A3C57226D5BE61C0C20FD17FC935E37C57E64',\nb'139C50B5731558A2' : b'982B1A75CCB87E2AD7EAB23F149A7FEB785BE875',", "b'598259113B62FB3'  : b'BF6A3C57226D5BE61C0C20FD17FC935E37C57E64',\nb'139C50B5731558A2' : b'982B1A75CCB87E2AD7EAB23F149A7FEB785BE875',\nb'C927AEB6164F87'   : b'D830239C33F736942B7FF97B7B12137465CEC08E',\nb'661356AB31561A15' : b'74A8F21FB34D6A05C1C08B6BB8DE5712913E8A54',\nb'760C2B29A0A3796'  : b'0C2B97FC56DA10ADBB6D47A4F079ECDF7EA8BB95',\nb'F641F9F65B8638D'  : b'369C3F95D1A57DA57655B39807C47D685AA8BFC7',\nb'42EA4C892B9A'     : b'E34C0A3756936F4852CC6EC0035F5EF66562D477',\nb'2C8C54BCE045C9F'  : b'B62D5A37BC45ECC0C374C4905629F0D9392715C1',\nb'20C92B4B3F892B21' : b'282B4A757C5C4E1DDBFA0D1C39EA53576AB91399',\n", "b'20C92B4B3F892B21' : b'282B4A757C5C4E1DDBFA0D1C39EA53576AB91399',\n\n# 2\nb'359F5AE3211'      : b'3DFFB73BB4D79E532F4873C0BB160178448E8E30',\nb'4635C4F75E1278'   : b'AAC0014C5D75F52DC9772B73771B0050933A9EAD',\nb'226B4F982407735D' : b'F8A72CD3326708AC5FAC9571759DB6E305E2AB8E',\nb'3B9B64812AC23ECD' : b'A0E90A5EF07E6F3DA434A202602445CEE11B15A0',\nb'63C43C123D671B7'  : b'06B1A3758960A1159FA118EE26502CBBF146F616',\nb'748076706C5166F0' : b'7B61117760654E4521B068DF486C4B4B5E625D32',\nb'43D841495FBD237A' : b'DC32D6D882872DA084784216C43882004559D5A6',", "b'748076706C5166F0' : b'7B61117760654E4521B068DF486C4B4B5E625D32',\nb'43D841495FBD237A' : b'DC32D6D882872DA084784216C43882004559D5A6',\nb'5B5C7572539A4806' : b'E8B3B5AE0E9EC99EBD1B8D89D48A6D680E952827',\nb'257437CF470C3BB7' : b'42EC761ADE92ECC080AA1797DA46B9CB4CADD6D1',\nb'4F121747AD07429'  : b'2B2FB3252FFF80F63C69856CAA4D06B8B005F6E2',\nb'AE7330965747EB2'  : b'57F67A3FB9FCC6154A289BC3E906CEDD00929F75',\nb'3EBF177337C82EE8' : b'ACFA7CC0C4BFDB1E1B98C8EF5CB383E19DAF2A9D',\nb'2C8879B15901663'  : b'45C72109B2B4ED97B79D5FC7D90E9D06DE97E283',\nb'2D8E7203667B29C4' : b'FC0B1B8DA840F01738CC1048DED3579539714E53',\nb'1F2E4E52235936F5' : b'AA5FDD9D8D282685D559996B9B26E8611C519EC1',", "b'2D8E7203667B29C4' : b'FC0B1B8DA840F01738CC1048DED3579539714E53',\nb'1F2E4E52235936F5' : b'AA5FDD9D8D282685D559996B9B26E8611C519EC1',\nb'7BE839CC438810B3' : b'332601C86563577DCF313C956009ED994BE7D2F6',\nb'AB67CFEAF134A'    : b'F9009DEB19A375FEC53FC8EF34CEE7942443928A',\nb'189C260856AF66A0' : b'E16FB781FA1F66AF14E05670F0C34674467D199F',\nb'708179DC1DD72175' : b'E155BBE8CE54C56F5E3B9558420309A4A8F65BD1',\nb'53D2D066D5831E9'  : b'B73A0DE5C5D425244AAE4ADDD8E75DD6C07439CC',\nb'1F32D826FF82F3F'  : b'FFBB4A1878566109715BD8A6169A596C07D6B850',\nb'34A164AA250A78E0' : b'B5A84ACADB898F3E5811CB0C91D5045928DDFFB0',\nb'6F569A03F9D46A3'  : b'F8CCAF2A333E89EB975A81463E0262FFE22FE13B',", "b'34A164AA250A78E0' : b'B5A84ACADB898F3E5811CB0C91D5045928DDFFB0',\nb'6F569A03F9D46A3'  : b'F8CCAF2A333E89EB975A81463E0262FFE22FE13B',\nb'796332EB5F4E4B'   : b'2C880E4415632CB3587B1BB39C41743EE133401F',\nb'5474B6545366252'  : b'3497B470F598F0DAEAA950A8DA19375ABD1F39C8',\nb'4614E542D672DE5'  : b'BA108826578D5531DB2F86AE6143E3DAD823B8C4',\nb'52E02ED72997722F' : b'A5C3178A90491FA9C8F6BB37B0313B8DAE4860EF',\nb'733EE8485968DA'   : b'3E3B022E961B8757AE5BCD63A915A8153F5A561C',\nb'14AE274F8772FD3'  : b'21F678D0285D23C633A951BD44596DE9C1C7AE44',\nb'6EE1CAD1DE4624E'  : b'B97363187A56C56143A9A209563A8324B46C69E0',\nb'7CD647FA2F2430B'  : b'51081417568FEE305B7C481B08869DAD0565AA98',", "b'6EE1CAD1DE4624E'  : b'B97363187A56C56143A9A209563A8324B46C69E0',\nb'7CD647FA2F2430B'  : b'51081417568FEE305B7C481B08869DAD0565AA98',\nb'59F4141869C55BD7' : b'6D7C678F4F8A55B6BD2D85D9879689BA8AEB6AC5',\nb'75567C5A62083655' : b'50BE57C26E980E39809919DB41F4F4D12E06A368',\nb'F6662A046DE11FE'  : b'B2CC3FAE28E3F255D36CA12A7222B8B20BECBE75',\nb'35AD30C3491C3B67' : b'1C86A8790FE8E43109CDEA7A6D4F82071C2D38FF',\nb'30E9393369B568C2' : b'8049A94655368461379D721DA3B8DBB914912CFF',\nb'1960ADE78763FA8'  : b'42C71D95DE90B789822FB525E2F63307859F95FF',\nb'5753C546AF36816'  : b'8BC034C6BB168C67F1CE184CE9F62D0B89D25F22',\nb'67972291FC150B5'  : b'744F500F57DE5F1F8670E24E64462D0BC93BCB39',", "b'5753C546AF36816'  : b'8BC034C6BB168C67F1CE184CE9F62D0B89D25F22',\nb'67972291FC150B5'  : b'744F500F57DE5F1F8670E24E64462D0BC93BCB39',\nb'67C3249B61E585E'  : b'200A8D44BFB190B6B3766291431C587BCE87F284',\nb'64036875408D50DD' : b'5B0FDE7B4C7DBE18AFCAF1774EDE0C3E8814CDB5',\nb'44D33F34EFE4EF5'  : b'EF6321F7B4D2F7EE447B5E3DCAAA4EB1EFC8E864',\nb'208F326720CE7BA5' : b'52535BE33E8B3175C7EBDBEAD775BB1AB36B99FC',\nb'2A673E5C16533AAA' : b'889C7F4B137C5BEC77F3064D4D745ACDCBE4B119',\nb'48B24FF84D5B3A45' : b'24BE8F4F48DE40050636C259D907DFC9F092ADE4',\nb'658559E74A1D3E'   : b'893BCE236B9632A0F319BD7A776B9D847DFA20C5',\nb'2D8544F62C704829' : b'903C9B1BF6815B8E906501A0C0A13AD67D6D3FD7',", "b'658559E74A1D3E'   : b'893BCE236B9632A0F319BD7A776B9D847DFA20C5',\nb'2D8544F62C704829' : b'903C9B1BF6815B8E906501A0C0A13AD67D6D3FD7',\nb'30F93FBC53B16E8'  : b'2A893AB80F82BF36CBD03034193A9FBC1B79F885',\nb'1B243180202D2771' : b'ECCCFED0477030ACB5BDFC5A965ED5FA9FA85607',\nb'73D1545715AE14D2' : b'584235C277552453D49D61A6187BEFA07CDDECA6',\nb'1F2F3A8D39156572' : b'6CE1D28E390BA57DED5295DEA700C8A524B5BDDF',\nb'FDF4346371B5B99'  : b'CAB5C72868119CC7B47499DC88DAA53BBA90A10C',\nb'5F4C4265788F2F32' : b'F37423E79DFC178D67A620E083802BD0719E88C6',\nb'403B5FAD1D4C14D0' : b'7E15248271652C34535613ACEF7BEAE53C86779F',\nb'7FA37126236935F0' : b'92AFC9AF733D8C715AC097333F952DE0D743ED5D',", "b'403B5FAD1D4C14D0' : b'7E15248271652C34535613ACEF7BEAE53C86779F',\nb'7FA37126236935F0' : b'92AFC9AF733D8C715AC097333F952DE0D743ED5D',\nb'7BE54C3EAF7E7E'   : b'3A05489EF6913AE983F1B84FBC864ACFC28DC883',\nb'1960D412450639A'  : b'58B075C75E1B922E2D4FB7A7875972DF8A174A1D',\nb'2F882652ED579B'   : b'5F1D99DF57D344022E9DE0026991A9D34437C20F',\nb'413423FB7E595F54' : b'AB7419080EDB008FAA5F7EAEFF72E44B09671AD5',\nb'557A13B18F53C97'  : b'991D6CF3FC9259002CB251EDFFEE84949F27790D',\nb'1DD51ED4F7B61F8'  : b'112553F44C6AD767394BCF285453BEA8B21DC392',\nb'ABD5BEF6A673D3'   : b'E9B6644A741C05C7E74E2C91D336609DD2C1F607',\nb'E7A7B8463125A91'  : b'7BB8B2BBDB0D6B79BD74189D4709B6E9450287CC',", "b'ABD5BEF6A673D3'   : b'E9B6644A741C05C7E74E2C91D336609DD2C1F607',\nb'E7A7B8463125A91'  : b'7BB8B2BBDB0D6B79BD74189D4709B6E9450287CC',\nb'23966F75D292A26'  : b'53DC7B6A90AB38594E8BBF9920BCD9EC24FE9235',\nb'6160582545E62DE'  : b'08E482DB030414F61D7E1B77B201E8710C0EE74D',\nb'4F1F4D6D525D3F5A' : b'6D242A993DA9F1528E6245B5E9B147587770033E',\nb'1A471D7A41023D5'  : b'28E63F1030A6F1E7323BA5E729315AF8AD95D4AB',\nb'336045812CC942AD' : b'5398452AB416C43D2743F11ED2D5A615A7981C26',\nb'48F6258B864A1E'   : b'B612483357A7AB1030943B19FF6D58EE0230ED62',\nb'7E3370F55B561F50' : b'70C34AFEE63FD404F2F90538C45055501028A8F9',\nb'6FB33CD72DD52A94' : b'0B8B3C5761863687782293FF68A603866F201C9E',", "b'7E3370F55B561F50' : b'70C34AFEE63FD404F2F90538C45055501028A8F9',\nb'6FB33CD72DD52A94' : b'0B8B3C5761863687782293FF68A603866F201C9E',\nb'7A93DA2739178EA'  : b'B5C82BD4F5B5F0D2A30A211EE044B99057503582',\nb'79CB78091BBF36C8' : b'03E561DBDFD365D00AA67B5E1B02897DAD420220',\nb'6DBE75F05C2D4816' : b'19F0A1268DEC45A868C5431B04A3598D1DBC4F94',\nb'421029D23578217D' : b'661F62CC26A4BA58AFDA1C42EBE94C561E60543F',\nb'25B8716177F46E1'  : b'CA3C8DAEC5CCD6B99A944EA32D9C66A08C52D6E8',\nb'2956B6D4A17132C'  : b'CDE6AA8137A1B396985F59AF1C932704ED73AF13',\nb'17C655073E012D4E' : b'D4434C12F49F2DFFBBA1C7A0051DD178D8DB05FA',\nb'3CF561E62A194E82' : b'C31CFF7B76C8CBE33B9EE2B4C7EFC11FB810B4B7',", "b'17C655073E012D4E' : b'D4434C12F49F2DFFBBA1C7A0051DD178D8DB05FA',\nb'3CF561E62A194E82' : b'C31CFF7B76C8CBE33B9EE2B4C7EFC11FB810B4B7',\nb'EF3740A78CF3DD2'  : b'B2F727E0283C1E3E30E04C22EACEE74E215E4824',\nb'6D4A169E49DB24DD' : b'F42ABC607BC47F74143251BEDB106FAB4C4601E7',\nb'6A8F60234C2D21D8' : b'7960735B29C641B837D95F794B790A959F6C22A2',\nb'54361FCB74233AD3' : b'5A260F9C595689A0AE1618ED356E215CF310DACD',\nb'6CAA7A2361FF163D' : b'97933708E9E8090C93708394C81D72AF43F2A5EA',\nb'B9E38F5C981CAB'   : b'C93824C9902637BF21EBC39435B78967231A46A8',\nb'189D526D45067D5'  : b'21E25728D2F55FF4B74015F757E1671067BB8079',\nb'13E96B7A624522E1' : b'D788157DFDB6504F8133B105807A0683B9E3329F',", "b'189D526D45067D5'  : b'21E25728D2F55FF4B74015F757E1671067BB8079',\nb'13E96B7A624522E1' : b'D788157DFDB6504F8133B105807A0683B9E3329F',\nb'2182597737CC3FE5' : b'9708C3658910CB3D482754A2B22CC7315E4403D5',\nb'4A85670B121B26A7' : b'AEDBC018E5CC0470967BF2A0515CB9A56944D487',\nb'68B7604E664540A7' : b'E7913A6737D75F09991BF9C129CE090B8C5E9D8F',\nb'70622A2D796C65F'  : b'C7C4B3570B2618A6BFC0A0A1CEE25B7D2EF2CC3D',\nb'C60690F193171C9'  : b'A8356A15297C5124D08CDA0818A5286AAD58048E',\nb'40757AB938707A22' : b'C06AB8E83514110F94EA069C6D1700B16A33ED2D',\nb'5E2476E442B7CEE'  : b'FF68628A1503C664A934BFEB0E28323A81100333',\nb'16362E5B44C3383C' : b'0D38088682288AAE6FEE6F6F1E834351286ECB17',", "b'5E2476E442B7CEE'  : b'FF68628A1503C664A934BFEB0E28323A81100333',\nb'16362E5B44C3383C' : b'0D38088682288AAE6FEE6F6F1E834351286ECB17',\nb'586811331F6E3A2B' : b'6129A87081BB848D31C2A5C83F03BE81804567C7',\nb'24234317BE569AD'  : b'AB8A92F6C345601C3ED9002822953372E5384B3B',\nb'4F615EB8125DC8B'  : b'25E664A55B33EA4B69E05D5FF12B7FDC970F6504',\nb'3A3B47BF25B96EA9' : b'DBD2773BC44E4C7EAC762880EED8E13420CFB82B',\nb'4CFF5B6D2DFEE8C'  : b'2BE250E17B9DA75FC5396F88DA34C75829E2E5C7',\nb'1C84147E17077319' : b'A601B0040F6004EB49566760D51DC4D149D83F64',\nb'28BA2654377AE9F'  : b'14AC601AD07492CA3EA2ABA485EAFE9874904F68',\nb'6985535123FA5318' : b'51DFE007B6D4DF91CC63382D86045B5186058C91',", "b'28BA2654377AE9F'  : b'14AC601AD07492CA3EA2ABA485EAFE9874904F68',\nb'6985535123FA5318' : b'51DFE007B6D4DF91CC63382D86045B5186058C91',\nb'1DCC285429E5BAC'  : b'6EAB35AFF649F7EFBCB45D4141F915C1C30199A3',\nb'10CD588932A24F77' : b'9ED5C5BBF063DB9725DC4FD43A86E51AC3FB4AEB',\nb'49B357AA5C5D618C' : b'D3AFB6F9FA064F4045DAEFBEBA5EDA6214E3251F',\nb'596A4B4A3D73123A' : b'7C8D8A4E1ECB4DD9ED368FEDEBBCF8F9FC257471',\nb'3AB2284454C158E'  : b'544AF0E903FC02124D60949E4220484F3506E4E2',\nb'78721E0F55C5318'  : b'559744656624F39F4F92ED546CB3EB081E41B78B',\nb'E4F75653C2532F2'  : b'6B555DE9B336DA27CF4CB43CE4AEC12B2CFB1634',\nb'377E572436526BFF' : b'E94C0C29E26A64BDE1EBF2D42B43CCE5579A0856',", "b'E4F75653C2532F2'  : b'6B555DE9B336DA27CF4CB43CE4AEC12B2CFB1634',\nb'377E572436526BFF' : b'E94C0C29E26A64BDE1EBF2D42B43CCE5579A0856',\nb'1FD628B458454771' : b'DAD35209933DD8EEDC62AA91DE2634B32D20D19D',\nb'2B2A292A65BB6D8E' : b'E9490273EBD37B2FAF6F1444D723D08094BC39BC',\nb'46D55B6C742DFB3'  : b'ECD06CB27305A4ACB4E91FC1E5B5BA91F38AA6FC',\nb'79965B9669034399' : b'410A56431139C7D906B91E1A0411F98DF9F970E8',\nb'259F239D280523D7' : b'19E56D23B4C93D816FE9128A774126A4CA2EA5D6',\nb'30E833361259A8'   : b'7E2A6A89E3254BA9FDDB20ACB19E3C12CAC73CC4',\nb'7C94EEA541473EF'  : b'90051BD6EDC8C8CBD257B7B1879777FF3A7A9574',\nb'2DC8A9B16332F78'  : b'E3F880191B24BE6ADE4E6DFE36D9FD0CE82F65AD',", "b'7C94EEA541473EF'  : b'90051BD6EDC8C8CBD257B7B1879777FF3A7A9574',\nb'2DC8A9B16332F78'  : b'E3F880191B24BE6ADE4E6DFE36D9FD0CE82F65AD',\nb'50B013093B491481' : b'88B5458CF339FF7A2BB4FA64E9A05AD5C1C56509',\nb'11E3AC26896D79'   : b'2EEEAF8257D9782DE751427F061C04BA9B7BEF40',\nb'79F0E462DB65B07'  : b'86913AF0C116917BE324DD11236113F269488D58',\nb'4A68736B34CF94E'  : b'77D2C24DA0D9DDC4533516C4F334C407E7374928',\nb'21EE1800430F4A70' : b'59E93CFA3B608FB931DD57FCEC5AFF25F5612791',\nb'268E3B11D565A50'  : b'6FBAF79109EFCC612615ABCA87980F58C63CF934',\nb'2A50612A252F4F9D' : b'B72C7253AE352C0C288F7EF6330B461764585413',\nb'7E0C128042057E0C' : b'484F4B0C21892A3FF680E8981D73BDFD32261240',", "b'2A50612A252F4F9D' : b'B72C7253AE352C0C288F7EF6330B461764585413',\nb'7E0C128042057E0C' : b'484F4B0C21892A3FF680E8981D73BDFD32261240',\nb'667F64CC6A944DE4' : b'05AE05848DD5CDC0714C809C209E513F741C335B',\nb'679F2719629D2CC0' : b'404B122622B92FFC4ADA3A3A70E9FEA698854B80',\nb'5A2C2880DE7B90'   : b'BDB9B36E44BD0275FFC1DFD6432C5C51DF8CCB0A',\nb'7F88619111411DE2' : b'0C957BC4156EABC13C43CDB78207545741A22B6B',\nb'7C84CF52754E60'   : b'8BCBEE4875C6E3703983C022E1215E6005007FB6',\nb'3E0B335274F91C99' : b'23A24D0EA59A9C2F64A6EE0A258A558398B30245',\nb'4F0A6E6F795F3804' : b'EC8095E1F0B94CE4CFBCF3DAE006021D71623BAB',\nb'5DF167991C306C41' : b'A9A032713354AD4AC29DC95FC13F7E968DCAE324',", "b'4F0A6E6F795F3804' : b'EC8095E1F0B94CE4CFBCF3DAE006021D71623BAB',\nb'5DF167991C306C41' : b'A9A032713354AD4AC29DC95FC13F7E968DCAE324',\nb'5B6E554590C72A3'  : b'0AA69D6D8E9449668AC5EDBB0BC11EC5693D9992',\nb'53077BF65F377CEC' : b'CE4788BAE1B3A55BFD118B2EE3394F84C9D5EEF5',\nb'22B0766198E1D57'  : b'FBC40434FF9908BC57DDA4E38D5A9E403DFD5A0F',\nb'509D48CF52C06FDC' : b'67D3E544707B4FE246C921E1A4F432A4BAD93BC0',\nb'735543C49BA68AF'  : b'28AB4F409BC2F7E88B084B1110DFDB2A04793BAA',\nb'600879DE4A636C0A' : b'BBC63E230B94E1C0153CF3D164FB5B99CE58C461',\nb'13224CFF3E8A132C' : b'578E7CC0516F1A45BAB852A665C2FD11E91068BA',\nb'72056AF6B1C42A2'  : b'CDFF0084CDC66D165128423C278EF295D1CFE1FA',", "b'13224CFF3E8A132C' : b'578E7CC0516F1A45BAB852A665C2FD11E91068BA',\nb'72056AF6B1C42A2'  : b'CDFF0084CDC66D165128423C278EF295D1CFE1FA',\nb'6DA22FBB5D9B75C5' : b'2D4D503ABD1B2AC448DED5E5CD02C32072E31DDB',\nb'7EC25B224DCB6384' : b'D47EABAA3BF4DFEF7EE5529290CE9A4FFAF56375',\nb'52A558327AF6063'  : b'0C40055A1291C485B9EE708925E5DEDED2BE4746',\nb'794F1FEF31B321C4' : b'2A9972862FD6FE17F1F8562511DAFB5AD2B14948',\nb'44BC11B4432B4665' : b'CAE5F15F92B44FA733C3DF91F78A2D6DE64B4E3E',\nb'792C131D3EFC482B' : b'4C39FB28B79456E58F3321D7A3B32F5163D4B191',\nb'57BE67236993B1E'  : b'34238729776690ABCE26157E46A1B5008B45416C',\nb'37408959327DB4'   : b'C25BAF8210936A9CABB863A83FF2906CF74D865F',", "b'57BE67236993B1E'  : b'34238729776690ABCE26157E46A1B5008B45416C',\nb'37408959327DB4'   : b'C25BAF8210936A9CABB863A83FF2906CF74D865F',\nb'1F46537853283E52' : b'5890B60447D5F9E3E940F8DC65E098DB1BE56369',\nb'19796A661C37A10'  : b'A3E75EA87D6CDEE50DEFA03834F4597BAE73D7EB',\nb'2D32423C5F2758BD' : b'D98D8E325CC9E07B91A333836B5A4B20FBE2446B',\nb'394831B74A84A23'  : b'CACD53F10A54ED71FA76EF3DFC808A86E356498F',\nb'2026600E508E88B'  : b'299E48E23EECDCB1C7A939EC8C689416DBBEA3D4',\nb'7A20ED6582D6484'  : b'017A3077019996E13D82C12A1B572E70EAD65943',\nb'42073B237757DE1'  : b'1C0C28D8394A31F5D08E3D098D6C08233A09BB2A',\nb'2FFA59F174D84E01' : b'D7052E2BF33268D02A8ACEE4A160C3A1E962F218',", "b'42073B237757DE1'  : b'1C0C28D8394A31F5D08E3D098D6C08233A09BB2A',\nb'2FFA59F174D84E01' : b'D7052E2BF33268D02A8ACEE4A160C3A1E962F218',\nb'368033C2789A2753' : b'D3B4DF1492A7C23764C0EE419335D95126BAA3F6',\nb'55D423883286E18'  : b'CA46276DD76E149D2424362C84BCF668413A503F',\nb'39803CC417E0E6B'  : b'B0AA556A0EE4A5653BFA141D149CA2F4CEEDD946',\nb'542D1CF01D9A337F' : b'8E36A60336451347D008CC37EB50A5323A71069C',\nb'6DBA6C1B52CA429'  : b'BE7245B2B38F65DCA329953EE4AE5F2600614E88',\nb'578B50D37F5C289E' : b'E5A09C70390F60E14A420323420C7B9A5BBEE1B5',\nb'3B245B471B041D7D' : b'D31B0C35E251C17484A50D0EDEE75AA69CCCE175',\nb'36F62BAD30771810' : b'04F5D47B00C51EC1BE90499B01AA3061B0286E68',", "b'3B245B471B041D7D' : b'D31B0C35E251C17484A50D0EDEE75AA69CCCE175',\nb'36F62BAD30771810' : b'04F5D47B00C51EC1BE90499B01AA3061B0286E68',\nb'3D7857E2DB7FCF'   : b'5681B18C6F50394AF6E875F93348890FB8C23901',\nb'6A7A54507B7C2125' : b'AD13391CA5BABF94F804E616B96777D647AF843B',\nb'42B764155DC07D77' : b'2BB5A0539B34AF24CCE0174F1A70922D127C80CA',\nb'11A95462F5D5C63'  : b'FAE3EC3F084EA2426DA66D340DEAB6C8DB591385',\nb'59A1720EC9245'    : b'5E6E5C3E4837B0BACF5EEA067639E9E5D826F8FA',\nb'A1610DA1F33000'   : b'5A7FD42ADD3DFFA874954329CB21DA40ABC53E9B',\nb'703D6DD73F304FFB' : b'30DA1733BF140404D21DE745B3CF731BA99CB49B',\nb'15DB128662787469' : b'5DB7B5F15BACD6912ADD5071F31FDECAB86D5FB3',", "b'703D6DD73F304FFB' : b'30DA1733BF140404D21DE745B3CF731BA99CB49B',\nb'15DB128662787469' : b'5DB7B5F15BACD6912ADD5071F31FDECAB86D5FB3',\nb'2585B2042D2ACE'   : b'9317416C385A6126D2FF07262A464538CFB83B20',\nb'12141E885C0D68BE' : b'F54DB482752345DAAC0AC5D8AB482336E688C9BC',\nb'57FE6876B115E8'   : b'FD417D223B78B9A3D4C8F4709822620D5BEEC6BD',\nb'3D621ED468357754' : b'7EF47E951F6099F685D14EB0CAF70D98C53F55EB',\nb'540216686D723FE9' : b'380630887D43B68CD32F84FA6A50E095E474E7E2',\nb'E695AB411584A32'  : b'0A54F5156EB579617ED028F6811F7B5117AF1ECB',\nb'527C2D1A15E03F62' : b'F8BFC50083419FEFA014F55C3DCA51F39D1B990A',\nb'1A527F4445412F95' : b'5DDBFDFC598524B29D62D6C75E9C104FD8BE78E4',", "b'527C2D1A15E03F62' : b'F8BFC50083419FEFA014F55C3DCA51F39D1B990A',\nb'1A527F4445412F95' : b'5DDBFDFC598524B29D62D6C75E9C104FD8BE78E4',\nb'17456CC339677F58' : b'C953167C38F2B68403F3B0E2FA6DAA21E8D463E9',\nb'B4977F637A14E6C'  : b'98BECC1A01A68CCF65A07257F8D4725412A91F41',\nb'4C7DE2E749A3BC7'  : b'3A011A9B4B363DEE6419D5701F837F3D4AB5555B',\nb'2700170F548A2ADC' : b'80B086299BD8570583828F06C242E50DA150AC11',\nb'1106133A7BAD6E1C' : b'49D97E00101744E2D54B611A03AC154943F09C2E',\nb'652BE2942F57ABD'  : b'8584EA363B6CE5B6DF44E4F262624F7A43E53011',\nb'1707675964FC9BA'  : b'3E3B3EB87ED064DEA267615F79D2216E8E425343',\nb'160236AF773C4A1B' : b'9CA605DF7A40469E5ECD9E24B1C428D92504ECD8',", "b'1707675964FC9BA'  : b'3E3B3EB87ED064DEA267615F79D2216E8E425343',\nb'160236AF773C4A1B' : b'9CA605DF7A40469E5ECD9E24B1C428D92504ECD8',\nb'52695015382876'   : b'AFB0F71A7C12187F42C2BE8DEA08C9E3D592A1CC',\nb'18C22A6455A06FB6' : b'D3731D48FAF2963D142CD640E19FC9391E38CADA',\nb'375D2D865162471B' : b'D6AB445E4B04039877CB996A0B02256E6AAF5DE0',\nb'222C2BDC64C45182' : b'A6430681B7544F74CCA49D654071C5177B7D1D7F',\nb'8D4ADD6A6231E7'   : b'FB3EF20CA7CABF7E616374553E4B424BD287F95E',\nb'13045F0010307928' : b'4784D61E132B19563846CBA621358534299E56EA',\nb'37067EDC166B410B' : b'877D03349EEDB31F1FC2CB5261369292A820751A',\nb'5E94518E7AD07883' : b'F4B4B8B01DC1E5612AC2299D6F1EBAF10562E422',", "b'37067EDC166B410B' : b'877D03349EEDB31F1FC2CB5261369292A820751A',\nb'5E94518E7AD07883' : b'F4B4B8B01DC1E5612AC2299D6F1EBAF10562E422',\nb'4DEC5C5C640B452F' : b'D662143F07AA08403813A6AA6C662FE6BF40FF38',\nb'127539861721E24'  : b'DA79279EA1DFCEDEFDBC6BE1098283AD284CC95D',\nb'73C632C652F33EC'  : b'491B0E3C86AB7685817B7E19EDCDCEAF3E9F03B8',\nb'68E2001D4B79CE'   : b'ABA1AC63DDBA7AC8DEE0303DF41D6244565EB9B8',\nb'77961E9AE792450'  : b'93987CA18C1BB898494271C11E7A82A81DD09020',\nb'209E5503567330FB' : b'CF37E207E613CC24D1F7DD0F5E536699E9B393F7',\nb'6FA269EB38176B5E' : b'3C18A944173A77A384961EC1849535B1A8C13DD2',\nb'4DAF3CAB36642356' : b'9657071FBD2E1B8E4E303AD362E6F427AC22AE2E',", "b'6FA269EB38176B5E' : b'3C18A944173A77A384961EC1849535B1A8C13DD2',\nb'4DAF3CAB36642356' : b'9657071FBD2E1B8E4E303AD362E6F427AC22AE2E',\nb'67F67CE141EA488C' : b'FE481D2B9A17BA197AA9CAD45F62A1040A5561C4',\nb'F1F655A6A7F5F3E'  : b'552A682729B38D271A9AD55B21B426406EC711C3',\nb'20DF1E3659343243' : b'B6DD185829E5B8AD416625315695328D1CEEEF8A',\nb'2FCDA4626886649'  : b'41DDBEB76B36CBA1097EB05A4AF7CCC62AA9A08D',\nb'5D713B960DB5262'  : b'B7BDDAFFE07E52EE91334FD4824BD15834B77853',\nb'1A9E4BF8572541BF' : b'B215A59397BC13EA3A4D179A4861F1194C43C81F',\nb'420232CE7BE72BA'  : b'834646FBE2F205DE59D31EC7E210F5816329F2E0',\nb'40FC38CC7462671A' : b'D81FC4FDCA6F3E93588E65365B2E08B264B99995',", "b'420232CE7BE72BA'  : b'834646FBE2F205DE59D31EC7E210F5816329F2E0',\nb'40FC38CC7462671A' : b'D81FC4FDCA6F3E93588E65365B2E08B264B99995',\nb'42AD30EC28081993' : b'58458E92D721EFD26805B8EBDB893E3A87A0CD39',\nb'1152257464306C8D' : b'27604F35F2B67BCEFEAAE3FD5A5BC3B80B015242',\nb'21D141D680D627'   : b'FF790335FBCEE25BA6507B2798204ADB9CCC9AA6',\nb'7D9155756CE1D7A'  : b'4403A57DD80EAE37A0DCEC012419C2F158C89F1E',\nb'7E8F3827E6E3D22'  : b'413F93D78506A4DD0D27ABEE0EE67A31B38BE910',\nb'11AF73A837AD7EFB' : b'6A7F7A7E11BDDD1DBAF750FD409B766EE2A1C576',\nb'735077CC37C37528' : b'A4F5EA20602E50A9FAEB10389AB1DB6A8611B605',\nb'1A225ABA6331145A' : b'47AAB47FDB2E89FC10B80C12ECC54A4E753246DF',", "b'735077CC37C37528' : b'A4F5EA20602E50A9FAEB10389AB1DB6A8611B605',\nb'1A225ABA6331145A' : b'47AAB47FDB2E89FC10B80C12ECC54A4E753246DF',\nb'443CBC4454B334E'  : b'F581C5DCFFB12590F1FAA3482F1A622F444A46A4',\nb'5A692DAC25EB3398' : b'42B7136D118A29A7AA5767C87EE89B67DF3CD301',\nb'1DC3CC5276627A0'  : b'361581195354053B36639CF910F61B9CFCE4BC7E',\nb'53844054BF19EA'   : b'9D3A27A1809FC677E2FB56B87E38CE43C328E3C1',\nb'63187B3C281B599A' : b'D052BC66B2DA023EA7EBA04027B8713EBF5074AE',\nb'1A774FDB1757037'  : b'A86C4B47D41BC73A6A881431D7D2E09A23896AD6',\nb'CB16B2F659324AF'  : b'CCDC8D7D89C006F7039DC27B426D3E421381CD50',\nb'3ECAB3D15392F9B'  : b'3B7AB8F493B0D9D41C814961F21C522FBAF14409',", "b'CB16B2F659324AF'  : b'CCDC8D7D89C006F7039DC27B426D3E421381CD50',\nb'3ECAB3D15392F9B'  : b'3B7AB8F493B0D9D41C814961F21C522FBAF14409',\nb'16C934B36C9C4C5'  : b'529849EF0788DD3FE962415CEBEF36038B15311C',\nb'410C6BCC6B1955E7' : b'72A843746C040A729BE367FDB098BDA55A3A7AC0',\nb'7FDE7474632732B6' : b'A33AD2B1C551DF46AA326907E8A46BAFB247AD6F',\nb'194C5DAD668B6A1F' : b'B27F78D14FE1DC5A554AF28E86EA72F237CA37A2',\nb'57345C3142CB10D1' : b'80C5F1A714A1770BA73596476FF9CADEC8E5CA86',\nb'4D9E385821E450FB' : b'DCC53FE06057F41870B2CB76A0DFBACFDC1A2BB7',\nb'5B4F533D233F6757' : b'566C0D918EDBA687FF57B6A7A2726B0F7532BC68',\nb'189C71CE27167'    : b'01425F73772F99C48D3F11980C0016DBC14E26D6',", "b'5B4F533D233F6757' : b'566C0D918EDBA687FF57B6A7A2726B0F7532BC68',\nb'189C71CE27167'    : b'01425F73772F99C48D3F11980C0016DBC14E26D6',\nb'287D66FF14E470FF' : b'499F906AB24453D8137CF1EFA64A1A36857DE6D8',\nb'1FE2219A53232903' : b'363DB5348491BC385F1E8EDA771206C40BAA4922',\nb'774AB73B393772'   : b'DC7FBD328772C83CEF8744A8F809EEF021C7FD96',\nb'3A9114466AB10A3'  : b'7B1FEDE82DBFCCF400C89B46A50C40C1842C8E81',\nb'6B092BA757643FCF' : b'B4E5F9E172F3FD65218C300A15E45640DE211BDE',\nb'47CD58E96A6210D0' : b'6470590097A8DB97B754B04C3D77DB2ACC370E03',\nb'7052A3F32B0728'   : b'75D86B22EB034624BE73793910060511F22F26A5',\nb'153F5F21944645'   : b'38B30824408A72727ECE8B3D0EC60C8BBEFE0CE4',", "b'7052A3F32B0728'   : b'75D86B22EB034624BE73793910060511F22F26A5',\nb'153F5F21944645'   : b'38B30824408A72727ECE8B3D0EC60C8BBEFE0CE4',\nb'2B7F71F159094F04' : b'90C36BC164D29132305A85F10BDF5430AC7403BC',\nb'559464DF616F3673' : b'3020E026AE91C4F02A071EC25B0F3C6E75A25C98',\nb'772E360A338239DB' : b'0A54E1206556553F2EA42391626CF77080B91527',\nb'26FC1EE72D8953FE' : b'E3A5EF789B16CE530ED9950E4A8F7F57F8A82949',\nb'72C22E712CF379D'  : b'326110BFB14F887A75D34556D62814C978C860B9',\nb'29AC31541057533D' : b'0DE8BD01177976BAC9128FFC2EF712338325773B',\nb'20E27E7C79CC422B' : b'CA13896938B28AEEF8CB2AE460F50F931E80A650',\nb'265C781252B74EBE' : b'757F713CDEE0B8BA3071165B936C583B541DD594',", "b'20E27E7C79CC422B' : b'CA13896938B28AEEF8CB2AE460F50F931E80A650',\nb'265C781252B74EBE' : b'757F713CDEE0B8BA3071165B936C583B541DD594',\nb'15F838D177F569DC' : b'38ADAAD5DF8775AEEF22B865506D1341C2A1DA57',\n}\n"]}
{"filename": "sa/sa/samp/common.py", "chunked_list": ["import logging\nimport enum\nimport random\nimport asyncio\n\nSAMP_ENCODING = 'latin1' # iso-8859-1\n#SAMP_ENCODING = 'cp1251' # Windows-1251\n\nDEFAULT_GRAVITY = 0.008\n", "DEFAULT_GRAVITY = 0.008\n\n''' This constant is used for:\n(1) Initial cookie the client sends to server\n(2) The value that shoud be xored with the server cookie to calculate the secret cookie\n'''\nMAGIC_COOKIE = 0x6969\n\nMAX_PLAYER_ID = 1000 - 1 # [0,999] ; Note: 0 is a valid player id\nMAX_VEHICLE_ID = 2000 - 1 # [1,1999] ; Note: 0 is NOT a valid vehicle id", "MAX_PLAYER_ID = 1000 - 1 # [0,999] ; Note: 0 is a valid player id\nMAX_VEHICLE_ID = 2000 - 1 # [1,1999] ; Note: 0 is NOT a valid vehicle id\nMAX_OBJECT_ID = 1000 - 1\nMAX_PLAYER_NAME_LENGTH = 24\nMAX_DIALOG_ID = 32768 - 1\n\nMAX_TEXTDRAW_TEXT_LENGTH = 1024\nMAX_TEXTDRAW_ID = 2303 # 2048 + 256 - 1\n\nMAX_3D_TEXT_LABEL_ID = 2048 - 1", "\nMAX_3D_TEXT_LABEL_ID = 2048 - 1\n\nCLIENT_VERSION_37 = 4057\n\n# team id when player is not in any team\nNO_TEAM_ID = 255\n\nINVALID_ID = 0xffff # 2**16-1\n", "INVALID_ID = 0xffff # 2**16-1\n\nINVALID_WEAPON_ID = 0xffffffff\n\nclass Weapon:\n    def __init__(self, id=INVALID_WEAPON_ID, ammo=0):\n        self.id = id\n        self.ammo = ammo\n\n    def __str__(self):\n        return f'<Weapon {self.id} - {self.ammo}>'", "\nclass Color(int):\n    def __new__(self, value):\n        return super().__new__(self, value)\n\n    def __str__(self):\n        return f'0x{self:08x}'\n\n# TODO: fix tables\n# https://gtamods.com/wiki/GXT", "# TODO: fix tables\n# https://gtamods.com/wiki/GXT\n\ngxt_table_1 = ' '*32 + '''\n !\"#$%&'()*+,-./\n0123456789:;\ufffd=\ufffd?\n\u2122ABCDEFGHIJKLMNO\nPQRSTUVWXYZ[\\\\]\u00a1 \n`abcdefghijklmno\npqrstuvwxyz\ufffd|$~)", "`abcdefghijklmno\npqrstuvwxyz\ufffd|$~)\n\u00c0\u00c1\u00c2\u00c4\u00c6\u00c7\u00c8\u00c9\u00ca\u00cb\u00cc\u00cd\u00ce\u00cf\u00d2\u00d3\n\u00d4\u00d6\u00d9\u00da\u00db\u00dc\u00df\u00e0\u00e1\u00e2\u00e4\u00e6\u00e7\u00e8\u00e9\u00ea\n\u00eb\u00ec\u00ed\u00ee\u00ef\u00f2\u00f3\u00f4\u00f6\u00f9\u00fa\u00fb\u00fc\u00d1\u00f1\u00bf\n0123456789:a\n'''.replace('\\n','')\n\ngxt_table_2 = ' '*32 + '''\n !\"#$%&'()*+,-./", "gxt_table_2 = ' '*32 + '''\n !\"#$%&'()*+,-./\n0123456789:;\ufffd=\ufffd?\n\u2122ABCDEFGHIJKLMNO\nPQRSTUVWXYZ \\\\*\u00a1 \n`abcdefghijklmno\npqrstuvwxyz\ufffd|$~)\n\u00c0\u00c1\u00c2\u00c4\u00c6\u00c7\u00c8\u00c9\u00ca\u00cb\u00cc\u00cd\u00ce\u00cf\u00d2\u00d3\n\u00d4\u00d6\u00d9\u00da\u00db\u00dc\u00df\u00e0\u00e1\u00e2\u00e4\u00e6\u00e7\u00e8\u00e9\u00ea\n\u00eb\u00ec\u00ed\u00ee\u00ef\u00f2\u00f3\u00f4\u00f6\u00f9\u00fa\u00fb\u00fc\u00d1\u00f1\u00bf", "\u00d4\u00d6\u00d9\u00da\u00db\u00dc\u00df\u00e0\u00e1\u00e2\u00e4\u00e6\u00e7\u00e8\u00e9\u00ea\n\u00eb\u00ec\u00ed\u00ee\u00ef\u00f2\u00f3\u00f4\u00f6\u00f9\u00fa\u00fb\u00fc\u00d1\u00f1\u00bf\n0123456789:a\n'''.replace('\\n','')\n\ndef decode_gxt(data): return ''.join(map(lambda b: gxt_table_1[b], data))\n\ngxt_dict = {\n          '!':0x21, '\"':0x22, '#':0x23, '$':0x24, '%':0x25, '&':0x26, \"'\":0x27, '(':0x28, ')':0x29, '*':0x2a, '+':0x2b,  ',':0x2c, '-':0x2d, '.':0x2e, '/':0x2f,\n'0':0x30, '1':0x31, '2':0x32, '3':0x33, '4':0x34, '5':0x35, '6':0x36, '7':0x37, '8':0x38, '9':0x39, ':':0x3a, ';':0x3b,            '=':0x3d,           '?':0x3f,", "          '!':0x21, '\"':0x22, '#':0x23, '$':0x24, '%':0x25, '&':0x26, \"'\":0x27, '(':0x28, ')':0x29, '*':0x2a, '+':0x2b,  ',':0x2c, '-':0x2d, '.':0x2e, '/':0x2f,\n'0':0x30, '1':0x31, '2':0x32, '3':0x33, '4':0x34, '5':0x35, '6':0x36, '7':0x37, '8':0x38, '9':0x39, ':':0x3a, ';':0x3b,            '=':0x3d,           '?':0x3f,\n'\u2122':0x40, 'A':0x41, 'B':0x42, 'C':0x43, 'D':0x44, 'E':0x45, 'F':0x46, 'G':0x47, 'H':0x48, 'I':0x49, 'J':0x4a, 'K':0x4b,  'L':0x4c, 'M':0x4d, 'N':0x4e, 'O':0x4f,\n'P':0x50, 'Q':0x51, 'R':0x52, 'S':0x53, 'T':0x54, 'U':0x55, 'V':0x56, 'W':0x57, 'X':0x58, 'Y':0x59, 'Z':0x5a, '[':0x5b, '\\\\':0x5c, ']':0x5d, '\u00a1':0x5e, ' ':0x5f,\n'`':0x60, 'a':0x61, 'b':0x62, 'c':0x63, 'd':0x64, 'e':0x65, 'f':0x66, 'g':0x67, 'h':0x68, 'i':0x69, 'j':0x6a, 'k':0x6b,  'l':0x6c, 'm':0x6d, 'n':0x6e, 'o':0x6f,\n'p':0x70, 'q':0x71, 'r':0x72, 's':0x73, 't':0x74, 'u':0x75, 'v':0x76, 'w':0x77, 'x':0x78, 'y':0x79, 'z':0x7a, '\ufffd':0x7b,  '|':0x7c, '$':0x7d, '~':0x7e, ')':0x7f,\n'\u00c0':0x80, '\u00c1':0x81, '\u00c2':0x82, '\u00c4':0x83, '\u00c6':0x84, '\u00c7':0x85, '\u00c8':0x86, '\u00c9':0x87, '\u00ca':0x88, '\u00cb':0x89, '\u00cc':0x8a, '\u00cd':0x8b,  '\u00ce':0x8c, '\u00cf':0x8d, '\u00d2':0x8e, '\u00d3':0x8f,\n'\u00d4':0x90, '\u00d6':0x91, '\u00d9':0x92, '\u00da':0x93, '\u00db':0x94, '\u00dc':0x95, '\u00df':0x96, '\u00e0':0x97, '\u00e1':0x98, '\u00e2':0x99, '\u00e4':0x9a, '\u00e6':0x9b,  '\u00e7':0x9c, '\u00e8':0x9d, '\u00e9':0x9e, '\u00ea':0x9f,\n'\u00eb':0xa0, '\u00ec':0xa1, '\u00ed':0xa2, '\u00ee':0xa3, '\u00ef':0xa4, '\u00f2':0xa5, '\u00f3':0xa6, '\u00f4':0xa7, '\u00f6':0xa8, '\u00f9':0xa9, '\u00fa':0xaa, '\u00fb':0xab,  '\u00fc':0xac, '\u00d1':0xad, '\u00f1':0xae, '\u00bf':0xaf,\n'0':0xb0, '1':0xb1, '2':0xb2, '3':0xb3, '4':0xb4, '5':0xb5, '6':0xb6, '7':0xb7, '8':0xb8, '9':0xb9, ':':0xba, 'a':0xbb,", "'\u00eb':0xa0, '\u00ec':0xa1, '\u00ed':0xa2, '\u00ee':0xa3, '\u00ef':0xa4, '\u00f2':0xa5, '\u00f3':0xa6, '\u00f4':0xa7, '\u00f6':0xa8, '\u00f9':0xa9, '\u00fa':0xaa, '\u00fb':0xab,  '\u00fc':0xac, '\u00d1':0xad, '\u00f1':0xae, '\u00bf':0xaf,\n'0':0xb0, '1':0xb1, '2':0xb2, '3':0xb3, '4':0xb4, '5':0xb5, '6':0xb6, '7':0xb7, '8':0xb8, '9':0xb9, ':':0xba, 'a':0xbb,\n}\ndef encode_gxt(s): return str(map(lambda c:gxt_dict[c], s))\n\n\nclass SPECIAL_ACTION(enum.IntEnum):\n    NONE          = 0\n    DUCK          = 1\n    JETPACK       = 2\n    ENTER_VEHICLE = 3\n    EXIT_VEHICLE  = 4\n    DANCE1        = 5\n    DANCE2        = 6\n    DANCE3        = 7\n    DANCE4        = 8\n    HANDSUP       = 10\n    CELLPHONE     = 11\n    SITTING       = 12\n    STOPCELLPHONE = 13\n    BEER          = 20\n    SMOKE         = 21\n    WINE          = 22\n    SPRUNK        = 23\n    CUFFED        = 24\n    CARRY         = 25\n    PISSING       = 68", "\n# Used in two RPCs: SetPlayerFightingStyle and WorldPlayerAdd\nclass FIGHTING_STYLE(enum.IntEnum):\n    NORMAL   = 4\n    BOXING   = 5\n    KUNGFU   = 6\n    KNEEHEAD = 7\n    GRABKICK = 15\n    ELBOW    = 16\n", "\n#logging.basicConfig(filename='samp.log',filemode='a',format='%(asctime)s.%(msecs)03d %(message)s',datefmt='%d%m%y-%H%M%S',level=logging.INFO)\n\ndef setup_logger(logger_name, file_name):\n    formatter = logging.Formatter('%(asctime)s.%(msecs)03d %(message)s','%d%m%y-%H%M%S')\n    handler = logging.FileHandler(file_name)\n    handler.setFormatter(formatter)\n\n    logger = logging.getLogger(logger_name)\n    logger.setLevel(logging.INFO)\n    logger.addHandler(handler)\n\n    return logger", "\nmain_logger = setup_logger('main', 'samp.log')\n\ndef log(s):\n    #logging.info(s)\n    main_logger.info(s)\n\ndef pretty_format(self, skip_n):\n    s = f'<{self.__class__.__name__}'\n    for var, value in list(self.__dict__.items())[skip_n:]:\n        if type(value) == float:\n            s += f' {var}={value:.2f}'\n        elif type(value) == str:\n            s += f' {var}={repr(value)}'\n        elif type(value) == bytearray or type(var) == bytes:\n            s += f' {var}=[{value.hex(\" \")}]'\n        elif isinstance(value, enum.Enum):\n            s += f' {var}={value.name}({value.value})'\n        else:\n            s += f' {var}={value}'\n    s += '>'\n    return s"]}
{"filename": "sa/sa/samp/server.py", "chunked_list": ["'''\nThere is one player pool, one vehicle pool.\nStream distance is the same for everyone\n'''\n\nimport socket\nimport asyncio\nimport os # urandom\nimport traceback\nimport time", "import traceback\nimport time\nimport threading\n\nfrom .raknet import *\nfrom .rpcs import *\nfrom .common import *\nfrom .player import *\nfrom .gpci import validate_gpci\nfrom .auth_keys import auth_keys", "from .gpci import validate_gpci\nfrom .auth_keys import auth_keys\nfrom .encryption import decrypt_buffer\nfrom .query import *\n\nfrom .spots import *\n\nclass Server:\n    def __init__(self, addr=None):\n        self.addr = addr", "    def __init__(self, addr=None):\n        self.addr = addr\n\n        self.socket = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)\n        self.socket.bind(self.addr)\n\n        self.max_connections_per_ip = 5\n        self.ips = {}\n        self.peers = {} # {addr: Peer, ...}\n", "        self.peers = {} # {addr: Peer, ...}\n\n        self.query = True # If true, the server answers queries, otherwise it doesn't\n\n        self.player_pool = [None] * (MAX_PLAYER_ID + 1) # useful for lookup(O(1) time) by player id\n\n        self.vehicle_pool = [None] * (MAX_VEHICLE_ID + 1) # useful for lookup(O(1) time) by vehicle id\n\n        # {rule: var, rule: var, ...} ; both are strings\n        self.rules = {", "        # {rule: var, rule: var, ...} ; both are strings\n        self.rules = {\n            'lagcomp': 'On',\n            'mapname': 'San Andreas',\n            'version': '0.3.7',\n            'weather': '11',\n            'weburl': 'www.sa-mp.com',\n            'worldtime': '08:00',\n        }\n", "        }\n\n        self.hostname = 'SA-MP 0.3 Server'\n        self.gamemode = 'None'\n        self.language = 'English'\n        self.password = '' # if empty, server has no password\n\n        self.rcon_password = 'changeme'\n\n        # actual max player count used to limit how many players may join", "\n        # actual max player count used to limit how many players may join\n        self.max_player_count = (MAX_PLAYER_ID + 1)\n        \n        # fake player count(overrides real value in query requests)\n        # None = do NOT fake it ; answer queries with real value -> len(self.peers)\n        # integer = do fake it\n        # e.g. server.fake_player_count = 123\n        self.fake_player_count = None\n", "        self.fake_player_count = None\n\n        # fake max player count(overrides real value in query requests)\n        # None = do NOT fake it; anwer queries with real value -> self.max_player_count\n        # integer = do fake it\n        # e.g. server_fake_max_player_count = 456\n        self.fake_max_player_count = None\n\n        # fake player list(overrides real variable in query requests)\n        # None = do NOT fake it; not None = do fake it", "        # fake player list(overrides real variable in query requests)\n        # None = do NOT fake it; not None = do fake it\n        # e.g. server.fake_player_list = {'alice': 100, 'zebra':999}\n        self.fake_player_list = None\n        \n        # fake detailed player list(overrides real variable in query requests)\n        # None = do NOT fake it; not None = do fake it \n        # e.g. server.fake_detailed_player_list = {0: ('alice', 100, 12), 1: ('zebra', 999, 15)}\n        self.fake_detailed_player_list = None\n", "        self.fake_detailed_player_list = None\n\n        self.message_callbacks = [] # callback(message, internal_packet, peer, server)\n        self.post_message_callbacks = [] # callback(message, internal_packet, peer, server)\n\n        self.cached_info_query_payload = None\n        self.cached_rules_query_payload = None\n        self.cached_clients_query_payload = None\n        self.cached_detailed_query_payload = None\n        self.cached_bad_rcon_password_query_payload = RconQueryResponse(None, None, 'Invalid RCON password.').encode_payload()", "        self.cached_detailed_query_payload = None\n        self.cached_bad_rcon_password_query_payload = RconQueryResponse(None, None, 'Invalid RCON password.').encode_payload()\n        self.query_cache_ttl = 15 # in seconds\n        self.cache_query_payloads()\n\n        self.player_stream_distance = 200.0\n\n        self.loop = asyncio.get_running_loop()\n\n        self.raknet_cookie = None", "\n        self.raknet_cookie = None\n        self.expected_raknet_cookie = None\n        self.raknet_cookie_ttl = 60 # in seconds\n        self.cached_open_connection_cookie = None\n        self.cached_open_connection_reply = OpenConnectionReply().encode()\n        self.generate_raknet_cookie()\n        self.generate_raknet_cookie_loop_task = None\n\n        self.token = int.from_bytes(os.urandom(4), 'little')", "\n        self.token = int.from_bytes(os.urandom(4), 'little')\n\n        self.ping_interval = 5 # in seconds\n        self.ping_loop_task = None\n        self.last_ping_t = time.time()\n\n        # Default algorithms: Server.get_lowest_unused_id, Server.get_highest_unused_id, Server.get_random_unused_id\n        # Alternatively you may asign your own function; it should return an integer and have only the self parameter.\n        self.get_unused_id = Server.get_lowest_unused_id", "        # Alternatively you may asign your own function; it should return an integer and have only the self parameter.\n        self.get_unused_id = Server.get_lowest_unused_id\n\n        self.running = False\n\n        self.last_logic_t = time.time()\n\n        self.cached_scores_and_pings = None\n        self.cached_scores_and_pings_ttl = 5 # in seconds\n        self.cache_scores_and_pings()", "        self.cached_scores_and_pings_ttl = 5 # in seconds\n        self.cache_scores_and_pings()\n\n    # push message to all peers\n    def push_message_to_all(self, message, reliability=RELIABILITY.RELIABLE, priority=PRIORITY.HIGH, ordering_channel=None):\n        for _, peer in self.peers.items():\n            peer.push_message(message, reliability, priority, ordering_channel)\n\n    # push message to all peers expect one(the excluded_peer)\n    def push_message_to_others(self, excluded_peer, message, reliability=RELIABILITY.RELIABLE, priority=PRIORITY.HIGH, ordering_channel=None):", "    # push message to all peers expect one(the excluded_peer)\n    def push_message_to_others(self, excluded_peer, message, reliability=RELIABILITY.RELIABLE, priority=PRIORITY.HIGH, ordering_channel=None):\n        for _, peer in self.peers.items():\n            if peer != excluded_peer:\n                peer.push_message(message, reliability, priority, ordering_channel)\n\n    async def recv_loop(self):\n        try:\n            loop = asyncio.get_running_loop()\n            while True: # receive UDP packet", "            loop = asyncio.get_running_loop()\n            while True: # receive UDP packet\n                data, addr = await loop.sock_recvfrom(self.socket, 2**16)\n                self.handle_packet(data, addr)\n        except asyncio.exceptions.CancelledError: pass\n        except: log(traceback.format_exc())\n        \n    def cache_scores_and_pings(self):\n        players = []\n        for peer in self.peers.values():", "        players = []\n        for peer in self.peers.values():\n            player = peer.player\n            players.append((player.id, player.score, player.ping))\n        self.cached_scores_and_pings = RequestScoresAndPingsResponse(players).encode()\n\n    async def cache_scores_and_pings_loop(self):\n        try:\n            while True:\n                await asyncio.sleep(self.cached_scores_and_pings_ttl)", "            while True:\n                await asyncio.sleep(self.cached_scores_and_pings_ttl)\n                self.cache_scores_and_pings()\n        except asyncio.exceptions.CancelledError: pass\n        except: log(traceback.format_exc())\n\n    async def ping_loop(self):\n        try:\n            while True:\n                await asyncio.sleep(self.ping_interval)", "            while True:\n                await asyncio.sleep(self.ping_interval)\n                self.last_ping_t = time.time()\n                self.push_message_to_all(InternalPing(time=get_time()))\n        except asyncio.exceptions.CancelledError: pass\n        except: log(traceback.format_exc())\n\n    def generate_raknet_cookie(self):\n        self.raknet_cookie = int.from_bytes(os.urandom(2), 'little')\n        self.expected_raknet_cookie = (self.raknet_cookie ^ MAGIC_COOKIE).to_bytes(2, 'little')", "        self.raknet_cookie = int.from_bytes(os.urandom(2), 'little')\n        self.expected_raknet_cookie = (self.raknet_cookie ^ MAGIC_COOKIE).to_bytes(2, 'little')\n        self.cached_open_connection_cookie = OpenConnectionCookie(self.raknet_cookie).encode()\n\n    async def generate_raknet_cookie_loop(self):\n        try:\n            while True:\n                await asyncio.sleep(self.raknet_cookie_ttl)\n                self.generate_raknet_cookie()\n        except asyncio.exceptions.CancelledError: pass", "                self.generate_raknet_cookie()\n        except asyncio.exceptions.CancelledError: pass\n        except: log(traceback.format_exc())\n\n    def update_player_streams_naive(self):\n        '''\n        naive implementation\n        iterate all players and calculate the distance to all other players.\n        '''\n        for peer in self.peers.values():", "        '''\n        for peer in self.peers.values():\n            player = peer.player\n            updated_players_in_fov = [other_peer.player for other_peer in self.peers.values() if other_peer != peer and player.pos.distance2d(other_peer.player.pos) <= self.player_stream_distance]\n            for new_player in [p for p in updated_players_in_fov if p not in player.players_in_fov]:\n                peer.push_message(StartPlayerStream(new_player.id, team=new_player.team, pos=new_player.pos, color=new_player.color))\n            for old_player in [p for p in player.players_in_fov if p not in updated_players_in_fov]:\n                peer.push_message(StopPlayerStream(old_player.id))\n            player.players_in_fov = updated_players_in_fov\n    ", "            player.players_in_fov = updated_players_in_fov\n    \n    #def update_player_streams_grid(self):\n    #    '''\n    #    grid implementation\n    #    cell size is at least the stream distance\n    #    First, iterate all players putting them into cells on the grid\n    #    Then, iterate again, and calculate the distance to players only in\n    #    the current and adjacent cells.\n    #    '''", "    #    the current and adjacent cells.\n    #    '''\n    #    for peer in self.peers.values():\n    #        player = peer.player\n\n    def stream_thread(self):\n        '''\n        determine if a player should start/stop being streamed to other players\n        i.e. this functions sends the StartPlayerStream and StopPlayerStream rpcs\n        A good analogy is the following: imagine a 2D plane full of moving circles,", "        i.e. this functions sends the StartPlayerStream and StopPlayerStream rpcs\n        A good analogy is the following: imagine a 2D plane full of moving circles,\n        whenever two circles overlap, both receive a StartPlayerStream RPC saying that\n        a new circle is overlapping them. When the opposite occurs(i.e. they are\n        no longer overlapping), both receive a StopPlayerStream RPC.\n        '''\n        try:\n            while True:\n                time.sleep(1)\n                self.update_player_streams_naive()", "                time.sleep(1)\n                self.update_player_streams_naive()\n        except:\n            log(traceback.format_exc())\n\n    def logic_thread(self):\n        try:\n            while True:\n                time.sleep(0.1)\n                for peer in self.peers.values():", "                time.sleep(0.1)\n                for peer in self.peers.values():\n                    player = peer.player\n                    #if player.pos is not None:\n                    #    player.pos.x+=0.1\n                    #    print(player.pos)\n                    for near_player in player.players_in_fov:\n                        vehicle = near_player.vehicle\n                        if vehicle: # in vehicle\n                            if near_player.seat_id == 0: # driver", "                        if vehicle: # in vehicle\n                            if near_player.seat_id == 0: # driver\n                                peer.push_message(DriverSync(vehicle.id, near_player.id, pos=vehicle.pos, dir=vehicle.dir, vehicle_health=vehicle.health, driver_health=near_player.health, driver_armor=near_player.armor))\n                            else: # passenger\n                                peer.push_message(PassengerSync(vehicle.id, near_player.id, pos=near_player.pos, health=near_player.health, armor=near_player.armor, seat_id=near_player.seat_id))\n                        else: # on foot\n                            peer.push_message(PlayerSync(near_player.id, pos=near_player.pos, dir=near_player.dir, health=near_player.health, armor=near_player.armor))\n        except:\n            log(traceback.format_exc())\n", "            log(traceback.format_exc())\n\n    def get_lowest_unused_id(self):\n        return next(id for id, player in enumerate(self.player_pool) if player is None)\n\n    def get_highest_unused_id(self):\n        return next(id for id, player in enumerate(reversed(self.player_pool)) if player is None)\n\n    def get_random_unused_id(self):\n        return random.choice(id for id, player in enumerate(self.player_pool) if player is None)", "    def get_random_unused_id(self):\n        return random.choice(id for id, player in enumerate(self.player_pool) if player is None)\n\n    def kick_non_whitelisted_players(self):\n        pass\n\n    def update(self):\n        #print(len(self.peers))\n        for _,peer in self.peers.items():\n            peer.update()", "        for _,peer in self.peers.items():\n            peer.update()\n\n        #self.update_logic()\n\n    async def start(self):\n        if self.running:\n            return\n\n        self.recv_task = self.loop.create_task(self.recv_loop())", "\n        self.recv_task = self.loop.create_task(self.recv_loop())\n\n        self.generate_raknet_cookie_task = self.loop.create_task(self.generate_raknet_cookie_loop())\n\n        self.cache_query_payloads_task = self.loop.create_task(self.cache_query_payloads_loop())\n\n        self.ping_task = self.loop.create_task(self.ping_loop())\n\n        self.cache_scores_and_pings_task = self.loop.create_task(self.cache_scores_and_pings_loop())", "\n        self.cache_scores_and_pings_task = self.loop.create_task(self.cache_scores_and_pings_loop())\n\n        threading.Thread(target=self.logic_thread, daemon=True).start()\n        threading.Thread(target=self.stream_thread, daemon=True).start()\n\n        self.running = True\n\n    async def stop(self):\n        if not self.running:", "    async def stop(self):\n        if not self.running:\n            return\n\n        #self.clients.clear()\n\n        #self.transport.close()\n\n        self.socket.close()\n        await self.recv_loop()", "        self.socket.close()\n        await self.recv_loop()\n\n        self.generate_raknet_cookie_task.cancel()\n        await self.generate_raknet_cookie_task\n\n        self.cache_query_payloads_task.cancel()\n        await self.cache_query_payloads_task\n\n        self.ping_task.cancel()", "\n        self.ping_task.cancel()\n        await self.ping_task\n\n        self.cache_scores_and_pings_task.cancel()\n        await self.cache_scores_and_pings_task\n\n        self.running = False\n        #self.logic_task.cancel()\n        #await self.logic_task", "        #self.logic_task.cancel()\n        #await self.logic_task\n\n    def get_query_player_count(self):\n        return len(self.peers) if (self.fake_player_count is None) \\\n            else self.fake_player_count\n\n    def get_query_max_player_count(self):\n        return self.max_player_count if (self.fake_max_player_count is None) \\\n            else self.fake_max_player_count", "        return self.max_player_count if (self.fake_max_player_count is None) \\\n            else self.fake_max_player_count\n\n    def cache_info_query_payload(self):\n        has_password = len(self.password) > 0\n        q = InfoQueryResponse(None, None, has_password,\n                    self.get_query_player_count(),\n                    self.get_query_max_player_count(),\n                    self.hostname, self.gamemode, self.language)\n        self.cached_info_query_payload = q.encode_payload()", "                    self.hostname, self.gamemode, self.language)\n        self.cached_info_query_payload = q.encode_payload()\n\n    def cache_rules_query_payload(self):\n        q = RulesQueryResponse(None, None, self.rules)\n        self.cached_rules_query_payload = q.encode_payload()\n\n    def cache_clients_query_payload(self):\n        if self.fake_player_list is not None:\n            clients = self.fake_player_list", "        if self.fake_player_list is not None:\n            clients = self.fake_player_list\n        else:\n            clients = [(peer.player.name, peer.player.score) for peer in self.peers.values()]\n        q = ClientsQueryResponse(None, None, clients)\n        self.cached_clients_query_payload = q.encode_payload()\n\n    def cache_detailed_query_payload(self):\n        if self.fake_detailed_player_list is not None:\n            players = self.fake_detailed_player_list", "        if self.fake_detailed_player_list is not None:\n            players = self.fake_detailed_player_list\n        else:\n            players = [(peer.player.id, peer.player.name, peer.player.score, peer.player.ping) for peer in self.peers.values()]\n        q = DetailedQueryResponse(None, None, players)\n        self.cached_detailed_query_payload = q.encode_payload()\n\n    def cache_query_payloads(self):\n        self.cache_info_query_payload()\n        self.cache_rules_query_payload()", "        self.cache_info_query_payload()\n        self.cache_rules_query_payload()\n        self.cache_clients_query_payload()\n        self.cache_detailed_query_payload()\n\n    async def cache_query_payloads_loop(self):\n        try:\n            while True:\n                await asyncio.sleep(self.query_cache_ttl)\n                self.cache_query_payloads()", "                await asyncio.sleep(self.query_cache_ttl)\n                self.cache_query_payloads()\n        except asyncio.exceptions.CancelledError: pass\n        except: log(traceback.format_exc())\n\n    def handle_rcon_command(self, command):\n        cmd = command.split()[0]\n        arg = command[len(cmd):].strip()\n        match cmd:\n            case 'hostname':", "        match cmd:\n            case 'hostname':\n                self.hostname = arg\n                self.cache_info_query_payload()\n            case 'gamemodetext':\n                self.gamemode = arg\n                self.cache_info_query_payload()\n            case 'language':\n                self.language = arg\n                self.cache_info_query_payload()", "                self.language = arg\n                self.cache_info_query_payload()\n            case 'say':\n                self.push_message_to_all(ChatMessage(f'* Admin: {arg}', color=0x2587ceaa))\n            case 'echo':\n                print(arg)\n            case 'gravity':\n                try:\n                    gravity = float(arg)\n                except ValueError:", "                    gravity = float(arg)\n                except ValueError:\n                    return\n                self.push_message_to_all(SetGravity(gravity))\n            case 'weather':\n                try:\n                    weather = int(arg)\n                except ValueError:\n                    return\n                if 0 <= weather <= 0xff:", "                    return\n                if 0 <= weather <= 0xff:\n                    self.push_message_to_all(SetWeather(weather))\n            case 'weburl':\n                self.rules['weburl'] = arg\n                self.cache_rules_query_payload()\n            case 'password':\n                self.password = arg\n                self.cache_info_query_payload()\n            case 'rcon_password':", "                self.cache_info_query_payload()\n            case 'rcon_password':\n                self.rcon_password = arg\n            case 'players':\n                lines = ['ID\\tName\\tPing\\tIP']\n                for (ip, port), peer in self.peers.items():\n                    player = peer.player\n                    lines.append(f'{player.id}\\t{player.name}\\t{player.ping}\\t{ip}')\n                return lines\n            case 'cmdlist':", "                return lines\n            case 'cmdlist':\n                cmdlist = ['echo', 'exec', 'cmdlist', 'varlist', 'exit', 'kick', 'ban', 'gmx', 'changemode', 'say', 'reloadbans', 'reloadlog', 'players', 'banip', 'unbanip', 'gravity', 'weather', 'loadfs', 'unloadfs', 'reloadfs']\n                lines = ['Console commands'] + [cmd for cmd in cmdlist] + ['']\n                return lines\n            case 'varlist':\n                return [\n                    'Console Variables:',\n                    f'  language\\t= \"{self.language}\"  (string)',\n                    f'  hostname\\t= \"{self.hostname}\"  (string)',", "                    f'  language\\t= \"{self.language}\"  (string)',\n                    f'  hostname\\t= \"{self.hostname}\"  (string)',\n                    f'  maxplayers\\t= {self.max_player_count}  (int) (read-only)',\n                    f'  password\\t= \"{self.password}\"  (string)',\n                    f'  port\\t\\t= {self.addr[1]}  (int) (read-only)',\n                    f'  rcon_password\\t= \"{self.rcon_password}\"  (string)',\n                    '',\n                ]\n\n    def handle_query(self, data, addr):", "\n    def handle_query(self, data, addr):\n        match data[QUERY_ID_OFFSET]: # query id\n            case QUERY.PING: output = data[:QUERY_HEADER_SIZE+4] # just send back whatever ping time we received\n            case QUERY.INFO: output = data[:QUERY_HEADER_SIZE] + self.cached_info_query_payload\n            case QUERY.RULES: output = data[:QUERY_HEADER_SIZE] + self.cached_rules_query_payload\n            case QUERY.CLIENTS:\n                # if we want to set a fake player count we cannot send the\n                # player list because if we did the player count would be\n                # the number of players in the list (this is the default", "                # player list because if we did the player count would be\n                # the number of players in the list (this is the default\n                # behavior in the samp server browser)\n                if self.fake_player_count:\n                    return\n                output = data[:QUERY_HEADER_SIZE] + self.cached_clients_query_payload\n            case QUERY.DETAILED: output = data[:QUERY_HEADER_SIZE] + self.cached_detailed_query_payload\n            case QUERY.RCON:\n                try:\n                    q = RconQueryRequest.decode(data)", "                try:\n                    q = RconQueryRequest.decode(data)\n                except: # bad query\n                    return\n                if q.password != self.rcon_password:\n                    output = data[:QUERY_HEADER_SIZE] + self.cached_bad_rcon_password_query_payload\n                else:\n                    if (lines := self.handle_rcon_command(q.command)) is not None:\n                        for line in lines:\n                            q = RconQueryResponse(q.ip, q.port, line)", "                        for line in lines:\n                            q = RconQueryResponse(q.ip, q.port, line)\n                            self.socket.sendto(q.encode(), addr)\n                    return\n        self.socket.sendto(output, addr)\n\n    def add_peer(self, addr, addrs):\n        peer = Peer(addr, is_server_peer=False, sendto=lambda buffer: self.socket.sendto(buffer, addr))\n        peer.connected = True\n        peer.expected_client_key = None", "        peer.connected = True\n        peer.expected_client_key = None\n        peer.connected_message_callbacks.append(self.on_connected_message)\n\n        player = Player()\n        player.id = self.get_unused_id(self)\n        player.player_pool = self.player_pool\n        player.vehicle_pool = self.vehicle_pool\n        player.peer = peer\n        self.player_pool[player.id] = player", "        player.peer = peer\n        self.player_pool[player.id] = player\n        peer.player = player\n\n        self.peers[addr] = peer\n\n        if addrs:\n            addrs.append(addr)\n        else:\n            addrs = [addr]", "        else:\n            addrs = [addr]\n        self.ips[addr[0]] = addrs\n\n    def handle_packet(self, data, addr):\n        # if query packet, reply with cached response\n        if data[:4] == b'SAMP' and self.query and len(data) >= QUERY_HEADER_SIZE:\n            self.handle_query(data, addr)\n            return\n", "            return\n\n        data = decrypt_buffer(data, self.addr[1])\n\n        # check addr\n        try: # packet from connected peer\n            peer = self.peers[addr]\n            peer.handle_connected_packet(data)\n        except KeyError: # packet from unconnected peer\n            # check if server is full", "        except KeyError: # packet from unconnected peer\n            # check if server is full\n            if len(self.peers) >= self.max_player_count:\n                return\n\n            # check if the same ip is trying to make multiple connection over the limit\n            try:\n                addrs = self.ips[addr[0]]\n                if len(addrs) >= self.max_connections_per_ip:\n                    return", "                if len(addrs) >= self.max_connections_per_ip:\n                    return\n            except:\n                addrs = None\n\n            # handle initial raknet open connection request using cached response\n            if data[0] == MSG.OPEN_CONNECTION_REQUEST:\n                if data[1:3] == self.expected_raknet_cookie: # challenge passed; grant access\n                    output = self.cached_open_connection_reply\n                    self.add_peer(addr, addrs)", "                    output = self.cached_open_connection_reply\n                    self.add_peer(addr, addrs)\n                else: # wrong answer; try again\n                    output = self.cached_open_connection_cookie\n                self.socket.sendto(output, addr)\n\n    def init_game_for_player(self, peer):\n        rpc = InitGame(\n            zone_names = 1,\n            use_cj_walk = 0,", "            zone_names = 1,\n            use_cj_walk = 0,\n            allow_weapons = True,\n            limit_global_chat_radius = False,\n            global_chat_radius = 0,\n            stunt_bonus = True,\n            name_tag_draw_distance = 200.0,\n            disable_enter_exits = True,\n            name_tag_los = True,\n            manual_vehicle_engine_and_light = 0,", "            name_tag_los = True,\n            manual_vehicle_engine_and_light = 0,\n            spawns_available = 0,\n            player_id = peer.player.id,\n            show_player_tags = True,\n            show_player_markers = True,\n            world_time = 12,\n            weather = 0,\n            gravity = DEFAULT_GRAVITY,\n            lan_mode = False,", "            gravity = DEFAULT_GRAVITY,\n            lan_mode = False,\n            death_drop_money = False,\n            instagib = False,\n            onfoot_rate = 40,\n            incar_rate = 40,\n            weapon_rate = 40,\n            multiplier = 10,\n            lag_comp = True,\n            hostname = self.hostname,", "            lag_comp = True,\n            hostname = self.hostname,\n            vehicle_models = [0] * 212,\n            vehicle_friendly_fire = True\n        )\n        peer.push_message(rpc)\n\n    def on_connected_message(self, message, internal_packet, peer):\n        for callback in self.message_callbacks:\n            if callback(message, internal_packet, peer, self) is True:", "        for callback in self.message_callbacks:\n            if callback(message, internal_packet, peer, self) is True:\n                return\n\n        if message.id == MSG.PLAYER_SYNC:\n            player = peer.player\n            player.vehicle = None\n            player.seat_id = None\n            player.pos = message.pos\n            player.dir = message.dir", "            player.pos = message.pos\n            player.dir = message.dir\n            player.health = message.health\n            player.armor = message.armor\n            player.weapon_id = message.weapon_id\n            player.key_data = message.key_data\n            player.anim_data = message.anim_data\n        elif message.id == MSG.DRIVER_SYNC:\n            player = peer.player\n            vehicle_id = message.vehicle_id", "            player = peer.player\n            vehicle_id = message.vehicle_id\n            \n            if vehicle_id > MAX_VEHICLE_ID:\n                return\n            \n            vehicle = player.vehicle_pool[vehicle_id]\n            \n            if not vehicle:\n                return", "            if not vehicle:\n                return\n            \n            vehicle.pos = message.pos\n            vehicle.dir = message.dir\n            vehicle.health = message.vehicle_health\n            \n            player.vehicle = vehicle\n            player.seat_id = 0\n            player.pos = message.pos", "            player.seat_id = 0\n            player.pos = message.pos\n            player.dir = message.dir\n            player.health = message.driver_health\n            player.armor = message.driver_armor\n            player.weapon_id = message.driver_weapon_id\n            player.key_data = message.key_data\n        elif message.id == MSG.PASSENGER_SYNC:\n            player = peer.player\n            vehicle_id = message.vehicle_id", "            player = peer.player\n            vehicle_id = message.vehicle_id\n            \n            if vehicle_id > MAX_VEHICLE_ID:\n                return\n            \n            vehicle = player.vehicle_pool[vehicle_id]\n            \n            if not vehicle:\n                return", "            if not vehicle:\n                return\n            \n            vehicle.pos = message.pos\n            \n            player.vehicle = vehicle\n            player.seat_id = message.seat_id\n            player.pos = message.pos\n            player.health = message.passenger_health\n            player.armor = message.passenger_armor", "            player.health = message.passenger_health\n            player.armor = message.passenger_armor\n            player.weapon_id = message.passenger_weapon_id\n            player.key_data = message.key_data\n        elif message.id == MSG.SPECTATOR_SYNC:\n            ss = message\n            player = peer.player\n            player.pos = ss.pos\n            player.key_data = ss.key_data\n        elif message.id == MSG.RPC:", "            player.key_data = ss.key_data\n        elif message.id == MSG.RPC:\n            rpc = message\n            id = rpc.rpc_id\n            if id == RPC.PLAYER_CHAT_MESSAGE:\n                self.push_message_to_all(PlayerChatMessage(peer.player.id, rpc.message))\n            elif id == RPC.REQUEST_SPAWN:\n                peer.player.waiting_request_spawn_response = True\n                peer.push_message(RequestSpawnResponse(REQUEST_SPAWN.ACCEPT))\n                peer.player.waiting_request_spawn_response = False", "                peer.push_message(RequestSpawnResponse(REQUEST_SPAWN.ACCEPT))\n                peer.player.waiting_request_spawn_response = False\n            elif id == RPC.CLIENT_JOIN:\n                if validate_gpci(rpc.gpci):\n                    player = peer.player\n                    player.name = rpc.name\n\n                    self.init_game_for_player(peer)\n                    peer.push_message(SetSpawnInfo(pos=SPOT.GROVE))\n                    peer.push_message(RequestSpawnResponse(REQUEST_SPAWN.FORCE))", "                    peer.push_message(SetSpawnInfo(pos=SPOT.GROVE))\n                    peer.push_message(RequestSpawnResponse(REQUEST_SPAWN.FORCE))\n                    player.pos = SPOT.GROVE\n\n                    # tell this peer about connected players\n                    for other_peer in self.peers.values():\n                        if other_peer == peer:\n                            continue\n                        peer.push_message(ServerJoin(other_peer.player.id, other_peer.player.name, other_peer.player.color))\n", "                        peer.push_message(ServerJoin(other_peer.player.id, other_peer.player.name, other_peer.player.color))\n\n                    # tell other peers this peer connected\n                    self.push_message_to_others(peer, ServerJoin(player.id, peer.player.name, peer.player.color))\n                    #self.push_message_to_others(peer, StartPlayerStream(player.id,pos=player.pos))\n                else:\n                    # todo: kick player?\n                    pass\n                    del self.peers[peer.addr]\n                    return", "                    del self.peers[peer.addr]\n                    return\n            elif id == RPC.REQUEST_SCORES_AND_PINGS:\n                peer.push_encoded_message(self.cached_scores_and_pings)\n        elif message.id == MSG.CONNECTION_REQUEST:\n            if self.password == message.password:\n                random_index = random.randint(0, len(auth_keys)-1)\n                server_key = list(auth_keys)[random_index]\n                peer.expected_client_key = auth_keys[server_key]\n                message = AuthKey(server_key + b'\\0')", "                peer.expected_client_key = auth_keys[server_key]\n                message = AuthKey(server_key + b'\\0')\n                peer.push_message(message)\n            else:\n                # bad password\n                pass\n        elif message.id == MSG.AUTH_KEY:\n            if message.key == peer.expected_client_key:\n                player = peer.player\n                msg = ConnectionRequestAccepted(ip=peer.addr[0], port=peer.addr[1], player_id=player.id, cookie=self.token)", "                player = peer.player\n                msg = ConnectionRequestAccepted(ip=peer.addr[0], port=peer.addr[1], player_id=player.id, cookie=self.token)\n                peer.push_message(msg, RELIABILITY.RELIABLE, PRIORITY.SYSTEM)\n        elif message.id == MSG.CONNECTED_PONG:\n            ping = int((time.time() - self.last_ping_t) * 1000)\n            if ping >= peer.player.ping:\n                peer.player.ping = ping\n        elif message.id == MSG.RCON_COMMAND:\n            if peer.player.logged_in_rcon:\n                lines = self.handle_rcon_command(message.command)", "            if peer.player.logged_in_rcon:\n                lines = self.handle_rcon_command(message.command)\n                \n                if not lines:\n                    return\n                \n                for line in lines: # rcon response\n                    peer.push_message(ChatMessage(line, color=0xffffffff))\n            else:\n                cmd = message.command.split()[0]", "            else:\n                cmd = message.command.split()[0]\n                arg = message.command[len(cmd):].strip()\n                \n                if cmd.lower() != 'login':\n                    return\n                \n                if arg != self.rcon_password:\n                    peer.push_message(ChatMessage('SERVER: Bad admin password. Repeated attempts will get you banned.', color=0xffffffff))\n                else:", "                    peer.push_message(ChatMessage('SERVER: Bad admin password. Repeated attempts will get you banned.', color=0xffffffff))\n                else:\n                    peer.player.logged_in_rcon = True\n                    peer.push_message(ChatMessage('SERVER: You are logged in as admin.', color=0xffffffff))\n        \n        for callback in self.post_message_callbacks:\n            if callback(message, internal_packet, peer, self) is True:\n                return\n", ""]}
{"filename": "sa/sa/samp/textdraw_editor.py", "chunked_list": ["''' WIP\nthe idea is to use PyOpenGL\n'''"]}
{"filename": "sa/sa/samp/messages.py", "chunked_list": ["import enum\nimport struct\nimport math\n\nfrom .bitstream import *\nfrom .raknet import Message, MSG\nfrom sa.weapon import WEAPON\nfrom sa.skin import SKIN\nfrom sa.vehicle import VEHICLE\n", "from sa.vehicle import VEHICLE\n\nfrom .common import *\n\nfrom .keys import *\n\n'''\nThese are raknet messages defined by SA-MP.\n\nKeys", "\nKeys\nkey_data + additional_key\n\n'''\n\n''' S2C and C2S\nClient sends this message when it is driving a vehicle\nServer sends this message when there are players driving vehicles in the FOV of the client\n'''\nclass DriverSync(Message):\n    def __init__(self, driver_id, vehicle_id, pos, key_data=KeyData(0, 0, 0), dir=Quat(0.0, 0.0, 0.0, 0.0), velocity=Vec3(0.0, 0.0, 0.0), vehicle_health=1000, driver_health=100, driver_armor=0, driver_weapon_id=0, siren=0, landing_gear=0, trailer_id=None, extra=None):\n        super().__init__(MSG.DRIVER_SYNC)\n        self.driver_id = driver_id # player id of the driver\n        self.vehicle_id = vehicle_id\n        self.key_data = key_data # KeyData\n        self.dir = dir # vehicle direction as Quat\n        self.pos = pos # vehicle position as Vec3\n        self.velocity = velocity # vehicle velocity as Vec3\n        self.vehicle_health = vehicle_health\n        self.driver_health = driver_health\n        self.driver_armor = driver_armor\n        self.driver_weapon_id = driver_weapon_id\n        self.siren = siren # 1=on; 0=off\n        self.landing_gear = landing_gear # landing_gear: 1 if retracted, 0 if in normal state\n        self.trailer_id = trailer_id # None if invalid\n        self.extra = extra # extra(4 bytes): vehicle specific; may be train_speed(float), bike_inclination(float) or hydra_thrust_angle(uint32)\n        if self.extra is not None:\n            self.train_speed = self.bike_inclination = struct.unpack('f', extra)[0]\n            self.hydra_thrust_angle = struct.unpack('I', extra)[0]\n        else:\n            self.train_speed = self.bike_inclination = self.hydra_thrust_angle = None\n\n    def encode_server_payload(self):\n        bs = Bitstream()\n        bs.write_i16(self.driver_id)\n        bs.write_i16(self.vehicle_id)\n        bs.write_key_data(self.key_data)\n        bs.write_norm_quat(self.dir)\n        bs.write_vec3(self.pos)\n        bs.write_compressed_vec3(self.velocity)\n        bs.write_u16(int(self.vehicle_health))\n        bs.write_bits_num(math.ceil(self.driver_health / 7) & 0x0f, 4)\n        bs.write_bits_num(math.ceil(self.driver_armor / 7) & 0x0f, 4)\n        bs.write_bits_num(self.driver_weapon_id, 6)\n        bs.write_bits_num(self.key_data.keys >> 16, 2) # remaining bits of key_data.keys\n        bs.write_bit(self.siren)\n        bs.write_bit(self.landing_gear)\n\n        if self.extra is not None:\n            bs.write_bit(1)\n            bs.write_buffer(self.extra, 32)\n        else:\n            bs.write_bit(0)\n\n        if self.trailer_id is not None:\n            bs.write_bit(1)\n            bs.write_i16(self.trailer_id)\n        else:\n            bs.write_bit(0)\n\n        return bs.to_bytes()\n\n    def encode_client_payload(self):\n        bs = Bitstream()\n        bs.write_i16(self.vehicle_id)\n        bs.write_key_data(self.key_data)\n        bs.write_quat(self.dir)\n        bs.write_vec3(self.pos)\n        bs.write_vec3(self.velocity)\n        bs.write_float(self.vehicle_health)\n        bs.write_u8(self.driver_health)\n        bs.write_u8(self.driver_armor)\n        bs.write_bits_num(self.driver_weapon_id, 6)\n        bs.write_bits_num(self.key_data.keys >> 16, 2) # remaining bits of key_data.keys\n        bs.write_u8(self.siren)\n        bs.write_u8(self.landing_gear)\n        bs.write_i16(self.trailer_id)\n        bs.write_buffer(self.extra if self.extra is None else bytearray(4), 32)\n        return bs.to_bytes()\n\n    @staticmethod\n    def decode_server_payload(data):\n        bs = Bitstream(data)\n        driver_id = bs.read_u16()\n        vehicle_id = bs.read_u16()\n        key_data = bs.read_key_data()\n        dir = bs.read_norm_quat()\n        pos = bs.read_vec3()\n        velocity = bs.read_compressed_vec3()\n        vehicle_health = bs.read_u16()\n        driver_health = bs.read_bits_num(4)\n        driver_health = min(100, driver_health * 7)\n        driver_armor = bs.read_bits_num(4)\n        driver_armor = min(100, driver_armor * 7)\n        driver_weapon_id = bs.read_bits_num(6)\n        key_data.keys |= (bs.read_bits_num(2) << 16)\n        siren = bs.read_bit()\n        landing_gear = bs.read_bit()\n\n        if has_extra := bs.read_bit():\n            extra = bs.read_buffer(32)\n        else:\n            extra = None\n\n        if has_trailer := bs.read_bit():\n            trailer_id = bs.read_i16()\n        else:\n            trailer_id = None\n\n        return DriverSync(driver_id, vehicle_id, pos, key_data, dir, velocity, vehicle_health, driver_health, driver_armor, driver_weapon_id, siren, landing_gear, trailer_id, extra)\n\n    @staticmethod\n    def decode_client_payload(data):\n        bs = Bitstream(data)\n        vehicle_id = bs.read_i16()\n        key_data = bs.read_key_data()\n        dir = bs.read_quat()\n        pos = bs.read_vec3()\n        velocity = bs.read_vec3()\n        vehicle_health = bs.read_float()\n        driver_health = bs.read_u8()\n        driver_armor = bs.read_u8()\n        driver_weapon_id = bs.read_bits_num(6)\n        key_data.keys |= (bs.read_bits_num(2) << 16)\n        siren = bs.read_u8()\n        landing_gear = bs.read_u8()\n        trailer_id = bs.read_i16()\n        if trailer_id == -1:\n            trailer_id = None\n        extra = bs.read_buffer(32)\n        return DriverSync(None, vehicle_id, pos, key_data, dir, velocity, vehicle_health, driver_health, driver_armor, driver_weapon_id, siren, landing_gear, trailer_id, extra)", "Server sends this message when there are players driving vehicles in the FOV of the client\n'''\nclass DriverSync(Message):\n    def __init__(self, driver_id, vehicle_id, pos, key_data=KeyData(0, 0, 0), dir=Quat(0.0, 0.0, 0.0, 0.0), velocity=Vec3(0.0, 0.0, 0.0), vehicle_health=1000, driver_health=100, driver_armor=0, driver_weapon_id=0, siren=0, landing_gear=0, trailer_id=None, extra=None):\n        super().__init__(MSG.DRIVER_SYNC)\n        self.driver_id = driver_id # player id of the driver\n        self.vehicle_id = vehicle_id\n        self.key_data = key_data # KeyData\n        self.dir = dir # vehicle direction as Quat\n        self.pos = pos # vehicle position as Vec3\n        self.velocity = velocity # vehicle velocity as Vec3\n        self.vehicle_health = vehicle_health\n        self.driver_health = driver_health\n        self.driver_armor = driver_armor\n        self.driver_weapon_id = driver_weapon_id\n        self.siren = siren # 1=on; 0=off\n        self.landing_gear = landing_gear # landing_gear: 1 if retracted, 0 if in normal state\n        self.trailer_id = trailer_id # None if invalid\n        self.extra = extra # extra(4 bytes): vehicle specific; may be train_speed(float), bike_inclination(float) or hydra_thrust_angle(uint32)\n        if self.extra is not None:\n            self.train_speed = self.bike_inclination = struct.unpack('f', extra)[0]\n            self.hydra_thrust_angle = struct.unpack('I', extra)[0]\n        else:\n            self.train_speed = self.bike_inclination = self.hydra_thrust_angle = None\n\n    def encode_server_payload(self):\n        bs = Bitstream()\n        bs.write_i16(self.driver_id)\n        bs.write_i16(self.vehicle_id)\n        bs.write_key_data(self.key_data)\n        bs.write_norm_quat(self.dir)\n        bs.write_vec3(self.pos)\n        bs.write_compressed_vec3(self.velocity)\n        bs.write_u16(int(self.vehicle_health))\n        bs.write_bits_num(math.ceil(self.driver_health / 7) & 0x0f, 4)\n        bs.write_bits_num(math.ceil(self.driver_armor / 7) & 0x0f, 4)\n        bs.write_bits_num(self.driver_weapon_id, 6)\n        bs.write_bits_num(self.key_data.keys >> 16, 2) # remaining bits of key_data.keys\n        bs.write_bit(self.siren)\n        bs.write_bit(self.landing_gear)\n\n        if self.extra is not None:\n            bs.write_bit(1)\n            bs.write_buffer(self.extra, 32)\n        else:\n            bs.write_bit(0)\n\n        if self.trailer_id is not None:\n            bs.write_bit(1)\n            bs.write_i16(self.trailer_id)\n        else:\n            bs.write_bit(0)\n\n        return bs.to_bytes()\n\n    def encode_client_payload(self):\n        bs = Bitstream()\n        bs.write_i16(self.vehicle_id)\n        bs.write_key_data(self.key_data)\n        bs.write_quat(self.dir)\n        bs.write_vec3(self.pos)\n        bs.write_vec3(self.velocity)\n        bs.write_float(self.vehicle_health)\n        bs.write_u8(self.driver_health)\n        bs.write_u8(self.driver_armor)\n        bs.write_bits_num(self.driver_weapon_id, 6)\n        bs.write_bits_num(self.key_data.keys >> 16, 2) # remaining bits of key_data.keys\n        bs.write_u8(self.siren)\n        bs.write_u8(self.landing_gear)\n        bs.write_i16(self.trailer_id)\n        bs.write_buffer(self.extra if self.extra is None else bytearray(4), 32)\n        return bs.to_bytes()\n\n    @staticmethod\n    def decode_server_payload(data):\n        bs = Bitstream(data)\n        driver_id = bs.read_u16()\n        vehicle_id = bs.read_u16()\n        key_data = bs.read_key_data()\n        dir = bs.read_norm_quat()\n        pos = bs.read_vec3()\n        velocity = bs.read_compressed_vec3()\n        vehicle_health = bs.read_u16()\n        driver_health = bs.read_bits_num(4)\n        driver_health = min(100, driver_health * 7)\n        driver_armor = bs.read_bits_num(4)\n        driver_armor = min(100, driver_armor * 7)\n        driver_weapon_id = bs.read_bits_num(6)\n        key_data.keys |= (bs.read_bits_num(2) << 16)\n        siren = bs.read_bit()\n        landing_gear = bs.read_bit()\n\n        if has_extra := bs.read_bit():\n            extra = bs.read_buffer(32)\n        else:\n            extra = None\n\n        if has_trailer := bs.read_bit():\n            trailer_id = bs.read_i16()\n        else:\n            trailer_id = None\n\n        return DriverSync(driver_id, vehicle_id, pos, key_data, dir, velocity, vehicle_health, driver_health, driver_armor, driver_weapon_id, siren, landing_gear, trailer_id, extra)\n\n    @staticmethod\n    def decode_client_payload(data):\n        bs = Bitstream(data)\n        vehicle_id = bs.read_i16()\n        key_data = bs.read_key_data()\n        dir = bs.read_quat()\n        pos = bs.read_vec3()\n        velocity = bs.read_vec3()\n        vehicle_health = bs.read_float()\n        driver_health = bs.read_u8()\n        driver_armor = bs.read_u8()\n        driver_weapon_id = bs.read_bits_num(6)\n        key_data.keys |= (bs.read_bits_num(2) << 16)\n        siren = bs.read_u8()\n        landing_gear = bs.read_u8()\n        trailer_id = bs.read_i16()\n        if trailer_id == -1:\n            trailer_id = None\n        extra = bs.read_buffer(32)\n        return DriverSync(None, vehicle_id, pos, key_data, dir, velocity, vehicle_health, driver_health, driver_armor, driver_weapon_id, siren, landing_gear, trailer_id, extra)", "\n''' C2S\n'''\nclass RconCommand(Message):\n    def __init__(self, command):\n        super().__init__(MSG.RCON_COMMAND)\n        self.command = command\n\n    def encode_client_payload(self):\n        bs = Bitstream()\n        bs.write_dynamic_buf32(self.command.encode(SAMP_ENCODING))\n        return bs.to_bytes()\n\n    @staticmethod\n    def decode_client_payload(data):\n        bs = Bitstream(data)\n        command = bs.read_dynamic_buf32().decode(SAMP_ENCODING)\n        return RconCommand(command)", "\n#class RconResponse(Message):\n#    def __init__(self):\n#        super().__init__(MSG.RCON_RESPONSE)\n#\n#    def encode_payload(self):\n#        pass\n#\n#    @staticmethod\n#    def decode_payload(data):", "#    @staticmethod\n#    def decode_payload(data):\n#        return RconResponse()\n\n''' S2C and C2S\nClient sends this message to sync its aim(e.g. where it's looking at)\n'''\nclass AimSync(Message):\n    def __init__(self, player_id, cam_mode, cam_dir, cam_pos, aim_z, weapon_state, cam_zoom, aspect_ratio):\n        super().__init__(MSG.AIM_SYNC)\n        self.player_id = player_id\n        self.cam_mode = cam_mode\n        self.cam_dir = cam_dir # camera direction as Vec3(euler angles)\n        self.cam_pos = cam_pos # camera position as Vec3\n        self.aim_z = aim_z\n        self.weapon_state = weapon_state\n        self.cam_zoom = cam_zoom\n        self.aspect_ratio = aspect_ratio\n\n    def encode_server_payload(self):\n        bs = Bitstream()\n        bs.write_u16(self.player_id)\n        bs.write_u8(self.mode)\n        bs.write_vec3(self.cam_dir)\n        bs.write_vec3(self.cam_pos)\n        bs.write_float(self.aim_z)\n        bs.write_bits_num(self.zoom, 6)\n        bs.write_bits_num(self.weapon_state, 2)\n        bs.write_u8(self.aspect_ratio)\n        return bs.to_bytes()\n\n    def encode_client_payload(self):\n        bs = Bitstream()\n        bs.write_u8(self.mode)\n        bs.write_vec3(self.cam_dir)\n        bs.write_vec3(self.cam_pos)\n        bs.write_float(self.aim_z)\n        bs.write_bits_num(self.zoom, 6)\n        bs.write_bits_num(self.weapon_state, 2)\n        bs.write_u8(self.aspect_ratio)\n        return bs.to_bytes()\n\n    @staticmethod\n    def decode_server_payload(data):\n        bs = Bitstream(data)\n        player_id = bs.read_u16()\n        mode = bs.read_u8()\n        cam_dir = bs.read_vec3()\n        cam_pos = bs.read_vec3()\n        aim_z = bs.read_float()\n        zoom = bs.read_bits_num(6)\n        weapon_state = bs.read_bits_num(2)\n        aspect_ratio = bs.read_u8()\n        return AimSync(player_id, mode, cam_dir, cam_pos, aim_z, weapon_state, zoom, aspect_ratio)\n\n    @staticmethod\n    def decode_client_payload(data):\n        bs = Bitstream(data)\n        mode = bs.read_u8()\n        cam_dir = bs.read_vec3()\n        cam_pos = bs.read_vec3()\n        aim_z = bs.read_float()\n        zoom = bs.read_bits_num(6)\n        weapon_state = bs.read_bits_num(2)\n        aspect_ratio = bs.read_u8()\n        return AimSync(None, mode, cam_dir, cam_pos, aim_z, weapon_state, zoom, aspect_ratio)", "\n''' C2S\nThe client sends this message to the server when:\n (1) The ammo of a weapon changes, e.g. when shooting so the ammo decreases\n (2) When starting/stopping to/from aiming at a player/actor\n'''\nclass WeaponsUpdate(Message):\n    def __init__(self, target_player_id=None, target_actor_id=None, weapons=[]):\n        super().__init__(MSG.WEAPONS_UPDATE)\n        self.target_player_id = target_player_id\n        self.target_actor_id = target_actor_id\n        self.weapons = weapons # [(slot, id, ammo), ...] ; up to 13 slots -> [0,12]\n\n    def encode_client_payload(self):\n        data = struct.pack('hh', -1 if self.target_player_id == None else self.target_player_id, -1 if self.target_actor_id == None else self.target_actor_id)\n        for slot, id, ammo in self.weapons:\n            data += struct.pack('BBH', slot, id, ammo)\n        return data\n\n    @staticmethod\n    def decode_client_payload(data):\n        target_player_id, target_actor_id = struct.unpack_from('hh', data)\n        weapons = [weapon for weapon in struct.iter_unpack('BBH', data[4:])]\n        return WeaponsUpdate(target_player_id, target_actor_id, weapons)", "\n''' C2S\nThe client sends this message periodically to the server to inform the current money and drunk_level\n'''\nclass StatsUpdate(Message):\n    def __init__(self, money, drunk_level):\n        super().__init__(MSG.STATS_UPDATE)\n        self.money = money\n        self.drunk_level = drunk_level\n\n    def encode_server_payload(self):\n        struct.pack('iI', self.money, self.drunk_level)\n\n    @staticmethod\n    def decode_client_payload(data):\n        money, drunk_level = struct.unpack_from('iI', data)\n        return StatsUpdate(money, drunk_level)", "\n''' S2C and C2S\n'''\nclass BulletSync(Message):\n    def __init__(self, player_id, hit_type, hit_id, origin, hit_pos, offset, weapon_id):\n        super().__init__(MSG.BULLET_SYNC)\n        self.player_id = player_id\n        self.hit_type = hit_type\n        self.hit_id = hit_id\n        self.origin = origin\n        self.hit_pos = hit_pos\n        self.offset = offset\n        self.weapon_id = weapon_id\n\n    def encode_server_payload(self):\n        bs = Bitstream()\n        bs.write_u16(self.player_id)\n        bs.write_u8(self.hit_type)\n        bs.write_u16(self.hit_id)\n        bs.write_vec3(self.origin)\n        bs.write_vec3(self.hit_pos)\n        bs.write_vec3(self.offset)\n        bs.write_u8(self.weapon_id)\n        return bs.to_bytes()\n\n    def encode_client_payload(self):\n        bs = Bitstream()\n        bs.write_u8(self.hit_type)\n        bs.write_u16(self.hit_id)\n        bs.write_vec3(self.origin)\n        bs.write_vec3(self.hit_pos)\n        bs.write_vec3(self.offset)\n        bs.write_u8(self.weapon_id)\n        return bs.to_bytes()\n\n    @staticmethod\n    def decode_server_payload(data):\n        bs = Bitstream(data)\n        player_id = bs.read_u16()\n        hit_type = bs.read_u8()\n        hit_id = bs.read_u16()\n        origin = bs.read_vec3()\n        hit_pos = bs.read_vec3()\n        offset = bs.read_vec3()\n        weapon_id = bs.read_u8()\n        return BulletSync(player_id, hit_type, hit_id, origin, hit_pos, offset, weapon_id)\n\n    @staticmethod\n    def decode_client_payload(data):\n        bs = Bitstream(data)\n        hit_type = bs.read_u8()\n        hit_id = bs.read_u16()\n        origin = bs.read_vec3()\n        hit_pos = bs.read_vec3()\n        offset = bs.read_vec3()\n        weapon_id = bs.read_u8()\n        return BulletSync(None, hit_type, hit_id, origin, hit_pos, offset, weapon_id)", "\n''' S2C and S2C\nThe server must only send PlayerSync after ServerJoin and StartPlayerStream RPCs have been sent, otherwise the client ignores the sync\n\nThe client sends PlayerSync periodically to update the server about position, health, ...\n'''\nclass PlayerSync(Message):\n    def __init__(self, player_id, key_data=KeyData(0, 0, 0), pos=Vec3(0.0, 0.0, 3.0), dir=Quat(0.0, 0.0, 0.0, 0.0), health=100, armor=0, weapon_id=0, special_action=0, vel=Vec3(0.0, 0.0, 0.0), surf_data=None, anim_data=None):\n        super().__init__(MSG.PLAYER_SYNC)\n        self.player_id = player_id\n        self.key_data = key_data # KeyData; see keys.py\n        self.pos = pos # Player position as Vec3\n        self.dir = dir # Player direction as Quat\n        self.health = health\n        self.armor = armor\n        self.weapon_id = weapon_id\n        self.special_action = special_action\n        self.vel = vel # Player velocity as Vec3\n        self.surf_data = surf_data # SurfData; see surf.py\n        self.anim_data = anim_data # AnimData; see anim.py\n\n    def encode_server_payload(self):\n        bs = Bitstream()\n        bs.write_u16(self.player_id)\n        bs.write_compressed_key_data(self.key_data)\n        bs.write_vec3(self.pos)\n        bs.write_norm_quat(self.dir)\n        bs.write_bits_num(math.ceil(self.health / 7) & 0x0f, 4)\n        bs.write_bits_num(math.ceil(self.armor / 7) & 0x0f, 4)\n        bs.write_bits_num(self.weapon_id, 6)\n        bs.write_bits_num(self.key_data.keys >> 16, 2)\n        bs.write_u8(self.special_action)\n        bs.write_compressed_vec3(self.vel)\n        bs.write_compressed_surf_data(self.surf_data)\n        bs.write_compressed_anim_data(self.anim_data)\n        return bs.to_bytes()\n\n    def encode_client_payload(self):\n        bs = Bitstream()\n        bs.write_key_data(self.key_data)\n        bs.write_vec3(self.pos)\n        bs.write_quat(self.dir)\n        bs.write_u8(self.health)\n        bs.write_u8(self.armor)\n        bs.write_bits_num(self.weapon_id, 6)\n        bs.write_bits_num(self.key_data.keys >> 16, 2)\n        bs.write_u8(self.special_action)\n        bs.write_vec3(self.vel)\n        bs.write_surf_data(self.surf_data)\n        bs.write_anim_data(self.anim_data)\n        return bs.to_bytes()\n\n    @staticmethod\n    def decode_server_payload(data):\n        bs = Bitstream(data)\n        player_id = bs.read_u16()\n        key_data = bs.read_compressed_key_data()\n        pos = bs.read_vec3()\n        dir = bs.read_norm_quat()\n        health = bs.read_bits_num(4)\n        health = min(100, health * 7)\n        armor = bs.read_bits_num(4)\n        armor = min(100, armor * 7)\n        weapon_id = bs.read_bits_num(6)\n        key_data.keys |= (bs.read_bits_num(2) << 16)\n        special_action = bs.read_u8()\n        vel = bs.read_compressed_vec3()\n        surf_data = bs.read_compressed_surf_data()\n        anim_data = bs.read_compressed_anim_data()\n        return PlayerSync(player_id, key_data, pos, dir, health, armor, weapon_id, special_action, vel, surf_data, anim_data)\n\n    @staticmethod\n    def decode_client_payload(data):\n        bs = Bitstream(data)\n        key_data = bs.read_key_data()\n        pos = bs.read_vec3()\n        dir = bs.read_quat()\n        health = bs.read_u8()\n        armor = bs.read_u8()\n        weapon_id = bs.read_bits_num(6)\n        key_data.keys |= (bs.read_bits_num(2) << 16)\n        special_action = bs.read_u8()\n        vel = bs.read_vec3()\n        surf_data = bs.read_surf_data()\n        anim_data = bs.read_anim_data()\n        return PlayerSync(None, key_data, pos, dir, health, armor, weapon_id, special_action, vel, surf_data, anim_data)", "\n''' S2C\n\n'''\nclass MarkersSync(Message):\n    def __init__(self, markers):\n        super().__init__(MSG.MARKERS_SYNC)\n        self.markers = [] # [(player_id, pos), ...]; pos may be None\n\n    def encode_server_payload(self):\n        bs = Bitstream()\n        bs.write_u16(len(self.markers))\n        for player_id, pos in self.markers:\n            bs.write_u16(player_id)\n            if pos != None:\n                bs.write_bit(1)\n                bs.write_i16(int(pos.x))\n                bs.write_i16(int(pos.y))\n                bs.write_i16(int(pos.z))\n            else:\n                bs.write_bit(0)\n        return bs.to_bytes()\n\n    @staticmethod\n    def decode_server_payload(data):\n        bs = Bitstream(data)\n        player_count = bs.read_u32()\n        markers = [None] * player_count\n        for i in range(player_count):\n            player_id = bs.read_u16()\n            if has_marker := bs.read_bit():\n                x = bs.read_i16()\n                y = bs.read_i16()\n                z = bs.read_i16()\n                pos = Vec3(x, y, z)\n            else:\n                pos = None\n            markers[i] = (player_id, pos)\n        return MarkersSync(markers)", "\n''' S2C and C2S\nUnoccupied means no one is in the vehicle\n'''\nclass UnoccupiedVehicleSync(Message):\n    def __init__(self, player_id, vehicle_id, seat_id, roll, rot, pos, vel, angular_vel, health):\n        super().__init__(MSG.UNOCCUPIED_VEHICLE_SYNC)\n        self.player_id = player_id\n        self.vehicle_id = vehicle_id\n        self.seat_id = seat_id\n        self.roll = roll\n        self.rot = rot\n        self.pos = pos\n        self.vel = vel\n        self.angular_vel = angular_vel\n        self.health = health\n\n    def encode_server_payload(self):\n        bs = Bitstream()\n        bs.write_u16(self.player_id)\n        bs.write_u16(self.vehicle_id)\n        bs.write_u8(self.seat_id)\n        bs.write_vec3(self.roll)\n        bs.write_vec3(self.rot)\n        bs.write_vec3(self.pos)\n        bs.write_vec3(self.vel)\n        bs.write_vec3(self.angular_vel)\n        bs.write_float(self.health)\n        return bs.to_bytes()\n\n    def encode_client_payload(self):\n        bs = Bitstream()\n        bs.write_u16(self.vehicle_id)\n        bs.write_u8(self.seat_id)\n        bs.write_vec3(self.roll)\n        bs.write_vec3(self.rot)\n        bs.write_vec3(self.pos)\n        bs.write_vec3(self.vel)\n        bs.write_vec3(self.angular_vel)\n        bs.write_float(self.health)\n        return bs.to_bytes()\n\n    @staticmethod\n    def decode_server_payload(data):\n        bs = Bitstream(data)\n        player_id = bs.read_u16()\n        vehicle_id = bs.read_u16()\n        seat_id = bs.read_u8()\n        roll = bs.read_vec3()\n        rot = bs.read_vec3()\n        pos = bs.read_vec3()\n        vel = bs.read_vec3()\n        angular_vel = bs.read_vec3()\n        health = bs.read_float()\n        return UnoccupiedVehicleSync(player_id, vehicle_id, seat_id, roll, rot, pos, vel, angular_vel, health)\n\n    @staticmethod\n    def decode_client_payload(data):\n        bs = Bitstream(data)\n        vehicle_id = bs.read_u16()\n        seat_id = bs.read_u8()\n        roll = bs.read_vec3()\n        rot = bs.read_vec3()\n        pos = bs.read_vec3()\n        vel = bs.read_vec3()\n        angular_vel = bs.read_vec3()\n        health = bs.read_float()\n        return UnoccupiedVehicleSync(None, vehicle_id, seat_id, roll, rot, pos, vel, angular_vel, health)", "\n''' S2C and C2S\n'''\nclass TrailerSync(Message):\n    def __init__(self, player_id, vehicle_id, pos, dir, vel, turn_vel):\n        super().__init__(MSG.TRAILER_SYNC)\n        self.player_id = player_id\n        self.vehicle_id = vehicle_id\n        self.pos = pos\n        self.dir = dir\n        self.vel = vel\n        self.turn_vel = turn_vel\n\n    def encode_server_payload(self):\n        bs = Bitstream()\n        bs.write_u16(self.player_id)\n        bs.write_u16(self.vehicle_id)\n        bs.write_vec3(self.pos)\n        bs.write_quat(self.dir)\n        bs.write_vec3(self.vel)\n        bs.write_vec3(self.turn_vel)\n        return bs.to_bytes()\n\n    def encode_client_payload(self):\n        bs = Bitstream()\n        bs.write_u16(self.vehicle_id)\n        bs.write_vec3(self.pos)\n        bs.write_quat(self.dir)\n        bs.write_vec3(self.vel)\n        bs.write_vec3(self.turn_vel)\n        return bs.to_bytes()\n\n    @staticmethod\n    def decode_server_payload(data):\n        bs = Bitstream(data)\n        player_id = bs.read_u16()\n        vehicle_id = bs.read_u16()\n        pos = bs.read_vec3()\n        dir = bs.read_quat()\n        vel = bs.read_vec3()\n        turn_vel = bs.read_vec3()\n        return TrailerSync(player_id, vehicle_id, pos, dir, vel, turn_vel)\n\n    @staticmethod\n    def decode_client_payload(data):\n        bs = Bitstream(data)\n        vehicle_id = bs.read_u16()\n        pos = bs.read_vec3()\n        dir = bs.read_quat()\n        vel = bs.read_vec3()\n        turn_vel = bs.read_vec3()\n        return TrailerSync(None, vehicle_id, pos, dir, vel, turn_vel)", "\n''' S2C and C2S\n'''\nclass PassengerSync(Message):\n    def __init__(self, passenger_id, vehicle_id, seat_id, drive_by, passenger_weapon_id, passenger_health, passenger_armor, key_data, pos):\n        super().__init__(MSG.PASSENGER_SYNC)\n        self.passenger_id = passenger_id\n        self.vehicle_id = vehicle_id\n        self.seat_id = seat_id\n        self.drive_by = drive_by\n        self.passenger_weapon_id = passenger_weapon_id\n        self.passenger_health = passenger_health\n        self.passenger_armor = passenger_armor\n        self.key_data = key_data\n        self.pos = pos # passenger position; vec3\n\n    def encode_server_payload(self):\n        bs = Bitstream()\n        bs.write_u16(self.passenger_id)\n        bs.write_u16(self.vehicle_id)\n        bs.write_bits_num(self.seat_id, 2)\n        bs.write_bits_num(self.drive_by, 6)\n        bs.write_bits_num(self.passenger_weapon_id, 6)\n        bs.write_bits_num(self.key_data.keys >> 16, 2)\n        bs.write_u8(self.passenger_health)\n        bs.write_u8(self.passenger_armor)\n        bs.write_key_data(self.key_data)\n        bs.write_vec3(self.pos)\n        return bs.to_bytes()\n\n    def encode_client_payload(self):\n        bs = Bitstream()\n        bs.write_u16(self.vehicle_id)\n        bs.write_bits_num(self.seat_id, 2)\n        bs.write_bits_num(self.drive_by, 6)\n        bs.write_bits_num(self.passenger_weapon_id, 6)\n        bs.write_bits_num(self.key_data.keys >> 16, 2)\n        bs.write_u8(self.passenger_health)\n        bs.write_u8(self.passenger_armor)\n        bs.write_key_data(self.key_data)\n        bs.write_vec3(self.pos)\n        return bs.to_bytes()\n\n    @staticmethod\n    def decode_server_payload(data):\n        bs = Bitstream(data)\n        passenger_id = bs.read_u16()\n        vehicle_id = bs.read_u16()\n        seat_id = bs.read_bits_num(2)\n        drive_by = bs.read_bits_num(6)\n        passenger_weapon_id = bs.read_bits_num(6)\n        additional_key = bs.read_bits_num(2)\n        passenger_health = bs.read_u8()\n        passenger_armor = bs.read_u8()\n        key_data = bs.read_key_data()\n        key_data.keys |= (additional_key << 16)\n        pos = bs.read_vec3()\n        return PassengerSync(passenger_id, vehicle_id, seat_id, drive_by, passenger_weapon_id, passenger_health, passenger_armor, key_data, pos)\n\n    @staticmethod\n    def decode_client_payload(data):\n        bs = Bitstream(data)\n        vehicle_id = bs.read_u16()\n        seat_id = bs.read_bits_num(2)\n        drive_by = bs.read_bits_num(6)\n        passenger_weapon_id = bs.read_bits_num(6)\n        additional_key = bs.read_bits_num(2)\n        passenger_health = bs.read_u8()\n        passenger_armor = bs.read_u8()\n        key_data = bs.read_key_data()\n        key_data.keys |= (additional_key << 16)\n        pos = bs.read_vec3()\n        return PassengerSync(None, vehicle_id, seat_id, drive_by, passenger_weapon_id, passenger_health, passenger_armor, key_data, pos)", "\n''' S2C and C2S\n'''\nclass SpectatorSync(Message):\n    def __init__(self, key_data, pos):\n        super().__init__(MSG.SPECTATOR_SYNC)\n        self.key_data = key_data # KeyData\n        self.pos = pos # player position as Vec3\n\n    def encode_server_payload(self):\n        bs = Bitstream()\n        bs.write_compressed_key_data(self.key_data)\n        bs.write_vec3(self.pos)\n        return bs.to_bytes()\n\n    def encode_client_payload(self):\n        bs = Bitstream()\n        bs.write_key_data(self.key_data)\n        bs.write_vec3(self.pos)\n        return bs.to_bytes()\n\n    @staticmethod\n    def decode_server_payload(data):\n        bs = Bitstream(data)\n        key_data = bs.read_compressed_key_data()\n        pos = bs.read_vec3()\n        return SpectatorSync(key_data, pos)\n\n    @staticmethod\n    def decode_client_payload(data):\n        bs = Bitstream(data)\n        key_data = bs.read_key_data()\n        pos = bs.read_vec3()\n        return SpectatorSync(key_data, pos)", ""]}
{"filename": "examples/client.py", "chunked_list": ["import asyncio\nfrom sa import samp\nfrom sa.samp import RPC, MSG\n\ndef on_message(message, internal_packet, peer, client):\n    print(message)\n    #if message.id == MSG.RPC:\n    #    rpc = message\n    #    print(rpc)\n", "    #    print(rpc)\n\nasync def f(c):\n    await asyncio.sleep(5)\n    c.server_peer.push_message(samp.RconCommand('login changeme'))\n    \nasync def main():\n    c = samp.Client(('127.0.0.1', 7777))\n    c.name = 'bob'\n    c.message_callbacks.append(on_message)", "    c.name = 'bob'\n    c.message_callbacks.append(on_message)\n    await c.start()\n    \n    asyncio.get_event_loop().create_task(f(c))\n    \n    while True:\n        await asyncio.sleep(0.01)\n        c.update()\n\ntry:\n    asyncio.run(main())\nexcept KeyboardInterrupt:\n    pass", "        c.update()\n\ntry:\n    asyncio.run(main())\nexcept KeyboardInterrupt:\n    pass\n"]}
{"filename": "examples/query.py", "chunked_list": ["# Look at the end to see real outputs\n\nfrom sa.samp import *\nfrom socket import *\n\nADDR = ('127.0.0.1', 7777)\nRCON_PASSWORD = 'changeme'\n\ns = socket(AF_INET, SOCK_DGRAM)\ns.settimeout(1)", "s = socket(AF_INET, SOCK_DGRAM)\ns.settimeout(1)\n\ndef print_queries():\n    try:\n        while True:\n            data, addr = s.recvfrom(2**16)\n            try:\n                print(Query.decode_response(data))\n            except: # bad query response\n                pass\n    except TimeoutError:\n        pass\n    print() # blank separator", "\nif __name__ == '__main__':\n    # Test ping query\n    q = PingQueryRequest(ADDR[0], ADDR[1], 12345678)\n    print(q)\n    s.sendto(q.encode(), ADDR)\n    print_queries()\n\n    # Test info query\n    q = InfoQueryRequest(ADDR[0], ADDR[1])\n    print(q)\n    s.sendto(q.encode(), ADDR)\n    print_queries()\n\n    # Test rules query\n    q = RulesQueryRequest(ADDR[0], ADDR[1])\n    print(q)\n    s.sendto(q.encode(), ADDR)\n    print_queries()\n\n    # Test clients query\n    q = ClientsQueryRequest(ADDR[0], ADDR[1])\n    print(q)\n    s.sendto(q.encode(), ADDR)\n    print_queries()\n\n    # Test detailed players query\n    q = DetailedQueryRequest(ADDR[0], ADDR[1])\n    print(q)\n    s.sendto(q.encode(), ADDR)\n    print_queries()\n\n    # Test multiple rcon queries\n    for cmd in ['varlist', 'players', 'cmdlist']:\n        # Test rcon query (varlist)\n        q = RconQueryRequest(ADDR[0], ADDR[1], RCON_PASSWORD, cmd)\n        print(q)\n        s.sendto(q.encode(), ADDR)\n        print_queries()", "\n\n''' Expected output on default samp-server.exe(assuming there is one player named 'Bob')\nC:\\dev\\hta\\examples>query.py\n<PingQueryRequest ip='127.0.0.1' port=7777 time=12345678>\n<PingQueryResponse ip='127.0.0.1' port=7777 time=12345678>\n\n<InfoQueryRequest ip='127.0.0.1' port=7777>\n<InfoQueryResponse ip='127.0.0.1' port=7777 has_password=False player_count=1 max_player_count=50 hostname='SA-MP 0.3 Server' gamemode='Rivershell' language='English'>\n", "<InfoQueryResponse ip='127.0.0.1' port=7777 has_password=False player_count=1 max_player_count=50 hostname='SA-MP 0.3 Server' gamemode='Rivershell' language='English'>\n\n<RulesQueryRequest ip='127.0.0.1' port=7777>\n<RulesQueryResponse ip='127.0.0.1' port=7777 rules=[('lagcomp', 'On'), ('mapname', 'San Andreas'), ('version', '0.3.7'), ('weather', '11'), ('weburl', 'www.sa-mp.com'), ('worldtime', '12:00')]>\n\n<ClientsQueryRequest ip='127.0.0.1' port=7777>\n<ClientsQueryResponse ip='127.0.0.1' port=7777 clients=[('bob', 0)]>\n\n<DetailedQueryRequest ip='127.0.0.1' port=7777>\n<DatailedQueryResponse ip='127.0.0.1' port=7777 players=[(0, 'bob', 0, 11)]>", "<DetailedQueryRequest ip='127.0.0.1' port=7777>\n<DatailedQueryResponse ip='127.0.0.1' port=7777 players=[(0, 'bob', 0, 11)]>\n\n<RconQueryRequest ip='127.0.0.1' port=7777 password='123' command='varlist'>\n<RconQueryResponse ip='127.0.0.1' port=7777 response='Console Variables:'>\n<RconQueryResponse ip='127.0.0.1' port=7777 response='  ackslimit\\t= 3000  (int)'>\n<RconQueryResponse ip='127.0.0.1' port=7777 response='  announce\\t= 0  (bool)'>\n<RconQueryResponse ip='127.0.0.1' port=7777 response='  bind\\t\\t= \"\"  (string) (read-only)'>\n<RconQueryResponse ip='127.0.0.1' port=7777 response='  chatlogging\\t= 0  (int)'>\n<RconQueryResponse ip='127.0.0.1' port=7777 response='  connseedtime\\t= 300000  (int)'>", "<RconQueryResponse ip='127.0.0.1' port=7777 response='  chatlogging\\t= 0  (int)'>\n<RconQueryResponse ip='127.0.0.1' port=7777 response='  connseedtime\\t= 300000  (int)'>\n<RconQueryResponse ip='127.0.0.1' port=7777 response='  filterscripts\\t= \"gl_actions\"  (string) (read-only)'>\n<RconQueryResponse ip='127.0.0.1' port=7777 response='  gamemode0\\t= \"rivershell\"  (string)'>\n<RconQueryResponse ip='127.0.0.1' port=7777 response='  gamemode1\\t= \"\"  (string)'>\n<RconQueryResponse ip='127.0.0.1' port=7777 response='  gamemode10\\t= \"\"  (string)'>\n<RconQueryResponse ip='127.0.0.1' port=7777 response='  gamemode11\\t= \"\"  (string)'>\n<RconQueryResponse ip='127.0.0.1' port=7777 response='  gamemode12\\t= \"\"  (string)'>\n<RconQueryResponse ip='127.0.0.1' port=7777 response='  gamemode13\\t= \"\"  (string)'>\n<RconQueryResponse ip='127.0.0.1' port=7777 response='  gamemode14\\t= \"\"  (string)'>", "<RconQueryResponse ip='127.0.0.1' port=7777 response='  gamemode13\\t= \"\"  (string)'>\n<RconQueryResponse ip='127.0.0.1' port=7777 response='  gamemode14\\t= \"\"  (string)'>\n<RconQueryResponse ip='127.0.0.1' port=7777 response='  gamemode15\\t= \"\"  (string)'>\n<RconQueryResponse ip='127.0.0.1' port=7777 response='  gamemode2\\t= \"\"  (string)'>\n<RconQueryResponse ip='127.0.0.1' port=7777 response='  gamemode3\\t= \"\"  (string)'>\n<RconQueryResponse ip='127.0.0.1' port=7777 response='  gamemode4\\t= \"\"  (string)'>\n<RconQueryResponse ip='127.0.0.1' port=7777 response='  gamemode5\\t= \"\"  (string)'>\n<RconQueryResponse ip='127.0.0.1' port=7777 response='  gamemode6\\t= \"\"  (string)'>\n<RconQueryResponse ip='127.0.0.1' port=7777 response='  gamemode7\\t= \"\"  (string)'>\n<RconQueryResponse ip='127.0.0.1' port=7777 response='  gamemode8\\t= \"\"  (string)'>", "<RconQueryResponse ip='127.0.0.1' port=7777 response='  gamemode7\\t= \"\"  (string)'>\n<RconQueryResponse ip='127.0.0.1' port=7777 response='  gamemode8\\t= \"\"  (string)'>\n<RconQueryResponse ip='127.0.0.1' port=7777 response='  gamemode9\\t= \"\"  (string)'>\n<RconQueryResponse ip='127.0.0.1' port=7777 response='  gamemodetext\\t= \"Rivershell\"  (string)'>\n<RconQueryResponse ip='127.0.0.1' port=7777 response='  gravity\\t= \"0.008\"  (string)'>\n<RconQueryResponse ip='127.0.0.1' port=7777 response='  hostname\\t= \"SA-MP 0.3 Server\"  (string)'>\n<RconQueryResponse ip='127.0.0.1' port=7777 response='  incar_rate\\t= 40  (int) (read-only)'>\n<RconQueryResponse ip='127.0.0.1' port=7777 response='  lagcomp\\t= \"On\"  (string) (read-only) (rule)'>\n<RconQueryResponse ip='127.0.0.1' port=7777 response='  lagcompmode\\t= 1  (int) (read-only)'>\n<RconQueryResponse ip='127.0.0.1' port=7777 response='  language\\t= \"English\"  (string)'>", "<RconQueryResponse ip='127.0.0.1' port=7777 response='  lagcompmode\\t= 1  (int) (read-only)'>\n<RconQueryResponse ip='127.0.0.1' port=7777 response='  language\\t= \"English\"  (string)'>\n<RconQueryResponse ip='127.0.0.1' port=7777 response='  lanmode\\t= 0  (bool)'>\n<RconQueryResponse ip='127.0.0.1' port=7777 response='  logqueries\\t= 0  (bool)'>\n<RconQueryResponse ip='127.0.0.1' port=7777 response='  logtimeformat\\t= \"[%H:%M:%S]\"  (string) (read-only)'>\n<RconQueryResponse ip='127.0.0.1' port=7777 response='  mapname\\t= \"San Andreas\"  (string) (rule)'>\n<RconQueryResponse ip='127.0.0.1' port=7777 response='  maxnpc\\t= 0  (int)'>\n<RconQueryResponse ip='127.0.0.1' port=7777 response='  maxplayers\\t= 50  (int) (read-only)'>\n<RconQueryResponse ip='127.0.0.1' port=7777 response='  messageholelimit\\t= 3000  (int)'>\n<RconQueryResponse ip='127.0.0.1' port=7777 response='  messageslimit\\t= 500  (int)'>", "<RconQueryResponse ip='127.0.0.1' port=7777 response='  messageholelimit\\t= 3000  (int)'>\n<RconQueryResponse ip='127.0.0.1' port=7777 response='  messageslimit\\t= 500  (int)'>\n<RconQueryResponse ip='127.0.0.1' port=7777 response='  minconnectiontime\\t= 0  (int)'>\n<RconQueryResponse ip='127.0.0.1' port=7777 response='  myriad\\t= 0  (bool)'>\n<RconQueryResponse ip='127.0.0.1' port=7777 response='  nosign\\t= \"\"  (string) (read-only)'>\n<RconQueryResponse ip='127.0.0.1' port=7777 response='  onfoot_rate\\t= 40  (int) (read-only)'>\n<RconQueryResponse ip='127.0.0.1' port=7777 response='  password\\t= \"\"  (string)'>\n<RconQueryResponse ip='127.0.0.1' port=7777 response='  playertimeout\\t= 10000  (int)'>\n<RconQueryResponse ip='127.0.0.1' port=7777 response='  plugins\\t= \"\"  (string) (read-only)'>\n<RconQueryResponse ip='127.0.0.1' port=7777 response='  port\\t\\t= 7777  (int) (read-only)'>", "<RconQueryResponse ip='127.0.0.1' port=7777 response='  plugins\\t= \"\"  (string) (read-only)'>\n<RconQueryResponse ip='127.0.0.1' port=7777 response='  port\\t\\t= 7777  (int) (read-only)'>\n<RconQueryResponse ip='127.0.0.1' port=7777 response='  query\\t\\t= 1  (bool)'>\n<RconQueryResponse ip='127.0.0.1' port=7777 response='  rcon\\t\\t= 1  (bool)'>\n<RconQueryResponse ip='127.0.0.1' port=7777 response='  rcon_password\\t= \"123\"  (string)'>\n<RconQueryResponse ip='127.0.0.1' port=7777 response='  sleep\\t\\t= 5  (int)'>\n<RconQueryResponse ip='127.0.0.1' port=7777 response='  stream_distance\\t= 300.000000  (float)'>\n<RconQueryResponse ip='127.0.0.1' port=7777 response='  stream_rate\\t= 1000  (int)'>\n<RconQueryResponse ip='127.0.0.1' port=7777 response='  timestamp\\t= 1  (bool)'>\n<RconQueryResponse ip='127.0.0.1' port=7777 response='  version\\t= \"0.3.7\"  (string) (read-only) (rule)'>", "<RconQueryResponse ip='127.0.0.1' port=7777 response='  timestamp\\t= 1  (bool)'>\n<RconQueryResponse ip='127.0.0.1' port=7777 response='  version\\t= \"0.3.7\"  (string) (read-only) (rule)'>\n<RconQueryResponse ip='127.0.0.1' port=7777 response='  weapon_rate\\t= 40  (int) (read-only)'>\n<RconQueryResponse ip='127.0.0.1' port=7777 response='  weather\\t= \"11\"  (string) (rule)'>\n<RconQueryResponse ip='127.0.0.1' port=7777 response='  weburl\\t= \"www.sa-mp.com\"  (string) (rule)'>\n<RconQueryResponse ip='127.0.0.1' port=7777 response='  worldtime\\t= \"12:00\"  (string) (rule)'>\n<RconQueryResponse ip='127.0.0.1' port=7777 response=''>\n\n<RconQueryRequest ip='127.0.0.1' port=7777 password='123' command='players'>\n<RconQueryResponse ip='127.0.0.1' port=7777 response='ID\\tName\\tPing\\tIP'>", "<RconQueryRequest ip='127.0.0.1' port=7777 password='123' command='players'>\n<RconQueryResponse ip='127.0.0.1' port=7777 response='ID\\tName\\tPing\\tIP'>\n<RconQueryResponse ip='127.0.0.1' port=7777 response='0\\tbob\\t11\\t127.0.0.1'>\n\n<RconQueryRequest ip='127.0.0.1' port=7777 password='123' command='cmdlist'>\n<RconQueryResponse ip='127.0.0.1' port=7777 response='Console Commands:'>\n<RconQueryResponse ip='127.0.0.1' port=7777 response='  echo'>\n<RconQueryResponse ip='127.0.0.1' port=7777 response='  exec'>\n<RconQueryResponse ip='127.0.0.1' port=7777 response='  cmdlist'>\n<RconQueryResponse ip='127.0.0.1' port=7777 response='  varlist'>", "<RconQueryResponse ip='127.0.0.1' port=7777 response='  cmdlist'>\n<RconQueryResponse ip='127.0.0.1' port=7777 response='  varlist'>\n<RconQueryResponse ip='127.0.0.1' port=7777 response='  exit'>\n<RconQueryResponse ip='127.0.0.1' port=7777 response='  kick'>\n<RconQueryResponse ip='127.0.0.1' port=7777 response='  ban'>\n<RconQueryResponse ip='127.0.0.1' port=7777 response='  gmx'>\n<RconQueryResponse ip='127.0.0.1' port=7777 response='  changemode'>\n<RconQueryResponse ip='127.0.0.1' port=7777 response='  say'>\n<RconQueryResponse ip='127.0.0.1' port=7777 response='  reloadbans'>\n<RconQueryResponse ip='127.0.0.1' port=7777 response='  reloadlog'>", "<RconQueryResponse ip='127.0.0.1' port=7777 response='  reloadbans'>\n<RconQueryResponse ip='127.0.0.1' port=7777 response='  reloadlog'>\n<RconQueryResponse ip='127.0.0.1' port=7777 response='  players'>\n<RconQueryResponse ip='127.0.0.1' port=7777 response='  banip'>\n<RconQueryResponse ip='127.0.0.1' port=7777 response='  unbanip'>\n<RconQueryResponse ip='127.0.0.1' port=7777 response='  gravity'>\n<RconQueryResponse ip='127.0.0.1' port=7777 response='  weather'>\n<RconQueryResponse ip='127.0.0.1' port=7777 response='  loadfs'>\n<RconQueryResponse ip='127.0.0.1' port=7777 response='  unloadfs'>\n<RconQueryResponse ip='127.0.0.1' port=7777 response='  reloadfs'>", "<RconQueryResponse ip='127.0.0.1' port=7777 response='  unloadfs'>\n<RconQueryResponse ip='127.0.0.1' port=7777 response='  reloadfs'>\n<RconQueryResponse ip='127.0.0.1' port=7777 response=''>\n\nC:\\dev\\hta\\examples>\n'''\n\n\n\n", "\n\n\n\n\n\n''' Test output on (193.84.90.20:7777)\nC:\\dev\\hta\\examples>query.py\n<PingQueryRequest ip='193.84.90.20' port=7777 time=12345678>\n<PingQueryResponse ip='193.84.90.20' port=7777 time=12345678>", "<PingQueryRequest ip='193.84.90.20' port=7777 time=12345678>\n<PingQueryResponse ip='193.84.90.20' port=7777 time=12345678>\n\n<InfoQueryRequest ip='193.84.90.20' port=7777>\n<InfoQueryResponse ip='193.84.90.20' port=7777 has_password=False player_count=57 max_player_count=200 hostname='Monser DM | Server 02' gamemode='Monser DM && TDM' language='Russian/English'>\n\n<RulesQueryRequest ip='193.84.90.20' port=7777>\n<RulesQueryResponse ip='193.84.90.20' port=7777 rules=[('lagcomp', 'On'), ('mapname', 'Ghetto'), ('version', '0.3.7-R2'), ('weather', '23'), ('weburl', 'monser.ru'), ('worldtime', '12:00')]>\n\n<ClientsQueryRequest ip='193.84.90.20' port=7777>", "\n<ClientsQueryRequest ip='193.84.90.20' port=7777>\n<ClientsQueryResponse ip='193.84.90.20' port=7777 clients=[('[GW]Tomik_Warrior', 22), ('[GW]Casey_Morton', 6904), ('[DM]oishu.incrible', 21557), ('[GW]Evan_Bexterr', 11), ('[DM]Qwary_Flays', 35), ('[DM]Declan_Follou', 2620), ('[DM]PlotnoKalit', 5513), ('[DM]Seth_Winston', 7530), ('[DM]Fedya_Francesca', 20), ('[TS]Feramon_Dushi', 19), ('[DM]Getto_tascher', 1359), ('[DM]vinobozz', 17), ('[DM]Andrei_Sundin', 6800), ('[DM]Dreikee.Frequency', 97), ('[TS]Jeff_Dahmer', 75), ('[DM]Dolinka_Egora', 9), ('[TS]priora_hasaviurt', 43), ('[GW]chin.vagner', 573), ('[GW]Gashik.', 22241), ('[DM]chrome_google', 52), ('[TS]sunset.earldom', 12053), ('[TS]Jonathan_Monter', 3), ('[DM]Nester_kown', 108), ('[DM]gjfk_fds', 19), ('[GW]cho_jail', 4866), ('[DM]Your_Tyanka', 43), ('[TS]texa', 136), ('[DM]Nik_Angels', 5615), ('[DM]Dima_Yakyzayaex', 11), ('[GW]Cheater_Softerias', 24952), ('[DM]Bimba_Zabivnoi', 5), ('[GW]Jey_Fram', 8857), ('[DM]Kirya_Pinaev', 573), ('[DM]Serka', 32137), ('[DM]Side_Black', 76), ('[DM]Soul_Morris', 138), ('[DM]123y763147685234', 72), ('[DM]abduqawindai', 0), ('[DM]vasyavasya', 12), ('[TS]Maksim_Kartochova', 0), ('[TS]Amoral_Outcast', 436), ('[DM]Zenya_Kamazov', 10160), ('[TS]Operator_Capton', 1307), ('[DM]Muichiro_Supler', 648), ('[DM]best.super.best', 201), ('[DM]Nathan_Defender', 2052), ('[DM]Archangel', 423), ('[TS]reallG', 3), ('[DM]Warmer_Legendary', 512), ('[TS]Xeon_Gold', 1394), ('dfsdffsdfdfffffszzz', 0), ('[DM]nodomesu', 0), ('[MM]Killua_', 0), ('[MM]Killua_Ebet', 0), ('[GW]Tommie_Desperete', 294), ('[DM]Ricko_Radrigges', 21287), ('[DM]Kostik_Tripovzzzzzzz', 264)]>\n\n<DetailedQueryRequest ip='193.84.90.20' port=7777>\n<DatailedQueryResponse ip='193.84.90.20' port=7777 players=[(0, '[GW]Tomik_Warrior', 22, 117), (1, '[GW]Casey_Morton', 6904, 95), (2, '[DM]oishu.incrible', 21557, 128), (3, '[GW]Evan_Bexterr', 11, 81), (4, '[DM]Qwary_Flays', 35, 74), (5, '[DM]Declan_Follou', 2620, 84), (6, '[DM]PlotnoKalit', 5513, 95), (7, '[DM]Seth_Winston', 7530, 106), (8, '[DM]Fedya_Francesca', 20, 56), (9, '[TS]Feramon_Dushi', 19, 92), (10, '[DM]Getto_tascher', 1359, 132), (11, '[DM]vinobozz', 17, 151), (12, '[DM]Andrei_Sundin', 6800, 81), (13, '[DM]Dreikee.Frequency', 97, 114), (14, '[TS]Jeff_Dahmer', 75, 114), (15, '[DM]Dolinka_Egora', 9, 122), (16, '[TS]priora_hasaviurt', 43, 75), (17, '[GW]chin.vagner', 573, 78), (18, '[GW]Gashik.', 22241, 98), (19, '[DM]chrome_google', 52, 148), (20, '[TS]sunset.earldom', 12053, 55), (21, '[TS]Jonathan_Monter', 3, 123), (22, '[DM]Nester_kown', 108, 85), (23, '[DM]gjfk_fds', 19, 154), (24, '[GW]cho_jail', 4866, 130), (25, '[DM]Your_Tyanka', 43, 58), (26, '[TS]texa', 136, 112), (27, '[DM]Nik_Angels', 5615, 76), (28, '[DM]Dima_Yakyzayaex', 11, 68), (29, '[GW]Cheater_Softerias', 24952, 81), (30, '[DM]Bimba_Zabivnoi', 5, 78), (31, '[GW]Jey_Fram', 8857, 165), (32, '[DM]Kirya_Pinaev', 573, 63), (33, '[DM]Serka', 32138, 104), (34, '[DM]Side_Black', 76, 101), (35, '[DM]Soul_Morris', 138, 88), (36, '[DM]123y763147685234', 72, 95), (37, '[DM]abduqawindai', 0, 98), (38, '[DM]vasyavasya', 12, 84), (39, '[TS]Maksim_Kartochova', 0, 136), (40, '[TS]Amoral_Outcast', 436, 70), (41, '[DM]Zenya_Kamazov', 10160, 71), (42, '[TS]Operator_Capton', 1307, 138), (43, '[DM]Muichiro_Supler', 648, 64), (44, '[DM]best.super.best', 201, 114), (45, '[DM]Nathan_Defender', 2052, 149), (46, '[DM]Archangel', 423, 91), (47, '[TS]reallG', 3, 74), (48, '[DM]Warmer_Legendary', 512, 87), (49, '[TS]Xeon_Gold', 1394, 87), (51, 'dfsdffsdfdfffffszzz', 0, 161), (52, '[DM]nodomesu', 0, 76), (53, '[MM]Killua_', 0, 86), (54, '[MM]Killua_Ebet', 0, 122), (56, '[GW]Tommie_Desperete', 294, 81), (57, '[DM]Ricko_Radrigges', 21287, 84), (76, '[DM]Kostik_Tripovzzzzzzz', 264, 58)]>\n\n<RconQueryRequest ip='193.84.90.20' port=7777 password='123' command='varlist'>\n<RconQueryResponse ip='193.84.90.20' port=7777 response='Invalid RCON password.'>\n", "<RconQueryResponse ip='193.84.90.20' port=7777 response='Invalid RCON password.'>\n\n<RconQueryRequest ip='193.84.90.20' port=7777 password='123' command='players'>\n<RconQueryResponse ip='193.84.90.20' port=7777 response='Invalid RCON password.'>\n\n<RconQueryRequest ip='193.84.90.20' port=7777 password='123' command='cmdlist'>\n<RconQueryResponse ip='193.84.90.20' port=7777 response='Invalid RCON password.'>\n\n\nC:\\dev\\hta\\examples>", "\nC:\\dev\\hta\\examples>\n'''\n"]}
{"filename": "examples/zombie.py", "chunked_list": ["import asyncio\nfrom sa import samp\nfrom sa.samp import MSG, RPC\n\n'''\nLogin; placeholders(username + password)\n'''\n\nclass ZombieServer(samp.Server):\n    def __init__(self):\n        super().__init__(('127.0.0.1', 7777))\n        self.hostname = 'Zombie Apocalypse'\n        self.gamemode = 'Survival'\n        self.language = 'Brain'\n        self.message_callbacks.append(self.on_message)\n\n    def on_message(self, message, internal_packet, peer, server):\n        if message.id == MSG.RPC:\n            rpc = message\n            if rpc.rpc_id == RPC.CLIENT_JOIN:\n                peer.push_message(samp.ChatMessage('Welcome survivor!', 0x1aab84ff))\n                #todo peer.push_message(samp.ShowTextdraw(1, 0, samp.Vec2(5, 5), 0xff0000ff, samp.Vec2(5, 5), 0, 0, 0, 0, 0, 0, samp.Vec2(100, 100), 0, samp.Vec3(0,0,0), 0, 0, 0, 'aaa'))\n        elif message.id == MSG.CONNECTION_REQUEST:\n            peer.password = message.password", "class ZombieServer(samp.Server):\n    def __init__(self):\n        super().__init__(('127.0.0.1', 7777))\n        self.hostname = 'Zombie Apocalypse'\n        self.gamemode = 'Survival'\n        self.language = 'Brain'\n        self.message_callbacks.append(self.on_message)\n\n    def on_message(self, message, internal_packet, peer, server):\n        if message.id == MSG.RPC:\n            rpc = message\n            if rpc.rpc_id == RPC.CLIENT_JOIN:\n                peer.push_message(samp.ChatMessage('Welcome survivor!', 0x1aab84ff))\n                #todo peer.push_message(samp.ShowTextdraw(1, 0, samp.Vec2(5, 5), 0xff0000ff, samp.Vec2(5, 5), 0, 0, 0, 0, 0, 0, samp.Vec2(100, 100), 0, samp.Vec3(0,0,0), 0, 0, 0, 'aaa'))\n        elif message.id == MSG.CONNECTION_REQUEST:\n            peer.password = message.password", "\nasync def main():\n    s = ZombieServer()\n    await s.start()\n    while True:\n        await asyncio.sleep(0.01)\n        s.update()\n\ntry:\n    asyncio.run(main())\nexcept KeyboardInterrupt:\n    pass", "try:\n    asyncio.run(main())\nexcept KeyboardInterrupt:\n    pass\n"]}
{"filename": "examples/server.py", "chunked_list": ["import asyncio\nfrom sa import *\nfrom sa.samp import *\nimport traceback\n\nimport math\n\ndef on_message(message, internal_packet, peer, server):\n    if message.id == MSG.RPC:\n        rpc = message\n        if rpc.rpc_id == RPC.CLICK_SCOREBOARD_PLAYER:\n            peer.push_message(ShowGameText(0, 5000, f'You clicked on id {rpc.player_id}'))\n            if rpc.player_id == 0:\n                peer.push_message(GiveWeapon(WEAPON.M4, 250))\n            elif rpc.player_id == 1:\n                peer.push_message(RemoveAllWeapons())\n        elif rpc.rpc_id == RPC.REQUEST_CHAT_COMMAND:\n            # WARNING: REALLY INSECURE, but useful for developing/debugging\n            if rpc.command.startswith('/x'):\n                try:\n                    exec(rpc.command[2:])\n                except:\n                    for line in traceback.format_exc().split('\\n'):\n                        peer.push_message(ChatMessage(line, color=0xdd0000ff))\n            elif rpc.command.startswith('/rpc'):\n                try:\n                    peer.push_message(eval(rpc.command[4:]))\n                except:\n                    for line in traceback.format_exc().split('\\n'):\n                        peer.push_message(ChatMessage(line, color=0xdd0000ff))\n            elif rpc.command.startswith('/money'):\n                try:\n                    amount = int(rpc.command.split()[1])\n                    peer.push_message(GiveMoney(amount))\n                except:\n                    peer.push_message(ChatMessage('Usage: /money <amount>', color=0x999900ff))\n            elif rpc.command == '/nomoney':\n                peer.push_message(ResetMoney())\n            elif rpc.command.startswith('/face'):\n                try:\n                    angle = float(rpc.command.split()[1])\n                    peer.push_message(SetFacingAngle(angle))\n                except:\n                    peer.push_message(ChatMessage('Usage: /face <angle>', color=0x999900ff))\n            elif rpc.command == '/rhinos':\n                for i in range(10):\n                    peer.push_message(RemoveVehicle(100+i))\n                    peer.push_message(AddVehicle(100+i, VEHICLE.RHINO, Vec3(0 + 20*math.cos(i/10*2*math.pi), 0 + 20*math.sin(i/10*2*math.pi), 3), dir_z=0))\n                    peer.push_message(Show3DTextLabel(100+i, f'Bot Rhino {i}', 0xdddd00dd, Vec3(0, 0, 0), draw_distance=100, test_los=False, attached_vehicle_id=100+i))\n            else:\n                peer.push_message(ChatMessage('Invalid command', color=0xdd0000ff))", "\nasync def main():\n    s = Server(('127.0.0.1', 7777))\n    s.message_callbacks.append(on_message)\n    s.fake_player_list =  {'alice': 100, 'zebra': 999}\n    await s.start()\n\n    while True:\n        await asyncio.sleep(0.01)\n        s.update()", "        await asyncio.sleep(0.01)\n        s.update()\n\ntry:\n    asyncio.run(main())\nexcept KeyboardInterrupt:\n    pass\n"]}
{"filename": "examples/sniffer.py", "chunked_list": [""]}
{"filename": "examples/live_server/module.py", "chunked_list": ["import asyncio\nimport math\nimport traceback\n\nfrom sa import *\nfrom sa.samp import *\n\nclass Module:\n    def on_load(self, server):\n        self.server = server\n        self.timer_task = asyncio.get_event_loop().create_task(self.timer())\n\n        #server.push_message_to_all(ChatMessage('on_load(): hello from module.py'))\n\n        #server.push_message_to_all(ServerJoin(10,'bob'))\n        #server.push_message_to_all(StartPlayerStream(10))\n        v=Vehicle(101,VEHICLE.HYDRA)\n        server.vehicle_pool[101]=v\n        server.push_message_to_all(AddVehicle(101, VEHICLE.HYDRA, SPOT.GROVE))\n        #server.push_message_to_all(DriverSync\n        \n        #for i in range(61,128):\n        #    id = 10+i\n        #    server.push_message_to_all(ServerQuit(id))\n        #    server.push_message_to_all(WorldPlayerRemove(id))\n        #\n        #    server.push_message_to_all(ServerJoin(id,f'{i}'))\n        #    server.push_message_to_all(WorldPlayerAdd(id, pos=Vec3(10,10,5)))\n        #\n        #    server.push_message_to_all(Hide3DTextLabel(i))\n        #\n        #    #self.server.push_message_to_all(PlayerSync(id, pos=Vec3(2*i,0,3),ud_keys=2**i))\n        #server.push_message_to_all(ShowTextdraw(textdraw_id=2095, text='hello', pos=Vec2(220.02, 355.63), flags=24, letter_size=Vec2(0.25, 1.18), letter_color=4294967295, line_size=Vec2(1280.00, 1280.00), box_color=2155905152, shadow=1, outline=1, background_color=268435456, style=2 ,clickable=0, model_id=0, rot=Vec3(0.00, 0.00, 0.00), zoom=1.00, color1=65535 ,color2=65535))\n\n#0 stop\n# 1-60 forward (same pace)\n\n    async def timer(self):\n        try:\n            pass\n            #i=0\n            #x=0\n            while True:\n                await asyncio.sleep(1)\n                #self.server.push_message_to_all()\n                #for peer in self.server.peers.items():\n                #    peer.push_message(Show3DTextLabel(i, str(peer.player.pos), 0xdd0000dd, Vec3(0,0,1), attached_player_id=id))\n            #    x+=16\n            #    #self.server.push_message_to_all(PlayerSync(10, pos=Vec3(math.cos(i)*10,math.sin(i)*10,3),vel=Vec3(-math.cos(i)*0.1,-math.sin(i)*0.1,0)))\n            #    #i+=36/360*2*3.14159265\n            #    #i+=0.017453292500000002\n        except asyncio.exceptions.CancelledError:\n            pass\n        except:\n            traceback.print_exc()\n\n    def on_unload(self):\n        self.timer_task.cancel()\n        pass\n\n    def on_message(self, message, internal_packet, peer, server):\n        #print('hello from module', message)\n        #if message.id in [MSG.PLAYER_SYNC, MSG.DRIVER_SYNC]:\n        #    ps = message\n        #    print(f'{ps.key_data}')\n        \n       #if message.id == MSG.PLAYER_SYNC:\n       #   print(peer.player.health)\n       #   #print(message.health,\n       #   #message.armor)\n        \n        pass", ""]}
{"filename": "examples/live_server/server.py", "chunked_list": ["'''\nThis example has a simple server.\nIf you type 'r' on the terminal it will reload the module.py file\nYou may use it to change server logic on the fly.\n'''\n\nimport asyncio\nimport concurrent\nimport traceback\nimport importlib", "import traceback\nimport importlib\n\nimport sa\nfrom sa import *\nfrom sa.samp import *\n\nimport module\n\nserver = None", "\nserver = None\nmodule_instance = None\n\ndef on_message(message, internal_packet, peer, server):\n    try:\n        callback = module_instance.on_message\n    except AttributeError:\n        callback = None\n        traceback.print_exc()\n    if callback:\n        if callback(message, internal_packet, peer, server) is True:\n            return\n    if message.id == MSG.RPC:\n        rpc = message\n        if rpc.rpc_id == RPC.REQUEST_CHAT_COMMAND:\n            # WARNING: REALLY INSECURE, but useful for developing/debugging\n            try:\n                if rpc.command.startswith('/x'):\n                    exec(rpc.command[2:])\n                elif rpc.command.startswith('/rpc'):\n                    peer.push_message(eval(rpc.command[4:]))\n            except:\n                for line in traceback.format_exc().split('\\n'):\n                    peer.push_message(ChatMessage(line, color=0xdd0000ff))", "\nasync def input_loop():\n    with concurrent.futures.ThreadPoolExecutor() as pool:\n        while True:\n            s = await asyncio.get_event_loop().run_in_executor(pool, input)\n            if s[0] == 'r': # reload module\n                try:\n                    global module_instance\n                    module_instance.on_unload()\n                    importlib.reload(module)\n                    module_instance = module.Module()\n                    module_instance.on_load(server)\n                except:\n                    traceback.print_exc()", "\nasync def main():\n    asyncio.get_event_loop().create_task(input_loop())\n\n    s = Server(('127.0.0.1', 7777))\n    global server\n    server = s\n    s.message_callbacks.append(on_message)\n    await s.start()\n\n    try:\n        global module_instance\n        module_instance = module.Module()\n        module_instance.on_load(server)\n    except:\n        traceback.print_exc()", "    await s.start()\n\n    try:\n        global module_instance\n        module_instance = module.Module()\n        module_instance.on_load(server)\n    except:\n        traceback.print_exc()\n\n    while True:", "\n    while True:\n        await asyncio.sleep(0.01)\n        s.update()\n\ntry:\n    asyncio.run(main())\nexcept KeyboardInterrupt:\n    pass\n", ""]}
