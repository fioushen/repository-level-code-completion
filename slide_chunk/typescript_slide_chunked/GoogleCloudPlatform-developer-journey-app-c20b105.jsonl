{"filename": "playwright.config.ts", "chunked_list": ["/**\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software", " *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { defineConfig, devices } from '@playwright/test';\n", "import { defineConfig, devices } from '@playwright/test';\n\n/**\n * Read environment variables from file.\n * https://github.com/motdotla/dotenv\n */\n// require('dotenv').config();\n\n/**\n * See https://playwright.dev/docs/test-configuration.", "/**\n * See https://playwright.dev/docs/test-configuration.\n */\nexport default defineConfig({\n  testDir: './tests',\n  /* Maximum time one test can run for. */\n  timeout: 30 * 1000,\n  expect: {\n    /**\n     * Maximum time expect() should wait for the condition to be met.", "    /**\n     * Maximum time expect() should wait for the condition to be met.\n     * For example in `await expect(locator).toHaveText();`\n     */\n    timeout: 5 * 1000\n  },\n  /* Run tests in files in parallel */\n  fullyParallel: true,\n  /* Fail the build on CI if you accidentally left test.only in the source code. */\n  forbidOnly: !!process.env.CI,", "  /* Fail the build on CI if you accidentally left test.only in the source code. */\n  forbidOnly: !!process.env.CI,\n  /* Retry on CI only */\n  retries: process.env.CI ? 2 : 0,\n  /* Opt out of parallel tests on CI. */\n  workers: process.env.CI ? 1 : undefined,\n  /* Reporter to use. See https://playwright.dev/docs/test-reporters */\n  reporter: 'html',\n  /* Shared settings for all the projects below. See https://playwright.dev/docs/api/class-testoptions. */\n  use: {", "  /* Shared settings for all the projects below. See https://playwright.dev/docs/api/class-testoptions. */\n  use: {\n    /* Maximum time each action such as `click()` can take. Defaults to 0 (no limit). */\n    actionTimeout: 0,\n    /* Base URL to use in actions like `await page.goto('/')`. */\n    // baseURL: 'http://localhost:3000',\n\n    /* Collect trace when retrying the failed test. See https://playwright.dev/docs/trace-viewer */\n    trace: 'on-first-retry',\n  },", "    trace: 'on-first-retry',\n  },\n\n  /* Configure projects for major browsers */\n  projects: [\n    // Setup Auth\n    { name: 'setup', testMatch: /.*\\.setup\\.ts/ },\n    {\n      name: 'chromium',\n      use: {", "      name: 'chromium',\n      use: {\n        ...devices['Desktop Chrome'],\n        storageState: 'playwright/.auth/user.json',\n      },\n      testMatch: /tests.*.ts/,\n      dependencies: ['setup'],\n    },\n\n    /*", "\n    /*\n    {\n      name: 'firefox',\n      use: { ...devices['Desktop Firefox'] },\n    },\n\n    {\n      name: 'webkit',\n      use: { ...devices['Desktop Safari'] },", "      name: 'webkit',\n      use: { ...devices['Desktop Safari'] },\n    },\n    */\n\n    /* Test against mobile viewports. */\n    // {\n    //   name: 'Mobile Chrome',\n    //   use: { ...devices['Pixel 5'] },\n    // },", "    //   use: { ...devices['Pixel 5'] },\n    // },\n    // {\n    //   name: 'Mobile Safari',\n    //   use: { ...devices['iPhone 12'] },\n    // },\n\n    /* Test against branded browsers. */\n    // {\n    //   name: 'Microsoft Edge',", "    // {\n    //   name: 'Microsoft Edge',\n    //   use: { channel: 'msedge' },\n    // },\n    // {\n    //   name: 'Google Chrome',\n    //   use: { channel: 'chrome' },\n    // },\n  ],\n", "  ],\n\n  /* Folder for test artifacts such as screenshots, videos, traces, etc. */\n  // outputDir: 'test-results/',\n\n  /* Run your local dev server before starting the tests */\n  webServer: {\n    command: 'npm run dev',\n    port: 3000,\n  },", "    port: 3000,\n  },\n});\n"]}
{"filename": "scripts/seed.ts", "chunked_list": ["/**\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software", " *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport {}\n", "export {}\n"]}
{"filename": "tests/auth.setup.ts", "chunked_list": ["/**\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software", " *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// auth.setup.ts\nimport { test as setup } from '@playwright/test';\n", "import { test as setup } from '@playwright/test';\n\nconst authFile = 'playwright/.auth/user.json';\n\nsetup('authenticate', async ({ page }) => {\n  // Perform authentication steps. Replace these actions with your own.\n  await page.goto('http://localhost:3000/api/auth/signin?callbackUrl=http%3A%2F%2Flocalhost%3A3000%2F');\n  const emailInput = await page.getByRole('textbox', { name: /Username/ })\n  await emailInput.fill('CI User');\n  const signInButton = await page.getByRole('button', { name: 'Sign in with Credentials' })", "  await emailInput.fill('CI User');\n  const signInButton = await page.getByRole('button', { name: 'Sign in with Credentials' })\n  await signInButton.click();\n  await page.context().storageState({ path: authFile });\n});\n"]}
{"filename": "tests/playthrough.ts", "chunked_list": ["/**\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software", " *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { test, expect } from '@playwright/test';\n\ntest('has title', async ({ page }) => {", "\ntest('has title', async ({ page }) => {\n  await page.goto('http://localhost:3000');\n  // Expected title\n  await expect(page).toHaveTitle(/Developer Journey/);\n\n  // Displays link to Home tab\n  const homeLink = await page.getByRole('link', { name: 'Home' })\n  await expect(homeLink).toBeVisible();\n", "  await expect(homeLink).toBeVisible();\n\n  // Should show up Player Username\n  const playerName = page.getByText('CI User').nth(1);\n  expect(playerName).toBeVisible();\n\n  // Moves the player to the first tile\n  const upBtn = await page.getByRole('button', { name: 'Move player up' });\n  await upBtn.click();\n  await upBtn.click();", "  await upBtn.click();\n  await upBtn.click();\n\n  // Validates that the user is now positioned on first tile\n  const firstTile = await page.locator('.bg-slate-200').first()\n  const player = await firstTile.getByTestId('usericon');\n  await expect(player).toBeVisible();\n});\n", ""]}
{"filename": "src/middleware.ts", "chunked_list": ["/**\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software", " *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport {default} from \"next-auth/middleware\"\n\nexport const config = { matcher: [\"/demo/page-secured-client-side\"] }", "\nexport const config = { matcher: [\"/demo/page-secured-client-side\"] }\n"]}
{"filename": "src/pages/api/fscheck.ts", "chunked_list": ["/**\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software", " *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport type { NextApiRequest, NextApiResponse } from 'next'\nimport { Database } from \"../../lib/database\";\n", "import { Database } from \"../../lib/database\";\n\n\nexport default async function handler(\n  req: NextApiRequest,\n  res: NextApiResponse,\n) {\n  const fs = new Database();\n  let isConnected = await fs.isConnected();\n  let statusCode = isConnected ? 200 : 503;\n  res.status(statusCode).end();\n}\n"]}
{"filename": "src/pages/api/hello.ts", "chunked_list": ["/**\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software", " *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Next.js API route support: https://nextjs.org/docs/api-routes/introduction\nimport type { NextApiRequest, NextApiResponse } from 'next'\n\ntype Data = {\n  name: string\n}\n", "import type { NextApiRequest, NextApiResponse } from 'next'\n\ntype Data = {\n  name: string\n}\n\nexport default function handler(\n  req: NextApiRequest,\n  res: NextApiResponse<Data>\n) {\n  res.status(200).json({ name: 'John Doe' })\n}\n"]}
{"filename": "src/pages/api/user.ts", "chunked_list": ["/**\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software", " *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport type { NextApiRequest, NextApiResponse } from 'next'\nimport { Database } from \"../../lib/database\";\nimport { User } from 'src/models/User';", "import { Database } from \"../../lib/database\";\nimport { User } from 'src/models/User';\nimport { getSession } from 'next-auth/react';\n\nexport default async function handler(\n  req: NextApiRequest,\n  res: NextApiResponse<User>\n) {\n  const fs = new Database();\n  const session = await getSession({ req });\n  const username = session?.user?.name || '';", "  if (!username) {\n    return res.status(200).send({ username, completedMissions: [] });\n  }\n\n  if (req.method === 'POST') {\n    const missionId = req.body.id;\n    await fs.addCompletedMission({ username, missionId })\n  }\n\n  const user = await fs.getUser({ username });\n  res.status(200).json(user)\n}\n"]}
{"filename": "src/pages/api/auth/[...nextauth].ts", "chunked_list": ["/**\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software", " *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport NextAuth, {AuthOptions} from \"next-auth\";\nimport CredentialsProvider from \"next-auth/providers/credentials\";\n", "import CredentialsProvider from \"next-auth/providers/credentials\";\n\n\nexport const authOptions: AuthOptions = {\n  providers: [\n    CredentialsProvider({\n      credentials: {\n        username: {label: \"Username\", type: \"text\", placeholder: \"Username\"},\n      },\n      async authorize(credentials) {\n        if (!credentials || credentials.username.length < 1) {\n          // Display an  error will be displayed advising the user to check\n          // their details.\n          return null;\n        }\n\n        const username = credentials.username;\n        const user = { id: username, name: username };\n", "      },\n      async authorize(credentials) {\n        if (!credentials || credentials.username.length < 1) {\n          // Display an  error will be displayed advising the user to check\n          // their details.\n          return null;\n        }\n\n        const username = credentials.username;\n        const user = { id: username, name: username };\n", "        if (user) {\n          return user;\n        } else {\n          // Display an  error will be displayed advising the user to check\n          // their details.\n          return null;\n          // Or reject this callback with an Error to send the user to the error\n          // page with the error message as a query parameter\n        }\n      }\n    }),\n  ],\n};\n\nexport default NextAuth(authOptions);\n"]}
{"filename": "src/lib/database.ts", "chunked_list": ["/**\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software", " *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Firestore } from \"@google-cloud/firestore\";\nimport { User } from \"src/models/User\";\n\nexport class Database {\n  private db: Firestore;\n\n  constructor() {", "import { User } from \"src/models/User\";\n\nexport class Database {\n  private db: Firestore;\n\n  constructor() {\n    if (process.env.NODE_ENV === 'development') {\n      // use the firestore emulator\n      this.db = new Firestore({\n        host: \"localhost:9999\",\n        projectId: \"demo-test\",\n        ssl: false,\n      });\n    } else {\n      // use the PROJECT_ID environment variable\n      const projectId = process.env.PROJECT_ID;", "      if (!projectId) {\n        const errMessage = \"PROJECT_ID environment variable must be defined.\";\n        console.error(errMessage);\n        throw new Error(errMessage);\n      }\n      this.db = new Firestore({\n        projectId: projectId,\n      });\n    }\n  }\n\n  async setUser({ username, completedMissions }: { username: string, completedMissions?: string[] }): Promise<any> {\n    const userDoc = this.db.collection('users').doc(username);\n\n    return userDoc.set({\n      username,\n      completedMissions: completedMissions || [],\n    }, { merge: true });\n  }\n\n  async getUser({ username }: { username: string }): Promise<User> {\n    const userDoc = this.db.collection('users').doc(username);\n    const snapshot = await userDoc.get();\n    const completedMissions = snapshot.data()?.completedMissions || [];\n\n    return { username, completedMissions }\n  }\n\n  async addCompletedMission({ username, missionId }: { username: string, missionId: string }): Promise<any> {\n    const { completedMissions } = await this.getUser({ username });\n    const updatedMissions = [...completedMissions, missionId]\n\n\n    return this.setUser({\n      username,\n      completedMissions: updatedMissions,\n    });\n  }\n\n  /**\n   * Returns true if able to connect to the Firestore instance.\n   * The Firestore API times out a request after 60 seconds. This method\n   * implements a configurable override that defaults to 5 seconds, but there's\n   * no point in setting it higher than 60 seconds.\n   * @param timeout seconds\n   */\n  async isConnected(timeout: number = 5): Promise<boolean> {", "    try {\n      timeout = Math.min(timeout, 60) * 1000;\n      // eslint-disable-next-line no-undef\n      let timerId: NodeJS.Timeout;\n\n      const timer = new Promise<boolean>((resolve) => {\n        timerId = setTimeout(() => resolve(false), timeout);\n      });\n\n      // TODO: research if there's a lighter weight way to status a connection.\n      const connectionCheck = this.db.listCollections();\n\n      return Promise.race([connectionCheck, timer]).then(result => {\n        clearTimeout(timerId);\n        return !!result;\n      });\n", "    } catch (err) {\n      // GoogleError: Total timeout of API google.firestore.v1.Firestore\n      // exceeded 60000 milliseconds before any response was received.\n      return false;\n    }\n  }\n}\n"]}
{"filename": "src/lib/__test__/database.test.ts", "chunked_list": ["/**\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software", " *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {Firestore} from \"@google-cloud/firestore\";\nimport {Database} from \"../database\";\n", "import {Database} from \"../database\";\n\nconst directDatabaseConnectionForTestReset = new Firestore({\n  projectId: \"birds-of-paradise\",\n});\n\ndescribe(\"database tests\", () => {\n  let fs: Database;\n\n  beforeAll(async () => {", "\n  beforeAll(async () => {\n    process.env = {...process.env, NODE_ENV: 'development'}\n    await directDatabaseConnectionForTestReset.collection('users').doc('Bob').delete()\n    fs = new Database();\n  })\n\n  it(\"should add and get a user\", async () => {\n    await fs.setUser({username: 'Bob'});\n    const user = await fs.getUser({username: 'Bob'});", "    await fs.setUser({username: 'Bob'});\n    const user = await fs.getUser({username: 'Bob'});\n\n    expect(user).toEqual({ username: \"Bob\", completedMissions: [] });\n  });\n\n  it(\"should add completed missions\", async () => {\n    await fs.setUser({username: 'Bob'});\n    await fs.addCompletedMission({username: 'Bob', missionId: 'Mission0001aweifjwek'});\n    const firstUserResponse = await fs.getUser({username: 'Bob'});", "    await fs.addCompletedMission({username: 'Bob', missionId: 'Mission0001aweifjwek'});\n    const firstUserResponse = await fs.getUser({username: 'Bob'});\n\n    expect(firstUserResponse).toEqual({\n      \"username\": \"Bob\",\n      completedMissions: ['Mission0001aweifjwek']\n    });\n\n    await fs.addCompletedMission({username: 'Bob', missionId: 'Mission0002aweifjwek'});\n    const secondUserResponse = await fs.getUser({username: 'Bob'});", "    await fs.addCompletedMission({username: 'Bob', missionId: 'Mission0002aweifjwek'});\n    const secondUserResponse = await fs.getUser({username: 'Bob'});\n\n    expect(secondUserResponse).toEqual({\n      \"username\": \"Bob\",\n      completedMissions: ['Mission0001aweifjwek', 'Mission0002aweifjwek']\n    });\n  });\n});\n", "});\n"]}
{"filename": "src/models/Mission.ts", "chunked_list": ["/**\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software", " *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { LearningResource } from \"./LearningResource\";\n\nexport class Mission {\n  id!: string;\n  title!: string;\n  technologies!: string[];\n  learningResources!: LearningResource[];\n}\n", "\nexport class Mission {\n  id!: string;\n  title!: string;\n  technologies!: string[];\n  learningResources!: LearningResource[];\n}\n"]}
{"filename": "src/models/LearningResource.ts", "chunked_list": ["/**\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software", " *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport class LearningResource {\n  title!: string;\n  link!: string;\n}\n"]}
{"filename": "src/models/InventoryItem.ts", "chunked_list": ["/**\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software", " *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { GridPosition } from \"./GridPosition\";\n\nexport class InventoryItem {\n  title!: string;\n  position!: GridPosition;\n  status!:  \"COLLECTED\" | \"NOT_COLLECTED\";\n}\n  ", "\nexport class InventoryItem {\n  title!: string;\n  position!: GridPosition;\n  status!:  \"COLLECTED\" | \"NOT_COLLECTED\";\n}\n  "]}
{"filename": "src/models/GridPosition.ts", "chunked_list": ["/**\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software", " *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport class GridPosition {\n  x!: number;\n  y!: number;\n}\n  "]}
{"filename": "src/models/User.ts", "chunked_list": ["/**\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software", " *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport class User {\n  username!: string;\n  completedMissions!: string[];\n}\n"]}
{"filename": "src/redux/gameSlice.ts", "chunked_list": ["/**\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software", " *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { Mission } from 'src/models/Mission'", "import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { Mission } from 'src/models/Mission'\nimport { missions } from 'src/initialData.ts/missions';\nimport { GridPosition } from 'src/models/GridPosition';\nimport { InventoryItem } from 'src/models/InventoryItem';\n\n// Define the initial state using that type\nconst initialState: {\n  mission: Mission,\n  playerPosition: GridPosition,", "  mission: Mission,\n  playerPosition: GridPosition,\n  inventory: InventoryItem[],\n  allItemsCollected: boolean,\n  isSavingMission: boolean,\n} = {\n  mission: missions[0],\n  playerPosition: { x: 0, y: 0 },\n  inventory: [],\n  allItemsCollected: false,", "  inventory: [],\n  allItemsCollected: false,\n  isSavingMission: false,\n};\n\nconst legalInventoryGridPositions = [\n  { x: 0, y: 1 },\n  { x: 0, y: 2 },\n  { x: 1, y: 0 },\n  { x: 1, y: 1 },", "  { x: 1, y: 0 },\n  { x: 1, y: 1 },\n  { x: 1, y: 2 },\n  { x: 2, y: 0 },\n  { x: 2, y: 1 },\n];\n\nexport const gameSlice = createSlice({\n  name: 'game',\n  initialState,", "  name: 'game',\n  initialState,\n  reducers: {\n    startMission: (state, action: PayloadAction<{ mission?: Mission, nextMission?: boolean } | undefined>) => {\n      const nextMission = action.payload?.nextMission;\n      // if no mission provided, restart this mission\n      let mission = action.payload?.mission || state.mission;\n\n      // increment to next mission if requested\n      if (nextMission) {\n        let newIndex: number = missions.findIndex(mission => mission.id === state.mission.id) + 1;", "      // increment to next mission if requested\n      if (nextMission) {\n        let newIndex: number = missions.findIndex(mission => mission.id === state.mission.id) + 1;\n        if (newIndex < missions.length) {\n          mission = missions[newIndex];\n        } else {\n          mission = missions[0];\n        }\n      }\n\n      // prevent moving items and player if mission hasn't changed\n      let inventory = state.inventory;\n      const stateMissionId = state.mission.id.toString();\n      const missionId = mission.id.toString();\n      const sameMission = stateMissionId === missionId;\n\n      let playerPosition = state.playerPosition;\n", "      if (!sameMission || state.inventory.length < 1) {\n        playerPosition = { x: 0, y: 0 }\n        const arrayLength = legalInventoryGridPositions.length;\n        const shuffledArray = legalInventoryGridPositions.sort(() => 0.5 - Math.random());\n        inventory = mission.technologies.map((technology, index) => {\n          return ({\n            position: shuffledArray[index % arrayLength],\n            status: 'NOT_COLLECTED',\n            title: technology,\n          })\n        })\n      }\n\n      return {\n        mission,\n        playerPosition,\n        inventory,\n        allItemsCollected: false,\n        isSavingMission: false,\n      }\n    },\n    moveUp: state => {", "      if (state.playerPosition.y < 2 && !state.isSavingMission) state.playerPosition.y += 1\n    },\n    moveDown: state => {\n      if (state.playerPosition.y > 0 && !state.isSavingMission) state.playerPosition.y -= 1\n    },\n    moveLeft: state => {\n      if (state.playerPosition.x > 0 && !state.isSavingMission) state.playerPosition.x -= 1\n    },\n    moveRight: state => {\n      if (state.playerPosition.x < 2 && !state.isSavingMission) state.playerPosition.x += 1\n    },\n    collectItem: (state) => {\n      const itemIndex = state.inventory.findIndex(item => {\n        const isCorrectXPosition = item.position.x === state.playerPosition.x;\n        const isCorrectYPosition = item.position.y === state.playerPosition.y;\n        const isNotCollected = item.status === 'NOT_COLLECTED';\n        return isCorrectXPosition && isCorrectYPosition && isNotCollected;\n      });\n      state.inventory[itemIndex] = {\n        ...state.inventory[itemIndex],\n        status: 'COLLECTED',\n      }\n      state.allItemsCollected = state.inventory.length > 0 && state.inventory.every(item => item.status === 'COLLECTED');\n    },\n    setIsSavingMission: (state, action: PayloadAction<boolean>) => {\n      state.isSavingMission = action.payload;\n    },\n  }\n})\n\n// Action creators are generated for each case reducer function\nexport const { startMission, moveUp, moveDown, moveLeft, moveRight, collectItem, setIsSavingMission } = gameSlice.actions\n\nexport default gameSlice.reducer", "      if (state.playerPosition.x < 2 && !state.isSavingMission) state.playerPosition.x += 1\n    },\n    collectItem: (state) => {\n      const itemIndex = state.inventory.findIndex(item => {\n        const isCorrectXPosition = item.position.x === state.playerPosition.x;\n        const isCorrectYPosition = item.position.y === state.playerPosition.y;\n        const isNotCollected = item.status === 'NOT_COLLECTED';\n        return isCorrectXPosition && isCorrectYPosition && isNotCollected;\n      });\n      state.inventory[itemIndex] = {\n        ...state.inventory[itemIndex],\n        status: 'COLLECTED',\n      }\n      state.allItemsCollected = state.inventory.length > 0 && state.inventory.every(item => item.status === 'COLLECTED');\n    },\n    setIsSavingMission: (state, action: PayloadAction<boolean>) => {\n      state.isSavingMission = action.payload;\n    },\n  }\n})\n\n// Action creators are generated for each case reducer function\nexport const { startMission, moveUp, moveDown, moveLeft, moveRight, collectItem, setIsSavingMission } = gameSlice.actions\n\nexport default gameSlice.reducer"]}
{"filename": "src/redux/hooks.ts", "chunked_list": ["/**\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software", " *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\nimport type { RootState, AppDispatch } from './store'", "import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\nimport type { RootState, AppDispatch } from './store'\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch: () => AppDispatch = useDispatch\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector"]}
{"filename": "src/redux/store.ts", "chunked_list": ["/**\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software", " *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { configureStore } from '@reduxjs/toolkit'\nimport gameReducer from './gameSlice'", "import { configureStore } from '@reduxjs/toolkit'\nimport gameReducer from './gameSlice'\nimport { apiSlice } from 'src/redux/apiSlice';\n\nexport const store = configureStore({\n  reducer: {\n    game: gameReducer,\n    [apiSlice.reducerPath]: apiSlice.reducer,\n  },\n  middleware: getDefaultMiddleware =>", "  },\n  middleware: getDefaultMiddleware =>\n    getDefaultMiddleware().concat(apiSlice.middleware)\n})\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>\nexport type AppDispatch = typeof store.dispatch\n"]}
{"filename": "src/redux/inventorySlice.ts", "chunked_list": ["/**\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software", " *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createSlice } from '@reduxjs/toolkit'\n", "import { createSlice } from '@reduxjs/toolkit'\n\n// Define the initial state using that type\nconst initialState: string[] = []\n\nexport const inventorySlice = createSlice({\n  name: 'inventory',\n  initialState,\n  reducers: {\n  }", "  reducers: {\n  }\n})\n\nexport default inventorySlice.reducer\n"]}
{"filename": "src/redux/apiSlice.ts", "chunked_list": ["/**\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software", " *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Import the RTK Query methods from the React-specific entry point\nimport { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'", "// Import the RTK Query methods from the React-specific entry point\nimport { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\nimport { Mission } from 'src/models/Mission'\nimport { User } from 'src/models/User'\nimport { startMission } from './gameSlice';\n\n// Define our single API slice object\nexport const apiSlice = createApi({\n  // The cache reducer expects to be added at `state.api` (already default - this is optional)\n  reducerPath: 'api',", "  // The cache reducer expects to be added at `state.api` (already default - this is optional)\n  reducerPath: 'api',\n  // All of our requests will have URLs starting with '/api'\n  baseQuery: fetchBaseQuery({ baseUrl: '/api' }),\n  tagTypes: ['User'],\n  // The \"endpoints\" represent operations and requests for this server\n  endpoints: builder => ({\n    // The `getUser` endpoint is a \"query\" operation that returns data\n    getUser: builder.query<User, void>({\n      // The URL for the request is '/api/user', this is a GET request", "    getUser: builder.query<User, void>({\n      // The URL for the request is '/api/user', this is a GET request\n      query: () => '/user',\n      onCacheEntryAdded: (_, { dispatch }) => { \n        dispatch(startMission())\n      },\n      providesTags: ['User'],\n    }),\n    addCompletedMission: builder.mutation({\n      // The URL for the request is '/api/user', this is a POST request", "    addCompletedMission: builder.mutation({\n      // The URL for the request is '/api/user', this is a POST request\n      query: ({mission}: {mission: Mission}) => ({\n        url: '/user',\n        method: 'POST',\n        // Include the entire post object as the body of the request\n        body: mission,\n      }),\n      invalidatesTags: ['User']\n    }),", "      invalidatesTags: ['User']\n    }),\n  })\n})\n\n// Export the auto-generated hook for the `getUser` query endpoint\nexport const { useGetUserQuery, useAddCompletedMissionMutation } = apiSlice"]}
{"filename": "src/initialData.ts/missions.ts", "chunked_list": ["/**\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software", " *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Mission } from \"src/models/Mission\";\n\nexport const missions: Mission[] = [", "\nexport const missions: Mission[] = [\n  {\n    id: \"Sb8XWrxLMykaBU7oZEMH\",\n    title: \"Deploy a NodeJS App with a Firestore Database\",\n    technologies: ['cloud_run', 'firestore', 'cloud_storage'],\n    learningResources: [\n      {\n        title: \"Getting started with Node.js\",\n        link: 'https://cloud.google.com/nodejs/getting-started'", "        title: \"Getting started with Node.js\",\n        link: 'https://cloud.google.com/nodejs/getting-started'\n      },\n    ],\n  },\n  {\n    id: \"1rSUn3CLB3UVgPbkoIoh\",\n    title: \"Connect a Go application on Cloud Run to a Cloud SQL for PostgreSQL database\",\n    technologies: ['cloud_run', 'cloud_sql', 'identity_and_access_management'],\n    learningResources: [", "    technologies: ['cloud_run', 'cloud_sql', 'identity_and_access_management'],\n    learningResources: [\n      {\n        title: \"How to connect a Go application on Cloud Run to a Cloud SQL for PostgreSQL database\",\n        link: 'https://codelabs.developers.google.com/codelabs/cloud-sql-go-connector'\n      },\n    ],\n  },\n  {\n    id: \"Tc9YXsyMNzlbCV8pAFNI\",", "  {\n    id: \"Tc9YXsyMNzlbCV8pAFNI\",\n    title: \"Deploy a NodeJS App to Google Kubernetes Engine\",\n    technologies: ['google_kubernetes_engine', 'cloud_build', 'artifact_registry'],\n    learningResources: [\n      {\n        title: \"Deploy an app in a container image to a GKE cluster\",\n        link: 'https://cloud.google.com/kubernetes-engine/docs/quickstarts/deploy-app-container-image#node.js'\n      },\n    ],", "      },\n    ],\n  },\n  {\n    id: \"3ukaXbkeaBG2CXRMgIjl\",\n    title: \"Allow third-party services to access specific backend resources in a Shared VPC network\",\n    technologies: ['cloud_load_balancing', 'cloud_run', 'cloud_firewall_rules', 'virtual_private_cloud', 'compute_engine'],\n    learningResources: [\n      {\n        title: \"Allow third-party services to access specific backend resources in a Shared VPC network\",", "      {\n        title: \"Allow third-party services to access specific backend resources in a Shared VPC network\",\n        link: 'https://cloud.google.com/community/tutorials/serverless-backend-access-in-shared-vpc'\n      },\n    ],\n  },\n];"]}
