{"filename": "src/bot.ts", "chunked_list": ["import { Client, REST, Routes } from 'discord.js';\n\nimport { VERSION } from '.';\nimport { JudgeCommand } from './commands';\nimport { locale } from './locales';\nimport { Command } from './types/Command';\n\n// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\nconst BOT_TOKEN = process.env.BOT_TOKEN!;\n", "const BOT_TOKEN = process.env.BOT_TOKEN!;\n\n// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\nconst APP_ID = process.env.APP_ID!;\n\nconst CLIENT = new Client({\n    intents: [],\n});\n\nconst COMMANDS: Command[] = [", "\nconst COMMANDS: Command[] = [\n    JudgeCommand,\n];\n\nexport async function setupBot(): Promise<void> {\n    await registerCommands();\n\n    CLIENT.on('ready', () => {\n        CLIENT.user?.setActivity({\n            name: `${locale('text-judge')} | ${VERSION} `,\n        });\n    });\n\n    CLIENT.on('interactionCreate', async (interaction) => {", "        if (!interaction.isChatInputCommand()) return;\n\n        for (const command of COMMANDS) {\n            if (interaction.commandName === command.command.name) {\n                command.execute(interaction);\n            }\n        }\n    });\n\n    CLIENT.login(BOT_TOKEN);\n}\n", "async function registerCommands(): Promise<void> {\n    const commands = COMMANDS.map((command) => {\n        return command.command;\n    });\n\n    const rest = new REST({ version: '10' }).setToken(BOT_TOKEN);\n    await rest.put(Routes.applicationCommands(APP_ID), {\n        body: commands,\n    });\n}\n"]}
{"filename": "src/index.ts", "chunked_list": ["import 'dotenv/config';\nimport express, { Request, Response } from 'express';\n\nimport { setupBot } from './bot';\n\n// \u30d0\u30fc\u30b8\u30e7\u30f3\u60c5\u5831\nexport const VERSION = 'v1.0.0';\n\n// bot\u3092\u8d77\u52d5\nsetupBot();", "// bot\u3092\u8d77\u52d5\nsetupBot();\n\nconst app = express();\n\napp.get('/', (req: Request, res: Response) => {\n    res.send({ version: VERSION });\n});\n\napp.listen(3000, () => {", "\napp.listen(3000, () => {\n    console.log('Start on port 3000.');\n});\n"]}
{"filename": "src/judge.ts", "chunked_list": ["import { SpecialWeapon, SubWeapon, Weapon, WeaponType } from './types/Weapon';\nimport { getRandomElem } from './utils/array';\nimport { BLASTERS, BRELLAS, BRUSHES, CHARGERS, DUALIES, ROLLERS, SHOOTERS, SLOSHERS, SPLATANAS, SPLATLINGS, STRINGERS } from './weapons';\n\nconst WEAPONS = [\n    ...SHOOTERS,\n    ...SPLATLINGS,\n    ...CHARGERS,\n    ...ROLLERS,\n    ...BLASTERS,", "    ...ROLLERS,\n    ...BLASTERS,\n    ...SLOSHERS,\n    ...DUALIES,\n    ...BRUSHES,\n    ...STRINGERS,\n    ...BRELLAS,\n    ...SPLATANAS,\n];\n\nexport function judge(typeFilters: WeaponType[], subFilters: SubWeapon[], specialFilters: SpecialWeapon[]): Weapon | undefined {\n    const weapons = WEAPONS\n        .filter((weapon) => {", "];\n\nexport function judge(typeFilters: WeaponType[], subFilters: SubWeapon[], specialFilters: SpecialWeapon[]): Weapon | undefined {\n    const weapons = WEAPONS\n        .filter((weapon) => {\n            if (typeFilters.length === 0) {\n                return true;\n            }\n\n            for (const filter of typeFilters) {\n                if (filter === weapon.type) {\n                    return true;\n                }\n            }\n\n            return false;\n        })\n        .filter((weapon) => {", "            for (const filter of typeFilters) {\n                if (filter === weapon.type) {\n                    return true;\n                }\n            }\n\n            return false;\n        })\n        .filter((weapon) => {\n            if (subFilters.length === 0) {\n                return true;\n            }\n", "            if (subFilters.length === 0) {\n                return true;\n            }\n\n            for (const filter of subFilters) {\n                if (filter === weapon.sub) {\n                    return true;\n                }\n            }\n\n            return false;\n        })\n        .filter((weapon) => {", "            if (specialFilters.length === 0) {\n                return true;\n            }\n\n            for (const filter of specialFilters) {\n                if (filter === weapon.special) {\n                    return true;\n                }\n            }\n\n            return false;\n        });\n\n    return getRandomElem(weapons);\n}\n"]}
{"filename": "src/commands/JudgeCommand.ts", "chunked_list": ["import { SlashCommandBuilder } from 'discord.js';\n\nimport { judge } from '../judge';\nimport { locale } from '../locales';\nimport { Command } from '../types/Command';\nimport { SpecialWeapon, SubWeapon, WeaponType } from '../types/Weapon';\n\nexport const JudgeCommand: Command = {\n    command: new SlashCommandBuilder()\n        .setName(", "    command: new SlashCommandBuilder()\n        .setName(\n            'judge',\n        )\n        .setDescription(\n            locale('text-command-judge-des-0'),\n        )\n        .addStringOption((option) =>\n            option\n                .setName(", "            option\n                .setName(\n                    locale('text-command-judge-name-1'),\n                )\n                .setDescription(\n                    locale('text-command-judge-des-1'),\n                )\n                .addChoices(\n                    {\n                        name: locale('text-shooter'),", "                    {\n                        name: locale('text-shooter'),\n                        value: 'SHOOTER',\n                    },\n                    {\n                        name: locale('text-splatling'),\n                        value: 'SPLATLING',\n                    },\n                    {\n                        name: locale('text-charger'),", "                    {\n                        name: locale('text-charger'),\n                        value: 'CHARGER',\n                    },\n                    {\n                        name: locale('text-roller'),\n                        value: 'ROLLER',\n                    },\n                    {\n                        name: locale('text-blaster'),", "                    {\n                        name: locale('text-blaster'),\n                        value: 'BLASTER',\n                    },\n                    {\n                        name: locale('text-slosher'),\n                        value: 'SLOSHER',\n                    },\n                    {\n                        name: locale('text-dualie'),", "                    {\n                        name: locale('text-dualie'),\n                        value: 'DUALIE',\n                    },\n                    {\n                        name: locale('text-brush'),\n                        value: 'BRUSH',\n                    },\n                    {\n                        name: locale('text-stringer'),", "                    {\n                        name: locale('text-stringer'),\n                        value: 'STRINGER',\n                    },\n                    {\n                        name: locale('text-brella'),\n                        value: 'BRELLA',\n                    },\n                    {\n                        name: locale('text-splatana'),", "                    {\n                        name: locale('text-splatana'),\n                        value: 'SPLATANA',\n                    },\n                )\n        )\n        .addStringOption((option) =>\n            option\n                .setName(\n                    locale('text-command-judge-name-2'),", "                .setName(\n                    locale('text-command-judge-name-2'),\n                )\n                .setDescription(\n                    locale('text-command-judge-des-2'),\n                )\n                .addChoices(\n                    {\n                        name: locale('splat-bomb'),\n                        value: 'splat-bomb',", "                        name: locale('splat-bomb'),\n                        value: 'splat-bomb',\n                    },\n                    {\n                        name: locale('suction-bomb'),\n                        value: 'suction-bomb',\n                    },\n                    {\n                        name: locale('burst-bomb'),\n                        value: 'burst-bomb',", "                        name: locale('burst-bomb'),\n                        value: 'burst-bomb',\n                    },\n                    {\n                        name: locale('curling-bomb'),\n                        value: 'curling-bomb',\n                    },\n                    {\n                        name: locale('autobomb'),\n                        value: 'autobomb',", "                        name: locale('autobomb'),\n                        value: 'autobomb',\n                    },\n                    {\n                        name: locale('ink-mine'),\n                        value: 'ink-mine',\n                    },\n                    {\n                        name: locale('toxic-mist'),\n                        value: 'toxic-mist',", "                        name: locale('toxic-mist'),\n                        value: 'toxic-mist',\n                    },\n                    {\n                        name: locale('point-sensor'),\n                        value: 'point-sensor',\n                    },\n                    {\n                        name: locale('splash-wall'),\n                        value: 'splash-wall',", "                        name: locale('splash-wall'),\n                        value: 'splash-wall',\n                    },\n                    {\n                        name: locale('sprinkler'),\n                        value: 'sprinkler',\n                    },\n                    {\n                        name: locale('squid-beakon'),\n                        value: 'squid-beakon',", "                        name: locale('squid-beakon'),\n                        value: 'squid-beakon',\n                    },\n                    {\n                        name: locale('fizzy-bomb'),\n                        value: 'fizzy-bomb',\n                    },\n                    {\n                        name: locale('torpedo'),\n                        value: 'torpedo',", "                        name: locale('torpedo'),\n                        value: 'torpedo',\n                    },\n                    {\n                        name: locale('angle-shooter'),\n                        value: 'angle-shooter',\n                    },\n                )\n        )\n        .addStringOption((option) =>", "        )\n        .addStringOption((option) =>\n            option\n                .setName(\n                    locale('text-command-judge-name-3'),\n                )\n                .setDescription(\n                    locale('text-command-judge-des-3'),\n                )\n                .addChoices(", "                )\n                .addChoices(\n                    {\n                        name: locale('big-bubbler'),\n                        value: 'big-bubbler',\n                    },\n                    {\n                        name: locale('booyah-bomb'),\n                        value: 'booyah-bomb',\n                    },", "                        value: 'booyah-bomb',\n                    },\n                    {\n                        name: locale('crab-tank'),\n                        value: 'crab-tank',\n                    },\n                    {\n                        name: locale('ink-storm'),\n                        value: 'ink-storm',\n                    },", "                        value: 'ink-storm',\n                    },\n                    {\n                        name: locale('ink-vac'),\n                        value: 'ink-vac',\n                    },\n                    {\n                        name: locale('inkjet'),\n                        value: 'inkjet',\n                    },", "                        value: 'inkjet',\n                    },\n                    {\n                        name: locale('killer-wail-5.1'),\n                        value: 'killer-wail-5.1',\n                    },\n                    {\n                        name: locale('kraken-royale'),\n                        value: 'kraken-royale',\n                    },", "                        value: 'kraken-royale',\n                    },\n                    {\n                        name: locale('reefslider'),\n                        value: 'reefslider',\n                    },\n                    {\n                        name: locale('super-chump'),\n                        value: 'super-chump',\n                    },", "                        value: 'super-chump',\n                    },\n                    {\n                        name: locale('tacticooler'),\n                        value: 'tacticooler',\n                    },\n                    {\n                        name: locale('tenta-missiles'),\n                        value: 'tenta-missiles',\n                    },", "                        value: 'tenta-missiles',\n                    },\n                    {\n                        name: locale('triple-inkstrike'),\n                        value: 'triple-inkstrike',\n                    },\n                    {\n                        name: locale('trizooka'),\n                        value: 'trizooka',\n                    },", "                        value: 'trizooka',\n                    },\n                    {\n                        name: locale('ultra-stamp'),\n                        value: 'ultra-stamp',\n                    },\n                    {\n                        name: locale('wave-breaker'),\n                        value: 'wave-breaker',\n                    },", "                        value: 'wave-breaker',\n                    },\n                    {\n                        name: locale('zipcaster'),\n                        value: 'zipcaster',\n                    },\n                )\n        ),\n\n    execute: async (interaction) => {", "\n    execute: async (interaction) => {\n        const type = interaction.options.get(locale('text-command-judge-name-1'))?.value as WeaponType | undefined;\n        const sub = interaction.options.get(locale('text-command-judge-name-2'))?.value as SubWeapon | undefined;\n        const special = interaction.options.get(locale('text-command-judge-name-3'))?.value as SpecialWeapon | undefined;\n\n        const weapon = judge(\n            type\n                ? [type]\n                : [],", "                ? [type]\n                : [],\n            sub\n                ? [sub]\n                : [],\n            special\n                ? [special]\n                : [],\n        );\n\n        if (weapon) {\n            await interaction.reply({\n                content: locale('text-judge'),\n                embeds: [\n                    {\n                        title: locale(weapon.id),\n                        fields: [\n                            {\n                                name: `${locale('text-sub')}:`,\n                                value: locale(weapon.sub),\n                            },\n                            {\n                                name: `${locale('text-special')}:`,\n                                value: locale(weapon.special),\n                            },\n                        ],\n                    },\n                ],\n            });\n        } else {\n            await interaction.reply({\n                content: locale('text-command-judge-fail'),\n                ephemeral: true,\n            });\n        }\n    },\n};\n", "        );\n\n        if (weapon) {\n            await interaction.reply({\n                content: locale('text-judge'),\n                embeds: [\n                    {\n                        title: locale(weapon.id),\n                        fields: [\n                            {\n                                name: `${locale('text-sub')}:`,\n                                value: locale(weapon.sub),\n                            },\n                            {\n                                name: `${locale('text-special')}:`,\n                                value: locale(weapon.special),\n                            },\n                        ],\n                    },\n                ],\n            });\n        } else {\n            await interaction.reply({\n                content: locale('text-command-judge-fail'),\n                ephemeral: true,\n            });\n        }\n    },\n};\n"]}
{"filename": "src/commands/index.ts", "chunked_list": ["export * from './JudgeCommand';\n"]}
{"filename": "src/locales/index.ts", "chunked_list": ["import { Language } from '../types/Language';\nimport { Locales } from '../types/Locales';\nimport en from './languages/en.json';\nimport ja from './languages/ja.json';\n\nconst locales: Locales = {\n    en: en,\n    ja: ja,\n};\n", "};\n\n/**\n * \u8a00\u8a9e\u5225\u306e\u30c6\u30ad\u30b9\u30c8\u3092\u53d6\u5f97\u3057\u307e\u3059\n * @param id \u7ffb\u8a33\u8b58\u5225\u5b50\n * @param lang \u8a00\u8a9e\n * @returns \u30c6\u30ad\u30b9\u30c8\n */\nexport function locale(id: string, lang?: Language): string {\n    const useLang: Language = lang ? lang : 'ja';\n\n    const ids = locales[useLang];", "export function locale(id: string, lang?: Language): string {\n    const useLang: Language = lang ? lang : 'ja';\n\n    const ids = locales[useLang];\n    if (!ids) {\n        console.warn(`The specified language '${useLang}' was not found.`);\n        return id;\n    }\n\n    const text = ids[id];\n    if (!text) {\n        console.warn(`The specified translation identifier '${id}' was not found.`);\n        return id;\n    }\n\n    return text;\n}\n", "    if (!text) {\n        console.warn(`The specified translation identifier '${id}' was not found.`);\n        return id;\n    }\n\n    return text;\n}\n"]}
{"filename": "src/utils/array.ts", "chunked_list": ["import { getRandomInt } from './number';\n\nexport function getRandomElem<T>(array: T[]): T | undefined {\n    return array[getRandomInt(array.length)];\n}\n"]}
{"filename": "src/utils/number.ts", "chunked_list": ["export function getRandomInt(max: number): number {\n    return Math.floor(Math.random() * max);\n}\n"]}
{"filename": "src/weapons/rollers.ts", "chunked_list": ["import { Weapon } from '../types/Weapon';\n\nexport const ROLLERS: Weapon[] = [\n    {\n        type: 'ROLLER',\n        id: 'carbon-roller_0',\n        sub: 'autobomb',\n        special: 'zipcaster',\n    },\n    {", "    },\n    {\n        type: 'ROLLER',\n        id: 'carbon-roller_1',\n        sub: 'burst-bomb',\n        special: 'trizooka',\n    },\n    {\n        type: 'ROLLER',\n        id: 'splat-roller_0',", "        type: 'ROLLER',\n        id: 'splat-roller_0',\n        sub: 'curling-bomb',\n        special: 'big-bubbler',\n    },\n    {\n        type: 'ROLLER',\n        id: 'splat-roller_1',\n        sub: 'squid-beakon',\n        special: 'kraken-royale',", "        sub: 'squid-beakon',\n        special: 'kraken-royale',\n    },\n    {\n        type: 'ROLLER',\n        id: 'dynamo-roller',\n        sub: 'sprinkler',\n        special: 'tacticooler',\n    },\n    {", "    },\n    {\n        type: 'ROLLER',\n        id: 'flingza-roller',\n        sub: 'ink-mine',\n        special: 'tenta-missiles',\n    },\n    {\n        type: 'ROLLER',\n        id: 'big-swig-roller_0',", "        type: 'ROLLER',\n        id: 'big-swig-roller_0',\n        sub: 'splash-wall',\n        special: 'ink-vac',\n    },\n    {\n        type: 'ROLLER',\n        id: 'big-swig-roller_1',\n        sub: 'angle-shooter',\n        special: 'ink-storm',", "        sub: 'angle-shooter',\n        special: 'ink-storm',\n    },\n];\n"]}
{"filename": "src/weapons/stringers.ts", "chunked_list": ["import { Weapon } from '../types/Weapon';\n\nexport const STRINGERS: Weapon[] = [\n    {\n        type: 'STRINGER',\n        id: 'tri-stringer',\n        sub: 'toxic-mist',\n        special: 'killer-wail-5.1',\n    },\n    {", "    },\n    {\n        type: 'STRINGER',\n        id: 'reef-lux',\n        sub: 'curling-bomb',\n        special: 'tenta-missiles',\n    },\n];\n", ""]}
{"filename": "src/weapons/brushes.ts", "chunked_list": ["import { Weapon } from '../types/Weapon';\n\nexport const BRUSHES: Weapon[] = [\n    {\n        type: 'BRUSH',\n        id: 'inkbrush_0',\n        sub: 'splat-bomb',\n        special: 'killer-wail-5.1',\n    },\n    {", "    },\n    {\n        type: 'BRUSH',\n        id: 'inkbrush_1',\n        sub: 'ink-mine',\n        special: 'ultra-stamp',\n    },\n    {\n        type: 'BRUSH',\n        id: 'octobrush',", "        type: 'BRUSH',\n        id: 'octobrush',\n        sub: 'suction-bomb',\n        special: 'zipcaster',\n    },\n    {\n        type: 'BRUSH',\n        id: 'painbrush',\n        sub: 'curling-bomb',\n        special: 'wave-breaker',", "        sub: 'curling-bomb',\n        special: 'wave-breaker',\n    },\n];\n"]}
{"filename": "src/weapons/brellas.ts", "chunked_list": ["import { Weapon } from '../types/Weapon';\n\nexport const BRELLAS: Weapon[] = [\n    {\n        type: 'BRELLA',\n        id: 'splat-brella',\n        sub: 'sprinkler',\n        special: 'triple-inkstrike',\n    },\n    {", "    },\n    {\n        type: 'BRELLA',\n        id: 'tenta-brella_0',\n        sub: 'squid-beakon',\n        special: 'ink-vac',\n    },\n    {\n        type: 'BRELLA',\n        id: 'tenta-brella_1',", "        type: 'BRELLA',\n        id: 'tenta-brella_1',\n        sub: 'ink-mine',\n        special: 'trizooka',\n    },\n    {\n        type: 'BRELLA',\n        id: 'undercover-brella',\n        sub: 'ink-mine',\n        special: 'reefslider',", "        sub: 'ink-mine',\n        special: 'reefslider',\n    },\n];\n"]}
{"filename": "src/weapons/chargers.ts", "chunked_list": ["import { Weapon } from '../types/Weapon';\n\nexport const CHARGERS: Weapon[] = [\n    {\n        type: 'CHARGER',\n        id: 'squiffer',\n        sub: 'point-sensor',\n        special: 'big-bubbler',\n    },\n    {", "    },\n    {\n        type: 'CHARGER',\n        id: 'splat-charger_0',\n        sub: 'splat-bomb',\n        special: 'ink-vac',\n    },\n    {\n        type: 'CHARGER',\n        id: 'splat-charger_1',", "        type: 'CHARGER',\n        id: 'splat-charger_1',\n        sub: 'splash-wall',\n        special: 'triple-inkstrike',\n    },\n    {\n        type: 'CHARGER',\n        id: 'splatterscope_0',\n        sub: 'splat-bomb',\n        special: 'ink-vac',", "        sub: 'splat-bomb',\n        special: 'ink-vac',\n    },\n    {\n        type: 'CHARGER',\n        id: 'splatterscope_1',\n        sub: 'splash-wall',\n        special: 'triple-inkstrike',\n    },\n    {", "    },\n    {\n        type: 'CHARGER',\n        id: 'e-liter',\n        sub: 'ink-mine',\n        special: 'wave-breaker',\n    },\n    {\n        type: 'CHARGER',\n        id: 'e-liter-scope',", "        type: 'CHARGER',\n        id: 'e-liter-scope',\n        sub: 'ink-mine',\n        special: 'wave-breaker',\n    },\n    {\n        type: 'CHARGER',\n        id: 'bamboozler-14',\n        sub: 'autobomb',\n        special: 'killer-wail-5.1',", "        sub: 'autobomb',\n        special: 'killer-wail-5.1',\n    },\n    {\n        type: 'CHARGER',\n        id: 'goo-tuber',\n        sub: 'torpedo',\n        special: 'tenta-missiles',\n    },\n    {", "    },\n    {\n        type: 'CHARGER',\n        id: 'snipewriter',\n        sub: 'sprinkler',\n        special: 'tacticooler',\n    },\n];\n", ""]}
{"filename": "src/weapons/sloshers.ts", "chunked_list": ["import { Weapon } from '../types/Weapon';\n\nexport const SLOSHERS: Weapon[] = [\n    {\n        type: 'SLOSHER',\n        id: 'slosher_0',\n        sub: 'splat-bomb',\n        special: 'triple-inkstrike',\n    },\n    {", "    },\n    {\n        type: 'SLOSHER',\n        id: 'slosher_1',\n        sub: 'angle-shooter',\n        special: 'zipcaster',\n    },\n    {\n        type: 'SLOSHER',\n        id: 'tri-slosher_0',", "        type: 'SLOSHER',\n        id: 'tri-slosher_0',\n        sub: 'toxic-mist',\n        special: 'inkjet',\n    },\n    {\n        type: 'SLOSHER',\n        id: 'tri-slosher_1',\n        sub: 'fizzy-bomb',\n        special: 'tacticooler',", "        sub: 'fizzy-bomb',\n        special: 'tacticooler',\n    },\n    {\n        type: 'SLOSHER',\n        id: 'sloshing-machine',\n        sub: 'fizzy-bomb',\n        special: 'booyah-bomb',\n    },\n    {", "    },\n    {\n        type: 'SLOSHER',\n        id: 'bloblobber',\n        sub: 'sprinkler',\n        special: 'ink-storm',\n    },\n    {\n        type: 'SLOSHER',\n        id: 'explosher',", "        type: 'SLOSHER',\n        id: 'explosher',\n        sub: 'point-sensor',\n        special: 'ink-storm',\n    },\n];\n"]}
{"filename": "src/weapons/dualies.ts", "chunked_list": ["import { Weapon } from '../types/Weapon';\n\nexport const DUALIES: Weapon[] = [\n    {\n        type: 'DUALIE',\n        id: 'dapple-dualies_0',\n        sub: 'squid-beakon',\n        special: 'tacticooler',\n    },\n    {", "    },\n    {\n        type: 'DUALIE',\n        id: 'dapple-dualies_1',\n        sub: 'torpedo',\n        special: 'reefslider',\n    },\n    {\n        type: 'DUALIE',\n        id: 'splat-dualies',", "        type: 'DUALIE',\n        id: 'splat-dualies',\n        sub: 'suction-bomb',\n        special: 'crab-tank',\n    },\n    {\n        type: 'DUALIE',\n        id: 'glooga-dualies',\n        sub: 'splash-wall',\n        special: 'booyah-bomb',", "        sub: 'splash-wall',\n        special: 'booyah-bomb',\n    },\n    {\n        type: 'DUALIE',\n        id: 'dualie-squelchers_0',\n        sub: 'splat-bomb',\n        special: 'wave-breaker',\n    },\n    {", "    },\n    {\n        type: 'DUALIE',\n        id: 'dualie-squelchers_1',\n        sub: 'squid-beakon',\n        special: 'super-chump',\n    },\n    {\n        type: 'DUALIE',\n        id: 'tetra-dualies_0',", "        type: 'DUALIE',\n        id: 'tetra-dualies_0',\n        sub: 'autobomb',\n        special: 'reefslider',\n    },\n    {\n        type: 'DUALIE',\n        id: 'tetra-dualies_1',\n        sub: 'sprinkler',\n        special: 'zipcaster',", "        sub: 'sprinkler',\n        special: 'zipcaster',\n    },\n];\n"]}
{"filename": "src/weapons/shooters.ts", "chunked_list": ["import { Weapon } from '../types/Weapon';\n\nexport const SHOOTERS: Weapon[] = [\n    {\n        type: 'SHOOTER',\n        id: 'sploosh-o-matic_0',\n        sub: 'curling-bomb',\n        special: 'ultra-stamp',\n    },\n    {", "    },\n    {\n        type: 'SHOOTER',\n        id: 'sploosh-o-matic_1',\n        sub: 'squid-beakon',\n        special: 'killer-wail-5.1',\n    },\n    {\n        type: 'SHOOTER',\n        id: 'splattershot-jr_0',", "        type: 'SHOOTER',\n        id: 'splattershot-jr_0',\n        sub: 'splat-bomb',\n        special: 'big-bubbler',\n    },\n    {\n        type: 'SHOOTER',\n        id: 'splattershot-jr_1',\n        sub: 'torpedo',\n        special: 'wave-breaker',", "        sub: 'torpedo',\n        special: 'wave-breaker',\n    },\n    {\n        type: 'SHOOTER',\n        id: 'splash-o-matic_0',\n        sub: 'burst-bomb',\n        special: 'crab-tank',\n    },\n    {", "    },\n    {\n        type: 'SHOOTER',\n        id: 'splash-o-matic_1',\n        sub: 'suction-bomb',\n        special: 'triple-inkstrike',\n    },\n    {\n        type: 'SHOOTER',\n        id: 'aerospray_0',", "        type: 'SHOOTER',\n        id: 'aerospray_0',\n        sub: 'fizzy-bomb',\n        special: 'reefslider',\n    },\n    {\n        type: 'SHOOTER',\n        id: 'aerospray_1',\n        sub: 'sprinkler',\n        special: 'booyah-bomb',", "        sub: 'sprinkler',\n        special: 'booyah-bomb',\n    },\n    {\n        type: 'SHOOTER',\n        id: 'splattershot_0',\n        sub: 'suction-bomb',\n        special: 'trizooka',\n    },\n    {", "    },\n    {\n        type: 'SHOOTER',\n        id: 'splattershot_1',\n        sub: 'splat-bomb',\n        special: 'triple-inkstrike',\n    },\n    {\n        type: 'SHOOTER',\n        id: '52-gal',", "        type: 'SHOOTER',\n        id: '52-gal',\n        sub: 'splash-wall',\n        special: 'killer-wail-5.1',\n    },\n    {\n        type: 'SHOOTER',\n        id: 'n-zap_0',\n        sub: 'suction-bomb',\n        special: 'tacticooler',", "        sub: 'suction-bomb',\n        special: 'tacticooler',\n    },\n    {\n        type: 'SHOOTER',\n        id: 'n-zap_1',\n        sub: 'autobomb',\n        special: 'super-chump',\n    },\n    {", "    },\n    {\n        type: 'SHOOTER',\n        id: 'splattershot-pro_0',\n        sub: 'angle-shooter',\n        special: 'crab-tank',\n    },\n    {\n        type: 'SHOOTER',\n        id: 'splattershot-pro_1',", "        type: 'SHOOTER',\n        id: 'splattershot-pro_1',\n        sub: 'suction-bomb',\n        special: 'booyah-bomb',\n    },\n    {\n        type: 'SHOOTER',\n        id: '96-gal_0',\n        sub: 'sprinkler',\n        special: 'ink-vac',", "        sub: 'sprinkler',\n        special: 'ink-vac',\n    },\n    {\n        type: 'SHOOTER',\n        id: '96-gal_1',\n        sub: 'splash-wall',\n        special: 'kraken-royale',\n    },\n    {", "    },\n    {\n        type: 'SHOOTER',\n        id: 'jet-squelcher_0',\n        sub: 'angle-shooter',\n        special: 'ink-vac',\n    },\n    {\n        type: 'SHOOTER',\n        id: 'jet-squelcher_1',", "        type: 'SHOOTER',\n        id: 'jet-squelcher_1',\n        sub: 'toxic-mist',\n        special: 'ink-storm',\n    },\n    {\n        type: 'SHOOTER',\n        id: 'splattershot-nova_0',\n        sub: 'point-sensor',\n        special: 'killer-wail-5.1',", "        sub: 'point-sensor',\n        special: 'killer-wail-5.1',\n    },\n    {\n        type: 'SHOOTER',\n        id: 'splattershot-nova_1',\n        sub: 'ink-mine',\n        special: 'inkjet',\n    },\n    {", "    },\n    {\n        type: 'SHOOTER',\n        id: 'l-3-nozzlenose_0',\n        sub: 'curling-bomb',\n        special: 'crab-tank',\n    },\n    {\n        type: 'SHOOTER',\n        id: 'l-3-nozzlenose_1',", "        type: 'SHOOTER',\n        id: 'l-3-nozzlenose_1',\n        sub: 'burst-bomb',\n        special: 'ultra-stamp',\n    },\n    {\n        type: 'SHOOTER',\n        id: 'h-3-nozzlenose_0',\n        sub: 'point-sensor',\n        special: 'tacticooler',", "        sub: 'point-sensor',\n        special: 'tacticooler',\n    },\n    {\n        type: 'SHOOTER',\n        id: 'h-3-nozzlenose_1',\n        sub: 'splash-wall',\n        special: 'big-bubbler',\n    },\n    {", "    },\n    {\n        type: 'SHOOTER',\n        id: 'squeezer',\n        sub: 'splash-wall',\n        special: 'trizooka',\n    },\n];\n", ""]}
{"filename": "src/weapons/splatlings.ts", "chunked_list": ["import { Weapon } from '../types/Weapon';\n\nexport const SPLATLINGS: Weapon[] = [\n    {\n        type: 'SPLATLING',\n        id: 'mini-splatling_0',\n        sub: 'burst-bomb',\n        special: 'ultra-stamp',\n    },\n    {", "    },\n    {\n        type: 'SPLATLING',\n        id: 'mini-splatling_1',\n        sub: 'toxic-mist',\n        special: 'big-bubbler',\n    },\n    {\n        type: 'SPLATLING',\n        id: 'heavy-splatling_0',", "        type: 'SPLATLING',\n        id: 'heavy-splatling_0',\n        sub: 'sprinkler',\n        special: 'wave-breaker',\n    },\n    {\n        type: 'SPLATLING',\n        id: 'heavy-splatling_1',\n        sub: 'point-sensor',\n        special: 'kraken-royale',", "        sub: 'point-sensor',\n        special: 'kraken-royale',\n    },\n    {\n        type: 'SPLATLING',\n        id: 'hydra-splatling',\n        sub: 'autobomb',\n        special: 'booyah-bomb',\n    },\n    {", "    },\n    {\n        type: 'SPLATLING',\n        id: 'ballpoint-splatling',\n        sub: 'fizzy-bomb',\n        special: 'inkjet',\n    },\n    {\n        type: 'SPLATLING',\n        id: 'nautilus',", "        type: 'SPLATLING',\n        id: 'nautilus',\n        sub: 'point-sensor',\n        special: 'ink-storm',\n    },\n];\n"]}
{"filename": "src/weapons/index.ts", "chunked_list": ["export * from './blasters';\nexport * from './brellas';\nexport * from './brushes';\nexport * from './chargers';\nexport * from './dualies';\nexport * from './rollers';\nexport * from './shooters';\nexport * from './sloshers';\nexport * from './splatanas';\nexport * from './splatlings';", "export * from './splatanas';\nexport * from './splatlings';\nexport * from './stringers';\n"]}
{"filename": "src/weapons/splatanas.ts", "chunked_list": ["import { Weapon } from '../types/Weapon';\n\nexport const SPLATANAS: Weapon[] = [\n    {\n        type: 'SPLATANA',\n        id: 'splatana-stamper',\n        sub: 'burst-bomb',\n        special: 'zipcaster',\n    },\n    {", "    },\n    {\n        type: 'SPLATANA',\n        id: 'splatana-wiper_0',\n        sub: 'torpedo',\n        special: 'ultra-stamp',\n    },\n    {\n        type: 'SPLATANA',\n        id: 'splatana-wiper_1',", "        type: 'SPLATANA',\n        id: 'splatana-wiper_1',\n        sub: 'squid-beakon',\n        special: 'tenta-missiles',\n    },\n];\n"]}
{"filename": "src/weapons/blasters.ts", "chunked_list": ["import { Weapon } from '../types/Weapon';\n\nexport const BLASTERS: Weapon[] = [\n    {\n        type: 'BLASTER',\n        id: 'luna-blaster_0',\n        sub: 'splat-bomb',\n        special: 'zipcaster',\n    },\n    {", "    },\n    {\n        type: 'BLASTER',\n        id: 'luna-blaster_1',\n        sub: 'fizzy-bomb',\n        special: 'ultra-stamp',\n    },\n    {\n        type: 'BLASTER',\n        id: 'blaster',", "        type: 'BLASTER',\n        id: 'blaster',\n        sub: 'autobomb',\n        special: 'big-bubbler',\n    },\n    {\n        type: 'BLASTER',\n        id: 'range-blaster',\n        sub: 'suction-bomb',\n        special: 'wave-breaker',", "        sub: 'suction-bomb',\n        special: 'wave-breaker',\n    },\n    {\n        type: 'BLASTER',\n        id: 'clash-blaster_0',\n        sub: 'splat-bomb',\n        special: 'trizooka',\n    },\n    {", "    },\n    {\n        type: 'BLASTER',\n        id: 'clash-blaster_1',\n        sub: 'curling-bomb',\n        special: 'super-chump',\n    },\n    {\n        type: 'BLASTER',\n        id: 'rapid-blaster_0',", "        type: 'BLASTER',\n        id: 'rapid-blaster_0',\n        sub: 'ink-mine',\n        special: 'triple-inkstrike',\n    },\n    {\n        type: 'BLASTER',\n        id: 'rapid-blaster_1',\n        sub: 'torpedo',\n        special: 'inkjet',", "        sub: 'torpedo',\n        special: 'inkjet',\n    },\n    {\n        type: 'BLASTER',\n        id: 'rapid-blaster-pro_0',\n        sub: 'toxic-mist',\n        special: 'ink-vac',\n    },\n    {", "    },\n    {\n        type: 'BLASTER',\n        id: 'rapid-blaster-pro_1',\n        sub: 'angle-shooter',\n        special: 'killer-wail-5.1',\n    },\n    {\n        type: 'BLASTER',\n        id: 's-blast',", "        type: 'BLASTER',\n        id: 's-blast',\n        sub: 'sprinkler',\n        special: 'reefslider',\n    },\n];\n"]}
{"filename": "src/types/Locales.ts", "chunked_list": ["export type Locales = {\n    [lang: string]: LocaleIds;\n};\n\nexport type LocaleIds = {\n    [id: string]: string;\n};\n"]}
{"filename": "src/types/Language.ts", "chunked_list": ["export type Language = 'en' | 'ja';\n"]}
{"filename": "src/types/Weapon.ts", "chunked_list": ["export type Weapon = {\n    type: WeaponType;\n    id: MainWeapon;\n    sub: SubWeapon;\n    special: SpecialWeapon;\n};\n\nexport type WeaponType =\n    | 'SHOOTER'\n    | 'SPLATLING'\n    | 'CHARGER'\n    | 'ROLLER'\n    | 'BLASTER'\n    | 'SLOSHER'\n    | 'DUALIE'\n    | 'BRUSH'\n    | 'STRINGER'\n    | 'BRELLA'\n    | 'SPLATANA';\n", "type MainWeapon =\n    | Shooter\n    | Splatling\n    | Charger\n    | Roller\n    | Blaster\n    | Slosher\n    | Dualie\n    | Brush\n    | Stringer\n    | Brella\n    | Splatana;\n", "type Shooter =\n    | 'sploosh-o-matic_0'\n    | 'sploosh-o-matic_1'\n    | 'splattershot-jr_0'\n    | 'splattershot-jr_1'\n    | 'splash-o-matic_0'\n    | 'splash-o-matic_1'\n    | 'aerospray_0'\n    | 'aerospray_1'\n    | 'splattershot_0'\n    | 'splattershot_1'\n    | 'hero-shot-replica'\n    | '52-gal'\n    | 'n-zap_0'\n    | 'n-zap_1'\n    | 'splattershot-pro_0'\n    | 'splattershot-pro_1'\n    | '96-gal_0'\n    | '96-gal_1'\n    | 'jet-squelcher_0'\n    | 'jet-squelcher_1'\n    | 'splattershot-nova_0'\n    | 'splattershot-nova_1'\n    | 'l-3-nozzlenose_0'\n    | 'l-3-nozzlenose_1'\n    | 'h-3-nozzlenose_0'\n    | 'h-3-nozzlenose_1'\n    | 'squeezer';\n", "type Splatling =\n    | 'mini-splatling_0'\n    | 'mini-splatling_1'\n    | 'heavy-splatling_0'\n    | 'heavy-splatling_1'\n    | 'hydra-splatling'\n    | 'ballpoint-splatling'\n    | 'nautilus';\n\ntype Charger =\n    | 'squiffer'\n    | 'splat-charger_0'\n    | 'splat-charger_1'\n    | 'splatterscope_0'\n    | 'splatterscope_1'\n    | 'e-liter'\n    | 'e-liter-scope'\n    | 'bamboozler-14'\n    | 'goo-tuber'\n    | 'snipewriter';\n", "type Charger =\n    | 'squiffer'\n    | 'splat-charger_0'\n    | 'splat-charger_1'\n    | 'splatterscope_0'\n    | 'splatterscope_1'\n    | 'e-liter'\n    | 'e-liter-scope'\n    | 'bamboozler-14'\n    | 'goo-tuber'\n    | 'snipewriter';\n", "type Roller =\n    | 'carbon-roller_0'\n    | 'carbon-roller_1'\n    | 'splat-roller_0'\n    | 'splat-roller_1'\n    | 'dynamo-roller'\n    | 'flingza-roller'\n    | 'big-swig-roller_0'\n    | 'big-swig-roller_1';\n\ntype Blaster =\n    | 'luna-blaster_0'\n    | 'luna-blaster_1'\n    | 'blaster'\n    | 'range-blaster'\n    | 'clash-blaster_0'\n    | 'clash-blaster_1'\n    | 'rapid-blaster_0'\n    | 'rapid-blaster_1'\n    | 'rapid-blaster-pro_0'\n    | 'rapid-blaster-pro_1'\n    | 's-blast';\n", "type Blaster =\n    | 'luna-blaster_0'\n    | 'luna-blaster_1'\n    | 'blaster'\n    | 'range-blaster'\n    | 'clash-blaster_0'\n    | 'clash-blaster_1'\n    | 'rapid-blaster_0'\n    | 'rapid-blaster_1'\n    | 'rapid-blaster-pro_0'\n    | 'rapid-blaster-pro_1'\n    | 's-blast';\n", "type Slosher =\n    | 'slosher_0'\n    | 'slosher_1'\n    | 'tri-slosher_0'\n    | 'tri-slosher_1'\n    | 'sloshing-machine'\n    | 'bloblobber'\n    | 'explosher';\n\ntype Dualie =\n    | 'dapple-dualies_0'\n    | 'dapple-dualies_1'\n    | 'splat-dualies'\n    | 'glooga-dualies'\n    | 'dualie-squelchers_0'\n    | 'dualie-squelchers_1'\n    | 'tetra-dualies_0'\n    | 'tetra-dualies_1';\n", "type Dualie =\n    | 'dapple-dualies_0'\n    | 'dapple-dualies_1'\n    | 'splat-dualies'\n    | 'glooga-dualies'\n    | 'dualie-squelchers_0'\n    | 'dualie-squelchers_1'\n    | 'tetra-dualies_0'\n    | 'tetra-dualies_1';\n\ntype Brush =\n    | 'inkbrush_0'\n    | 'inkbrush_1'\n    | 'octobrush'\n    | 'painbrush';\n", "type Brush =\n    | 'inkbrush_0'\n    | 'inkbrush_1'\n    | 'octobrush'\n    | 'painbrush';\n\ntype Stringer =\n    | 'tri-stringer'\n    | 'reef-lux';\n\ntype Brella =\n    | 'splat-brella'\n    | 'tenta-brella_0'\n    | 'tenta-brella_1'\n    | 'undercover-brella';\n", "type Brella =\n    | 'splat-brella'\n    | 'tenta-brella_0'\n    | 'tenta-brella_1'\n    | 'undercover-brella';\n\ntype Splatana =\n    | 'splatana-stamper'\n    | 'splatana-wiper_0'\n    | 'splatana-wiper_1';\n", "export type SubWeapon =\n    | 'splat-bomb'\n    | 'suction-bomb'\n    | 'burst-bomb'\n    | 'curling-bomb'\n    | 'autobomb'\n    | 'ink-mine'\n    | 'toxic-mist'\n    | 'point-sensor'\n    | 'splash-wall'\n    | 'sprinkler'\n    | 'squid-beakon'\n    | 'fizzy-bomb'\n    | 'torpedo'\n    | 'angle-shooter';\n", "export type SpecialWeapon =\n    | 'big-bubbler'\n    | 'booyah-bomb'\n    | 'crab-tank'\n    | 'ink-storm'\n    | 'ink-vac'\n    | 'inkjet'\n    | 'killer-wail-5.1'\n    | 'kraken-royale'\n    | 'reefslider'\n    | 'super-chump'\n    | 'tacticooler'\n    | 'tenta-missiles'\n    | 'triple-inkstrike'\n    | 'trizooka'\n    | 'ultra-stamp'\n    | 'wave-breaker'\n    | 'zipcaster';\n"]}
{"filename": "src/types/Command.ts", "chunked_list": ["import { CommandInteraction, SlashCommandBuilder } from 'discord.js';\n\nexport type Command = {\n    command: SlashCommandBuilder | Omit<SlashCommandBuilder, 'addSubcommand' | 'addSubcommandGroup'>;\n    execute: (interaction: CommandInteraction) => void;\n};\n"]}
