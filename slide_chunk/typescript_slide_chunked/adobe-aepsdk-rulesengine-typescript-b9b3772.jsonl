{"filename": "test/contains.spec.ts", "chunked_list": ["/*\nCopyright 2023 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.", "OF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport RulesEngine from \"../src/index\";\nimport { RuleSet } from \"../src/types/schema\";\n\nconst RULE_DEFINITION: RuleSet = {\n  version: 1,\n  rules: [\n    {", "  rules: [\n    {\n      condition: {\n        type: \"matcher\",\n        definition: {\n          key: \"color\",\n          matcher: \"co\",\n          values: [\n            \"red\",\n            \"blue\",", "            \"red\",\n            \"blue\",\n            \"GREEN\",\n            {},\n            new Set(),\n            undefined,\n            null,\n            true,\n            \"\ud83d\ude43\",\n          ],", "            \"\ud83d\ude43\",\n          ],\n        },\n      },\n      consequences: [\n        {\n          id: \"123\",\n          type: \"data\",\n          detail: {\n            html: \"<h1>Hello World of color!</h1>\",", "          detail: {\n            html: \"<h1>Hello World of color!</h1>\",\n          },\n        },\n      ],\n    },\n  ],\n};\n\ndescribe(\"matcher type - contains (co)\", () => {", "\ndescribe(\"matcher type - contains (co)\", () => {\n  it(\"returns consequences when any of the condition definition values contains the relevant key's value of given context\", () => {\n    const result = RulesEngine(RULE_DEFINITION).execute({\n      fabric: \"cotton\",\n      brand: \"Nike\",\n      color: \"Stay green, stay in the woods, and stay safe\",\n    });\n\n    expect(result).toEqual([RULE_DEFINITION.rules[0].consequences]);", "\n    expect(result).toEqual([RULE_DEFINITION.rules[0].consequences]);\n  });\n\n  it(\"returns consequences irrespective of casing when any of the condition definition values contains the relevant key's value of given context\", () => {\n    const result = RulesEngine(RULE_DEFINITION).execute({\n      fabric: \"cotton\",\n      brand: \"Nike\",\n      color: \"Water Is Blue \",\n    });", "      color: \"Water Is Blue \",\n    });\n\n    expect(result).toEqual([RULE_DEFINITION.rules[0].consequences]);\n  });\n\n  it(\"returns empty consequence when any of the condition definition values does not contain the relevant key's value of given context\", () => {\n    const result = RulesEngine(RULE_DEFINITION).execute({\n      fabric: \"cotton\",\n      brand: \"Polo\",", "      fabric: \"cotton\",\n      brand: \"Polo\",\n      color: \"yellow yellow \",\n    });\n\n    expect(result).toEqual([]);\n  });\n\n  it(\"returns empty consequence when the input context key's value is null\", () => {\n    const result = RulesEngine(RULE_DEFINITION).execute({", "  it(\"returns empty consequence when the input context key's value is null\", () => {\n    const result = RulesEngine(RULE_DEFINITION).execute({\n      fabric: \"cotton\",\n      brand: \"Polo\",\n      color: null,\n    });\n\n    expect(result).toEqual([]);\n  });\n", "  });\n\n  it(\"returns empty consequence when the input context key's value is undefined\", () => {\n    const result = RulesEngine(RULE_DEFINITION).execute({\n      fabric: \"cotton\",\n      brand: \"Polo\",\n      color: undefined,\n    });\n\n    expect(result).toEqual([]);", "\n    expect(result).toEqual([]);\n  });\n\n  it(\"returns empty consequence when the input context key's value is new Set()\", () => {\n    const result = RulesEngine(RULE_DEFINITION).execute({\n      fabric: \"cotton\",\n      brand: \"Polo\",\n      color: new Set(),\n    });", "      color: new Set(),\n    });\n\n    expect(result).toEqual([]);\n  });\n\n  it(\"returns empty consequence when the input context key's value is an object\", () => {\n    const result = RulesEngine(RULE_DEFINITION).execute({\n      fabric: \"cotton\",\n      brand: \"Polo\",", "      fabric: \"cotton\",\n      brand: \"Polo\",\n      color: {},\n    });\n\n    expect(result).toEqual([]);\n  });\n\n  it(\"returns consequences when the input context key's value is emoji\", () => {\n    const result = RulesEngine(RULE_DEFINITION).execute({", "  it(\"returns consequences when the input context key's value is emoji\", () => {\n    const result = RulesEngine(RULE_DEFINITION).execute({\n      fabric: \"cotton\",\n      brand: \"Polo\",\n      color: \"\ud83d\ude43\",\n    });\n    expect(result).toEqual([RULE_DEFINITION.rules[0].consequences]);\n  });\n\n  it(\"returns consequence when the input context key's value is true in double quote\", () => {", "\n  it(\"returns consequence when the input context key's value is true in double quote\", () => {\n    const ruleSet: RuleSet = {\n      version: 1,\n      rules: [\n        {\n          condition: {\n            type: \"matcher\",\n            definition: {\n              key: \"color\",", "            definition: {\n              key: \"color\",\n              matcher: \"co\",\n              values: [true],\n            },\n          },\n          consequences: [\n            {\n              id: \"123\",\n              type: \"data\",", "              id: \"123\",\n              type: \"data\",\n              detail: {},\n            },\n          ],\n        },\n      ],\n    };\n    expect(RulesEngine(ruleSet).execute({ color: \"true\" })).toEqual([\n      [", "    expect(RulesEngine(ruleSet).execute({ color: \"true\" })).toEqual([\n      [\n        {\n          id: \"123\",\n          type: \"data\",\n          detail: {},\n        },\n      ],\n    ]);\n  });", "    ]);\n  });\n\n  it(\"returns  consequence when the input context key's value is true\", () => {\n    const ruleSet: RuleSet = {\n      version: 1,\n      rules: [\n        {\n          condition: {\n            type: \"matcher\",", "          condition: {\n            type: \"matcher\",\n            definition: {\n              key: \"color\",\n              matcher: \"co\",\n              values: [\"true\"],\n            },\n          },\n          consequences: [\n            {", "          consequences: [\n            {\n              id: \"123\",\n              type: \"data\",\n              detail: {},\n            },\n          ],\n        },\n      ],\n    };", "      ],\n    };\n\n    expect(RulesEngine(ruleSet).execute({ color: true })).toEqual([\n      [\n        {\n          id: \"123\",\n          type: \"data\",\n          detail: {},\n        },", "          detail: {},\n        },\n      ],\n    ]);\n  });\n});\n"]}
{"filename": "test/exists.spec.ts", "chunked_list": ["/*\nCopyright 2023 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.", "OF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport RulesEngine from \"../src/index\";\nimport { RuleSet } from \"../src/types/schema\";\n\nconst RULE_SET: RuleSet = {\n  version: 1.1,\n  rules: [\n    {", "  rules: [\n    {\n      condition: {\n        type: \"matcher\",\n        definition: {\n          key: \"os\",\n          matcher: \"ex\",\n        },\n      },\n      consequences: [", "      },\n      consequences: [\n        {\n          id: \"b2023\",\n          type: \"data\",\n          detail: {\n            html: \"<h1>Special offer for windows laptop owners!</h1>\",\n          },\n        },\n      ],", "        },\n      ],\n    },\n  ],\n};\n\ndescribe(\"matcher type - exists (ex)\", () => {\n  let ruleset;\n\n  beforeEach(() => {", "\n  beforeEach(() => {\n    ruleset = RulesEngine(RULE_SET);\n  });\n\n  it(\"it returns consequences when key does exist\", () => {\n    const result = ruleset.execute({\n      browser: \"firefox\",\n      timeSpentOnPage: 5,\n      os: \"windows\",", "      timeSpentOnPage: 5,\n      os: \"windows\",\n    });\n\n    expect(result).toEqual([RULE_SET.rules[0].consequences]);\n  });\n\n  it(\"it returns empty when key does not exist\", () => {\n    const result = ruleset.execute({\n      browser: \"safari\",", "    const result = ruleset.execute({\n      browser: \"safari\",\n      timeSpentOnPage: \"5 seconds\",\n      os1: \"mac\",\n    });\n\n    expect(result).toEqual([]);\n  });\n\n  it(\"returns empty consequence when key exist but value of key is undefined in the context\", () => {", "\n  it(\"returns empty consequence when key exist but value of key is undefined in the context\", () => {\n    const result = ruleset.execute({\n      browser: \"chrome\",\n      timeSpentOnPage: \"10 seconds\",\n      os: undefined,\n    });\n    expect(result).toEqual([]);\n  });\n", "  });\n\n  it(\"returns empty consequence when key exist but value of key is null in the context\", () => {\n    const result = ruleset.execute({\n      browser: \"IE11\",\n      timeSpentOnPage: \"20 seconds\",\n      os: null,\n    });\n    expect(result).toEqual([]);\n  });", "    expect(result).toEqual([]);\n  });\n});\n"]}
{"filename": "test/nested-group.spec.ts", "chunked_list": ["/*\nCopyright 2023 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.", "OF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport RulesEngine from \"../src/index\";\nimport { RuleSet } from \"../src/types/schema\";\n\nconst RULE_DEFINITION: RuleSet = {\n  version: 1,\n  rules: [\n    {", "  rules: [\n    {\n      condition: {\n        type: \"group\",\n        definition: {\n          logic: \"and\",\n          conditions: [\n            {\n              type: \"group\",\n              definition: {", "              type: \"group\",\n              definition: {\n                logic: \"or\",\n                conditions: [\n                  {\n                    type: \"matcher\",\n                    definition: {\n                      key: \"key1\",\n                      matcher: \"eq\",\n                      values: [\"value1\", \"value2\"],", "                      matcher: \"eq\",\n                      values: [\"value1\", \"value2\"],\n                    },\n                  },\n                  {\n                    type: \"group\",\n                    definition: {\n                      logic: \"and\",\n                      conditions: [\n                        {", "                      conditions: [\n                        {\n                          type: \"matcher\",\n                          definition: {\n                            key: \"key2\",\n                            matcher: \"ne\",\n                            values: [\"value3\"],\n                          },\n                        },\n                        {", "                        },\n                        {\n                          type: \"matcher\",\n                          definition: {\n                            key: \"key2\",\n                            matcher: \"ne\",\n                            values: [\"value4\"],\n                          },\n                        },\n                      ],", "                        },\n                      ],\n                    },\n                  },\n                ],\n              },\n            },\n            {\n              type: \"matcher\",\n              definition: {", "              type: \"matcher\",\n              definition: {\n                key: \"key3\",\n                matcher: \"eq\",\n                values: [\"value5\", \"value6\"],\n              },\n            },\n          ],\n        },\n      },", "        },\n      },\n      consequences: [\n        {\n          id: \"11111111\",\n          type: \"data\",\n          detail: {\n            html: \"<h1>Hola el Mundo!</h1>\",\n          },\n        },", "          },\n        },\n      ],\n    },\n  ],\n};\nlet ruleset;\ndescribe(\"nested group\", () => {\n  beforeEach(() => {\n    ruleset = RulesEngine(RULE_DEFINITION);", "  beforeEach(() => {\n    ruleset = RulesEngine(RULE_DEFINITION);\n  });\n\n  it(\"execute all conditions true\", () => {\n    const result = ruleset.execute({\n      key1: \"value1\",\n      key2: \"value2\",\n      key3: \"value5\",\n    });", "      key3: \"value5\",\n    });\n\n    expect(result).toEqual([RULE_DEFINITION.rules[0].consequences]);\n  });\n\n  it(\"execute all conditions true, nested or first true second false\", () => {\n    const result = ruleset.execute({\n      key1: \"value1\",\n      key2: \"value3\",", "      key1: \"value1\",\n      key2: \"value3\",\n      key3: \"value5\",\n    });\n\n    expect(result).toEqual([RULE_DEFINITION.rules[0].consequences]);\n  });\n\n  it(\"execute all conditions true, nested or first false second true\", () => {\n    const result = ruleset.execute({", "  it(\"execute all conditions true, nested or first false second true\", () => {\n    const result = ruleset.execute({\n      key1: \"valueX\",\n      key2: \"value2\",\n      key3: \"value5\",\n    });\n\n    expect(result).toEqual([RULE_DEFINITION.rules[0].consequences]);\n  });\n", "  });\n\n  it(\"execute first condition false\", () => {\n    const result = ruleset.execute({\n      key1: \"valueX\",\n      key2: \"value3\",\n      key3: \"value5\",\n    });\n\n    expect(result).toEqual([]);", "\n    expect(result).toEqual([]);\n  });\n\n  it(\"execute second condition false\", () => {\n    const result = ruleset.execute({\n      key1: \"value1\",\n      key2: \"value2\",\n      key3: \"valueX\",\n    });", "      key3: \"valueX\",\n    });\n\n    expect(result).toEqual([]);\n  });\n});\n"]}
{"filename": "test/trackState.spec.ts", "chunked_list": ["/*\nCopyright 2023 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.", "OF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport RulesEngine from \"../src/index\";\nimport { Consequence, RuleSet } from \"../src/types/schema\";\n\nlet CONSEQUENCE: Consequence = {\n  id: \"c5001836-1b57-4992-af20-52d7962a1494\",\n  type: \"cjmiam\",\n  detail: {", "  type: \"cjmiam\",\n  detail: {\n    mobileParameters: {\n      verticalAlign: \"top\",\n      dismissAnimation: \"top\",\n      verticalInset: 2,\n      backdropOpacity: 0.2,\n      gestures: {\n        swipeUp: \"adbinapp://dismiss?interaction=swipeUp\",\n      },", "        swipeUp: \"adbinapp://dismiss?interaction=swipeUp\",\n      },\n      cornerRadius: 15,\n      horizontalInset: 0,\n      uiTakeover: false,\n      horizontalAlign: \"center\",\n      displayAnimation: \"top\",\n      width: 95,\n      backdropColor: \"#000000\",\n      height: 17,", "      backdropColor: \"#000000\",\n      height: 17,\n    },\n    html: '<!doctype html>\\n<html><head>\\n    <meta type=\"templateProperties\" name=\"banner\" label=\"adobe-label:banner\" icon=\"adobe-icon:banner\">\\n    <meta type=\"templateZone\" name=\"default\" label=\"Default\" classname=\"body\" definition=\"[&quot;Image&quot;, &quot;Text&quot;, &quot;CloseBtn&quot;]\">\\n\\n    <meta type=\"templateDefaultAnimations\" displayanimation=\"top\" dismissanimation=\"top\">\\n    <meta type=\"templateDefaultSize\" width=\"95\" height=\"17\">\\n    <meta type=\"templateDefaultPosition\" verticalalign=\"top\" verticalinset=\"2\" horizontalalign=\"center\" horizontalinset=\"0\">\\n    <meta type=\"templateDefaultUiTakeover\" enable=\"false\">\\n\\n    <meta type=\"templateVariation\" default=\"true\" name=\"top\" label=\"adobe-label:banner-variation-top\" classname=\"variationTop\">\\n    <meta type=\"templateVariation\" name=\"bottom\" label=\"adobe-label:banner-variation-bottom\" classname=\"variationBottom\">\\n\\n    <meta type=\"templateDefaultGesture\" variation=\"top\" swipeup=\"adbinapp://dismiss?interaction=swipeUp\">\\n    <meta type=\"templateDefaultAnimations\" variation=\"bottom\" displayanimation=\"bottom\" dismissanimation=\"bottom\">\\n    <meta type=\"templateDefaultPosition\" variation=\"bottom\" verticalalign=\"bottom\">\\n    <meta type=\"templateDefaultGesture\" variation=\"bottom\" swipedown=\"adbinapp://dismiss?interaction=swipeDown\">\\n\\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\\n    <meta charset=\"UTF-8\">\\n    <style>\\n      html,\\n      body {\\n        margin: 0;\\n        padding: 0;\\n        text-align: center;\\n        width: 100%;\\n        height: 100%;\\n        font-family: adobe-clean, \\'Source Sans Pro\\', -apple-system, BlinkMacSystemFont, \\'Segoe UI\\',\\n          Roboto, sans-serif;\\n      }\\n\\n      h3 {\\n        margin: 0.1rem auto;\\n      }\\n      p {\\n        margin: 0;\\n      }\\n\\n      a {\\n        text-decoration: none;\\n      }\\n\\n      .wrapper {\\n        background-color: #fff;\\n        border-radius: 0.3125rem;\\n        color: #333333;\\n        width: 100%;\\n        min-height: 100%;\\n        display: flex;\\n        justify-content: center;\\n        flex-direction: column;\\n        position: relative;\\n        background-size: \\'cover\\';\\n      }\\n\\n      .content {\\n        height: 100vh;\\n        width: 100vw;\\n      }\\n\\n      .text {\\n        flex-grow: 1;\\n        text-align: left;\\n        line-height: 1.25rem;\\n        font-size: 0.875rem;\\n        color: #333333;\\n        letter-spacing: 0;\\n      }\\n\\n      .text:first-child {\\n        line-height: 1.3125rem;\\n        font-size: 1.025rem;\\n      }\\n\\n      .btnClose {\\n        color: #000000;\\n      }\\n\\n      .closeBtn {\\n        align-self: flex-start;\\n        order: 999;\\n      }\\n      .closeBtn img {\\n        width: 100%;\\n        height: 100%;\\n      }\\n\\n      .image {\\n        height: 100%;\\n        padding-right: 0.8rem;\\n        align-items: center;\\n        flex-grow: 0;\\n        display: flex;\\n      }\\n      .image img {\\n        height: 100%;\\n        max-width: 100%;\\n      }\\n\\n      .image.empty-image {\\n        display: none;\\n      }\\n\\n      .empty-image ~ .text {\\n        flex-grow: 1;\\n      }\\n\\n      .body {\\n        flex-grow: 1;\\n        width: 100%;\\n        height: 100%;\\n        display: flex;\\n        flex-direction: row;\\n        padding: 0.8rem;\\n        box-sizing: border-box;\\n        align-items: center;\\n        justify-content: space-between;\\n      }\\n\\n      .buttons {\\n        width: 100%;\\n        display: flex;\\n        flex-direction: column;\\n        font-size: 1rem;\\n        line-height: 1.3rem;\\n        text-decoration: none;\\n        text-align: center;\\n        box-sizing: border-box;\\n        padding: 0.8rem;\\n        padding-top: 0.4rem;\\n      }\\n\\n      .button {\\n        flex-grow: 1;\\n        background-color: #1473e6;\\n        color: #ffffff;\\n        border-radius: 0.25rem;\\n        cursor: pointer;\\n        padding: 0.3rem;\\n        gap: 0.5rem;\\n      }\\n    </style>\\n    <style type=\"text/css\" id=\"editor-styles\">\\n\\n</style>\\n  </head>\\n\\n  <body>\\n    <div class=\"wrapper\">\\n      <div class=\"content\">\\n        <div class=\"body\"><div class=\"image\" data-uuid=\"8163d13c-1e4e-4b07-94c7-18271bc02099\"><img src=\"https://exc-unifiedcontent.experience-stage.adobe.net/solutions/cjm-message-ui/static-assets/inapp/InAppBlockImageDefault.svg\" alt=\"Hello World\"></div><div class=\"text\" data-uuid=\"ebe691ce-3c1e-4f3e-87bd-010bc4a4033a\"><h3>Lion king</h3><p>Hakuna Matata! What a wonderful phrase Hakuna Matata!iption text</p></div><div class=\"closeBtn\" data-uuid=\"771eff8c-e85a-4072-8988-51f2008b8381\" data-btn-style=\"circle\"><a aria-label=\"Close\" class=\"btnClose\" href=\"adbinapp://dismiss?interaction=cancel\"><svg xmlns=\"http://www.w3.org/2000/svg\" height=\"18\" viewbox=\"0 0 18 18\" width=\"18\" class=\"close\">\\n  <rect id=\"Canvas\" fill=\"#ffffff\" opacity=\"0\" width=\"18\" height=\"18\"></rect>\\n  <path fill=\"currentColor\" d=\"M14.657,3.343a8,8,0,1,0-.00021,11.31371l.00021-.00021A8,8,0,0,0,14.657,3.343Zm-1.3435,9.265-.707.7055a.6.6,0,0,1-.84853.00147l-.00147-.00147L9,10.5555l-2.758,2.758a.6.6,0,0,1-.84853.00147L5.392,13.3135l-.7045-.7075a.6.6,0,0,1-.00147-.84853L4.6875,11.756,7.4445,9,4.6875,6.242A.6.6,0,0,1,4.686,5.39347L4.6875,5.392l.707-.707A.6.6,0,0,1,6.243,4.68353L6.2445,4.685,9,7.444l2.758-2.7575a.6.6,0,0,1,.84853-.00147l.00147.00147.707.707a.6.6,0,0,1,.00147.84853L13.315,6.2435,10.5555,9l2.758,2.758a.6.6,0,0,1,.00147.84853Z\"></path>\\n</svg></a></div></div>\\n      </div>\\n    </div>\\n  \\n\\n</body></html>',\n    remoteAssets: [\n      \"https://exc-unifiedcontent.experience-stage.adobe.net/solutions/cjm-message-ui/static-assets/inapp/InAppBlockImageDefault.svg\",\n    ],\n  },\n};\nconst RULE_SET: RuleSet = {", "};\nconst RULE_SET: RuleSet = {\n  version: 1,\n  rules: [\n    {\n      condition: {\n        definition: {\n          conditions: [\n            {\n              definition: {", "            {\n              definition: {\n                conditions: [\n                  {\n                    definition: {\n                      key: \"~type\",\n                      matcher: \"eq\",\n                      values: [\"com.adobe.eventType.generic.track\"],\n                    },\n                    type: \"matcher\",", "                    },\n                    type: \"matcher\",\n                  },\n                  {\n                    definition: {\n                      key: \"~source\",\n                      matcher: \"eq\",\n                      values: [\"com.adobe.eventSource.requestContent\"],\n                    },\n                    type: \"matcher\",", "                    },\n                    type: \"matcher\",\n                  },\n                  {\n                    definition: { key: \"state\", matcher: \"ex\" },\n                    type: \"matcher\",\n                  },\n                ],\n                logic: \"and\",\n              },", "                logic: \"and\",\n              },\n              type: \"group\",\n            },\n            {\n              definition: {\n                key: \"contextdata.summer\",\n                matcher: \"co\",\n                values: [\"discount on flights\", \"travels\", \"Hawaii\"],\n              },", "                values: [\"discount on flights\", \"travels\", \"Hawaii\"],\n              },\n              type: \"matcher\",\n            },\n            {\n              definition: {\n                conditions: [\n                  {\n                    definition: {\n                      key: \"state\",", "                    definition: {\n                      key: \"state\",\n                      matcher: \"eq\",\n                      values: [\"CA\"],\n                    },\n                    type: \"matcher\",\n                  },\n                  {\n                    definition: {\n                      key: \"state\",", "                    definition: {\n                      key: \"state\",\n                      matcher: \"eq\",\n                      values: [\"UT\"],\n                    },\n                    type: \"matcher\",\n                  },\n                ],\n                logic: \"or\",\n              },", "                logic: \"or\",\n              },\n              type: \"group\",\n            },\n          ],\n          logic: \"and\",\n        },\n        type: \"group\",\n      },\n      consequences: [CONSEQUENCE],", "      },\n      consequences: [CONSEQUENCE],\n    },\n  ],\n};\n\ndescribe(\"( Track state event happens) AND ( Context data summer contains discount on flights, travels, or Hawaii ) AND (( State = CA ) OR ( State = UT ))\", () => {\n  let ruleset;\n\n  beforeEach(() => {", "\n  beforeEach(() => {\n    ruleset = RulesEngine(RULE_SET);\n  });\n\n  it(\"should display message for context data passed in all CAPS\", () => {\n    const result = ruleset.execute({\n      \"~type\": \"com.adobe.eventType.generic.track\",\n      \"~source\": \"com.adobe.eventSource.requestContent\",\n      \"contextdata.summer\": \"BIG DISCOUNT ON FLIGHTS THIS SUMMER\",", "      \"~source\": \"com.adobe.eventSource.requestContent\",\n      \"contextdata.summer\": \"BIG DISCOUNT ON FLIGHTS THIS SUMMER\",\n      state: \"ca\",\n    });\n    expect(result).toEqual([RULE_SET.rules[0].consequences]);\n  });\n  it(\"shouldn't display message for unsupported type\", () => {\n    const result = ruleset.execute({\n      \"~type\": \"com.adobe.eventType.generic.track\",\n      \"~source\": \"com.adobe.eventSource.requestContent\",", "      \"~type\": \"com.adobe.eventType.generic.track\",\n      \"~source\": \"com.adobe.eventSource.requestContent\",\n      \"contextdata.summer\": \"DISCOUNT ON FLIGHTS\",\n      state: \"[]\",\n    });\n    expect(result).toEqual([]);\n  });\n});\n", ""]}
{"filename": "test/endsWith.spec.ts", "chunked_list": ["/*\nCopyright 2023 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.", "OF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport RulesEngine from \"../src/index\";\nimport { RuleSet } from \"../types/types/rules\";\n\nconst RULE_DEFINITION: RuleSet = {\n  version: 1,\n  rules: [\n    {", "  rules: [\n    {\n      condition: {\n        type: \"matcher\",\n        definition: {\n          key: \"text\",\n          matcher: \"ew\",\n          values: [\"Hello\", \"Mahalo\", \"Aloha\", \"Ohana\", \"true\"],\n        },\n      },", "        },\n      },\n      consequences: [\n        {\n          id: \"123\",\n          type: \"data\",\n          detail: {\n            html: \"<h1>Ua ola loko i ke aloha!</h1>\",\n          },\n        },", "          },\n        },\n      ],\n    },\n  ],\n};\n\ndescribe(\"matcher type - ends with (ew)\", () => {\n  let ruleset;\n\n  beforeEach(() => {\n    ruleset = RulesEngine(RULE_DEFINITION);\n  });\n\n  it(\"returns consequences when any of the condition definition values ends with the relevant key's value of given context\", () => {\n    const result = ruleset.execute({\n      state: \"Hawaii\",\n      weather: \"Tropical\",\n      text: \"Ohana is a human circle of complete aloha\",\n    });\n\n    expect(result).toEqual([RULE_DEFINITION.rules[0].consequences]);\n  });\n\n  it(\"returns consequences when boolean true is passed\", () => {\n    const result = ruleset.execute({\n      state: \"Hawaii\",\n      weather: \"Tropical\",\n      text: true,\n    });\n\n    expect(result).toEqual([RULE_DEFINITION.rules[0].consequences]);\n  });\n\n  it(\"returns empty consequence when condition definition values does not ends with the relevant key's value of given context\", () => {\n    const result = ruleset.execute({\n      state: \"Hawaii\",\n      weather: \"Tropical\",\n      text: \"Ho'omaluhia\",\n    });\n\n    expect(result).toEqual([]);\n  });\n\n  it(\"returns empty consequence for context key's value is null\", () => {\n    const result = ruleset.execute({\n      state: \"Hawaii\",\n      weather: \"Tropical\",\n      text: null,\n    });\n\n    expect(result).toEqual([]);\n  });\n\n  it(\"returns  empty consequence for input context key's value is undefined\", () => {\n    const result = ruleset.execute({\n      state: \"Hawaii\",\n      weather: \"Tropical\",\n      text: undefined,\n    });\n\n    expect(result).toEqual([]);\n  });\n});\n"]}
{"filename": "test/index.spec.ts", "chunked_list": ["/*\nCopyright 2023 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.", "OF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport RulesEngine from \"../src\";\n\ndescribe(\"RulesEngine\", () => {\n  it(\"evaluates a ruleset and returns consequences\", () => {\n    const ruleset = RulesEngine({\n      version: 1,\n      rules: [", "      version: 1,\n      rules: [\n        {\n          condition: {\n            definition: {\n              conditions: [\n                {\n                  definition: {\n                    conditions: [\n                      {", "                    conditions: [\n                      {\n                        definition: {\n                          key: \"color\",\n                          matcher: \"eq\",\n                          values: [\"orange\", \"blue\"],\n                        },\n                        type: \"matcher\",\n                      },\n                      {", "                      },\n                      {\n                        definition: {\n                          key: \"action\",\n                          matcher: \"eq\",\n                          values: [\"greet\"],\n                        },\n                        type: \"matcher\",\n                      },\n                    ],", "                      },\n                    ],\n                    logic: \"and\",\n                  },\n                  type: \"group\",\n                },\n              ],\n              logic: \"and\",\n            },\n            type: \"group\",", "            },\n            type: \"group\",\n          },\n          consequences: [\n            {\n              type: \"item\",\n              detail: {\n                hello: \"world\",\n              },\n              id: \"abc123\",", "              },\n              id: \"abc123\",\n            },\n          ],\n        },\n      ],\n    });\n\n    expect(ruleset.execute({ color: \"blue\", action: \"greet\" })).toEqual([\n      [", "    expect(ruleset.execute({ color: \"blue\", action: \"greet\" })).toEqual([\n      [\n        {\n          type: \"item\",\n          detail: {\n            hello: \"world\",\n          },\n          id: \"abc123\",\n        },\n      ],", "        },\n      ],\n    ]);\n\n    expect(ruleset.execute({ color: \"pink\", action: \"greet\" })).toEqual([]);\n  });\n\n  it(\"evaluates multiple rulesets and returns consequences\", () => {\n    const ruleset = RulesEngine({\n      version: 1,", "    const ruleset = RulesEngine({\n      version: 1,\n      rules: [\n        {\n          condition: {\n            definition: {\n              conditions: [\n                {\n                  definition: {\n                    conditions: [", "                  definition: {\n                    conditions: [\n                      {\n                        definition: {\n                          key: \"color\",\n                          matcher: \"eq\",\n                          values: [\"orange\", \"blue\"],\n                        },\n                        type: \"matcher\",\n                      },", "                        type: \"matcher\",\n                      },\n                      {\n                        definition: {\n                          key: \"action\",\n                          matcher: \"eq\",\n                          values: [\"greet\"],\n                        },\n                        type: \"matcher\",\n                      },", "                        type: \"matcher\",\n                      },\n                    ],\n                    logic: \"and\",\n                  },\n                  type: \"group\",\n                },\n              ],\n              logic: \"and\",\n            },", "              logic: \"and\",\n            },\n            type: \"group\",\n          },\n          consequences: [\n            {\n              type: \"item\",\n              detail: {\n                greet: true,\n              },", "                greet: true,\n              },\n              id: \"abc123\",\n            },\n          ],\n        },\n        {\n          condition: {\n            definition: {\n              conditions: [", "            definition: {\n              conditions: [\n                {\n                  definition: {\n                    conditions: [\n                      {\n                        definition: {\n                          key: \"color\",\n                          matcher: \"eq\",\n                          values: [\"orange\", \"blue\"],", "                          matcher: \"eq\",\n                          values: [\"orange\", \"blue\"],\n                        },\n                        type: \"matcher\",\n                      },\n                      {\n                        definition: {\n                          key: \"action\",\n                          matcher: \"eq\",\n                          values: [\"farewell\"],", "                          matcher: \"eq\",\n                          values: [\"farewell\"],\n                        },\n                        type: \"matcher\",\n                      },\n                    ],\n                    logic: \"and\",\n                  },\n                  type: \"group\",\n                },", "                  type: \"group\",\n                },\n              ],\n              logic: \"and\",\n            },\n            type: \"group\",\n          },\n          consequences: [\n            {\n              type: \"item\",", "            {\n              type: \"item\",\n              detail: {\n                farewell: true,\n              },\n              id: \"abc123\",\n            },\n          ],\n        },\n      ],", "        },\n      ],\n    });\n\n    expect(ruleset.execute({ color: \"blue\", action: \"greet\" })).toEqual([\n      [\n        {\n          type: \"item\",\n          detail: {\n            greet: true,", "          detail: {\n            greet: true,\n          },\n          id: \"abc123\",\n        },\n      ],\n    ]);\n\n    expect(ruleset.execute({ color: \"orange\", action: \"farewell\" })).toEqual([\n      [", "    expect(ruleset.execute({ color: \"orange\", action: \"farewell\" })).toEqual([\n      [\n        {\n          type: \"item\",\n          detail: {\n            farewell: true,\n          },\n          id: \"abc123\",\n        },\n      ],", "        },\n      ],\n    ]);\n  });\n});\n"]}
{"filename": "test/startsWith.spec.ts", "chunked_list": ["/*\nCopyright 2023 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.", "OF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport RulesEngine from \"../src/index\";\nimport { RuleSet } from \"../src/types/schema\";\n\nconst RULE_DEFINITION: RuleSet = {\n  version: 1,\n  rules: [\n    {", "  rules: [\n    {\n      condition: {\n        type: \"matcher\",\n        definition: {\n          key: \"text\",\n          matcher: \"sw\",\n          values: [\"Hello\", \"Mahalo\", \"Aloha\", \"Ohana\", true],\n        },\n      },", "        },\n      },\n      consequences: [\n        {\n          id: \"123\",\n          type: \"data\",\n          detail: {\n            html: \"<h1>Ua ola loko i ke aloha!</h1>\",\n          },\n        },", "          },\n        },\n      ],\n    },\n  ],\n};\n\ndescribe(\"matcher type - starts with (sw)\", () => {\n  let ruleset;\n\n  beforeEach(() => {\n    ruleset = RulesEngine(RULE_DEFINITION);\n  });\n\n  it(\"returns consequences when any of the condition definition values starts with the relevant key's value of given context\", () => {\n    const result = ruleset.execute({\n      state: \"Hawaii\",\n      weather: \"Tropical\",\n      text: \"Ohana is a human circle of complete Aloha\",\n    });\n\n    expect(result).toEqual([RULE_DEFINITION.rules[0].consequences]);\n  });\n\n  it(\"returns consequences when  condition definition values starts with the true\", () => {\n    const result = ruleset.execute({\n      state: \"Hawaii\",\n      weather: \"Tropical\",\n      text: \"true\",\n    });\n\n    expect(result).toEqual([RULE_DEFINITION.rules[0].consequences]);\n  });\n\n  it(\"returns empty consequence when condition definition values does not starts with the relevant key's value of given context\", () => {\n    const result = ruleset.execute({\n      state: \"Hawaii\",\n      weather: \"Tropical\",\n      text: \"Ho'omaluhia\",\n    });\n\n    expect(result).toEqual([]);\n  });\n\n  it(\"returns empty consequence when the input context key's value is null\", () => {\n    const result = ruleset.execute({\n      state: \"Hawaii\",\n      weather: \"Tropical\",\n      text: null,\n    });\n\n    expect(result).toEqual([]);\n  });\n\n  it(\"returns  empty consequence when the input context key's value is undefined\", () => {\n    const result = ruleset.execute({\n      state: \"Hawaii\",\n      weather: \"Tropical\",\n      text: undefined,\n    });\n\n    expect(result).toEqual([]);\n  });\n});\n"]}
{"filename": "test/notexists.spec.ts", "chunked_list": ["/*\nCopyright 2023 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.", "OF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport RulesEngine from \"../src/index\";\nimport { RuleSet } from \"../src/types/schema\";\n\nconst RULE_SET: RuleSet = {\n  version: 1.1,\n  rules: [\n    {", "  rules: [\n    {\n      condition: {\n        type: \"matcher\",\n        definition: {\n          key: \"children\",\n          matcher: \"nx\",\n        },\n      },\n      consequences: [", "      },\n      consequences: [\n        {\n          id: \"b2023\",\n          type: \"data\",\n          detail: {\n            html: \"<h1> Enjoy 10% off on first visit to this upscale casino hotel!</h1>\",\n          },\n        },\n      ],", "        },\n      ],\n    },\n  ],\n};\n\ndescribe(\"matcher type - not exists (nx)\", () => {\n  let ruleset;\n\n  beforeEach(() => {", "\n  beforeEach(() => {\n    ruleset = RulesEngine(RULE_SET);\n  });\n\n  it(\"returns consequence when key doesn't exists\", () => {\n    const result = ruleset.execute({\n      country: \"USA\",\n      city: \"Wendover\",\n      state: \"NV\",", "      city: \"Wendover\",\n      state: \"NV\",\n    });\n\n    expect(result).toEqual([RULE_SET.rules[0].consequences]);\n  });\n\n  it(\"returns empty consequence when key does exist\", () => {\n    const result = ruleset.execute({\n      country: \"USA\",", "    const result = ruleset.execute({\n      country: \"USA\",\n      city: \"Wendover\",\n      state: \"NV\",\n      children: \"of any city\",\n    });\n\n    expect(result).toEqual([]);\n  });\n", "  });\n\n  it(\"returns consequence when key does exist but key's value in the context is null\", () => {\n    const result = ruleset.execute({\n      country: \"USA\",\n      city: \"Wendover\",\n      state: \"NV\",\n      children: null,\n    });\n    expect(result).toEqual([RULE_SET.rules[0].consequences]);", "    });\n    expect(result).toEqual([RULE_SET.rules[0].consequences]);\n  });\n\n  it(\"returns consequence when key does exist but key's value in the context is undefined\", () => {\n    const result = ruleset.execute({\n      country: \"USA\",\n      city: \"Wendover\",\n      state: \"NV\",\n      children: undefined,", "      state: \"NV\",\n      children: undefined,\n    });\n    expect(result).toEqual([RULE_SET.rules[0].consequences]);\n  });\n});\n"]}
{"filename": "test/trackAction.spec.ts", "chunked_list": ["/*\nCopyright 2023 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.", "OF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport RulesEngine from \"../src/index\";\nimport { Consequence } from \"../src/types/schema\";\n\nlet CONSEQUENCE: Consequence = {\n  id: \"d2788421-7b30-4895-aeae-2df42b9e993c\",\n  type: \"cjmiam\",\n  detail: {", "  type: \"cjmiam\",\n  detail: {\n    mobileParameters: {\n      verticalAlign: \"center\",\n      dismissAnimation: \"top\",\n      verticalInset: 0,\n      backdropOpacity: 0.2,\n      cornerRadius: 15,\n      gestures: {\n        swipeUp: \"adbinapp://dismiss?interaction=swipeUp\",", "      gestures: {\n        swipeUp: \"adbinapp://dismiss?interaction=swipeUp\",\n        swipeDown: \"adbinapp://dismiss?interaction=swipeDown\",\n        swipeLeft: \"adbinapp://dismiss?interaction=swipeLeft\",\n        swipeRight: \"adbinapp://dismiss?interaction=swipeRight\",\n        tapBackground: \"adbinapp://dismiss?interaction=tapBackground\",\n      },\n      horizontalInset: 0,\n      uiTakeover: true,\n      horizontalAlign: \"center\",", "      uiTakeover: true,\n      horizontalAlign: \"center\",\n      width: 80,\n      displayAnimation: \"top\",\n      backdropColor: \"#000000\",\n      height: 60,\n    },\n    html: '<!doctype html>\\n<html><head>\\n    <meta type=\"templateProperties\" name=\"modal\" label=\"adobe-label:modal\" icon=\"adobe-icon:modal\">\\n    <meta type=\"templateZone\" name=\"default\" label=\"Default\" classname=\"body\" definition=\"[&quot;CloseBtn&quot;, &quot;Image&quot;, &quot;Text&quot;, &quot;Buttons&quot;]\">\\n\\n    <meta type=\"templateDefaultAnimations\" displayanimation=\"top\" dismissanimation=\"top\">\\n    <meta type=\"templateDefaultSize\" width=\"80\" height=\"60\">\\n    <meta type=\"templateDefaultPosition\" verticalalign=\"center\" verticalinset=\"0\" horizontalalign=\"center\" horizontalinset=\"0\">\\n    <meta type=\"templateDefaultGesture\" swipeup=\"adbinapp://dismiss?interaction=swipeUp\" swipedown=\"adbinapp://dismiss?interaction=swipeDown\" swipeleft=\"adbinapp://dismiss?interaction=swipeLeft\" swiperight=\"adbinapp://dismiss?interaction=swipeRight\" tapbackground=\"adbinapp://dismiss?interaction=tapBackground\">\\n    <meta type=\"templateDefaultUiTakeover\" enable=\"true\">\\n\\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\\n    <meta charset=\"UTF-8\">\\n    <style>\\n      html,\\n      body {\\n        margin: 0;\\n        padding: 0;\\n        text-align: center;\\n        width: 100%;\\n        height: 100%;\\n        font-family: adobe-clean, \\'Source Sans Pro\\', -apple-system, BlinkMacSystemFont, \\'Segoe UI\\',\\n          Roboto, sans-serif;\\n      }\\n      h3 {\\n        margin: 0.4rem auto;\\n      }\\n      p {\\n        margin: 0.4rem auto;\\n      }\\n\\n      .body {\\n        display: flex;\\n        flex-direction: column;\\n        background-color: #fff;\\n        border-radius: 0.3rem;\\n        color: #333333;\\n        width: 100vw;\\n        height: 100vh;\\n        text-align: center;\\n        align-items: center;\\n        background-size: \\'cover\\';\\n      }\\n\\n      .content {\\n        width: 100%;\\n        height: 100%;\\n        display: flex;\\n        justify-content: center;\\n        flex-direction: column;\\n        position: relative;\\n      }\\n\\n      a {\\n        text-decoration: none;\\n      }\\n\\n      .image {\\n        height: 1rem;\\n        flex-grow: 4;\\n        flex-shrink: 1;\\n        display: flex;\\n        justify-content: center;\\n        width: 90%;\\n        flex-direction: column;\\n        align-items: center;\\n      }\\n      .image img {\\n        max-height: 100%;\\n        max-width: 100%;\\n      }\\n\\n      .image.empty-image {\\n        display: none;\\n      }\\n\\n      .empty-image ~ .text {\\n        flex-grow: 1;\\n      }\\n\\n      .text {\\n        text-align: center;\\n        color: #333333;\\n        line-height: 1.25rem;\\n        font-size: 0.875rem;\\n        padding: 0 0.8rem;\\n        width: 100%;\\n        box-sizing: border-box;\\n      }\\n      .title {\\n        line-height: 1.3125rem;\\n        font-size: 1.025rem;\\n      }\\n\\n      .buttons {\\n        width: 100%;\\n        display: flex;\\n        flex-direction: column;\\n        font-size: 1rem;\\n        line-height: 1.3rem;\\n        text-decoration: none;\\n        text-align: center;\\n        box-sizing: border-box;\\n        padding: 0.8rem;\\n        padding-top: 0.4rem;\\n        gap: 0.3125rem;\\n      }\\n\\n      .button {\\n        flex-grow: 1;\\n        background-color: #1473e6;\\n        color: #ffffff;\\n        border-radius: 0.25rem;\\n        cursor: pointer;\\n        padding: 0.3rem;\\n        gap: 0.5rem;\\n      }\\n\\n      .btnClose {\\n        color: #000000;\\n      }\\n\\n      .closeBtn {\\n        align-self: flex-end;\\n        color: #000000;\\n        width: 1.8rem;\\n        height: 1.8rem;\\n        margin-top: 1rem;\\n        margin-right: 0.3rem;\\n      }\\n      .closeBtn img {\\n        width: 100%;\\n        height: 100%;\\n      }\\n    </style>\\n    <style type=\"text/css\" id=\"editor-styles\">\\n\\n</style>\\n  </head>\\n\\n  <body>\\n    <div class=\"body\"><div class=\"closeBtn\" data-uuid=\"771eff8c-e85a-4072-8988-51f2008b8381\" data-btn-style=\"plain\"><a aria-label=\"Close\" class=\"btnClose\" href=\"adbinapp://dismiss?interaction=cancel\"><svg xmlns=\"http://www.w3.org/2000/svg\" height=\"18\" viewbox=\"0 0 18 18\" width=\"18\" class=\"close\">\\n  <rect id=\"Canvas\" fill=\"#ffffff\" opacity=\"0\" width=\"18\" height=\"18\"></rect>\\n  <path fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\" d=\"M13.2425,3.343,9,7.586,4.7575,3.343a.5.5,0,0,0-.707,0L3.343,4.05a.5.5,0,0,0,0,.707L7.586,9,3.343,13.2425a.5.5,0,0,0,0,.707l.707.7075a.5.5,0,0,0,.707,0L9,10.414l4.2425,4.243a.5.5,0,0,0,.707,0l.7075-.707a.5.5,0,0,0,0-.707L10.414,9l4.243-4.2425a.5.5,0,0,0,0-.707L13.95,3.343a.5.5,0,0,0-.70711-.00039Z\"></path>\\n</svg></a></div><div class=\"image\" data-uuid=\"8163d13c-1e4e-4b07-94c7-18271bc02099\"><img src=\"https://exc-unifiedcontent.experience-stage.adobe.net/solutions/cjm-message-ui/static-assets/inapp/InAppBlockImageDefault.svg\" alt=\"\"></div><div class=\"text\" data-uuid=\"ebe691ce-3c1e-4f3e-87bd-010bc4a4033a\"><h3>Lion king</h3><p>DescrHakuna Matata! What a wonderful phrase Hakuna Matata!iption text</p></div><div class=\"buttons\" data-uuid=\"03ea1149-f436-4530-9b04-04a50b1d492f\"><a class=\"button\" data-uuid=\"a6a3853c-aeb6-4d72-8aa5-9c9acbaf687b\" href=\"adbinapp://dismiss?interaction=clicked\">Button</a></div></div>\\n  \\n\\n</body></html>',\n    remoteAssets: [\n      \"https://exc-unifiedcontent.experience-stage.adobe.net/solutions/cjm-message-ui/static-assets/inapp/InAppBlockImageDefault.svg\",", "    remoteAssets: [\n      \"https://exc-unifiedcontent.experience-stage.adobe.net/solutions/cjm-message-ui/static-assets/inapp/InAppBlockImageDefault.svg\",\n    ],\n  },\n};\n\ndescribe(\"Message Trigger Track Action\", () => {\n  it(\"on specific days show messages\", () => {\n    expect(\n      RulesEngine({", "    expect(\n      RulesEngine({\n        version: 1,\n        rules: [\n          {\n            condition: {\n              definition: {\n                conditions: [\n                  {\n                    definition: {", "                  {\n                    definition: {\n                      conditions: [\n                        {\n                          definition: {\n                            key: \"~type\",\n                            matcher: \"eq\",\n                            values: [\"com.adobe.eventType.generic.track\"],\n                          },\n                          type: \"matcher\",", "                          },\n                          type: \"matcher\",\n                        },\n                        {\n                          definition: {\n                            key: \"~source\",\n                            matcher: \"eq\",\n                            values: [\"com.adobe.eventSource.requestContent\"],\n                          },\n                          type: \"matcher\",", "                          },\n                          type: \"matcher\",\n                        },\n                        {\n                          definition: { key: \"action\", matcher: \"ex\" },\n                          type: \"matcher\",\n                        },\n                      ],\n                      logic: \"and\",\n                    },", "                      logic: \"and\",\n                    },\n                    type: \"group\",\n                  },\n                  {\n                    definition: {\n                      key: \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.dayofweek\",\n                      matcher: \"eq\",\n                      values: [3, 4, 5, 6],\n                    },", "                      values: [3, 4, 5, 6],\n                    },\n                    type: \"matcher\",\n                  },\n                ],\n                logic: \"and\",\n              },\n              type: \"group\",\n            },\n            consequences: [CONSEQUENCE],", "            },\n            consequences: [CONSEQUENCE],\n          },\n        ],\n      }).execute({\n        \"~type\": \"com.adobe.eventType.generic.track\",\n        \"~source\": \"com.adobe.eventSource.requestContent\",\n        action: {},\n        \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.dayofweek\": 3,\n      })", "        \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.dayofweek\": 3,\n      })\n    ).toEqual([[CONSEQUENCE]]);\n  });\n  it(\"empty consequence when desired day of week is not passed in\", () => {\n    expect(\n      RulesEngine({\n        version: 1,\n        rules: [\n          {", "        rules: [\n          {\n            condition: {\n              definition: {\n                conditions: [\n                  {\n                    definition: {\n                      conditions: [\n                        {\n                          definition: {", "                        {\n                          definition: {\n                            key: \"~type\",\n                            matcher: \"eq\",\n                            values: [\"com.adobe.eventType.generic.track\"],\n                          },\n                          type: \"matcher\",\n                        },\n                        {\n                          definition: {", "                        {\n                          definition: {\n                            key: \"~source\",\n                            matcher: \"eq\",\n                            values: [\"com.adobe.eventSource.requestContent\"],\n                          },\n                          type: \"matcher\",\n                        },\n                        {\n                          definition: { key: \"action\", matcher: \"ex\" },", "                        {\n                          definition: { key: \"action\", matcher: \"ex\" },\n                          type: \"matcher\",\n                        },\n                      ],\n                      logic: \"and\",\n                    },\n                    type: \"group\",\n                  },\n                  {", "                  },\n                  {\n                    definition: {\n                      key: \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.dayofweek\",\n                      matcher: \"eq\",\n                      values: [3, 4, 5, 6],\n                    },\n                    type: \"matcher\",\n                  },\n                ],", "                  },\n                ],\n                logic: \"and\",\n              },\n              type: \"group\",\n            },\n            consequences: [CONSEQUENCE],\n          },\n        ],\n      }).execute({", "        ],\n      }).execute({\n        \"~type\": \"com.adobe.eventType.generic.track\",\n        \"~source\": \"com.adobe.eventSource.requestContent\",\n        action: {},\n        \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.dayofweek\": 1,\n      })\n    ).toEqual([]);\n  });\n});", "  });\n});\n"]}
{"filename": "test/simple-group-and.spec.ts", "chunked_list": ["/*\nCopyright 2023 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.", "OF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport RulesEngine from \"../src/index\";\nimport { RuleSet } from \"../src/types/schema\";\n\nconst RULE_DEFINITION: RuleSet = {\n  version: 1,\n  rules: [\n    {", "  rules: [\n    {\n      condition: {\n        type: \"group\",\n        definition: {\n          logic: \"and\",\n          conditions: [\n            {\n              type: \"matcher\",\n              definition: {", "              type: \"matcher\",\n              definition: {\n                key: \"key1\",\n                matcher: \"eq\",\n                values: [\"value1\", \"value2\"],\n              },\n            },\n            {\n              type: \"matcher\",\n              definition: {", "              type: \"matcher\",\n              definition: {\n                key: \"key3\",\n                matcher: \"eq\",\n                values: [\"value5\", \"value6\"],\n              },\n            },\n          ],\n        },\n      },", "        },\n      },\n      consequences: [\n        {\n          id: \"2222222\",\n          type: \"data\",\n          detail: {\n            html: \"<h1>Hello World!</h1>\",\n          },\n        },", "          },\n        },\n      ],\n    },\n  ],\n};\n\ndescribe(\"simple group-and\", () => {\n  let ruleset;\n", "  let ruleset;\n\n  beforeEach(() => {\n    ruleset = RulesEngine(RULE_DEFINITION);\n  });\n\n  it(\"execute true\", () => {\n    const result = ruleset.execute({\n      key1: \"value1\",\n      key2: \"value2\",", "      key1: \"value1\",\n      key2: \"value2\",\n      key3: \"value5\",\n    });\n\n    expect(result).toEqual([RULE_DEFINITION.rules[0].consequences]);\n  });\n\n  it(\"execute first condition false\", () => {\n    const result = ruleset.execute({", "  it(\"execute first condition false\", () => {\n    const result = ruleset.execute({\n      key1: \"valueX\",\n      key2: \"value2\",\n      key3: \"value6\",\n    });\n\n    expect(result).toEqual([]);\n  });\n", "  });\n\n  it(\"execute second condition false\", () => {\n    const result = ruleset.execute({\n      key1: \"value1\",\n      key2: \"value2\",\n      key3: \"valueX\",\n    });\n\n    expect(result).toEqual([]);", "\n    expect(result).toEqual([]);\n  });\n});\n"]}
{"filename": "test/notContains.spec.ts", "chunked_list": ["/*\nCopyright 2023 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.", "OF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport RulesEngine from \"../src/index\";\nimport { RuleSet } from \"../src/types/schema\";\n\nconst RULE_DEFINITION: RuleSet = {\n  version: 1,\n  rules: [\n    {", "  rules: [\n    {\n      condition: {\n        type: \"matcher\",\n        definition: {\n          key: \"color\",\n          matcher: \"nc\",\n          values: [\n            \"Red\",\n            \"blue\",", "            \"Red\",\n            \"blue\",\n            \"GREEN\",\n            {},\n            new Set(),\n            undefined,\n            null,\n            true,\n            \"\ud83d\ude43\",\n          ],", "            \"\ud83d\ude43\",\n          ],\n        },\n      },\n      consequences: [\n        {\n          id: \"123\",\n          type: \"data\",\n          detail: {\n            html: \"<h1>Hello World of color!</h1>\",", "          detail: {\n            html: \"<h1>Hello World of color!</h1>\",\n          },\n        },\n      ],\n    },\n  ],\n};\n\ndescribe(\"matcher type - not contains (nc)\", () => {", "\ndescribe(\"matcher type - not contains (nc)\", () => {\n  let ruleset;\n\n  beforeEach(() => {\n    ruleset = RulesEngine(RULE_DEFINITION);\n  });\n\n  it(\"returns consequences when none of the condition definition values partially matches the relevant key's value of given context\", () => {\n    const result = ruleset.execute({", "  it(\"returns consequences when none of the condition definition values partially matches the relevant key's value of given context\", () => {\n    const result = ruleset.execute({\n      fabric: \"cotton\",\n      brand: \"Nike\",\n      color:\n        \"Light and electromagnetic radiation both create additive color. \" +\n        \"In this model of color theory, the combination of all colors creates the perception of white\",\n    });\n\n    expect(result).toEqual([RULE_DEFINITION.rules[0].consequences]);", "\n    expect(result).toEqual([RULE_DEFINITION.rules[0].consequences]);\n  });\n\n  it(\"returns empty consequence when any of the condition definition values partially matches the relevant key's value of given context\", () => {\n    const result = ruleset.execute({\n      fabric: \"cotton\",\n      brand: \"Polo\",\n      color: \"red is my favorite\",\n    });", "      color: \"red is my favorite\",\n    });\n\n    expect(result).toEqual([]);\n  });\n\n  it(\"returns empty consequence when the input context key's value is null\", () => {\n    const result = ruleset.execute({\n      fabric: \"cotton\",\n      brand: \"Polo\",", "      fabric: \"cotton\",\n      brand: \"Polo\",\n      color: null,\n    });\n\n    expect(result).toEqual([]);\n  });\n\n  it(\"returns empty consequence when the input context key's value is undefined\", () => {\n    const result = ruleset.execute({", "  it(\"returns empty consequence when the input context key's value is undefined\", () => {\n    const result = ruleset.execute({\n      fabric: \"cotton\",\n      brand: \"Polo\",\n      color: undefined,\n    });\n\n    expect(result).toEqual([]);\n  });\n", "  });\n\n  it(\"returns empty consequence when the input context key's value is new Set()\", () => {\n    const result = ruleset.execute({\n      fabric: \"cotton\",\n      brand: \"Polo\",\n      color: new Set(),\n    });\n\n    expect(result).toEqual([]);", "\n    expect(result).toEqual([]);\n  });\n\n  it(\"returns empty consequence when the input context key's value is an object\", () => {\n    const result = ruleset.execute({\n      fabric: \"cotton\",\n      brand: \"Polo\",\n      color: {},\n    });", "      color: {},\n    });\n\n    expect(result).toEqual([]);\n  });\n\n  it(\"returns empty consequence when the input context key's value is boolean false\", () => {\n    const result = ruleset.execute({\n      fabric: \"cotton\",\n      brand: \"Polo\",", "      fabric: \"cotton\",\n      brand: \"Polo\",\n      color: true,\n    });\n\n    expect(result).toEqual([]);\n  });\n\n  it(\"returns empty consequences when the input context key's value is emoji\", () => {\n    const result = ruleset.execute({", "  it(\"returns empty consequences when the input context key's value is emoji\", () => {\n    const result = ruleset.execute({\n      fabric: \"cotton\",\n      brand: \"Polo\",\n      color: \"\ud83d\ude43\",\n    });\n    expect(result).toEqual([]);\n  });\n});\n", "});\n"]}
{"filename": "test/real.spec.ts", "chunked_list": ["/*\nCopyright 2023 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.", "OF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport RulesEngine from \"../src\";\nimport { Consequence, RuleSet } from \"../src/types/schema\";\n\nlet CONSEQUENCE: Consequence = {\n  id: \"1ba6ce8f-5a1c-4ce3-9689-098adb26b8d8\",\n  type: \"cjmiam\",\n  detail: {", "  type: \"cjmiam\",\n  detail: {\n    mobileParameters: {\n      verticalAlign: \"top\",\n      dismissAnimation: \"top\",\n      verticalInset: 2,\n      backdropOpacity: 0.2,\n      cornerRadius: 15,\n      gestures: {\n        swipeUp: \"adbinapp://dismiss?interaction=swipeUp\",", "      gestures: {\n        swipeUp: \"adbinapp://dismiss?interaction=swipeUp\",\n      },\n      horizontalInset: 0,\n      uiTakeover: false,\n      horizontalAlign: \"center\",\n      width: 95,\n      displayAnimation: \"top\",\n      backdropColor: \"#000000\",\n      height: 17,", "      backdropColor: \"#000000\",\n      height: 17,\n    },\n    html: \"<div>oh hai</div>\",\n    remoteAssets: [\"https://media1.giphy.com/media/zIOdLMZDcBDc2gk6vV/200.gif\"],\n  },\n};\ndescribe(\"rules from AJO\", () => {\n  it(\"supports  'generic track action'\", () => {\n    expect(", "  it(\"supports  'generic track action'\", () => {\n    expect(\n      RulesEngine({\n        version: 1,\n        rules: [\n          {\n            condition: {\n              definition: {\n                conditions: [\n                  {", "                conditions: [\n                  {\n                    definition: {\n                      conditions: [\n                        {\n                          definition: {\n                            key: \"~type\",\n                            matcher: \"eq\",\n                            values: [\"com.adobe.eventType.generic.track\"],\n                          },", "                            values: [\"com.adobe.eventType.generic.track\"],\n                          },\n                          type: \"matcher\",\n                        },\n                        {\n                          definition: {\n                            key: \"~source\",\n                            matcher: \"eq\",\n                            values: [\"com.adobe.eventSource.requestContent\"],\n                          },", "                            values: [\"com.adobe.eventSource.requestContent\"],\n                          },\n                          type: \"matcher\",\n                        },\n                        {\n                          definition: {\n                            key: \"action\",\n                            matcher: \"ex\",\n                          },\n                          type: \"matcher\",", "                          },\n                          type: \"matcher\",\n                        },\n                      ],\n                      logic: \"and\",\n                    },\n                    type: \"group\",\n                  },\n                  {\n                    definition: {", "                  {\n                    definition: {\n                      key: \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.carriername\",\n                      matcher: \"eq\",\n                      values: [\"Verizon\", \"AT&T\"],\n                    },\n                    type: \"matcher\",\n                  },\n                  {\n                    definition: {", "                  {\n                    definition: {\n                      key: \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.dayofweek\",\n                      matcher: \"eq\",\n                      values: [1, 3, 5],\n                    },\n                    type: \"matcher\",\n                  },\n                  {\n                    definition: {", "                  {\n                    definition: {\n                      key: \"contextdata.color\",\n                      matcher: \"co\",\n                      values: [\"orange\"],\n                    },\n                    type: \"matcher\",\n                  },\n                ],\n                logic: \"and\",", "                ],\n                logic: \"and\",\n              },\n              type: \"group\",\n            },\n            consequences: [CONSEQUENCE],\n          },\n        ],\n      }).execute({\n        \"~type\": \"com.adobe.eventType.generic.track\",", "      }).execute({\n        \"~type\": \"com.adobe.eventType.generic.track\",\n        \"~source\": \"com.adobe.eventSource.requestContent\",\n        action: {},\n        \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.carriername\":\n          \"Verizon\",\n        \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.dayofweek\": 3,\n        \"contextdata.color\": \"orange is great\",\n      })\n    ).toEqual([[CONSEQUENCE]]);", "      })\n    ).toEqual([[CONSEQUENCE]]);\n  });\n  it(\"supports 'Sent data to Platform'\", () => {\n    const ruleset: RuleSet = {\n      version: 1,\n      rules: [\n        {\n          condition: {\n            definition: {", "          condition: {\n            definition: {\n              conditions: [\n                {\n                  definition: {\n                    conditions: [\n                      {\n                        definition: {\n                          key: \"~type\",\n                          matcher: \"eq\",", "                          key: \"~type\",\n                          matcher: \"eq\",\n                          values: [\"com.adobe.eventType.edge\"],\n                        },\n                        type: \"matcher\",\n                      },\n                      {\n                        definition: {\n                          key: \"~source\",\n                          matcher: \"eq\",", "                          key: \"~source\",\n                          matcher: \"eq\",\n                          values: [\"com.adobe.eventSource.requestContent\"],\n                        },\n                        type: \"matcher\",\n                      },\n                    ],\n                    logic: \"and\",\n                  },\n                  type: \"group\",", "                  },\n                  type: \"group\",\n                },\n                {\n                  definition: {\n                    conditions: [\n                      {\n                        definition: {\n                          key: \"xdm.eventType\",\n                          matcher: \"eq\",", "                          key: \"xdm.eventType\",\n                          matcher: \"eq\",\n                          values: [\"advertising.clicks\"],\n                        },\n                        type: \"matcher\",\n                      },\n                      {\n                        definition: {\n                          key: \"xdm.personID\",\n                          matcher: \"eq\",", "                          key: \"xdm.personID\",\n                          matcher: \"eq\",\n                          values: [\"abc\"],\n                        },\n                        type: \"matcher\",\n                      },\n                      {\n                        definition: {\n                          key: \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.devicename\",\n                          matcher: \"eq\",", "                          key: \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.devicename\",\n                          matcher: \"eq\",\n                          values: [\"iphone\"],\n                        },\n                        type: \"matcher\",\n                      },\n                      {\n                        definition: {\n                          key: \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.dayssincefirstuse\",\n                          matcher: \"ge\",", "                          key: \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.dayssincefirstuse\",\n                          matcher: \"ge\",\n                          values: [10],\n                        },\n                        type: \"matcher\",\n                      },\n                    ],\n                    logic: \"or\",\n                  },\n                  type: \"group\",", "                  },\n                  type: \"group\",\n                },\n              ],\n              logic: \"and\",\n            },\n            type: \"group\",\n          },\n          consequences: [CONSEQUENCE],\n        },", "          consequences: [CONSEQUENCE],\n        },\n      ],\n    };\n\n    expect(\n      RulesEngine(ruleset).execute({\n        \"~type\": \"com.adobe.eventType.edge\",\n        \"~source\": \"com.adobe.eventSource.requestContent\",\n", "        \"~source\": \"com.adobe.eventSource.requestContent\",\n\n        // \"xdm.eventType\": \"advertising.clicks\",\n        // \"xdm.personID\": \"abc\",\n        // \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.devicename\":\n        //   \"iphone\",\n        \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.dayssincefirstuse\": 15,\n      })\n    ).toEqual([[CONSEQUENCE]]);\n  });", "    ).toEqual([[CONSEQUENCE]]);\n  });\n});\n"]}
{"filename": "test/greaterThanEquals.spec.ts", "chunked_list": ["/*\nCopyright 2023 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.", "OF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport RulesEngine from \"../src/index\";\nimport { RuleSet } from \"../src/types/schema\";\n\nconst RULE_SET: RuleSet = {\n  version: 1.1,\n  rules: [\n    {", "  rules: [\n    {\n      condition: {\n        type: \"matcher\",\n        definition: {\n          key: \"membershipPoint\",\n          matcher: \"ge\",\n          values: [6000, 3000],\n        },\n      },", "        },\n      },\n      consequences: [\n        {\n          id: \"b2023\",\n          type: \"data\",\n          detail: {\n            html: \"<h1> You can increase your membership point by using our promo benefits, sign up now!</h1>\",\n          },\n        },", "          },\n        },\n      ],\n    },\n  ],\n};\n\ndescribe(\"matcher type - greater than equals  (ge)\", () => {\n  let ruleset;\n", "  let ruleset;\n\n  beforeEach(() => {\n    ruleset = RulesEngine(RULE_SET);\n  });\n\n  it(\"returns consequence  when the context key's values is greater than or equal to rule's condition definition values\", () => {\n    const result = ruleset.execute({\n      country: \"USA\",\n      city: \"Salt Lake City\",", "      country: \"USA\",\n      city: \"Salt Lake City\",\n      state: \"UT\",\n      membershipPoint: 6000,\n    });\n\n    expect(result).toEqual([RULE_SET.rules[0].consequences]);\n  });\n\n  it(\"returns consequence  when the context key's values is  greater than or equal to rule's condition definition values\", () => {", "\n  it(\"returns consequence  when the context key's values is  greater than or equal to rule's condition definition values\", () => {\n    const result = ruleset.execute({\n      country: \"USA\",\n      city: \"Salt Lake City\",\n      state: \"UT\",\n      membershipPoint: 3000,\n    });\n\n    expect(result).toEqual([RULE_SET.rules[0].consequences]);", "\n    expect(result).toEqual([RULE_SET.rules[0].consequences]);\n  });\n\n  it(\"returns empty consequence when the context key's values is  null\", () => {\n    const result = ruleset.execute({\n      country: \"USA\",\n      city: \"Salt Lake City\",\n      state: \"UT\",\n      membershipPoint: null,", "      state: \"UT\",\n      membershipPoint: null,\n    });\n\n    expect(result).toEqual([]);\n  });\n\n  it(\"returns  empty consequence when the  context key's values is undefined\", () => {\n    const result = ruleset.execute({\n      country: \"USA\",", "    const result = ruleset.execute({\n      country: \"USA\",\n      city: \"Salt Lake City\",\n      state: \"UT\",\n      membershipPoint: undefined,\n    });\n\n    expect(result).toEqual([]);\n  });\n});", "  });\n});\n"]}
{"filename": "test/equals.spec.ts", "chunked_list": ["/*\nCopyright 2023 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.", "OF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport RulesEngine from \"../src/index\";\nimport { RuleSet } from \"../src/types/schema\";\n\nconst RULE_DEFINITION: RuleSet = {\n  version: 1,\n  rules: [\n    {", "  rules: [\n    {\n      condition: {\n        type: \"matcher\",\n        definition: {\n          key: \"browser\",\n          matcher: \"eq\",\n          values: [\"firefox\", \"chrome\"],\n        },\n      },", "        },\n      },\n      consequences: [\n        {\n          id: \"2222222\",\n          type: \"data\",\n          detail: {\n            html: \"<h1>Hello World!</h1>\",\n          },\n        },", "          },\n        },\n      ],\n    },\n  ],\n};\n\ndescribe(\"matcher type - equals (eq)\", () => {\n  let ruleset;\n", "  let ruleset;\n\n  beforeEach(() => {\n    ruleset = RulesEngine(RULE_DEFINITION);\n  });\n\n  it(\"version\", () => {\n    expect(ruleset.getVersion()).toBe(1);\n  });\n", "  });\n\n  it(\"rules count\", () => {\n    expect(ruleset.numRules()).toBe(1);\n  });\n\n  it(\"returns consequences when any of the values equals the relevant key:value in context\", () => {\n    const result = ruleset.execute({\n      browser: \"firefox\",\n      timeSpentOnPage: 5,", "      browser: \"firefox\",\n      timeSpentOnPage: 5,\n      os: \"windows\",\n    });\n\n    expect(result).toEqual([RULE_DEFINITION.rules[0].consequences]);\n  });\n\n  it(\"returns empty consequence when condition doesn't match meaning none of browser values matching the given context value of browser\", () => {\n    const result = ruleset.execute({", "  it(\"returns empty consequence when condition doesn't match meaning none of browser values matching the given context value of browser\", () => {\n    const result = ruleset.execute({\n      browser: \"safari\",\n      timeSpentOnPage: 5,\n      os: \"windows\",\n    });\n\n    expect(result).toEqual([]);\n  });\n});", "  });\n});\n"]}
{"filename": "test/platform.spec.ts", "chunked_list": ["/*\nCopyright 2023 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.", "OF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport RulesEngine from \"../src/index\";\nimport { Consequence, RuleSet } from \"../src/types/schema\";\n\nlet CONSEQUENCE: Consequence = {\n  id: \"27f487bf-e108-4e02-bf10-d2c094812291\",\n  type: \"cjmiam\",\n  detail: {", "  type: \"cjmiam\",\n  detail: {\n    mobileParameters: {\n      verticalAlign: \"top\",\n      dismissAnimation: \"top\",\n      verticalInset: 2,\n      backdropOpacity: 0.2,\n      gestures: {\n        swipeUp: \"adbinapp://dismiss?interaction=swipeUp\",\n      },", "        swipeUp: \"adbinapp://dismiss?interaction=swipeUp\",\n      },\n      cornerRadius: 15,\n      horizontalInset: 0,\n      uiTakeover: false,\n      horizontalAlign: \"center\",\n      displayAnimation: \"top\",\n      width: 95,\n      backdropColor: \"#000000\",\n      height: 17,", "      backdropColor: \"#000000\",\n      height: 17,\n    },\n    html: '<!doctype html>\\n<html><head>\\n    <meta type=\"templateProperties\" name=\"banner\" label=\"adobe-label:banner\" icon=\"adobe-icon:banner\">\\n    <meta type=\"templateZone\" name=\"default\" label=\"Default\" classname=\"body\" definition=\"[&quot;Image&quot;, &quot;Text&quot;, &quot;CloseBtn&quot;]\">\\n\\n    <meta type=\"templateDefaultAnimations\" displayanimation=\"top\" dismissanimation=\"top\">\\n    <meta type=\"templateDefaultSize\" width=\"95\" height=\"17\">\\n    <meta type=\"templateDefaultPosition\" verticalalign=\"top\" verticalinset=\"2\" horizontalalign=\"center\" horizontalinset=\"0\">\\n    <meta type=\"templateDefaultUiTakeover\" enable=\"false\">\\n\\n    <meta type=\"templateVariation\" default=\"true\" name=\"top\" label=\"adobe-label:banner-variation-top\" classname=\"variationTop\">\\n    <meta type=\"templateVariation\" name=\"bottom\" label=\"adobe-label:banner-variation-bottom\" classname=\"variationBottom\">\\n\\n    <meta type=\"templateDefaultGesture\" variation=\"top\" swipeup=\"adbinapp://dismiss?interaction=swipeUp\">\\n    <meta type=\"templateDefaultAnimations\" variation=\"bottom\" displayanimation=\"bottom\" dismissanimation=\"bottom\">\\n    <meta type=\"templateDefaultPosition\" variation=\"bottom\" verticalalign=\"bottom\">\\n    <meta type=\"templateDefaultGesture\" variation=\"bottom\" swipedown=\"adbinapp://dismiss?interaction=swipeDown\">\\n\\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\\n    <meta charset=\"UTF-8\">\\n    <style>\\n      html,\\n      body {\\n        margin: 0;\\n        padding: 0;\\n        text-align: center;\\n        width: 100%;\\n        height: 100%;\\n        font-family: adobe-clean, \\'Source Sans Pro\\', -apple-system, BlinkMacSystemFont, \\'Segoe UI\\',\\n          Roboto, sans-serif;\\n      }\\n\\n      h3 {\\n        margin: 0.1rem auto;\\n      }\\n      p {\\n        margin: 0;\\n      }\\n\\n      a {\\n        text-decoration: none;\\n      }\\n\\n      .wrapper {\\n        background-color: #fff;\\n        border-radius: 0.3125rem;\\n        color: #333333;\\n        width: 100%;\\n        min-height: 100%;\\n        display: flex;\\n        justify-content: center;\\n        flex-direction: column;\\n        position: relative;\\n        background-size: \\'cover\\';\\n      }\\n\\n      .content {\\n        height: 100vh;\\n        width: 100vw;\\n      }\\n\\n      .text {\\n        flex-grow: 1;\\n        text-align: left;\\n        line-height: 1.25rem;\\n        font-size: 0.875rem;\\n        color: #333333;\\n        letter-spacing: 0;\\n      }\\n\\n      .text:first-child {\\n        line-height: 1.3125rem;\\n        font-size: 1.025rem;\\n      }\\n\\n      .btnClose {\\n        color: #000000;\\n      }\\n\\n      .closeBtn {\\n        align-self: flex-start;\\n        order: 999;\\n      }\\n      .closeBtn img {\\n        width: 100%;\\n        height: 100%;\\n      }\\n\\n      .image {\\n        height: 100%;\\n        padding-right: 0.8rem;\\n        align-items: center;\\n        flex-grow: 0;\\n        display: flex;\\n      }\\n      .image img {\\n        height: 100%;\\n        max-width: 100%;\\n      }\\n\\n      .image.empty-image {\\n        display: none;\\n      }\\n\\n      .empty-image ~ .text {\\n        flex-grow: 1;\\n      }\\n\\n      .body {\\n        flex-grow: 1;\\n        width: 100%;\\n        height: 100%;\\n        display: flex;\\n        flex-direction: row;\\n        padding: 0.8rem;\\n        box-sizing: border-box;\\n        align-items: center;\\n        justify-content: space-between;\\n      }\\n\\n      .buttons {\\n        width: 100%;\\n        display: flex;\\n        flex-direction: column;\\n        font-size: 1rem;\\n        line-height: 1.3rem;\\n        text-decoration: none;\\n        text-align: center;\\n        box-sizing: border-box;\\n        padding: 0.8rem;\\n        padding-top: 0.4rem;\\n      }\\n\\n      .button {\\n        flex-grow: 1;\\n        background-color: #1473e6;\\n        color: #ffffff;\\n        border-radius: 0.25rem;\\n        cursor: pointer;\\n        padding: 0.3rem;\\n        gap: 0.5rem;\\n      }\\n    </style>\\n    <style type=\"text/css\" id=\"editor-styles\">\\n\\n</style>\\n  </head>\\n\\n  <body>\\n    <div class=\"wrapper\">\\n      <div class=\"content\">\\n        <div class=\"body\"><div class=\"image\" data-uuid=\"8163d13c-1e4e-4b07-94c7-18271bc02099\"><img src=\"https://exc-unifiedcontent.experience-stage.adobe.net/solutions/cjm-message-ui/static-assets/inapp/InAppBlockImageDefault.svg\" alt=\"Hello World\"></div><div class=\"text\" data-uuid=\"ebe691ce-3c1e-4f3e-87bd-010bc4a4033a\"><h3>Lion king</h3><p>Hakuna Matata! What a wonderful phrase Hakuna Matata!iption text</p></div><div class=\"closeBtn\" data-uuid=\"771eff8c-e85a-4072-8988-51f2008b8381\" data-btn-style=\"circle\"><a aria-label=\"Close\" class=\"btnClose\" href=\"adbinapp://dismiss?interaction=cancel\"><svg xmlns=\"http://www.w3.org/2000/svg\" height=\"18\" viewbox=\"0 0 18 18\" width=\"18\" class=\"close\">\\n  <rect id=\"Canvas\" fill=\"#ffffff\" opacity=\"0\" width=\"18\" height=\"18\"></rect>\\n  <path fill=\"currentColor\" d=\"M14.657,3.343a8,8,0,1,0-.00021,11.31371l.00021-.00021A8,8,0,0,0,14.657,3.343Zm-1.3435,9.265-.707.7055a.6.6,0,0,1-.84853.00147l-.00147-.00147L9,10.5555l-2.758,2.758a.6.6,0,0,1-.84853.00147L5.392,13.3135l-.7045-.7075a.6.6,0,0,1-.00147-.84853L4.6875,11.756,7.4445,9,4.6875,6.242A.6.6,0,0,1,4.686,5.39347L4.6875,5.392l.707-.707A.6.6,0,0,1,6.243,4.68353L6.2445,4.685,9,7.444l2.758-2.7575a.6.6,0,0,1,.84853-.00147l.00147.00147.707.707a.6.6,0,0,1,.00147.84853L13.315,6.2435,10.5555,9l2.758,2.758a.6.6,0,0,1,.00147.84853Z\"></path>\\n</svg></a></div></div>\\n      </div>\\n    </div>\\n  \\n\\n</body></html>',\n    remoteAssets: [\n      \"https://exc-unifiedcontent.experience-stage.adobe.net/solutions/cjm-message-ui/static-assets/inapp/InAppBlockImageDefault.svg\",\n    ],\n  },\n};\n", "};\n\nconst RULE_SET: RuleSet = {\n  version: 1,\n  rules: [\n    {\n      condition: {\n        definition: {\n          conditions: [\n            {", "          conditions: [\n            {\n              definition: {\n                conditions: [\n                  {\n                    definition: {\n                      key: \"~type\",\n                      matcher: \"eq\",\n                      values: [\"com.adobe.eventType.edge\"],\n                    },", "                      values: [\"com.adobe.eventType.edge\"],\n                    },\n                    type: \"matcher\",\n                  },\n                  {\n                    definition: {\n                      key: \"~source\",\n                      matcher: \"eq\",\n                      values: [\"com.adobe.eventSource.requestContent\"],\n                    },", "                      values: [\"com.adobe.eventSource.requestContent\"],\n                    },\n                    type: \"matcher\",\n                  },\n                ],\n                logic: \"and\",\n              },\n              type: \"group\",\n            },\n            {", "            },\n            {\n              definition: {\n                conditions: [\n                  {\n                    definition: {\n                      key: \"xdm.eventType\",\n                      matcher: \"eq\",\n                      values: [\n                        \"advertising.clicks\",", "                      values: [\n                        \"advertising.clicks\",\n                        \"advertising.completes\",\n                        \"application.launch\",\n                        \"application.close\",\n                      ],\n                    },\n                    type: \"matcher\",\n                  },\n                  {", "                  },\n                  {\n                    definition: { key: \"xdm.eventType\", matcher: \"eq\" },\n                    type: \"matcher\",\n                  },\n                  {\n                    definition: {\n                      key: \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.runmode\",\n                      matcher: \"eq\",\n                      values: [\"Application\"],", "                      matcher: \"eq\",\n                      values: [\"Application\"],\n                    },\n                    type: \"matcher\",\n                  },\n                ],\n                logic: \"or\",\n              },\n              type: \"group\",\n            },", "              type: \"group\",\n            },\n          ],\n          logic: \"and\",\n        },\n        type: \"group\",\n      },\n      consequences: [CONSEQUENCE],\n    },\n  ],", "    },\n  ],\n};\n\ndescribe(\"( Sent data to Platform event happens) AND (( XDM event type is advertising.clicks, advertising.completes, application.launch, or application.close ) OR ( XDM event type is empty ) OR ( Run mode is Application ))\", () => {\n  let ruleset;\n\n  beforeEach(() => {\n    ruleset = RulesEngine(RULE_SET);\n  });\n\n  it(\"Sent data to Platform\", () => {\n    const result = ruleset.execute({\n      \"~type\": \"com.adobe.eventType.edge\",\n      \"~source\": \"com.adobe.eventSource.requestContent\",\n      \"xdm.eventType\": \"Advertising.clicks\",\n      \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.runmode\":\n        \"Application\",\n    });\n    expect(result).toEqual([RULE_SET.rules[0].consequences]);\n  });", "  it(\"shouldn't display message for not equals ~type value\", () => {\n    const result = ruleset.execute({\n      \"~type\": \"com.adobe.eventType.generic.track\",\n      \"~source\": \"com.adobe.eventSource.requestContent\",\n      \"xdm.eventType\": \"application.launch\",\n      \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.runmode\":\n        \"Application\",\n    });\n    expect(result).toEqual([]);\n  });\n  it(\"shouldn't display message for not supported values\", () => {\n    const result = ruleset.execute({\n      \"~type\": new Date(),\n      \"~source\": \"com.adobe.eventSource.requestContent\",\n      \"xdm.eventType\": \"application.launch\",\n      \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.runmode\":\n        \"Application\",\n    });\n    expect(result).toEqual([]);\n  });\n  it(\"shouldn't display message for undefined\", () => {\n    const result = ruleset.execute({\n      \"~type\": undefined,\n      \"~source\": \"com.adobe.eventSource.requestContent\",\n      \"xdm.eventType\": \"application.launch\",\n      \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.runmode\":\n        \"Application\",\n    });\n    expect(result).toEqual([]);\n  });\n  it(\"shouldn't display message for null\", () => {\n    const result = ruleset.execute({\n      \"~type\": null,\n      \"~source\": \"com.adobe.eventSource.requestContent\",\n      \"xdm.eventType\": \"application.launch\",\n      \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.runmode\":\n        \"Application\",\n    });\n    expect(result).toEqual([]);\n  });\n});\n"]}
{"filename": "test/notEquals.spec.ts", "chunked_list": ["/*\nCopyright 2023 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.", "OF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport RulesEngine from \"../src/index\";\nimport { RuleSet } from \"../src/types/schema\";\n\nconst RULE_DEFINITION: RuleSet = {\n  version: 1,\n  rules: [\n    {", "  rules: [\n    {\n      condition: {\n        type: \"matcher\",\n        definition: {\n          key: \"browser\",\n          matcher: \"ne\",\n          values: [\"firefox\", \"chrome\"],\n        },\n      },", "        },\n      },\n      consequences: [\n        {\n          id: \"2222222\",\n          type: \"data\",\n          detail: {\n            html: \"<h1>Hello World!</h1>\",\n          },\n        },", "          },\n        },\n      ],\n    },\n  ],\n};\n\ndescribe(\"matcher type - equals (ne)\", () => {\n  let ruleset;\n", "  let ruleset;\n\n  beforeEach(() => {\n    ruleset = RulesEngine(RULE_DEFINITION);\n  });\n\n  it(\"returns consequences when any of the values not equals the relevant key:value in context\", () => {\n    const result = ruleset.execute({\n      browser: \"safari\",\n      timeSpentOnPage: 5,", "      browser: \"safari\",\n      timeSpentOnPage: 5,\n      os: \"windows\",\n    });\n\n    expect(result).toEqual([RULE_DEFINITION.rules[0].consequences]);\n  });\n\n  it(\"returns empty consequence when condition values matching the given context value of browser\", () => {\n    const result = ruleset.execute({", "  it(\"returns empty consequence when condition values matching the given context value of browser\", () => {\n    const result = ruleset.execute({\n      browser: \"CHROME\",\n      timeSpentOnPage: 5,\n      os: \"windows\",\n    });\n\n    expect(result).toEqual([]);\n  });\n", "  });\n\n  it(\"returns empty consequence when undefined value passed\", () => {\n    const result = ruleset.execute({\n      browser: undefined,\n      timeSpentOnPage: 5,\n      os: \"windows\",\n    });\n    expect(result).toEqual([]);\n  });", "    expect(result).toEqual([]);\n  });\n\n  it(\"returns empty consequence when object value passed\", () => {\n    const result = ruleset.execute({\n      browser: new Date(),\n      timeSpentOnPage: 5,\n      os: \"windows\",\n    });\n    expect(result).toEqual([]);", "    });\n    expect(result).toEqual([]);\n  });\n});\n"]}
{"filename": "test/lessThanEquals.spec.ts", "chunked_list": ["/*\nCopyright 2023 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.", "OF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport RulesEngine from \"../src/index\";\nimport { RuleSet } from \"../src/types/schema\";\n\nconst RULE_SET: RuleSet = {\n  version: 1.1,\n  rules: [\n    {", "  rules: [\n    {\n      condition: {\n        type: \"matcher\",\n        definition: {\n          key: \"membershipPoint\",\n          matcher: \"le\",\n          values: [6000, 3000],\n        },\n      },", "        },\n      },\n      consequences: [\n        {\n          id: \"b2023\",\n          type: \"data\",\n          detail: {\n            html: \"<h1> You can increase your membership point by using our promo benefits, sign up now!</h1>\",\n          },\n        },", "          },\n        },\n      ],\n    },\n  ],\n};\n\ndescribe(\"matcher type - lesser than equals  (le)\", () => {\n  let ruleset;\n", "  let ruleset;\n\n  beforeEach(() => {\n    ruleset = RulesEngine(RULE_SET);\n  });\n\n  it(\"returns consequence  when the context key's values is lesser than or equal to rule's condition definition values\", () => {\n    const result = ruleset.execute({\n      country: \"USA\",\n      city: \"Salt Lake City\",", "      country: \"USA\",\n      city: \"Salt Lake City\",\n      state: \"UT\",\n      membershipPoint: 6000,\n    });\n\n    expect(result).toEqual([RULE_SET.rules[0].consequences]);\n  });\n\n  it(\"returns consequence  when the context key's values is  lesser than or equal to any rule's condition definition values\", () => {", "\n  it(\"returns consequence  when the context key's values is  lesser than or equal to any rule's condition definition values\", () => {\n    const result = ruleset.execute({\n      country: \"USA\",\n      city: \"Salt Lake City\",\n      state: \"UT\",\n      membershipPoint: 4000,\n    });\n\n    expect(result).toEqual([RULE_SET.rules[0].consequences]);", "\n    expect(result).toEqual([RULE_SET.rules[0].consequences]);\n  });\n\n  it(\"returns empty consequence when the context key's values is  null\", () => {\n    const result = ruleset.execute({\n      country: \"USA\",\n      city: \"Salt Lake City\",\n      state: \"UT\",\n      membershipPoint: null,", "      state: \"UT\",\n      membershipPoint: null,\n    });\n\n    expect(result).toEqual([]);\n  });\n\n  it(\"returns  empty consequence when the  context key's values is undefined\", () => {\n    const result = ruleset.execute({\n      country: \"USA\",", "    const result = ruleset.execute({\n      country: \"USA\",\n      city: \"Salt Lake City\",\n      state: \"UT\",\n      membershipPoint: undefined,\n    });\n\n    expect(result).toEqual([]);\n  });\n});", "  });\n});\n"]}
{"filename": "test/lessThan.spec.ts", "chunked_list": ["/*\nCopyright 2023 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.", "OF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport RulesEngine from \"../src/index\";\nimport { RuleSet } from \"../src/types/schema\";\n\nconst RULE_SET: RuleSet = {\n  version: 1.1,\n  rules: [\n    {", "  rules: [\n    {\n      condition: {\n        type: \"matcher\",\n        definition: {\n          key: \"membershipPoint\",\n          matcher: \"lt\",\n          values: [6000, 3000],\n        },\n      },", "        },\n      },\n      consequences: [\n        {\n          id: \"b2023\",\n          type: \"data\",\n          detail: {\n            html: \"<h1> You can increase your membership point by using our promo benefits, sign up now!</h1>\",\n          },\n        },", "          },\n        },\n      ],\n    },\n  ],\n};\n\ndescribe(\"matcher type - less than  (lt)\", () => {\n  let ruleset;\n", "  let ruleset;\n\n  beforeEach(() => {\n    ruleset = RulesEngine(RULE_SET);\n  });\n\n  it(\"returns consequence  when the context key's value is  lesser than rule's condition definition values\", () => {\n    const result = ruleset.execute({\n      country: \"USA\",\n      city: \"Salt Lake City\",", "      country: \"USA\",\n      city: \"Salt Lake City\",\n      state: \"UT\",\n      membershipPoint: 4000,\n    });\n\n    expect(result).toEqual([RULE_SET.rules[0].consequences]);\n  });\n\n  it(\"returns no consequence  when the context key's value is not lesser than rule's condition definition values\", () => {", "\n  it(\"returns no consequence  when the context key's value is not lesser than rule's condition definition values\", () => {\n    const result = ruleset.execute({\n      country: \"USA\",\n      city: \"Salt Lake City\",\n      state: \"UT\",\n      membershipPoint: 6000,\n    });\n\n    expect(result).toEqual([]);", "\n    expect(result).toEqual([]);\n  });\n\n  it(\"returns consequence  when the context key's value is  lesser than rule's condition definition values\", () => {\n    const result = ruleset.execute({\n      country: \"USA\",\n      city: \"Salt Lake City\",\n      state: \"UT\",\n      membershipPoint: 5999,", "      state: \"UT\",\n      membershipPoint: 5999,\n    });\n\n    expect(result).toEqual([RULE_SET.rules[0].consequences]);\n  });\n\n  it(\"returns empty consequence when the input context key's value is  null\", () => {\n    const result = ruleset.execute({\n      country: \"USA\",", "    const result = ruleset.execute({\n      country: \"USA\",\n      city: \"Salt Lake City\",\n      state: \"UT\",\n      membershipPoint: null,\n    });\n\n    expect(result).toEqual([]);\n  });\n", "  });\n\n  it(\"returns  empty consequence when the input context key's value is undefined\", () => {\n    const result = ruleset.execute({\n      country: \"USA\",\n      city: \"Salt Lake City\",\n      state: \"UT\",\n      membershipPoint: undefined,\n    });\n", "    });\n\n    expect(result).toEqual([]);\n  });\n\n  it(\"returns empty consequence when the input context key's value is not less than any rule's condition definition values\", () => {\n    const result = ruleset.execute({\n      country: \"USA\",\n      city: \"Salt Lake City\",\n      state: \"UT\",", "      city: \"Salt Lake City\",\n      state: \"UT\",\n      membershipPoint: 7000,\n    });\n\n    expect(result).toEqual([]);\n  });\n});\n", ""]}
{"filename": "test/greaterThan.spec.ts", "chunked_list": ["/*\nCopyright 2023 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.", "OF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport RulesEngine from \"../src/index\";\nimport { RuleSet } from \"../src/types/schema\";\n\nconst RULE_SET: RuleSet = {\n  version: 1.1,\n  rules: [\n    {", "  rules: [\n    {\n      condition: {\n        type: \"matcher\",\n        definition: {\n          key: \"membershipPoint\",\n          matcher: \"gt\",\n          values: [6000, 3000],\n        },\n      },", "        },\n      },\n      consequences: [\n        {\n          id: \"b2023\",\n          type: \"data\",\n          detail: {\n            html: \"<h1> You can increase your membership point by using our promo benefits, sign up now!</h1>\",\n          },\n        },", "          },\n        },\n      ],\n    },\n  ],\n};\n\ndescribe(\"matcher type - greater than  (gt)\", () => {\n  let ruleset;\n", "  let ruleset;\n\n  beforeEach(() => {\n    ruleset = RulesEngine(RULE_SET);\n  });\n\n  it(\"returns consequence  when the context key's value is  greater than rule's condition definition values\", () => {\n    const result = ruleset.execute({\n      country: \"USA\",\n      city: \"Salt Lake City\",", "      country: \"USA\",\n      city: \"Salt Lake City\",\n      state: \"UT\",\n      membershipPoint: 4000,\n    });\n\n    expect(result).toEqual([RULE_SET.rules[0].consequences]);\n  });\n\n  it(\"returns consequence  when the context key's value is greater than rule's condition definition values\", () => {", "\n  it(\"returns consequence  when the context key's value is greater than rule's condition definition values\", () => {\n    const result = ruleset.execute({\n      country: \"USA\",\n      city: \"Salt Lake City\",\n      state: \"UT\",\n      membershipPoint: 6000,\n    });\n\n    expect(result).toEqual([RULE_SET.rules[0].consequences]);", "\n    expect(result).toEqual([RULE_SET.rules[0].consequences]);\n  });\n\n  it(\"returns empty consequence when the input context key's value is  null\", () => {\n    const result = ruleset.execute({\n      country: \"USA\",\n      city: \"Salt Lake City\",\n      state: \"UT\",\n      membershipPoint: null,", "      state: \"UT\",\n      membershipPoint: null,\n    });\n\n    expect(result).toEqual([]);\n  });\n\n  it(\"returns  empty consequence when the input context key's value is undefined\", () => {\n    const result = ruleset.execute({\n      country: \"USA\",", "    const result = ruleset.execute({\n      country: \"USA\",\n      city: \"Salt Lake City\",\n      state: \"UT\",\n      membershipPoint: undefined,\n    });\n\n    expect(result).toEqual([]);\n  });\n", "  });\n\n  it(\"returns empty consequence when the input context key's value is not greater than any rule's condition definition values\", () => {\n    const result = ruleset.execute({\n      country: \"USA\",\n      city: \"Salt Lake City\",\n      state: \"UT\",\n      membershipPoint: 2000,\n    });\n", "    });\n\n    expect(result).toEqual([]);\n  });\n\n  it(\"returns empty consequence when the input context key's value is not greater than any rule's condition definition values\", () => {\n    const result = ruleset.execute({\n      country: \"USA\",\n      city: \"Salt Lake City\",\n      state: \"UT\",", "      city: \"Salt Lake City\",\n      state: \"UT\",\n      membershipPoint: 3000,\n    });\n\n    expect(result).toEqual([]);\n  });\n});\n", ""]}
{"filename": "test/simple-group-or.spec.ts", "chunked_list": ["/*\nCopyright 2023 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.", "OF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport RulesEngine from \"../src/index\";\nimport { RuleSet } from \"../src/types/schema\";\n\nconst RULE_DEFINITION: RuleSet = {\n  version: 1,\n  rules: [\n    {", "  rules: [\n    {\n      condition: {\n        type: \"group\",\n        definition: {\n          logic: \"or\",\n          conditions: [\n            {\n              type: \"matcher\",\n              definition: {", "              type: \"matcher\",\n              definition: {\n                key: \"key1\",\n                matcher: \"eq\",\n                values: [\"value1\", \"value2\"],\n              },\n            },\n            {\n              type: \"matcher\",\n              definition: {", "              type: \"matcher\",\n              definition: {\n                key: \"key3\",\n                matcher: \"eq\",\n                values: [\"value5\", \"value6\"],\n              },\n            },\n          ],\n        },\n      },", "        },\n      },\n      consequences: [\n        {\n          id: \"2222222\",\n          type: \"data\",\n          detail: {\n            html: \"<h1>Hello World!</h1>\",\n          },\n        },", "          },\n        },\n      ],\n    },\n  ],\n};\n\ndescribe(\"simple group-or\", () => {\n  let ruleset;\n", "  let ruleset;\n\n  beforeEach(() => {\n    ruleset = RulesEngine(RULE_DEFINITION);\n  });\n\n  it(\"execute both conditions true\", () => {\n    const result = ruleset.execute({\n      key1: \"value1\",\n      key2: \"value2\",", "      key1: \"value1\",\n      key2: \"value2\",\n      key3: \"value5\",\n    });\n\n    expect(result).toEqual([RULE_DEFINITION.rules[0].consequences]);\n  });\n\n  it(\"execute first condition true\", () => {\n    const result = ruleset.execute({", "  it(\"execute first condition true\", () => {\n    const result = ruleset.execute({\n      key1: \"value1\",\n      key2: \"value2\",\n      key3: \"valueX\",\n    });\n\n    expect(result).toEqual([RULE_DEFINITION.rules[0].consequences]);\n  });\n", "  });\n\n  it(\"execute second condition true\", () => {\n    const result = ruleset.execute({\n      key1: \"valueX\",\n      key2: \"value2\",\n      key3: \"value5\",\n    });\n\n    expect(result).toEqual([RULE_DEFINITION.rules[0].consequences]);", "\n    expect(result).toEqual([RULE_DEFINITION.rules[0].consequences]);\n  });\n\n  it(\"execute both conditions false\", () => {\n    const result = ruleset.execute({\n      key1: \"valueX\",\n      key2: \"value2\",\n      key3: \"valueX\",\n    });", "      key3: \"valueX\",\n    });\n\n    expect(result).toEqual([]);\n  });\n});\n"]}
{"filename": "test/historical-query.spec.ts", "chunked_list": ["/*\nCopyright 2023 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.", "OF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport RulesEngine from \"../src\";\nimport { Consequence } from \"../src/types/schema\";\nimport { RuleSet } from \"../types/types/schema\";\n\nlet CONSEQUENCE: Consequence = {\n  id: \"6df71dd7-a24f-4944-9787-49345c417b01\",\n  type: \"cjmiam\",", "  id: \"6df71dd7-a24f-4944-9787-49345c417b01\",\n  type: \"cjmiam\",\n  detail: {\n    mobileParameters: {\n      verticalAlign: \"center\",\n      dismissAnimation: \"bottom\",\n      verticalInset: 0,\n      backdropOpacity: 0.2,\n      gestures: {},\n      cornerRadius: 15,", "      gestures: {},\n      cornerRadius: 15,\n      horizontalInset: 0,\n      uiTakeover: true,\n      horizontalAlign: \"center\",\n      displayAnimation: \"bottom\",\n      width: 100,\n      backdropColor: \"#000000\",\n      height: 100,\n    },", "      height: 100,\n    },\n    html: \"<div>Hello</div>\",\n    remoteAssets: [\n      \"https://exc-unifiedcontent.experience-stage.adobe.net/solutions/cjm-message-ui/static-assets/inapp/InAppBlockImageDefault.svg\",\n    ],\n  },\n};\n\ndescribe(\"rules from AJO\", () => {", "\ndescribe(\"rules from AJO\", () => {\n  it(\"supports historical condition for searchType ANY\", () => {\n    expect(\n      RulesEngine({\n        version: 1,\n        rules: [\n          {\n            condition: {\n              definition: {", "            condition: {\n              definition: {\n                conditions: [\n                  {\n                    definition: {\n                      conditions: [\n                        {\n                          definition: {\n                            events: [\n                              {", "                            events: [\n                              {\n                                type: \"display\",\n                                id: \"6cd5a8ed-e183-48b7-a0ef-657a4467df74#0477a309-6f63-4638-b729-ab51cf5dd3aa\",\n                              },\n                            ],\n                            matcher: \"eq\",\n                            value: 1,\n                            from: 1681321309855,\n                            to: 1996681309855,", "                            from: 1681321309855,\n                            to: 1996681309855,\n                          },\n                          type: \"historical\",\n                        },\n                      ],\n                      logic: \"and\",\n                    },\n                    type: \"group\",\n                  },", "                    type: \"group\",\n                  },\n                ],\n                logic: \"and\",\n              },\n              type: \"group\",\n            },\n            consequences: [CONSEQUENCE],\n          },\n        ],", "          },\n        ],\n      }).execute({\n        events: {\n          display: {\n            \"6cd5a8ed-e183-48b7-a0ef-657a4467df74#0477a309-6f63-4638-b729-ab51cf5dd3aa\":\n              {\n                event: {\n                  type: \"display\",\n                  id: \"6cd5a8ed-e183-48b7-a0ef-657a4467df74#0477a309-6f63-4638-b729-ab51cf5dd3aa\",", "                  type: \"display\",\n                  id: \"6cd5a8ed-e183-48b7-a0ef-657a4467df74#0477a309-6f63-4638-b729-ab51cf5dd3aa\",\n                },\n                timestamp: 1681321319855,\n                count: 1,\n              },\n          },\n        },\n      })\n    ).toEqual([[CONSEQUENCE]]);", "      })\n    ).toEqual([[CONSEQUENCE]]);\n  });\n\n  it(\"Should return empty consequence for historical condition when count doesn't match with matcher provided\", () => {\n    expect(\n      RulesEngine({\n        version: 1,\n        rules: [\n          {", "        rules: [\n          {\n            condition: {\n              definition: {\n                conditions: [\n                  {\n                    definition: {\n                      conditions: [\n                        {\n                          definition: {", "                        {\n                          definition: {\n                            events: [\n                              {\n                                type: \"display\",\n                                id: \"6cd5a8ed-e183-48b7-a0ef-657a4467df74#0477a309-6f63-4638-b729-ab51cf5dd3aa\",\n                              },\n                            ],\n                            matcher: \"gt\",\n                            value: 1,", "                            matcher: \"gt\",\n                            value: 1,\n                            from: 1681321309855,\n                            to: 1996681309855,\n                          },\n                          type: \"historical\",\n                        },\n                      ],\n                      logic: \"and\",\n                    },", "                      logic: \"and\",\n                    },\n                    type: \"group\",\n                  },\n                ],\n                logic: \"and\",\n              },\n              type: \"group\",\n            },\n            consequences: [CONSEQUENCE],", "            },\n            consequences: [CONSEQUENCE],\n          },\n        ],\n      }).execute({\n        events: {\n          display: {\n            \"6cd5a8ed-e183-48b7-a0ef-657a4467df74#0477a309-6f63-4638-b729-ab51cf5dd3aa\":\n              {\n                event: {", "              {\n                event: {\n                  type: \"display\",\n                  id: \"6cd5a8ed-e183-48b7-a0ef-657a4467df74#0477a309-6f63-4638-b729-ab51cf5dd3aa\",\n                },\n                timestamp: 1681321319855,\n                count: 1,\n              },\n          },\n        },", "          },\n        },\n      })\n    ).toEqual([]);\n  });\n  it(\"should return consequence in case count of an event is greater than one and the event is in the date range for ordered search type\", () => {\n    expect(\n      RulesEngine({\n        version: 1,\n        rules: [", "        version: 1,\n        rules: [\n          {\n            condition: {\n              definition: {\n                conditions: [\n                  {\n                    definition: {\n                      conditions: [\n                        {", "                      conditions: [\n                        {\n                          definition: {\n                            events: [\n                              {\n                                type: \"display\",\n                                id: \"6cd5a8ed-e183-48b7-a0ef-657a4467df74#0477a309-6f63-4638-b729-ab51cf5dd3aa\",\n                              },\n                              {\n                                type: \"interact\",", "                              {\n                                type: \"interact\",\n                                id: \"6cd5a8ed-e183-48b7-a0ef-657a4467df74#0477a309-6f63-4638-b729-ab51cf5dd3bb\",\n                              },\n                            ],\n                            matcher: \"ge\",\n                            value: 1,\n                            from: 1681321309855,\n                            to: 1996681309855,\n                            searchType: \"ordered\",", "                            to: 1996681309855,\n                            searchType: \"ordered\",\n                          },\n                          type: \"historical\",\n                        },\n                      ],\n                      logic: \"and\",\n                    },\n                    type: \"group\",\n                  },", "                    type: \"group\",\n                  },\n                ],\n                logic: \"and\",\n              },\n              type: \"group\",\n            },\n            consequences: [CONSEQUENCE],\n          },\n        ],", "          },\n        ],\n      }).execute({\n        events: {\n          display: {\n            \"6cd5a8ed-e183-48b7-a0ef-657a4467df74#0477a309-6f63-4638-b729-ab51cf5dd3aa\":\n              {\n                event: {\n                  type: \"display\",\n                  id: \"6cd5a8ed-e183-48b7-a0ef-657a4467df74#0477a309-6f63-4638-b729-ab51cf5dd3aa\",", "                  type: \"display\",\n                  id: \"6cd5a8ed-e183-48b7-a0ef-657a4467df74#0477a309-6f63-4638-b729-ab51cf5dd3aa\",\n                },\n                timestamp: 1681321319855,\n                count: 1,\n              },\n          },\n          interact: {\n            \"6cd5a8ed-e183-48b7-a0ef-657a4467df74#0477a309-6f63-4638-b729-ab51cf5dd3bb\":\n              {", "            \"6cd5a8ed-e183-48b7-a0ef-657a4467df74#0477a309-6f63-4638-b729-ab51cf5dd3bb\":\n              {\n                event: {\n                  type: \"interact\",\n                  id: \"6cd5a8ed-e183-48b7-a0ef-657a4467df74#0477a309-6f63-4638-b729-ab51cf5dd3bb\",\n                },\n                timestamp: 1681321339855,\n                count: 1,\n              },\n          },", "              },\n          },\n        },\n      })\n    ).toEqual([[CONSEQUENCE]]);\n  });\n  it(\"Should return 0 if the count for any event is ever zero for ordered search type\", () => {\n    expect(\n      RulesEngine({\n        version: 1,", "      RulesEngine({\n        version: 1,\n        rules: [\n          {\n            condition: {\n              definition: {\n                conditions: [\n                  {\n                    definition: {\n                      conditions: [", "                    definition: {\n                      conditions: [\n                        {\n                          definition: {\n                            events: [\n                              {\n                                type: \"display\",\n                                id: \"6cd5a8ed-e183-48b7-a0ef-657a4467df74#0477a309-6f63-4638-b729-ab51cf5dd3aa\",\n                              },\n                              {", "                              },\n                              {\n                                type: \"interact\",\n                                id: \"6cd5a8ed-e183-48b7-a0ef-657a4467df74#0477a309-6f63-4638-b729-ab51cf5dd3bb\",\n                              },\n                            ],\n                            matcher: \"eq\",\n                            value: 1,\n                            from: 1681321309855,\n                            to: 1996681309855,", "                            from: 1681321309855,\n                            to: 1996681309855,\n                            searchType: \"ordered\",\n                          },\n                          type: \"historical\",\n                        },\n                      ],\n                      logic: \"and\",\n                    },\n                    type: \"group\",", "                    },\n                    type: \"group\",\n                  },\n                ],\n                logic: \"and\",\n              },\n              type: \"group\",\n            },\n            consequences: [CONSEQUENCE],\n          },", "            consequences: [CONSEQUENCE],\n          },\n        ],\n      }).execute({\n        events: {\n          display: {\n            \"6cd5a8ed-e183-48b7-a0ef-657a4467df74#0477a309-6f63-4638-b729-ab51cf5dd3aa\":\n              {\n                event: {\n                  type: \"display\",", "                event: {\n                  type: \"display\",\n                  id: \"6cd5a8ed-e183-48b7-a0ef-657a4467df74#0477a309-6f63-4638-b729-ab51cf5dd3aa\",\n                },\n                timestamp: 1681321319855,\n                count: 1,\n              },\n          },\n        },\n      })", "        },\n      })\n    ).toEqual([]);\n  });\n\n  it(\"distinguishes between display and interact events with the same id\", () => {\n    const displayRuleset = {\n      version: 1,\n      rules: [\n        {", "      rules: [\n        {\n          condition: {\n            definition: {\n              conditions: [\n                {\n                  definition: {\n                    conditions: [\n                      {\n                        definition: {", "                      {\n                        definition: {\n                          events: [\n                            {\n                              type: \"display\",\n                              id: \"6cd5a8ed\",\n                            },\n                          ],\n                          matcher: \"ge\",\n                          value: 1,", "                          matcher: \"ge\",\n                          value: 1,\n                        },\n                        type: \"historical\",\n                      },\n                    ],\n                    logic: \"and\",\n                  },\n                  type: \"group\",\n                },", "                  type: \"group\",\n                },\n              ],\n              logic: \"and\",\n            },\n            type: \"group\",\n          },\n          consequences: [CONSEQUENCE],\n        },\n      ],", "        },\n      ],\n    };\n\n    const interactRuleset: RuleSet = {\n      version: 1,\n      rules: [\n        {\n          condition: {\n            definition: {", "          condition: {\n            definition: {\n              conditions: [\n                {\n                  definition: {\n                    conditions: [\n                      {\n                        definition: {\n                          events: [\n                            {", "                          events: [\n                            {\n                              type: \"interact\",\n                              id: \"6cd5a8ed\",\n                            },\n                          ],\n                          matcher: \"ge\",\n                          value: 1,\n                        },\n                        type: \"historical\",", "                        },\n                        type: \"historical\",\n                      },\n                    ],\n                    logic: \"and\",\n                  },\n                  type: \"group\",\n                },\n              ],\n              logic: \"and\",", "              ],\n              logic: \"and\",\n            },\n            type: \"group\",\n          },\n          consequences: [CONSEQUENCE],\n        },\n      ],\n    };\n", "    };\n\n    expect(\n      RulesEngine(displayRuleset).execute({\n        events: {\n          interact: {\n            \"6cd5a8ed\": {\n              event: {\n                type: \"interact\",\n                id: \"6cd5a8ed\",", "                type: \"interact\",\n                id: \"6cd5a8ed\",\n              },\n              timestamp: 1681321939855,\n              count: 1,\n            },\n          },\n        },\n      })\n    ).toEqual([]);", "      })\n    ).toEqual([]);\n\n    expect(\n      RulesEngine(displayRuleset).execute({\n        events: {\n          display: {\n            \"6cd5a8ed\": {\n              event: {\n                type: \"display\",", "              event: {\n                type: \"display\",\n                id: \"6cd5a8ed\",\n              },\n              timestamp: 1681321939855,\n              count: 1,\n            },\n          },\n        },\n      })", "        },\n      })\n    ).toEqual([[CONSEQUENCE]]);\n\n    expect(\n      RulesEngine(interactRuleset).execute({\n        events: {\n          display: {\n            \"6cd5a8ed\": {\n              event: {", "            \"6cd5a8ed\": {\n              event: {\n                type: \"display\",\n                id: \"6cd5a8ed\",\n              },\n              timestamp: 1681321939855,\n              count: 1,\n            },\n          },\n        },", "          },\n        },\n      })\n    ).toEqual([]);\n\n    expect(\n      RulesEngine(interactRuleset).execute({\n        events: {\n          interact: {\n            \"6cd5a8ed\": {", "          interact: {\n            \"6cd5a8ed\": {\n              event: {\n                type: \"interact\",\n                id: \"6cd5a8ed\",\n              },\n              timestamp: 1681321939855,\n              count: 1,\n            },\n          },", "            },\n          },\n        },\n      })\n    ).toEqual([[CONSEQUENCE]]);\n  });\n});\n"]}
{"filename": "test/applicationUpgrade.spec.ts", "chunked_list": ["/*\nCopyright 2023 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.", "OF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport RulesEngine from \"../src/index\";\nimport { Consequence, RuleSet } from \"../src/types/schema\";\n\nlet CONSEQUENCE: Consequence = {\n  id: \"277680bc-b3db-4c94-8e0e-e1a7ce9573ab\",\n  type: \"cjmiam\",\n  detail: {", "  type: \"cjmiam\",\n  detail: {\n    mobileParameters: {\n      verticalAlign: \"center\",\n      dismissAnimation: \"bottom\",\n      verticalInset: 0,\n      backdropOpacity: 0.2,\n      cornerRadius: 15,\n      gestures: {},\n      horizontalInset: 0,", "      gestures: {},\n      horizontalInset: 0,\n      uiTakeover: true,\n      horizontalAlign: \"center\",\n      width: 100,\n      displayAnimation: \"bottom\",\n      backdropColor: \"#000000\",\n      height: 100,\n    },\n    html: '<!doctype html>\\n<html><head>\\n    <meta type=\"templateProperties\" name=\"fullscreen\" label=\"adobe-label:fullscreen\" icon=\"adobe-icon:fullscreen\">\\n    <meta type=\"templateZone\" name=\"default\" label=\"Default\" classname=\"body\" definition=\"[&quot;CloseBtn&quot;, &quot;Image&quot;, &quot;Text&quot;, &quot;Buttons&quot;]\">\\n\\n    <meta type=\"templateDefaultAnimations\" displayanimation=\"bottom\" dismissanimation=\"bottom\">\\n    <meta type=\"templateDefaultSize\" width=\"100\" height=\"100\">\\n    <meta type=\"templateDefaultPosition\" verticalalign=\"center\" verticalinset=\"0\" horizontalalign=\"center\" horizontalinset=\"0\">\\n    <meta type=\"templateDefaultGesture\">\\n    <meta type=\"templateDefaultUiTakeover\" enable=\"true\">\\n\\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\\n    <meta charset=\"UTF-8\">\\n    <style>\\n      html,\\n      body {\\n        margin: 0;\\n        padding: 0;\\n        text-align: center;\\n        width: 100%;\\n        height: 100%;\\n        font-family: adobe-clean, \\'Source Sans Pro\\', -apple-system, BlinkMacSystemFont, \\'Segoe UI\\',\\n          Roboto, sans-serif;\\n      }\\n\\n      h3 {\\n        margin: 0.4rem auto;\\n      }\\n      p {\\n        margin: 0.4rem auto;\\n      }\\n\\n      .body {\\n        display: flex;\\n        flex-direction: column;\\n        background-color: #fff;\\n        border-radius: 0.3rem;\\n        color: #333333;\\n        width: 100vw;\\n        height: 100vh;\\n        text-align: center;\\n        align-items: center;\\n        background-size: \\'cover\\';\\n      }\\n\\n      .content {\\n        width: 100%;\\n        height: 100%;\\n        display: flex;\\n        justify-content: center;\\n        flex-direction: column;\\n        position: relative;\\n      }\\n\\n      a {\\n        text-decoration: none;\\n      }\\n\\n      .image {\\n        height: 1rem;\\n        flex-grow: 4;\\n        flex-shrink: 1;\\n        display: flex;\\n        justify-content: center;\\n        width: 90%;\\n        flex-direction: column;\\n        align-items: center;\\n      }\\n      .image img {\\n        max-height: 100%;\\n        max-width: 100%;\\n      }\\n\\n      .image.empty-image {\\n        display: none;\\n      }\\n\\n      .empty-image ~ .text {\\n        flex-grow: 1;\\n      }\\n\\n      .text {\\n        text-align: center;\\n        color: #333333;\\n        line-height: 1.25rem;\\n        font-size: 0.875rem;\\n        padding: 0 0.8rem;\\n        width: 100%;\\n        box-sizing: border-box;\\n      }\\n      .title {\\n        line-height: 1.3125rem;\\n        font-size: 1.025rem;\\n      }\\n\\n      .buttons {\\n        width: 100%;\\n        display: flex;\\n        flex-direction: column;\\n        font-size: 1rem;\\n        line-height: 1.3rem;\\n        text-decoration: none;\\n        text-align: center;\\n        box-sizing: border-box;\\n        padding: 0.8rem;\\n        padding-top: 0.4rem;\\n        gap: 0.3125rem;\\n      }\\n\\n      .button {\\n        flex-grow: 1;\\n        background-color: #1473e6;\\n        color: #ffffff;\\n        border-radius: 0.25rem;\\n        cursor: pointer;\\n        padding: 0.3rem;\\n        gap: 0.5rem;\\n      }\\n\\n      .btnClose {\\n        color: #000000;\\n      }\\n\\n      .closeBtn {\\n        align-self: flex-end;\\n        width: 1.8rem;\\n        height: 1.8rem;\\n        margin-top: 1rem;\\n        margin-right: 0.3rem;\\n      }\\n      .closeBtn img {\\n        width: 100%;\\n        height: 100%;\\n      }\\n    </style>\\n    <style type=\"text/css\" id=\"editor-styles\">\\n\\n</style>\\n  </head>\\n\\n  <body>\\n    <div class=\"body\"><div class=\"closeBtn\" data-uuid=\"f8d5170b-7ce5-465e-8ded-d2f906dbeea7\" data-btn-style=\"plain\"><a aria-label=\"Close\" class=\"btnClose\" href=\"adbinapp://dismiss?interaction=cancel\"><svg xmlns=\"http://www.w3.org/2000/svg\" height=\"18\" viewbox=\"0 0 18 18\" width=\"18\" class=\"close\">\\n  <rect id=\"Canvas\" fill=\"#ffffff\" opacity=\"0\" width=\"18\" height=\"18\"></rect>\\n  <path fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\" d=\"M13.2425,3.343,9,7.586,4.7575,3.343a.5.5,0,0,0-.707,0L3.343,4.05a.5.5,0,0,0,0,.707L7.586,9,3.343,13.2425a.5.5,0,0,0,0,.707l.707.7075a.5.5,0,0,0,.707,0L9,10.414l4.2425,4.243a.5.5,0,0,0,.707,0l.7075-.707a.5.5,0,0,0,0-.707L10.414,9l4.243-4.2425a.5.5,0,0,0,0-.707L13.95,3.343a.5.5,0,0,0-.70711-.00039Z\"></path>\\n</svg></a></div><div class=\"image\" data-uuid=\"fddf159f-1bd3-4a8d-8ce3-1a28cd6064d6\"><img src=\"https://exc-unifiedcontent.experience-stage.adobe.net/solutions/cjm-message-ui/static-assets/inapp/InAppBlockImageDefault.svg\" alt=\"\"></div><div class=\"text\" data-uuid=\"9acbccba-029e-4405-92bf-bb74dcd88758\"><h3>Spring</h3><p>If winter comes, can spring be far behind? </p></div><div class=\"buttons\" data-uuid=\"666bda3d-1a69-4fbb-bf1e-8d95d85940d5\"><a class=\"button\" data-uuid=\"e51c4131-d3a3-4b83-9948-9f128471adb3\" href=\"adbinapp://dismiss?interaction=clicked\">Button</a></div></div>\\n  \\n\\n</body></html>',", "    },\n    html: '<!doctype html>\\n<html><head>\\n    <meta type=\"templateProperties\" name=\"fullscreen\" label=\"adobe-label:fullscreen\" icon=\"adobe-icon:fullscreen\">\\n    <meta type=\"templateZone\" name=\"default\" label=\"Default\" classname=\"body\" definition=\"[&quot;CloseBtn&quot;, &quot;Image&quot;, &quot;Text&quot;, &quot;Buttons&quot;]\">\\n\\n    <meta type=\"templateDefaultAnimations\" displayanimation=\"bottom\" dismissanimation=\"bottom\">\\n    <meta type=\"templateDefaultSize\" width=\"100\" height=\"100\">\\n    <meta type=\"templateDefaultPosition\" verticalalign=\"center\" verticalinset=\"0\" horizontalalign=\"center\" horizontalinset=\"0\">\\n    <meta type=\"templateDefaultGesture\">\\n    <meta type=\"templateDefaultUiTakeover\" enable=\"true\">\\n\\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\\n    <meta charset=\"UTF-8\">\\n    <style>\\n      html,\\n      body {\\n        margin: 0;\\n        padding: 0;\\n        text-align: center;\\n        width: 100%;\\n        height: 100%;\\n        font-family: adobe-clean, \\'Source Sans Pro\\', -apple-system, BlinkMacSystemFont, \\'Segoe UI\\',\\n          Roboto, sans-serif;\\n      }\\n\\n      h3 {\\n        margin: 0.4rem auto;\\n      }\\n      p {\\n        margin: 0.4rem auto;\\n      }\\n\\n      .body {\\n        display: flex;\\n        flex-direction: column;\\n        background-color: #fff;\\n        border-radius: 0.3rem;\\n        color: #333333;\\n        width: 100vw;\\n        height: 100vh;\\n        text-align: center;\\n        align-items: center;\\n        background-size: \\'cover\\';\\n      }\\n\\n      .content {\\n        width: 100%;\\n        height: 100%;\\n        display: flex;\\n        justify-content: center;\\n        flex-direction: column;\\n        position: relative;\\n      }\\n\\n      a {\\n        text-decoration: none;\\n      }\\n\\n      .image {\\n        height: 1rem;\\n        flex-grow: 4;\\n        flex-shrink: 1;\\n        display: flex;\\n        justify-content: center;\\n        width: 90%;\\n        flex-direction: column;\\n        align-items: center;\\n      }\\n      .image img {\\n        max-height: 100%;\\n        max-width: 100%;\\n      }\\n\\n      .image.empty-image {\\n        display: none;\\n      }\\n\\n      .empty-image ~ .text {\\n        flex-grow: 1;\\n      }\\n\\n      .text {\\n        text-align: center;\\n        color: #333333;\\n        line-height: 1.25rem;\\n        font-size: 0.875rem;\\n        padding: 0 0.8rem;\\n        width: 100%;\\n        box-sizing: border-box;\\n      }\\n      .title {\\n        line-height: 1.3125rem;\\n        font-size: 1.025rem;\\n      }\\n\\n      .buttons {\\n        width: 100%;\\n        display: flex;\\n        flex-direction: column;\\n        font-size: 1rem;\\n        line-height: 1.3rem;\\n        text-decoration: none;\\n        text-align: center;\\n        box-sizing: border-box;\\n        padding: 0.8rem;\\n        padding-top: 0.4rem;\\n        gap: 0.3125rem;\\n      }\\n\\n      .button {\\n        flex-grow: 1;\\n        background-color: #1473e6;\\n        color: #ffffff;\\n        border-radius: 0.25rem;\\n        cursor: pointer;\\n        padding: 0.3rem;\\n        gap: 0.5rem;\\n      }\\n\\n      .btnClose {\\n        color: #000000;\\n      }\\n\\n      .closeBtn {\\n        align-self: flex-end;\\n        width: 1.8rem;\\n        height: 1.8rem;\\n        margin-top: 1rem;\\n        margin-right: 0.3rem;\\n      }\\n      .closeBtn img {\\n        width: 100%;\\n        height: 100%;\\n      }\\n    </style>\\n    <style type=\"text/css\" id=\"editor-styles\">\\n\\n</style>\\n  </head>\\n\\n  <body>\\n    <div class=\"body\"><div class=\"closeBtn\" data-uuid=\"f8d5170b-7ce5-465e-8ded-d2f906dbeea7\" data-btn-style=\"plain\"><a aria-label=\"Close\" class=\"btnClose\" href=\"adbinapp://dismiss?interaction=cancel\"><svg xmlns=\"http://www.w3.org/2000/svg\" height=\"18\" viewbox=\"0 0 18 18\" width=\"18\" class=\"close\">\\n  <rect id=\"Canvas\" fill=\"#ffffff\" opacity=\"0\" width=\"18\" height=\"18\"></rect>\\n  <path fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\" d=\"M13.2425,3.343,9,7.586,4.7575,3.343a.5.5,0,0,0-.707,0L3.343,4.05a.5.5,0,0,0,0,.707L7.586,9,3.343,13.2425a.5.5,0,0,0,0,.707l.707.7075a.5.5,0,0,0,.707,0L9,10.414l4.2425,4.243a.5.5,0,0,0,.707,0l.7075-.707a.5.5,0,0,0,0-.707L10.414,9l4.243-4.2425a.5.5,0,0,0,0-.707L13.95,3.343a.5.5,0,0,0-.70711-.00039Z\"></path>\\n</svg></a></div><div class=\"image\" data-uuid=\"fddf159f-1bd3-4a8d-8ce3-1a28cd6064d6\"><img src=\"https://exc-unifiedcontent.experience-stage.adobe.net/solutions/cjm-message-ui/static-assets/inapp/InAppBlockImageDefault.svg\" alt=\"\"></div><div class=\"text\" data-uuid=\"9acbccba-029e-4405-92bf-bb74dcd88758\"><h3>Spring</h3><p>If winter comes, can spring be far behind? </p></div><div class=\"buttons\" data-uuid=\"666bda3d-1a69-4fbb-bf1e-8d95d85940d5\"><a class=\"button\" data-uuid=\"e51c4131-d3a3-4b83-9948-9f128471adb3\" href=\"adbinapp://dismiss?interaction=clicked\">Button</a></div></div>\\n  \\n\\n</body></html>',\n    remoteAssets: [\n      \"https://exc-unifiedcontent.experience-stage.adobe.net/solutions/cjm-message-ui/static-assets/inapp/InAppBlockImageDefault.svg\",\n    ],\n  },\n};\n\nconst RULE_SET: RuleSet = {\n  version: 1,", "const RULE_SET: RuleSet = {\n  version: 1,\n  rules: [\n    {\n      condition: {\n        definition: {\n          conditions: [\n            {\n              definition: {\n                conditions: [", "              definition: {\n                conditions: [\n                  {\n                    definition: {\n                      key: \"~type\",\n                      matcher: \"eq\",\n                      values: [\"com.adobe.eventType.lifecycle\"],\n                    },\n                    type: \"matcher\",\n                  },", "                    type: \"matcher\",\n                  },\n                  {\n                    definition: {\n                      key: \"~source\",\n                      matcher: \"eq\",\n                      values: [\"com.adobe.eventSource.applicationLaunch\"],\n                    },\n                    type: \"matcher\",\n                  },", "                    type: \"matcher\",\n                  },\n                  {\n                    definition: {\n                      key: \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.upgradeevent\",\n                      matcher: \"ex\",\n                    },\n                    type: \"matcher\",\n                  },\n                ],", "                  },\n                ],\n                logic: \"and\",\n              },\n              type: \"group\",\n            },\n            {\n              definition: {\n                key: \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.dayssincelastupgrade\",\n                matcher: \"ge\",", "                key: \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.dayssincelastupgrade\",\n                matcher: \"ge\",\n                values: [2],\n              },\n              type: \"matcher\",\n            },\n            {\n              definition: {\n                key: \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.dayssincelastuse\",\n                matcher: \"le\",", "                key: \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.dayssincelastuse\",\n                matcher: \"le\",\n                values: [1],\n              },\n              type: \"matcher\",\n            },\n          ],\n          logic: \"and\",\n        },\n        type: \"group\",", "        },\n        type: \"group\",\n      },\n      consequences: [CONSEQUENCE],\n    },\n  ],\n};\ndescribe(\"( Application upgrade event happens) AND ( Days since upgrade \u2265 2 ) AND ( Days since last use is less than or equal to 1 ) \", () => {\n  let ruleset;\n  beforeEach(() => {", "  let ruleset;\n  beforeEach(() => {\n    ruleset = RulesEngine(RULE_SET);\n  });\n\n  it(\"should return consequence when all the conditions are met\", () => {\n    const result = ruleset.execute({\n      \"~type\": \"com.adobe.eventType.lifecycle\",\n      \"~source\": \"com.adobe.eventSource.applicationLaunch\",\n      \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.upgradeevent\":", "      \"~source\": \"com.adobe.eventSource.applicationLaunch\",\n      \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.upgradeevent\":\n        true,\n      \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.dayssincelastupgrade\": 12,\n      \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.dayssincelastuse\": 0,\n    });\n    expect(result).toEqual([RULE_SET.rules[0].consequences]);\n  });\n\n  it(\"shouldn't return consequence when any of the conditions are not met, here less than equals is not satisfied\", () => {", "\n  it(\"shouldn't return consequence when any of the conditions are not met, here less than equals is not satisfied\", () => {\n    const result = ruleset.execute({\n      \"~type\": \"com.adobe.eventType.lifecycle\",\n      \"~source\": \"com.adobe.eventSource.applicationLaunch\",\n      \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.upgradeevent\":\n        true,\n      \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.dayssincelastupgrade\": 1,\n      \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.dayssincelastuse\": 8,\n    });", "      \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.dayssincelastuse\": 8,\n    });\n    expect(result).toEqual([]);\n  });\n\n  it(\"shouldn't return consequence when any of the conditions are not met, here greater than equals is not satisfied\", () => {\n    const result = ruleset.execute({\n      \"~type\": \"com.adobe.eventType.lifecycle\",\n      \"~source\": \"com.adobe.eventSource.applicationLaunch\",\n      \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.upgradeevent\":", "      \"~source\": \"com.adobe.eventSource.applicationLaunch\",\n      \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.upgradeevent\":\n        true,\n      \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.dayssincelastupgrade\": 12,\n      \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.dayssincelastuse\": 8,\n    });\n    expect(result).toEqual([]);\n  });\n});\n", "});\n"]}
{"filename": "test/demo.spec.ts", "chunked_list": ["/*\nCopyright 2023 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.", "OF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport RulesEngine from \"../src/index\";\nimport { Consequence, RuleSet } from \"../src/types/schema\";\n\nlet CONSEQUENCE: Consequence = {\n  id: \"e16cc85b-8bf3-4c70-83a2-883fd934b9fc\",\n  type: \"cjmiam\",\n  detail: {", "  type: \"cjmiam\",\n  detail: {\n    mobileParameters: {\n      verticalAlign: \"center\",\n      dismissAnimation: \"top\",\n      verticalInset: 0,\n      backdropOpacity: 0.2,\n      cornerRadius: 15,\n      gestures: {\n        swipeUp: \"adbinapp://dismiss?interaction=swipeUp\",", "      gestures: {\n        swipeUp: \"adbinapp://dismiss?interaction=swipeUp\",\n        swipeDown: \"adbinapp://dismiss?interaction=swipeDown\",\n        swipeLeft: \"adbinapp://dismiss?interaction=swipeLeft\",\n        swipeRight: \"adbinapp://dismiss?interaction=swipeRight\",\n        tapBackground: \"adbinapp://dismiss?interaction=tapBackground\",\n      },\n      horizontalInset: 0,\n      uiTakeover: true,\n      horizontalAlign: \"center\",", "      uiTakeover: true,\n      horizontalAlign: \"center\",\n      width: 80,\n      displayAnimation: \"top\",\n      backdropColor: \"#000000\",\n      height: 60,\n    },\n    html: '<!doctype html>\\n<html><head>\\n    <meta type=\"templateProperties\" name=\"modal\" label=\"adobe-label:modal\" icon=\"adobe-icon:modal\">\\n    <meta type=\"templateZone\" name=\"default\" label=\"Default\" classname=\"body\" definition=\"[&quot;CloseBtn&quot;, &quot;Image&quot;, &quot;Text&quot;, &quot;Buttons&quot;]\">\\n\\n    <meta type=\"templateDefaultAnimations\" displayanimation=\"top\" dismissanimation=\"top\">\\n    <meta type=\"templateDefaultSize\" width=\"80\" height=\"60\">\\n    <meta type=\"templateDefaultPosition\" verticalalign=\"center\" verticalinset=\"0\" horizontalalign=\"center\" horizontalinset=\"0\">\\n    <meta type=\"templateDefaultGesture\" swipeup=\"adbinapp://dismiss?interaction=swipeUp\" swipedown=\"adbinapp://dismiss?interaction=swipeDown\" swipeleft=\"adbinapp://dismiss?interaction=swipeLeft\" swiperight=\"adbinapp://dismiss?interaction=swipeRight\" tapbackground=\"adbinapp://dismiss?interaction=tapBackground\">\\n    <meta type=\"templateDefaultUiTakeover\" enable=\"true\">\\n\\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\\n    <meta charset=\"UTF-8\">\\n    <style>\\n      html,\\n      body {\\n        margin: 0;\\n        padding: 0;\\n        text-align: center;\\n        width: 100%;\\n        height: 100%;\\n        font-family: adobe-clean, \\'Source Sans Pro\\', -apple-system, BlinkMacSystemFont, \\'Segoe UI\\',\\n          Roboto, sans-serif;\\n      }\\n      h3 {\\n        margin: 0.4rem auto;\\n      }\\n      p {\\n        margin: 0.4rem auto;\\n      }\\n\\n      .body {\\n        display: flex;\\n        flex-direction: column;\\n        background-color: #fff;\\n        border-radius: 0.3rem;\\n        color: #333333;\\n        width: 100vw;\\n        height: 100vh;\\n        text-align: center;\\n        align-items: center;\\n        background-size: \\'cover\\';\\n      }\\n\\n      .content {\\n        width: 100%;\\n        height: 100%;\\n        display: flex;\\n        justify-content: center;\\n        flex-direction: column;\\n        position: relative;\\n      }\\n\\n      a {\\n        text-decoration: none;\\n      }\\n\\n      .image {\\n        height: 1rem;\\n        flex-grow: 4;\\n        flex-shrink: 1;\\n        display: flex;\\n        justify-content: center;\\n        width: 90%;\\n        flex-direction: column;\\n        align-items: center;\\n      }\\n      .image img {\\n        max-height: 100%;\\n        max-width: 100%;\\n      }\\n\\n      .image.empty-image {\\n        display: none;\\n      }\\n\\n      .empty-image ~ .text {\\n        flex-grow: 1;\\n      }\\n\\n      .text {\\n        text-align: center;\\n        color: #333333;\\n        line-height: 1.25rem;\\n        font-size: 0.875rem;\\n        padding: 0 0.8rem;\\n        width: 100%;\\n        box-sizing: border-box;\\n      }\\n      .title {\\n        line-height: 1.3125rem;\\n        font-size: 1.025rem;\\n      }\\n\\n      .buttons {\\n        width: 100%;\\n        display: flex;\\n        flex-direction: column;\\n        font-size: 1rem;\\n        line-height: 1.3rem;\\n        text-decoration: none;\\n        text-align: center;\\n        box-sizing: border-box;\\n        padding: 0.8rem;\\n        padding-top: 0.4rem;\\n        gap: 0.3125rem;\\n      }\\n\\n      .button {\\n        flex-grow: 1;\\n        background-color: #1473e6;\\n        color: #ffffff;\\n        border-radius: 0.25rem;\\n        cursor: pointer;\\n        padding: 0.3rem;\\n        gap: 0.5rem;\\n      }\\n\\n      .btnClose {\\n        color: #000000;\\n      }\\n\\n      .closeBtn {\\n        align-self: flex-end;\\n        color: #000000;\\n        width: 1.8rem;\\n        height: 1.8rem;\\n        margin-top: 1rem;\\n        margin-right: 0.3rem;\\n      }\\n      .closeBtn img {\\n        width: 100%;\\n        height: 100%;\\n      }\\n    </style>\\n    <style type=\"text/css\" id=\"editor-styles\">\\n\\n</style>\\n  </head>\\n\\n  <body>\\n    <div class=\"body\"><div class=\"closeBtn\" data-uuid=\"03148dd9-caf4-4975-b50d-8fbf9fd0dadd\" data-btn-style=\"plain\"><a aria-label=\"Close\" class=\"btnClose\" href=\"adbinapp://dismiss?interaction=cancel\"><svg xmlns=\"http://www.w3.org/2000/svg\" height=\"18\" viewbox=\"0 0 18 18\" width=\"18\" class=\"close\">\\n  <rect id=\"Canvas\" fill=\"#ffffff\" opacity=\"0\" width=\"18\" height=\"18\"></rect>\\n  <path fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\" d=\"M13.2425,3.343,9,7.586,4.7575,3.343a.5.5,0,0,0-.707,0L3.343,4.05a.5.5,0,0,0,0,.707L7.586,9,3.343,13.2425a.5.5,0,0,0,0,.707l.707.7075a.5.5,0,0,0,.707,0L9,10.414l4.2425,4.243a.5.5,0,0,0,.707,0l.7075-.707a.5.5,0,0,0,0-.707L10.414,9l4.243-4.2425a.5.5,0,0,0,0-.707L13.95,3.343a.5.5,0,0,0-.70711-.00039Z\"></path>\\n</svg></a></div><div class=\"image\" data-uuid=\"8874c864-bbf8-4c9b-9396-fef071913e62\"><img src=\"https://exc-unifiedcontent.experience-stage.adobe.net/solutions/cjm-message-ui/static-assets/inapp/InAppBlockImageDefault.svg\" alt=\"\"></div><div class=\"text\" data-uuid=\"d4399240-66ac-4b2c-bcd9-a6fd79957721\"><h3>PB Shelley</h3><p>\u201cIf Winter comes, can Spring be far behind?\u201d</p></div><div class=\"buttons\" data-uuid=\"40947731-7821-4e11-833b-c28e80d9c4f1\"><a class=\"button\" data-uuid=\"3c7f0a4e-0108-4b1f-ae23-859870bf56b4\" href=\"adbinapp://dismiss?interaction=clicked\">Click</a></div></div>\\n  \\n\\n</body></html>',\n    remoteAssets: [\n      \"https://exc-unifiedcontent.experience-stage.adobe.net/solutions/cjm-message-ui/static-assets/inapp/InAppBlockImageDefault.svg\",", "    remoteAssets: [\n      \"https://exc-unifiedcontent.experience-stage.adobe.net/solutions/cjm-message-ui/static-assets/inapp/InAppBlockImageDefault.svg\",\n    ],\n  },\n};\n\nconst RULE_SET: RuleSet = {\n  version: 1,\n  rules: [\n    {", "  rules: [\n    {\n      condition: {\n        definition: {\n          conditions: [\n            {\n              definition: {\n                conditions: [\n                  {\n                    definition: {", "                  {\n                    definition: {\n                      key: \"~type\",\n                      matcher: \"eq\",\n                      values: [\"com.adobe.eventType.generic.track\"],\n                    },\n                    type: \"matcher\",\n                  },\n                  {\n                    definition: {", "                  {\n                    definition: {\n                      key: \"~source\",\n                      matcher: \"eq\",\n                      values: [\"com.adobe.eventSource.requestContent\"],\n                    },\n                    type: \"matcher\",\n                  },\n                  {\n                    definition: { key: \"state\", matcher: \"ex\" },", "                  {\n                    definition: { key: \"state\", matcher: \"ex\" },\n                    type: \"matcher\",\n                  },\n                ],\n                logic: \"and\",\n              },\n              type: \"group\",\n            },\n            {", "            },\n            {\n              definition: {\n                key: \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.osversion\",\n                matcher: \"sw\",\n                values: [\n                  \"13.2.1 (22D68)\",\n                  \"macOS Monterey\",\n                  \"macOS Ventura (version 13)\",\n                ],", "                  \"macOS Ventura (version 13)\",\n                ],\n              },\n              type: \"matcher\",\n            },\n            {\n              definition: {\n                key: \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.carriername\",\n                matcher: \"ne\",\n                values: [\"T-Mobile\"],", "                matcher: \"ne\",\n                values: [\"T-Mobile\"],\n              },\n              type: \"matcher\",\n            },\n            {\n              definition: {\n                conditions: [\n                  {\n                    definition: {", "                  {\n                    definition: {\n                      key: \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.dayssincefirstuse\",\n                      matcher: \"le\",\n                      values: [10],\n                    },\n                    type: \"matcher\",\n                  },\n                  {\n                    definition: {", "                  {\n                    definition: {\n                      key: \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.dayssincelastupgrade\",\n                      matcher: \"ge\",\n                      values: [1],\n                    },\n                    type: \"matcher\",\n                  },\n                ],\n                logic: \"or\",", "                ],\n                logic: \"or\",\n              },\n              type: \"group\",\n            },\n          ],\n          logic: \"and\",\n        },\n        type: \"group\",\n      },", "        type: \"group\",\n      },\n      consequences: [CONSEQUENCE],\n    },\n  ],\n};\n/*\n( Track state event happens) \n AND ( OS version starts with 13.2.1 (22D68), macOS Monterey, or macOS Ventura (version 13) )\n AND ( Carrier name does not equal T-Mobile ) ", " AND ( OS version starts with 13.2.1 (22D68), macOS Monterey, or macOS Ventura (version 13) )\n AND ( Carrier name does not equal T-Mobile ) \n AND(( Days since first use is less than or equal to 10 ) OR ( Days since upgrade \u2265 1 ))\n*/\ndescribe(\"Track state event happens \", () => {\n  let ruleset;\n  beforeEach(() => {\n    ruleset = RulesEngine(RULE_SET);\n  });\n", "  });\n\n  it(\"should return consequence when OS version starts conditions are met\", () => {\n    const result = ruleset.execute({\n      \"~type\": \"com.adobe.eventType.generic.track\",\n      \"~source\": \"com.adobe.eventSource.requestContent\",\n      state: \"[]\",\n      \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.osversion\":\n        \"macOS Monterey\",\n      \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.carriername\":", "        \"macOS Monterey\",\n      \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.carriername\":\n        \"Verizon\",\n      \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.dayssincefirstuse\": 10,\n      \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.dayssincelastupgrade\": 2,\n    });\n    expect(result).toEqual([RULE_SET.rules[0].consequences]);\n  });\n});\n", "});\n"]}
{"filename": "test/genericPii.spec.ts", "chunked_list": ["/*\nCopyright 2023 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.", "OF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport RulesEngine from \"../src/index\";\nimport { Consequence, RuleSet } from \"../src/types/schema\";\n\nlet CONSEQUENCE: Consequence = {\n  id: \"48a8f9b2-1c6a-4523-b00d-c74e045a0bbd\",\n  type: \"cjmiam\",\n  detail: {", "  type: \"cjmiam\",\n  detail: {\n    mobileParameters: {\n      verticalAlign: \"top\",\n      dismissAnimation: \"top\",\n      verticalInset: 2,\n      backdropOpacity: 0.2,\n      cornerRadius: 15,\n      gestures: {\n        swipeUp: \"adbinapp://dismiss?interaction=swipeUp\",", "      gestures: {\n        swipeUp: \"adbinapp://dismiss?interaction=swipeUp\",\n      },\n      horizontalInset: 0,\n      uiTakeover: false,\n      horizontalAlign: \"center\",\n      width: 95,\n      displayAnimation: \"top\",\n      backdropColor: \"#000000\",\n      height: 17,", "      backdropColor: \"#000000\",\n      height: 17,\n    },\n    html: '<!doctype html>\\n<html><head>\\n    <meta type=\"templateProperties\" name=\"banner\" label=\"adobe-label:banner\" icon=\"adobe-icon:banner\">\\n    <meta type=\"templateZone\" name=\"default\" label=\"Default\" classname=\"body\" definition=\"[&quot;Image&quot;, &quot;Text&quot;, &quot;CloseBtn&quot;]\">\\n\\n    <meta type=\"templateDefaultAnimations\" displayanimation=\"top\" dismissanimation=\"top\">\\n    <meta type=\"templateDefaultSize\" width=\"95\" height=\"17\">\\n    <meta type=\"templateDefaultPosition\" verticalalign=\"top\" verticalinset=\"2\" horizontalalign=\"center\" horizontalinset=\"0\">\\n    <meta type=\"templateDefaultUiTakeover\" enable=\"false\">\\n\\n    <meta type=\"templateVariation\" default=\"true\" name=\"top\" label=\"adobe-label:banner-variation-top\" classname=\"variationTop\">\\n    <meta type=\"templateVariation\" name=\"bottom\" label=\"adobe-label:banner-variation-bottom\" classname=\"variationBottom\">\\n\\n    <meta type=\"templateDefaultGesture\" variation=\"top\" swipeup=\"adbinapp://dismiss?interaction=swipeUp\">\\n    <meta type=\"templateDefaultAnimations\" variation=\"bottom\" displayanimation=\"bottom\" dismissanimation=\"bottom\">\\n    <meta type=\"templateDefaultPosition\" variation=\"bottom\" verticalalign=\"bottom\">\\n    <meta type=\"templateDefaultGesture\" variation=\"bottom\" swipedown=\"adbinapp://dismiss?interaction=swipeDown\">\\n\\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\\n    <meta charset=\"UTF-8\">\\n    <style>\\n      html,\\n      body {\\n        margin: 0;\\n        padding: 0;\\n        text-align: center;\\n        width: 100%;\\n        height: 100%;\\n        font-family: adobe-clean, \\'Source Sans Pro\\', -apple-system, BlinkMacSystemFont, \\'Segoe UI\\',\\n          Roboto, sans-serif;\\n      }\\n\\n      h3 {\\n        margin: 0.1rem auto;\\n      }\\n      p {\\n        margin: 0;\\n      }\\n\\n      a {\\n        text-decoration: none;\\n      }\\n\\n      .wrapper {\\n        background-color: #fff;\\n        border-radius: 0.3125rem;\\n        color: #333333;\\n        width: 100%;\\n        min-height: 100%;\\n        display: flex;\\n        justify-content: center;\\n        flex-direction: column;\\n        position: relative;\\n        background-size: \\'cover\\';\\n      }\\n\\n      .content {\\n        height: 100vh;\\n        width: 100vw;\\n      }\\n\\n      .text {\\n        flex-grow: 1;\\n        text-align: left;\\n        line-height: 1.25rem;\\n        font-size: 0.875rem;\\n        color: #333333;\\n        letter-spacing: 0;\\n      }\\n\\n      .text:first-child {\\n        line-height: 1.3125rem;\\n        font-size: 1.025rem;\\n      }\\n\\n      .btnClose {\\n        color: #000000;\\n      }\\n\\n      .closeBtn {\\n        align-self: flex-start;\\n        order: 999;\\n      }\\n      .closeBtn img {\\n        width: 100%;\\n        height: 100%;\\n      }\\n\\n      .image {\\n        height: 100%;\\n        padding-right: 0.8rem;\\n        align-items: center;\\n        flex-grow: 0;\\n        display: flex;\\n      }\\n      .image img {\\n        height: 100%;\\n        max-width: 100%;\\n      }\\n\\n      .image.empty-image {\\n        display: none;\\n      }\\n\\n      .empty-image ~ .text {\\n        flex-grow: 1;\\n      }\\n\\n      .body {\\n        flex-grow: 1;\\n        width: 100%;\\n        height: 100%;\\n        display: flex;\\n        flex-direction: row;\\n        padding: 0.8rem;\\n        box-sizing: border-box;\\n        align-items: center;\\n        justify-content: space-between;\\n      }\\n\\n      .buttons {\\n        width: 100%;\\n        display: flex;\\n        flex-direction: column;\\n        font-size: 1rem;\\n        line-height: 1.3rem;\\n        text-decoration: none;\\n        text-align: center;\\n        box-sizing: border-box;\\n        padding: 0.8rem;\\n        padding-top: 0.4rem;\\n      }\\n\\n      .button {\\n        flex-grow: 1;\\n        background-color: #1473e6;\\n        color: #ffffff;\\n        border-radius: 0.25rem;\\n        cursor: pointer;\\n        padding: 0.3rem;\\n        gap: 0.5rem;\\n      }\\n    </style>\\n    <style type=\"text/css\" id=\"editor-styles\">\\n\\n</style>\\n  </head>\\n\\n  <body>\\n    <div class=\"wrapper\">\\n      <div class=\"content\">\\n        <div class=\"body\"><div class=\"image\" data-uuid=\"8163d13c-1e4e-4b07-94c7-18271bc02099\"><img src=\"https://exc-unifiedcontent.experience-stage.adobe.net/solutions/cjm-message-ui/static-assets/inapp/InAppBlockImageDefault.svg\" alt=\"Hello World\"></div><div class=\"text\" data-uuid=\"ebe691ce-3c1e-4f3e-87bd-010bc4a4033a\"><h3>Lion king</h3><p>Hakuna Matata! What a wonderful phrase Hakuna Matata!iption text</p></div><div class=\"closeBtn\" data-uuid=\"771eff8c-e85a-4072-8988-51f2008b8381\" data-btn-style=\"circle\"><a aria-label=\"Close\" class=\"btnClose\" href=\"adbinapp://dismiss?interaction=cancel\"><svg xmlns=\"http://www.w3.org/2000/svg\" height=\"18\" viewbox=\"0 0 18 18\" width=\"18\" class=\"close\">\\n  <rect id=\"Canvas\" fill=\"#ffffff\" opacity=\"0\" width=\"18\" height=\"18\"></rect>\\n  <path fill=\"currentColor\" d=\"M14.657,3.343a8,8,0,1,0-.00021,11.31371l.00021-.00021A8,8,0,0,0,14.657,3.343Zm-1.3435,9.265-.707.7055a.6.6,0,0,1-.84853.00147l-.00147-.00147L9,10.5555l-2.758,2.758a.6.6,0,0,1-.84853.00147L5.392,13.3135l-.7045-.7075a.6.6,0,0,1-.00147-.84853L4.6875,11.756,7.4445,9,4.6875,6.242A.6.6,0,0,1,4.686,5.39347L4.6875,5.392l.707-.707A.6.6,0,0,1,6.243,4.68353L6.2445,4.685,9,7.444l2.758-2.7575a.6.6,0,0,1,.84853-.00147l.00147.00147.707.707a.6.6,0,0,1,.00147.84853L13.315,6.2435,10.5555,9l2.758,2.758a.6.6,0,0,1,.00147.84853Z\"></path>\\n</svg></a></div></div>\\n      </div>\\n    </div>\\n  \\n\\n</body></html>',\n    remoteAssets: [\n      \"https://exc-unifiedcontent.experience-stage.adobe.net/solutions/cjm-message-ui/static-assets/inapp/InAppBlockImageDefault.svg\",\n    ],\n  },\n};\nconst RULE_SET: RuleSet = {", "};\nconst RULE_SET: RuleSet = {\n  version: 1,\n  rules: [\n    {\n      condition: {\n        definition: {\n          conditions: [\n            {\n              definition: {", "            {\n              definition: {\n                conditions: [\n                  {\n                    definition: {\n                      key: \"~type\",\n                      matcher: \"eq\",\n                      values: [\"com.adobe.eventType.generic.pii\"],\n                    },\n                    type: \"matcher\",", "                    },\n                    type: \"matcher\",\n                  },\n                  {\n                    definition: {\n                      key: \"~source\",\n                      matcher: \"eq\",\n                      values: [\"com.adobe.eventSource.requestContent\"],\n                    },\n                    type: \"matcher\",", "                    },\n                    type: \"matcher\",\n                  },\n                ],\n                logic: \"and\",\n              },\n              type: \"group\",\n            },\n            {\n              definition: {", "            {\n              definition: {\n                conditions: [\n                  {\n                    definition: {\n                      key: \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.osversion\",\n                      matcher: \"ne\",\n                      values: [\n                        \"Apple macOS\",\n                        \"Linux Operating System\",", "                        \"Apple macOS\",\n                        \"Linux Operating System\",\n                        \"Microsoft Windows\",\n                      ],\n                    },\n                    type: \"matcher\",\n                  },\n                  {\n                    definition: {\n                      key: \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.dayssincelastupgrade\",", "                    definition: {\n                      key: \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.dayssincelastupgrade\",\n                      matcher: \"eq\",\n                      values: [52],\n                    },\n                    type: \"matcher\",\n                  },\n                  {\n                    definition: {\n                      key: \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.carriername\",", "                    definition: {\n                      key: \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.carriername\",\n                      matcher: \"eq\",\n                      values: [\"T-Mobile\"],\n                    },\n                    type: \"matcher\",\n                  },\n                ],\n                logic: \"or\",\n              },", "                logic: \"or\",\n              },\n              type: \"group\",\n            },\n          ],\n          logic: \"and\",\n        },\n        type: \"group\",\n      },\n      consequences: [CONSEQUENCE],", "      },\n      consequences: [CONSEQUENCE],\n    },\n  ],\n};\n\ndescribe(\"( Collect PII event happens) AND (( OS version \u2260 Apple macOS, Linux Operating System, or Microsoft Windows ) OR ( Days since upgrade = 52 ) OR ( Carrier name equals T-Mobile ))\", () => {\n  let ruleset;\n\n  beforeEach(() => {", "\n  beforeEach(() => {\n    ruleset = RulesEngine(RULE_SET);\n  });\n\n  it(\"display message when condition values doesn't match the given context value of osversion\", () => {\n    const result = ruleset.execute({\n      \"~type\": \"com.adobe.eventType.generic.pii\",\n      \"~source\": \"com.adobe.eventSource.requestContent\",\n      \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.osversion\":", "      \"~source\": \"com.adobe.eventSource.requestContent\",\n      \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.osversion\":\n        \"Google's Android OS\",\n      \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.dayssincelastupgrade\": 52,\n      \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.carriername\":\n        \"T-Mobile\",\n    });\n    expect(result).toEqual([RULE_SET.rules[0].consequences]);\n  });\n  it(\"shouldn't display message when condition values matching the given context value of osversion\", () => {", "  });\n  it(\"shouldn't display message when condition values matching the given context value of osversion\", () => {\n    const result = ruleset.execute({\n      \"~type\": \"com.adobe.eventType.generic.pii\",\n      \"~source\": \"com.adobe.eventSource.requestContent\",\n      \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.osversion\":\n        \"Apple macOS\",\n      \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.dayssincelastupgrade\": 53,\n      \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.carriername\":\n        \"Mint Mobile\",", "      \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.carriername\":\n        \"Mint Mobile\",\n    });\n    expect(result).toEqual([]);\n  });\n});\n"]}
{"filename": "src/model.ts", "chunked_list": ["/*\nCopyright 2023 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.", "OF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport { getMatcher } from \"./matchers\";\nimport {\n  Context,\n  Evaluable,\n  ExecutableRule,\n  ExecutableRuleSet,\n} from \"./types/engine\";", "  ExecutableRuleSet,\n} from \"./types/engine\";\nimport { Consequence } from \"./types/schema\";\nimport {\n  LogicType,\n  SupportedCondition,\n  SupportedLogic,\n  SupportedMatcher,\n  SearchType,\n  SupportedSearchType,", "  SearchType,\n  SupportedSearchType,\n} from \"./types/enums\";\nimport {\n  checkForHistoricalMatcher,\n  queryAndCountAnyEvent,\n  queryAndCountOrderedEvent,\n} from \"./historical\";\n\nfunction evaluateAnd(context: Context, conditions: Array<Evaluable>): boolean {\n  let result = true;\n", "\nfunction evaluateAnd(context: Context, conditions: Array<Evaluable>): boolean {\n  let result = true;\n\n  for (let i = 0; i < conditions.length; i += 1) {\n    result = result && conditions[i].evaluate(context);\n  }\n\n  return result;\n}\n", "function evaluateOr(context: Context, conditions: Array<Evaluable>): boolean {\n  let result = false;\n\n  for (let i = 0; i < conditions.length; i += 1) {\n    result = result || conditions[i].evaluate(context);\n\n    if (result) {\n      return true;\n    }\n  }\n\n  return false;\n}\n", "export function createRules(\n  version: number,\n  rules: Array<ExecutableRule>\n): ExecutableRuleSet {\n  return { version, rules };\n}\n\nexport function createRule(\n  condition: Evaluable,\n  consequences: Array<Consequence>\n): ExecutableRule {\n  return {\n    execute: (context: Context) => {", "      if (condition.evaluate(context)) {\n        return consequences;\n      }\n\n      return [];\n    },\n    toString: () => {\n      return `Rule{condition=${condition}, consequences=${consequences}}`;\n    },\n  };\n}\n", "export function createCondition(\n  type: SupportedCondition,\n  definition: Evaluable\n): Evaluable {\n  return {\n    evaluate: (context) => {\n      return definition.evaluate(context);\n    },\n    toString() {\n      return `Condition{type=${type}, definition=${definition}}`;\n    },\n  };\n}\n", "export function createConsequence(\n  id: string,\n  type: string,\n  detail: any\n): Consequence {\n  return { id, type, detail };\n}\n\nexport function createGroupDefinition(\n  logic: SupportedLogic,\n  conditions: Array<Evaluable>\n): Evaluable {\n  return {\n    evaluate: (context) => {", "export function createGroupDefinition(\n  logic: SupportedLogic,\n  conditions: Array<Evaluable>\n): Evaluable {\n  return {\n    evaluate: (context) => {\n      if (LogicType.AND === logic) {\n        return evaluateAnd(context, conditions);\n      }\n\n      if (LogicType.OR === logic) {\n        return evaluateOr(context, conditions);\n      }\n\n      return false;\n    },\n  };\n}\n", "      if (LogicType.OR === logic) {\n        return evaluateOr(context, conditions);\n      }\n\n      return false;\n    },\n  };\n}\n\nexport function createMatcherDefinition(\n  key: string,\n  matcherKey: SupportedMatcher,\n  values?: Array<any>\n): Evaluable {\n  return {\n    evaluate: (context) => {\n      const matcher = getMatcher(matcherKey);\n", "export function createMatcherDefinition(\n  key: string,\n  matcherKey: SupportedMatcher,\n  values?: Array<any>\n): Evaluable {\n  return {\n    evaluate: (context) => {\n      const matcher = getMatcher(matcherKey);\n\n      if (!matcher) {\n        return false;\n      }\n\n      return matcher.matches(context, key, values);\n    },\n  };\n}\n", "      if (!matcher) {\n        return false;\n      }\n\n      return matcher.matches(context, key, values);\n    },\n  };\n}\n\nexport function createHistoricalDefinition(\n  events: Array<any>,\n  matcherKey: SupportedMatcher,\n  value: number,\n  from?: number,\n  to?: number,\n  searchType?: SupportedSearchType\n): Evaluable {\n  return {\n    evaluate: (context) => {\n      let eventCount;", "export function createHistoricalDefinition(\n  events: Array<any>,\n  matcherKey: SupportedMatcher,\n  value: number,\n  from?: number,\n  to?: number,\n  searchType?: SupportedSearchType\n): Evaluable {\n  return {\n    evaluate: (context) => {\n      let eventCount;", "      if (SearchType.ORDERED === searchType) {\n        eventCount = queryAndCountOrderedEvent(events, context, from, to);\n      } else {\n        eventCount = queryAndCountAnyEvent(events, context, from, to);\n      }\n      return checkForHistoricalMatcher(eventCount, matcherKey, value);\n    },\n  };\n}\n"]}
{"filename": "src/parser.ts", "chunked_list": ["/*\nCopyright 2023 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.", "OF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport {\n  createCondition,\n  createConsequence,\n  createGroupDefinition,\n  createHistoricalDefinition,\n  createMatcherDefinition,\n  createRule,", "  createMatcherDefinition,\n  createRule,\n  createRules,\n} from \"./model\";\nimport {\n  Consequence,\n  GroupCondition,\n  GroupDefinition,\n  HistoricalCondition,\n  HistoricalDefinition,", "  HistoricalCondition,\n  HistoricalDefinition,\n  MatcherCondition,\n  MatcherDefinition,\n  Rule,\n  RuleSet,\n} from \"./types/schema\";\nimport { Evaluable, ExecutableRule, ExecutableRuleSet } from \"./types/engine\";\nimport { ConditionType } from \"./types/enums\";\n\nfunction parseMatcherDefinition(definition: MatcherDefinition): Evaluable {\n  const { key, matcher, values } = definition;\n\n  return createMatcherDefinition(key, matcher, values);\n}\n", "import { ConditionType } from \"./types/enums\";\n\nfunction parseMatcherDefinition(definition: MatcherDefinition): Evaluable {\n  const { key, matcher, values } = definition;\n\n  return createMatcherDefinition(key, matcher, values);\n}\n\nfunction parseGroupDefinition(definition: GroupDefinition): Evaluable {\n  const { logic, conditions } = definition;\n\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  return createGroupDefinition(logic, conditions.map(parseCondition));\n}\n", "function parseGroupDefinition(definition: GroupDefinition): Evaluable {\n  const { logic, conditions } = definition;\n\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  return createGroupDefinition(logic, conditions.map(parseCondition));\n}\n\nfunction parseHistoricalDefinition(\n  definition: HistoricalDefinition\n): Evaluable {\n  const { events, from, to, matcher, value, searchType } = definition;\n  return createHistoricalDefinition(\n    events,\n    matcher,\n    value,\n    from,\n    to,\n    searchType\n  );\n}\n", "function parseCondition(\n  condition: MatcherCondition | GroupCondition | HistoricalCondition\n): Evaluable {\n  const { type, definition } = condition;\n\n  if (ConditionType.MATCHER === type) {\n    return createCondition(\n      type,\n      parseMatcherDefinition(<MatcherDefinition>definition)\n    );\n  }\n", "  if (ConditionType.GROUP === type) {\n    return createCondition(\n      type,\n      parseGroupDefinition(<GroupDefinition>definition)\n    );\n  }\n\n  if (ConditionType.HISTORICAL === type) {\n    return createCondition(\n      type,\n      parseHistoricalDefinition(<HistoricalDefinition>definition)\n    );\n  }\n\n  throw new Error(\"Can not parse condition\");\n}\n", "function parseConsequence(consequence: Consequence): Consequence {\n  const { id, type, detail } = consequence;\n\n  return createConsequence(id, type, detail);\n}\n\nfunction parseRule(rule: Rule): ExecutableRule {\n  const { condition, consequences } = rule;\n\n  return createRule(\n    parseCondition(condition),\n    consequences.map(parseConsequence)\n  );\n}\n", "export function parseRules(ruleset: RuleSet): ExecutableRuleSet {\n  const { version, rules } = ruleset;\n\n  return createRules(version, rules.map(parseRule));\n}\n"]}
{"filename": "src/historical.spec.ts", "chunked_list": ["/*\nCopyright 2023 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.", "OF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport {\n  checkForHistoricalMatcher,\n  queryAndCountAnyEvent,\n  queryAndCountOrderedEvent,\n} from \"./historical\";\nimport { MatcherType } from \"./types/enums\";\n", "import { MatcherType } from \"./types/enums\";\n\ndescribe(\"test helper functions\", () => {\n  it(\"should return a count of the number of events that match\", () => {\n    const events = [\n      {\n        type: \"display\",\n        id: \"abc\",\n      },\n      {", "      },\n      {\n        type: \"display\",\n        id: \"def\",\n      },\n    ];\n    const context = {\n      events: {\n        display: {\n          abc: {", "        display: {\n          abc: {\n            event: {\n              type: \"display\",\n              id: \"abc\",\n            },\n            timestamp: 1609086720000,\n            count: 2,\n          },\n          def: {", "          },\n          def: {\n            event: {\n              type: \"display\",\n              id: \"def\",\n            },\n            timestamp: 1609086720000,\n            count: 6,\n          },\n        },", "          },\n        },\n      },\n    };\n    const from = 1609086720000;\n    const to = 1609086720000;\n    const result = queryAndCountAnyEvent(events, context, from, to);\n    expect(result).toBe(8);\n  });\n", "  });\n\n  it(\"should return total count of the number of events even if the `to` and `from` is undefined\", () => {\n    const events = [\n      {\n        type: \"display\",\n        id: \"abc\",\n      },\n      {\n        type: \"display\",", "      {\n        type: \"display\",\n        id: \"def\",\n      },\n    ];\n    const context = {\n      events: {\n        display: {\n          abc: {\n            event: {", "          abc: {\n            event: {\n              type: \"display\",\n              id: \"abc\",\n            },\n            timestamp: 1609086720000,\n            count: 2,\n          },\n          def: {\n            event: {", "          def: {\n            event: {\n              type: \"display\",\n              id: \"def\",\n            },\n            timestamp: 1609086720000,\n            count: 6,\n          },\n        },\n      },", "        },\n      },\n    };\n    const from = undefined;\n    const to = undefined;\n    const result = queryAndCountAnyEvent(events, context, from, to);\n    expect(result).toBe(8);\n  });\n\n  it(\"returns 1 (true )If all the events are ordered and within the time range\", () => {", "\n  it(\"returns 1 (true )If all the events are ordered and within the time range\", () => {\n    jest.setTimeout(10000);\n    const events = [\n      { type: \"display\", id: \"A\" },\n      { type: \"display\", id: \"B\" },\n      { type: \"display\", id: \"C\" },\n    ];\n    const context = {\n      events: {", "    const context = {\n      events: {\n        display: {\n          A: { count: 1, timestamp: 1 },\n          B: { count: 1, timestamp: 2 },\n          C: { count: 1, timestamp: 3 },\n        },\n      },\n    };\n    const from = 0;", "    };\n    const from = 0;\n    const to = 4;\n    const result = queryAndCountOrderedEvent(events, context, from, to);\n    expect(result).toBe(1);\n  });\n\n  it(\"returns 0 If any of the events are ordered but not within the time range\", () => {\n    jest.setTimeout(10000);\n    const events = [", "    jest.setTimeout(10000);\n    const events = [\n      { type: \"display\", id: \"A\" },\n      { type: \"display\", id: \"B\" },\n      { type: \"display\", id: \"C\" },\n    ];\n    const context = {\n      events: {\n        display: {\n          A: { count: 1, timestamp: 1 },", "        display: {\n          A: { count: 1, timestamp: 1 },\n          B: { count: 1, timestamp: 2 },\n          C: { count: 1, timestamp: 3 },\n        },\n      },\n    };\n    const from = 0;\n    const to = 2;\n    const result = queryAndCountOrderedEvent(events, context, from, to);", "    const to = 2;\n    const result = queryAndCountOrderedEvent(events, context, from, to);\n    expect(result).toBe(0);\n  });\n\n  it(\"should verify if the event count matches MatcherType.GREATER_THAN\", () => {\n    const eventCount = 1;\n    const matcherKey = MatcherType.GREATER_THAN;\n    const value = 1;\n    const result = checkForHistoricalMatcher(eventCount, matcherKey, value);", "    const value = 1;\n    const result = checkForHistoricalMatcher(eventCount, matcherKey, value);\n    expect(result).toEqual(false);\n  });\n\n  it(\"should verify if the event count matches MatcherType.EQUALS\", () => {\n    const eventCount = 1;\n    const matcherKey = MatcherType.EQUALS;\n    const value = 1;\n    const result = checkForHistoricalMatcher(eventCount, matcherKey, value);", "    const value = 1;\n    const result = checkForHistoricalMatcher(eventCount, matcherKey, value);\n    expect(result).toEqual(true);\n  });\n\n  it(\"should verify if the event count matches MatcherType.GREATER_THAN_OR_EQUAL_TO\", () => {\n    const eventCount = 1;\n    const matcherKey = MatcherType.GREATER_THAN_OR_EQUAL_TO;\n    const value = 1;\n    const result = checkForHistoricalMatcher(eventCount, matcherKey, value);", "    const value = 1;\n    const result = checkForHistoricalMatcher(eventCount, matcherKey, value);\n    expect(result).toEqual(true);\n  });\n\n  it(\"should verify if the event count matches MatcherType.LESS_THAN\", () => {\n    const eventCount = 1;\n    const matcherKey = MatcherType.LESS_THAN;\n    const value = 2;\n    const result = checkForHistoricalMatcher(eventCount, matcherKey, value);", "    const value = 2;\n    const result = checkForHistoricalMatcher(eventCount, matcherKey, value);\n    expect(result).toEqual(true);\n  });\n\n  it(\"should verify if the event count matches MatcherType.LESS_THAN_OR_EQUAL_TO\", () => {\n    const eventCount = 2;\n    const matcherKey = MatcherType.LESS_THAN_OR_EQUAL_TO;\n    const value = 2;\n    const result = checkForHistoricalMatcher(eventCount, matcherKey, value);", "    const value = 2;\n    const result = checkForHistoricalMatcher(eventCount, matcherKey, value);\n    expect(result).toEqual(true);\n  });\n\n  it(\"should verify if the event count matches MatcherType.NOT_EQUALS\", () => {\n    const eventCount = 2;\n    const matcherKey = MatcherType.NOT_EQUALS;\n    const value = 1;\n    const result = checkForHistoricalMatcher(eventCount, matcherKey, value);", "    const value = 1;\n    const result = checkForHistoricalMatcher(eventCount, matcherKey, value);\n    expect(result).toEqual(true);\n  });\n\n  it(\"should verify for not supported matcher example MatcherType.EX\", () => {\n    const eventCount = 2;\n    const matcherKey = MatcherType.EXISTS;\n    const value = 1;\n    const result = checkForHistoricalMatcher(eventCount, matcherKey, value);", "    const value = 1;\n    const result = checkForHistoricalMatcher(eventCount, matcherKey, value);\n    expect(result).toEqual(false);\n  });\n});\n"]}
{"filename": "src/index.ts", "chunked_list": ["/*\nCopyright 2023 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.", "OF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport { parseRules } from \"./parser\";\nimport { Consequence, RuleSet } from \"./types/schema\";\nimport { Context, ExecutableRule } from \"./types/engine\";\n\nexport default function RulesEngine(ruleset: RuleSet) {\n  const { version, rules } = parseRules(ruleset);\n\n  return {\n    execute: (context: Context): Array<Consequence[]> =>\n      rules\n        .map((rule: ExecutableRule) => rule.execute(context))\n        .filter((arr: Array<Consequence>) => arr.length > 0),\n    getVersion: (): number => version,\n    numRules: (): number => rules.length,\n  };\n}\n"]}
{"filename": "src/historical.ts", "chunked_list": ["/*\nCopyright 2023 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.", "OF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport { MatcherType, SupportedMatcher } from \"./types/enums\";\nimport { Context } from \"./types/engine\";\nimport { HistoricalEvent } from \"./types/schema\";\nimport { isUndefined } from \"./utils/isUndefined\";\n\nexport function checkForHistoricalMatcher(\n  eventCount: number,\n  matcherKey: SupportedMatcher,\n  value: number\n) {\n  switch (matcherKey) {\n    case MatcherType.GREATER_THAN:\n      return eventCount > value;\n    case MatcherType.GREATER_THAN_OR_EQUAL_TO:\n      return eventCount >= value;\n    case MatcherType.LESS_THAN:\n      return eventCount < value;\n    case MatcherType.LESS_THAN_OR_EQUAL_TO:\n      return eventCount <= value;\n    case MatcherType.EQUALS:\n      return eventCount === value;\n    case MatcherType.NOT_EQUALS:\n      return eventCount !== value;\n    default:\n      return false;\n  }\n}\n\n/**", "export function checkForHistoricalMatcher(\n  eventCount: number,\n  matcherKey: SupportedMatcher,\n  value: number\n) {\n  switch (matcherKey) {\n    case MatcherType.GREATER_THAN:\n      return eventCount > value;\n    case MatcherType.GREATER_THAN_OR_EQUAL_TO:\n      return eventCount >= value;\n    case MatcherType.LESS_THAN:\n      return eventCount < value;\n    case MatcherType.LESS_THAN_OR_EQUAL_TO:\n      return eventCount <= value;\n    case MatcherType.EQUALS:\n      return eventCount === value;\n    case MatcherType.NOT_EQUALS:\n      return eventCount !== value;\n    default:\n      return false;\n  }\n}\n\n/**", " * This function is used to query and count any event\n * @param events\n * @param context\n * @param from\n * @param to\n * @returns countTotal\n */\nexport function queryAndCountAnyEvent(\n  events: Array<HistoricalEvent>,\n  context: Context,\n  from?: any,\n  to?: any\n) {\n  return events.reduce((countTotal, event) => {\n    const eventsOfType = context.events[event.type];", "    if (!eventsOfType) {\n      return countTotal;\n    }\n\n    const contextEvent = eventsOfType[event.id];\n    if (!contextEvent) {\n      return countTotal;\n    }\n    const { count: eventCount = 1 } = contextEvent;\n    if (\n      isUndefined(from) ||\n      isUndefined(to) ||\n      (contextEvent.timestamp >= from && contextEvent.timestamp <= to)\n    ) {\n      return countTotal + eventCount;\n    }\n\n    return countTotal;\n  }, 0);\n}\n\n/**\n * Iterates through the events in the query.\n * If the event doesn't exist or has no count, return 0.\n * If the event is in the right order, update the previousEventTimestamp.\n * If the event is not in the right order, return 0\n * If all events are in the right order, return 1\n * @param events\n * @param context\n * @param from\n * @param to\n * @returns {number}\n */", "    if (\n      isUndefined(from) ||\n      isUndefined(to) ||\n      (contextEvent.timestamp >= from && contextEvent.timestamp <= to)\n    ) {\n      return countTotal + eventCount;\n    }\n\n    return countTotal;\n  }, 0);\n}\n\n/**\n * Iterates through the events in the query.\n * If the event doesn't exist or has no count, return 0.\n * If the event is in the right order, update the previousEventTimestamp.\n * If the event is not in the right order, return 0\n * If all events are in the right order, return 1\n * @param events\n * @param context\n * @param from\n * @param to\n * @returns {number}\n */", "export function queryAndCountOrderedEvent(\n  events: Array<HistoricalEvent>,\n  context: Context,\n  from?: any,\n  to?: any\n) {\n  let previousEventTimestamp = from;\n  const sameSequence = events.every((event) => {\n    const eventsOfType = context.events[event.type];\n    if (!eventsOfType) {\n      return false;\n    }\n\n    const contextEvent = eventsOfType[event.id];", "    if (!eventsOfType) {\n      return false;\n    }\n\n    const contextEvent = eventsOfType[event.id];\n    if (\n      contextEvent === null ||\n      isUndefined(contextEvent) ||\n      contextEvent.count === 0\n    ) {\n      return false;\n    }\n\n    const ordered =\n      (isUndefined(previousEventTimestamp) ||\n        contextEvent.timestamp >= previousEventTimestamp) &&\n      (isUndefined(to) || contextEvent.timestamp <= to);\n    previousEventTimestamp = contextEvent.timestamp;\n    return ordered;\n  });\n\n  return sameSequence ? 1 : 0;\n}\n"]}
{"filename": "src/utils/isObjectOrUndefined.ts", "chunked_list": ["/*\nCopyright 2023 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.", "OF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nexport function isObjectOrUndefined(value: any): boolean {\n  return typeof value === \"object\" || typeof value === \"undefined\";\n}\n"]}
{"filename": "src/utils/isNumber.ts", "chunked_list": ["/*\nCopyright 2023 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.", "OF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nexport function isNumber(value: any): boolean {\n  return typeof value === \"number\";\n}\n"]}
{"filename": "src/utils/isObjectOrUndefined.spec.ts", "chunked_list": ["/*\nCopyright 2023 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.", "OF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport { isObjectOrUndefined } from \"./isObjectOrUndefined\";\n\ndescribe(\"isObjectOrUndefined\", () => {\n  it(\"returns false when passed a string\", () => {\n    expect(isObjectOrUndefined(\"firefox\")).toBe(false);\n  });\n  it(\"returns false when passed a number\", () => {", "  });\n  it(\"returns false when passed a number\", () => {\n    expect(isObjectOrUndefined(2023)).toBe(false);\n  });\n  it(\"returns true when passed an object\", () => {\n    expect(isObjectOrUndefined({ prop: \"value\" })).toBe(true);\n  });\n  it(\"returns true for null\", () => {\n    expect(isObjectOrUndefined(null)).toBe(true);\n  });", "    expect(isObjectOrUndefined(null)).toBe(true);\n  });\n  it(\"returns true for undefined\", () => {\n    expect(isObjectOrUndefined(undefined)).toBe(true);\n  });\n});\n"]}
{"filename": "src/utils/isUndefined.spec.ts", "chunked_list": ["/*\nCopyright 2023 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.", "OF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport { isUndefined } from \"./isUndefined\";\n\ndescribe(\"isUndefined\", () => {\n  it(\"returns false when passed a string\", () => {\n    expect(isUndefined(\"firefox\")).toBe(false);\n  });\n  it(\"returns false when passed a number\", () => {", "  });\n  it(\"returns false when passed a number\", () => {\n    expect(isUndefined(2023)).toBe(false);\n  });\n  it(\"returns false when passed an object\", () => {\n    expect(isUndefined({ prop: \"value\" })).toBe(false);\n  });\n  it(\"returns false for null\", () => {\n    expect(isUndefined(null)).toBe(false);\n  });", "    expect(isUndefined(null)).toBe(false);\n  });\n  it(\"returns true for undefined\", () => {\n    expect(isUndefined(undefined)).toBe(true);\n  });\n});\n"]}
{"filename": "src/utils/isNumber.spec.ts", "chunked_list": ["/*\nCopyright 2023 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.", "OF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport { isNumber } from \"./isNumber\";\n\ndescribe(\"isNumber\", () => {\n  it(\"returns true for a given number\", () => {\n    const result = isNumber(2023);\n    expect(result).toBe(true);\n  });", "    expect(result).toBe(true);\n  });\n  it(\"returns false for a non-number value\", () => {\n    const result = isNumber(\"this is not a number\");\n    expect(result).toBe(false);\n  });\n  it(\"returns false for null\", () => {\n    const result = isNumber(null);\n    expect(result).toBe(false);\n  });", "    expect(result).toBe(false);\n  });\n  it(\"returns false for undefined\", () => {\n    const result = isNumber(undefined);\n    expect(result).toBe(false);\n  });\n});\n"]}
{"filename": "src/utils/isUndefined.ts", "chunked_list": ["/*\nCopyright 2023 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.", "OF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nexport function isUndefined(value: any): boolean {\n  return typeof value === \"undefined\";\n}\n"]}
{"filename": "src/matchers/lessThan.ts", "chunked_list": ["/*\nCopyright 2023 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.", "OF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport { Matcher } from \"../types/engine\";\nimport { isNumber } from \"../utils/isNumber\";\n\nexport function createLessThan(): Matcher {\n  return {\n    matches: (context, key, values = []) => {\n      const needle = context[key];\n      if (!isNumber(needle)) {\n        return false;\n      }", "      if (!isNumber(needle)) {\n        return false;\n      }\n      for (let i = 0; i < values.length; i += 1) {\n        if (isNumber(values[i]) && needle < values[i]) {\n          return true;\n        }\n      }\n      return false;\n    },\n  };\n}\n"]}
{"filename": "src/matchers/exists.ts", "chunked_list": ["/*\nCopyright 2023 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.", "OF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport { Matcher } from \"../types/engine\";\n\nexport function createExists(): Matcher {\n  return {\n    matches: (context, key) => {\n      return typeof context[key] !== \"undefined\" && context[key] !== null;\n    },\n  };\n}\n"]}
{"filename": "src/matchers/startsWith.ts", "chunked_list": ["/*\nCopyright 2023 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.", "OF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport { Matcher } from \"../types/engine\";\nimport { isObjectOrUndefined } from \"../utils/isObjectOrUndefined\";\n\nexport function createStartsWith(): Matcher {\n  return {\n    matches: (context, key, values = []) => {\n      if (isObjectOrUndefined(context[key])) {\n        return false;\n      }\n      const contextValue: string = String(context[key]).toLowerCase();", "      if (isObjectOrUndefined(context[key])) {\n        return false;\n      }\n      const contextValue: string = String(context[key]).toLowerCase();\n      for (let i = 0; i < values.length; i += 1) {\n        if (\n          !isObjectOrUndefined(values[i]) &&\n          contextValue.startsWith(String(values[i]).toLowerCase())\n        ) {\n          return true;\n        }\n      }\n      return false;\n    },\n  };\n}\n"]}
{"filename": "src/matchers/notexists.ts", "chunked_list": ["/*\nCopyright 2023 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.", "OF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport { Matcher } from \"../types/engine\";\n\nexport function createNotExists(): Matcher {\n  return {\n    matches: (context, key) => {\n      return typeof context[key] === \"undefined\" || context[key] === null;\n    },\n  };\n}\n"]}
{"filename": "src/matchers/greaterThan.ts", "chunked_list": ["/*\nCopyright 2023 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/", "governing permissions and limitations under the License.\n*/\nimport { Matcher } from \"../types/engine\";\nimport { isNumber } from \"../utils/isNumber\";\n\nexport function createGreaterThan(): Matcher {\n  return {\n    matches: (context, key, values = []) => {\n      const needle = context[key];\n      if (!isNumber(needle)) {\n        return false;\n      }", "      if (!isNumber(needle)) {\n        return false;\n      }\n      for (let i = 0; i < values.length; i += 1) {\n        if (isNumber(values[i]) && needle > values[i]) {\n          return true;\n        }\n      }\n      return false;\n    },\n  };\n}\n"]}
{"filename": "src/matchers/lessThanEquals.ts", "chunked_list": ["/*\nCopyright 2023 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.", "OF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport { Matcher } from \"../types/engine\";\nimport { isNumber } from \"../utils/isNumber\";\n\nexport function createLessThanEquals(): Matcher {\n  return {\n    matches: (context, key, values = []) => {\n      const needle = context[key];\n      if (!isNumber(needle)) {\n        return false;\n      }", "      if (!isNumber(needle)) {\n        return false;\n      }\n      for (let i = 0; i < values.length; i += 1) {\n        if (isNumber(values[i]) && needle <= values[i]) {\n          return true;\n        }\n      }\n      return false;\n    },\n  };\n}\n"]}
{"filename": "src/matchers/endsWith.ts", "chunked_list": ["/*\nCopyright 2023 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.", "OF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport { isObjectOrUndefined } from \"../utils/isObjectOrUndefined\";\nimport { Matcher } from \"../types/engine\";\n\nexport function createEndsWith(): Matcher {\n  return {\n    matches: (context, key, values = []) => {\n      if (isObjectOrUndefined(context[key])) {\n        return false;\n      }\n      const contextValue: string = String(context[key]).toLowerCase();", "      if (isObjectOrUndefined(context[key])) {\n        return false;\n      }\n      const contextValue: string = String(context[key]).toLowerCase();\n      for (let i = 0; i < values.length; i += 1) {\n        if (\n          !isObjectOrUndefined(values[i]) &&\n          contextValue.endsWith(values[i].toLowerCase())\n        ) {\n          return true;\n        }\n      }\n      return false;\n    },\n  };\n}\n"]}
{"filename": "src/matchers/notEquals.ts", "chunked_list": ["/*\nCopyright 2023 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.", "OF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport { Matcher } from \"../types/engine\";\nimport { isObjectOrUndefined } from \"../utils/isObjectOrUndefined\";\n\nexport function createNotEquals(): Matcher {\n  return {\n    matches: (context, key, values = []) => {\n      if (isObjectOrUndefined(context[key])) {\n        return false;\n      }\n      const contextValue: string = String(context[key]).toLowerCase();", "      if (isObjectOrUndefined(context[key])) {\n        return false;\n      }\n      const contextValue: string = String(context[key]).toLowerCase();\n      for (let i = 0; i < values.length; i += 1) {\n        if (\n          !isObjectOrUndefined(values[i]) &&\n          contextValue === String(values[i]).toLowerCase()\n        ) {\n          return false;\n        }\n      }\n      return true;\n    },\n  };\n}\n"]}
{"filename": "src/matchers/notContains.ts", "chunked_list": ["/*\nCopyright 2023 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.", "OF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport { Matcher } from \"../types/engine\";\nimport { isObjectOrUndefined } from \"../utils/isObjectOrUndefined\";\n\nexport function createNotContains(): Matcher {\n  return {\n    matches: (context, key, values = []) => {\n      if (isObjectOrUndefined(context[key])) {\n        return false;\n      }\n      const contextValue: string = String(context[key]).toLowerCase();", "      if (isObjectOrUndefined(context[key])) {\n        return false;\n      }\n      const contextValue: string = String(context[key]).toLowerCase();\n      for (let i = 0; i < values.length; i += 1) {\n        if (\n          !isObjectOrUndefined(values[i]) &&\n          contextValue.indexOf(String(values[i]).toLowerCase()) !== -1\n        ) {\n          return false;\n        }\n      }\n      return true;\n    },\n  };\n}\n"]}
{"filename": "src/matchers/equals.ts", "chunked_list": ["/*\nCopyright 2023 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.", "OF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport { isObjectOrUndefined } from \"../utils/isObjectOrUndefined\";\nimport { Matcher } from \"../types/engine\";\n\nexport function createEquals(): Matcher {\n  return {\n    matches: (context, key, values = []) => {\n      if (isObjectOrUndefined(context[key])) {\n        return false;\n      }\n\n      const contextValue: string = String(context[key]).toLowerCase();", "      if (isObjectOrUndefined(context[key])) {\n        return false;\n      }\n\n      const contextValue: string = String(context[key]).toLowerCase();\n      for (let i = 0; i < values.length; i += 1) {\n        if (\n          !isObjectOrUndefined(values[i]) &&\n          contextValue === String(values[i]).toLowerCase()\n        ) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n  };\n}\n"]}
{"filename": "src/matchers/index.ts", "chunked_list": ["/*\nCopyright 2023 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.", "OF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nimport { Matcher } from \"../types/engine\";\nimport { MatcherType, SupportedMatcher } from \"../types/enums\";\nimport { createEquals } from \"./equals\";\nimport { createNotEquals } from \"./notEquals\";\nimport { createExists } from \"./exists\";\nimport { createNotExists } from \"./notexists\";", "import { createExists } from \"./exists\";\nimport { createNotExists } from \"./notexists\";\nimport { createGreaterThan } from \"./greaterThan\";\nimport { createGreaterThanEquals } from \"./greaterThanEquals\";\nimport { createLessThan } from \"./lessThan\";\nimport { createLessThanEquals } from \"./lessThanEquals\";\nimport { createContains } from \"./contains\";\nimport { createNotContains } from \"./notContains\";\nimport { createStartsWith } from \"./startsWith\";\nimport { createEndsWith } from \"./endsWith\";", "import { createStartsWith } from \"./startsWith\";\nimport { createEndsWith } from \"./endsWith\";\n\nconst MATCHERS: { [key: string]: Matcher } = {\n  [MatcherType.EQUALS]: createEquals(),\n  [MatcherType.NOT_EQUALS]: createNotEquals(),\n  [MatcherType.EXISTS]: createExists(),\n  [MatcherType.NOT_EXISTS]: createNotExists(),\n  [MatcherType.GREATER_THAN]: createGreaterThan(),\n  [MatcherType.GREATER_THAN_OR_EQUAL_TO]: createGreaterThanEquals(),", "  [MatcherType.GREATER_THAN]: createGreaterThan(),\n  [MatcherType.GREATER_THAN_OR_EQUAL_TO]: createGreaterThanEquals(),\n  [MatcherType.LESS_THAN]: createLessThan(),\n  [MatcherType.LESS_THAN_OR_EQUAL_TO]: createLessThanEquals(),\n  [MatcherType.CONTAINS]: createContains(),\n  [MatcherType.NOT_CONTAINS]: createNotContains(),\n  [MatcherType.STARTS_WITH]: createStartsWith(),\n  [MatcherType.ENDS_WITH]: createEndsWith(),\n};\n\nexport function getMatcher(key: SupportedMatcher): Matcher {\n  return MATCHERS[key];\n}\n", "};\n\nexport function getMatcher(key: SupportedMatcher): Matcher {\n  return MATCHERS[key];\n}\n"]}
{"filename": "src/matchers/contains.ts", "chunked_list": ["/*\nCopyright 2023 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.", "OF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport { isObjectOrUndefined } from \"../utils/isObjectOrUndefined\";\nimport { Matcher } from \"../types/engine\";\n\nexport function createContains(): Matcher {\n  return {\n    matches: (context, key, values = []) => {\n      if (isObjectOrUndefined(context[key])) {\n        return false;\n      }\n      const contextValue: string = String(context[key]).toLowerCase();", "      if (isObjectOrUndefined(context[key])) {\n        return false;\n      }\n      const contextValue: string = String(context[key]).toLowerCase();\n      for (let i = 0; i < values.length; i += 1) {\n        if (\n          !isObjectOrUndefined(values[i]) &&\n          contextValue.indexOf(String(values[i]).toLowerCase()) !== -1\n        ) {\n          return true;\n        }\n      }\n      return false;\n    },\n  };\n}\n"]}
{"filename": "src/matchers/greaterThanEquals.ts", "chunked_list": ["/*\nCopyright 2023 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/", "governing permissions and limitations under the License.\n*/\nimport { Matcher } from \"../types/engine\";\nimport { isNumber } from \"../utils/isNumber\";\n\nexport function createGreaterThanEquals(): Matcher {\n  return {\n    matches: (context, key, values = []) => {\n      const needle = context[key];\n      if (!isNumber(needle)) {\n        return false;\n      }", "      if (!isNumber(needle)) {\n        return false;\n      }\n      for (let i = 0; i < values.length; i += 1) {\n        if (isNumber(values[i]) && needle >= values[i]) {\n          return true;\n        }\n      }\n      return false;\n    },\n  };\n}\n"]}
{"filename": "src/types/schema.ts", "chunked_list": ["/*\nCopyright 2023 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.", "OF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nimport {\n  ConditionType,\n  SupportedLogic,\n  SupportedMatcher,\n  SupportedSearchType,\n} from \"./enums\";", "  SupportedSearchType,\n} from \"./enums\";\n\nexport interface RuleSet {\n  version: number;\n  rules: Array<Rule>;\n}\n\nexport interface Rule {\n  condition: GroupCondition | MatcherCondition | HistoricalCondition;\n  consequences: Array<Consequence>;\n}\n", "export interface Rule {\n  condition: GroupCondition | MatcherCondition | HistoricalCondition;\n  consequences: Array<Consequence>;\n}\n\nexport interface GroupCondition {\n  definition: GroupDefinition;\n  type: typeof ConditionType.GROUP;\n}\n\nexport interface MatcherCondition {\n  definition: MatcherDefinition;\n  type: typeof ConditionType.MATCHER;\n}", "export interface MatcherCondition {\n  definition: MatcherDefinition;\n  type: typeof ConditionType.MATCHER;\n}\nexport interface HistoricalCondition {\n  definition: HistoricalDefinition;\n  type: typeof ConditionType.HISTORICAL;\n}\n\nexport interface MatcherDefinition {\n  key: string;\n  matcher: SupportedMatcher;\n  values?: Array<any>;\n}\n", "export interface MatcherDefinition {\n  key: string;\n  matcher: SupportedMatcher;\n  values?: Array<any>;\n}\n\nexport interface HistoricalEvent {\n  id: string;\n  type: string;\n}\n", "export interface HistoricalDefinition {\n  events: Array<HistoricalEvent>;\n  from?: number;\n  to?: number;\n  matcher: SupportedMatcher;\n  value: number;\n  searchType?: SupportedSearchType;\n}\n\nexport interface GroupDefinition {\n  conditions: Array<MatcherCondition | GroupCondition | HistoricalCondition>;\n  logic: SupportedLogic;\n}\n", "export interface GroupDefinition {\n  conditions: Array<MatcherCondition | GroupCondition | HistoricalCondition>;\n  logic: SupportedLogic;\n}\n\nexport interface Consequence {\n  type: string;\n  detail: any;\n  id: string;\n}\n"]}
{"filename": "src/types/engine.ts", "chunked_list": ["/*\nCopyright 2023 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.", "OF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nimport { Consequence } from \"./schema\";\n\nexport interface Context {\n  [key: string]: any;\n}\n\nexport interface Matcher {\n  matches(context: Context, key: string, values?: Array<any>): boolean;\n}\n", "export interface Matcher {\n  matches(context: Context, key: string, values?: Array<any>): boolean;\n}\n\nexport interface Evaluable {\n  evaluate(context: Context): boolean;\n  toString?(): string;\n}\nexport interface ExecutableRule {\n  execute(context: Context): Array<Consequence>;\n  toString?(): string;\n}\n", "export interface ExecutableRule {\n  execute(context: Context): Array<Consequence>;\n  toString?(): string;\n}\n\nexport interface ExecutableRuleSet {\n  version: number;\n  rules: Array<ExecutableRule>;\n}\n"]}
{"filename": "src/types/enums.ts", "chunked_list": ["/*\nCopyright 2023 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.", "OF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nexport const ConditionType = {\n  MATCHER: \"matcher\",\n  GROUP: \"group\",\n  HISTORICAL: \"historical\",\n};\nexport const MatcherType = {", "};\nexport const MatcherType = {\n  EQUALS: \"eq\",\n  NOT_EQUALS: \"ne\",\n  EXISTS: \"ex\",\n  NOT_EXISTS: \"nx\",\n  GREATER_THAN: \"gt\",\n  GREATER_THAN_OR_EQUAL_TO: \"ge\",\n  LESS_THAN: \"lt\",\n  LESS_THAN_OR_EQUAL_TO: \"le\",", "  LESS_THAN: \"lt\",\n  LESS_THAN_OR_EQUAL_TO: \"le\",\n  CONTAINS: \"co\",\n  NOT_CONTAINS: \"nc\",\n  STARTS_WITH: \"sw\",\n  ENDS_WITH: \"ew\",\n};\n\nexport const LogicType = {\n  AND: \"and\",", "export const LogicType = {\n  AND: \"and\",\n  OR: \"or\",\n};\n\nexport const SearchType = {\n  ANY: \"any\",\n  ORDERED: \"ordered\",\n};\n\nexport type SupportedCondition =\n  | typeof ConditionType.MATCHER\n  | typeof ConditionType.GROUP\n  | typeof ConditionType.HISTORICAL;\n", "};\n\nexport type SupportedCondition =\n  | typeof ConditionType.MATCHER\n  | typeof ConditionType.GROUP\n  | typeof ConditionType.HISTORICAL;\n\nexport type SupportedMatcher =\n  | typeof MatcherType.EQUALS\n  | typeof MatcherType.NOT_EQUALS\n  | typeof MatcherType.EXISTS\n  | typeof MatcherType.NOT_EXISTS\n  | typeof MatcherType.GREATER_THAN\n  | typeof MatcherType.GREATER_THAN_OR_EQUAL_TO\n  | typeof MatcherType.LESS_THAN\n  | typeof MatcherType.LESS_THAN_OR_EQUAL_TO\n  | typeof MatcherType.CONTAINS\n  | typeof MatcherType.NOT_CONTAINS\n  | typeof MatcherType.STARTS_WITH\n  | typeof MatcherType.ENDS_WITH;\n", "export type SupportedSearchType =\n  | typeof SearchType.ANY\n  | typeof SearchType.ORDERED;\n\nexport type SupportedLogic = typeof LogicType.AND | typeof LogicType.OR;\n"]}
