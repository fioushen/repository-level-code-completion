{"filename": "src/index.ts", "chunked_list": ["\nimport { Bot } from \"./Client\";\n\nconst client = new Bot({\n    intents: 3276543\n});\n\nclient.connect()"]}
{"filename": "src/Commands/davet.ts", "chunked_list": ["import { ActionRowBuilder, ChannelType, ButtonBuilder, ButtonStyle, EmbedBuilder } from \"discord.js\";\nimport { Commands } from \"../Interfaces\";\n\nexport const Command : Commands = {\n    name: \"davet\",\n    description: \"\ud83d\udc99 Botun davet linkini atar.\",\n\n    async execute(client, interaction) {\n        await interaction.deferReply();\n", "        await interaction.deferReply();\n\n        interaction.followUp({ embeds: [\n            new EmbedBuilder()\n            .setAuthor({ name: \"Merhaba, Ben Silex!\" })\n            .setColor(\"#2F3136\")\n            .setTitle(\"Silex'e destek ver.\")\n            .setDescription(\"> <:bot:1039607042291269703> | Silex'i \u015fimdi sunucuna davet et ve botun tad\u0131n\u0131 \u00e7\u0131kar!\")\n            ],\n            components: [", "            ],\n            components: [\n                new ActionRowBuilder<ButtonBuilder>().addComponents(\n                    new ButtonBuilder()\n                    .setLabel(`Davet Linkim`)\n                    .setEmoji(\"1044325557615202364\")\n                    .setStyle(ButtonStyle.Link)\n                    .setURL('https://discord.com/api/oauth2/authorize?client_id=1038372156578480199&permissions=347200&scope=applications.commands%20bot'),\n                    new ButtonBuilder()\n                    .setLabel(`Destek Sunucum`)", "                    new ButtonBuilder()\n                    .setLabel(`Destek Sunucum`)\n                    .setEmoji(\"1039607057923461181\")\n                    .setStyle(ButtonStyle.Link)\n                    .setURL('https://discord.gg/ZtnpBbSDZz')\n                )\n            ]})\n    }\n}", "}"]}
{"filename": "src/Commands/yasakl\u0131-kelime.ts", "chunked_list": ["import Discord  from \"discord.js\";\nimport db from \"croxydb\";\nimport { Commands } from \"../Interfaces\";\n\nexport const Command : Commands = {\n    name: \"yasakl\u0131-kelime\",\n    description: \"\ud83d\udc99 Yasakl\u0131 kelime sistemini ayarlars\u0131n!\",\n    options: [\n        {\n            type: 3,", "        {\n            type: 3,\n            name: \"kelime\",\n            description: \"1 adet kelime giriniz.\",\n            required: true\n        }\n    ],\n\n    async execute(client, interaction) {\n        await interaction.deferReply(); ", "    async execute(client, interaction) {\n        await interaction.deferReply(); \n\n        const kelime = interaction.options.get(\"kelime\")?.value\n\n        const yetki = new Discord.EmbedBuilder()\n        .setColor(\"Red\")\n        .setDescription(\"<:carpi:1040649840394260510> | Bu komutu kullanabilmek i\u00e7in `Rolleri Y\u00f6net` yetkisine sahip olmal\u0131s\u0131n!\")\n\n    if (!interaction.memberPermissions?.has(\"ManageRoles\")) return interaction.followUp({ embeds: [yetki] })\n\n        db.push(`yasakl\u0131_kelime_${interaction.guild?.id}`, kelime)\n\n        interaction.followUp(\"<:tik:1039607067729727519> | Yasakl\u0131 kelime ayarland\u0131.\")\n    }\n}", "\n    if (!interaction.memberPermissions?.has(\"ManageRoles\")) return interaction.followUp({ embeds: [yetki] })\n\n        db.push(`yasakl\u0131_kelime_${interaction.guild?.id}`, kelime)\n\n        interaction.followUp(\"<:tik:1039607067729727519> | Yasakl\u0131 kelime ayarland\u0131.\")\n    }\n}"]}
{"filename": "src/Commands/afk.ts", "chunked_list": ["import { ActionRowBuilder, ChannelType, ButtonBuilder, ButtonStyle, EmbedBuilder } from \"discord.js\";\nimport db from \"croxydb\";\nimport { Commands } from \"../Interfaces\";\n\nexport const Command : Commands = {\n    name: \"afk\",\n    description: \"\ud83d\udc99 Afk Olursun!\",\n    options: [\n        {\n            type: 3,", "        {\n            type: 3,\n            name: \"sebep\",\n            description: \"Afk sebebi.\",\n            required: true\n        }\n    ],\n\n    async execute(client, interaction) {\n        await interaction.deferReply(); ", "    async execute(client, interaction) {\n        await interaction.deferReply(); \n\n        const sebep = interaction.options.get(\"sebep\")?.value\n\n        db.set(`afk_${interaction.user.id}`, {\nsebep:  `${sebep}`\n        })\n        db.set(`afkDate_${interaction.user.id}`, {\n            afkDate:  Date.now(),", "        db.set(`afkDate_${interaction.user.id}`, {\n            afkDate:  Date.now(),\n        })\n\n        interaction.followUp(\"<:tik:1039607067729727519> | Ba\u015far\u0131yla Afk Oldun!\")\n    }\n}"]}
{"filename": "src/Commands/idban.ts", "chunked_list": ["import { ActionRowBuilder, ChannelType, ButtonBuilder, ButtonStyle, EmbedBuilder } from \"discord.js\";\nimport Discord from \"discord.js\";\nimport db from \"croxydb\";\nimport { Commands } from \"../Interfaces\";\nimport { type } from \"os\";\n\nexport const Command : Commands = {\n    name: \"idban\",\n    description: \"\ud83d\udc99 ID ile kullan\u0131c\u0131 yasaklars\u0131n!\",\n    options: [", "    description: \"\ud83d\udc99 ID ile kullan\u0131c\u0131 yasaklars\u0131n!\",\n    options: [\n        {\n            name:\"id\",\n            description:\"L\u00fctfen bir kullan\u0131c\u0131 ID girin!\",\n            type:3,\n            required:true\n        },\n        {\n            name:\"sebep\",", "        {\n            name:\"sebep\",\n            description:\"L\u00fctfen bir sebep belirtin.\",\n            type:3,\n            required:true\n        }\n    ],\n\n    async execute(client, interaction) {\n        await interaction.deferReply({ ephemeral: true }); ", "    async execute(client, interaction) {\n        await interaction.deferReply({ ephemeral: true }); \n\n        const id = interaction.options.get(\"id\")?.value\n        const sebep = interaction.options.get(\"sebep\")?.value\n\n        const yetki = new Discord.EmbedBuilder()\n        .setColor(\"Red\")\n        .setDescription(\"<:carpi:1040649840394260510> | Bu komutu kullanabilmek i\u00e7in `\u00dcyeleri Banla` yetkisine sahip olmal\u0131s\u0131n!\")\n\n    if (!interaction.memberPermissions?.has(\"BanMembers\")) return interaction.followUp({ embeds: [yetki] })\n\n    interaction.guild?.members.ban(`${id}`, { reason: `${sebep}`})\n\n    interaction.followUp(`<:tik:1039607067729727519> | Ba\u015far\u0131yla \u00dcyeyi Yasaklad\u0131m!`)\n        \n    }\n}", "        .setDescription(\"<:carpi:1040649840394260510> | Bu komutu kullanabilmek i\u00e7in `\u00dcyeleri Banla` yetkisine sahip olmal\u0131s\u0131n!\")\n\n    if (!interaction.memberPermissions?.has(\"BanMembers\")) return interaction.followUp({ embeds: [yetki] })\n\n    interaction.guild?.members.ban(`${id}`, { reason: `${sebep}`})\n\n    interaction.followUp(`<:tik:1039607067729727519> | Ba\u015far\u0131yla \u00dcyeyi Yasaklad\u0131m!`)\n        \n    }\n}"]}
{"filename": "src/Commands/yard\u0131m.ts", "chunked_list": ["import { ActionRowBuilder, ChannelType, ButtonBuilder, ButtonStyle, EmbedBuilder } from \"discord.js\";\nimport db from \"croxydb\";\nimport { Commands } from \"../Interfaces\";\n\nexport const Command : Commands = {\n    name: \"yard\u0131m\",\n    description: \"\ud83d\udc99 Botun yard\u0131m men\u00fcs\u00fcne bakars\u0131n!\",\n    options: [],\n\n    async execute(client, interaction) {", "\n    async execute(client, interaction) {\n        await interaction.deferReply(); \n\n        return interaction.followUp({\n            embeds: [\n                new EmbedBuilder()\n                .setColor(\"Blue\")\n                .setTitle(\"\u30fbHangi komutlar\u0131m hakk\u0131nda bilgi almak istiyorsan o butona bas!\")\n                .setFooter({ text: `Silex Yard\u0131m Men\u00fcs\u00fc`, iconURL: `${client.user?.avatarURL()}` })", "                .setTitle(\"\u30fbHangi komutlar\u0131m hakk\u0131nda bilgi almak istiyorsan o butona bas!\")\n                .setFooter({ text: `Silex Yard\u0131m Men\u00fcs\u00fc`, iconURL: `${client.user?.avatarURL()}` })\n                .setDescription(\"\\n\\n**<:links:1039607057923461181> Linkler**\\n> <:bot:1039607042291269703>\u30fb**Botun davet linki: [T\u0131kla](https://discord.com/api/oauth2/authorize?client_id=1038372156578480199&permissions=8&scope=bot%20applications.commands)**\\n> <:duyuru:1039607050734403657>\u30fb**Botun destek sunucusu: [T\u0131kla](https://discord.gg/SY7aMsVpUJ)**\\n> <:newmember:1044325552007422052>\u30fb**Botun gizlilik politikas\u0131: [T\u0131kla](https://github.com/araschain/Silex-Bot-Privacy-Policy)**\")\n                .setThumbnail(interaction.user.avatarURL())\n            ],\n        });\n    }\n}"]}
{"filename": "src/Commands/emojiler.ts", "chunked_list": ["import { ActionRowBuilder, ChannelType, ButtonBuilder, ButtonStyle, EmbedBuilder } from \"discord.js\";\nimport { Commands } from \"../Interfaces\";\n\nexport const Command : Commands = {\n    name: \"emojiler\",\n    description: \"\ud83d\udc99 Sunucudaki Emojileri G\u00f6r\u00fcrs\u00fcn!!\",\n\n    async execute(client, interaction) {\n        await interaction.deferReply();\n", "        await interaction.deferReply();\n\n        const emotes = interaction.guild?.emojis.cache.size !== 0 ? interaction.guild?.emojis.cache.map((emoji) => `${interaction.guild?.emojis.cache.get(emoji.id)}`).join(\"\") : \"<:eheh:1082704679064064080>\"\n        var size: number;\n\n        if(interaction.guild?.premiumTier === 0) {\n            size = 50;\n        } else if(interaction.guild?.premiumTier === 1) {\n            size = 100\n        } else if(interaction.guild?.premiumTier === 2) {\n            size = 150", "        } else if(interaction.guild?.premiumTier === 2) {\n            size = 150\n        } else if(interaction.guild?.premiumTier === 3) {\n            size = 300\n        }\n\nconst embed = new EmbedBuilder()\n.setTimestamp()\n.setColor('Blue')\n.setTitle(`\\`${interaction.guild?.name}\\` adl\u0131 sunucunun emojileri!`)\n.setDescription(`${emotes}`)\ninteraction.followUp({embeds: [embed]})\n\n    }\n}"]}
{"filename": "src/Commands/kullan\u0131c\u0131-bilgi.ts", "chunked_list": ["import { ActionRowBuilder, ChannelType, ButtonBuilder, ButtonStyle, EmbedBuilder, PermissionsBitField, GuildMember, Guild } from \"discord.js\";\nimport db from \"croxydb\";\nimport Discord from \"discord.js\";\nimport { Commands } from \"../Interfaces\";\n\nexport const Command : Commands = {\n    name:\"kullan\u0131c\u0131-bilgi\",\n    description: '\ud83d\udc99 Kullan\u0131c\u0131 bilgisine bakars\u0131n.',\n    options: [\n      {", "    options: [\n      {\n        name:\"kullan\u0131c\u0131\",\n        description:\"Bilgisine bakmak istedi\u011fin kullan\u0131c\u0131 etiketle!\",\n        type:6,\n        required:true\n    },\n    ],\n\n    async execute(client, interaction) {", "\n    async execute(client, interaction) {\n        await interaction.deferReply();\n\n        const member = interaction.options.get(\"kullan\u0131c\u0131\")?.member as GuildMember\n\n        const embed = new EmbedBuilder()\n    .setDescription(`**\u27a5 Kullan\u0131c\u0131 Bilgileri**\n            \n    \u2022 Kullan\u0131c\u0131: (<@${member?.id}> - \\`${member?.id}\\`)", "            \n    \u2022 Kullan\u0131c\u0131: (<@${member?.id}> - \\`${member?.id}\\`)\n    \u2022 Hesap Kurulum Tarihi: <t:${parseInt(`${(member.user.createdTimestamp || 1000) / 1000}`)}:R>\n    \u2022 Sunucuya Kat\u0131lma Tarihi: <t:${parseInt(`${(member.joinedTimestamp || 1000) / 1000}`)}:R>\n    `)\n    .setThumbnail(`${member?.displayAvatarURL()}`)\n    .setColor(\"Random\")\n    interaction.followUp({embeds: [embed]})\n    }\n}", "    }\n}"]}
{"filename": "src/Commands/destek-sistemi.ts", "chunked_list": ["import { ActionRowBuilder, ChannelType, ButtonBuilder, ButtonStyle, EmbedBuilder } from \"discord.js\";\nimport db from \"croxydb\";\nimport Discord from \"discord.js\";\nimport { Commands } from \"../Interfaces\";\n\nexport const Command : Commands = {\n    name: \"destek-sistemi\",\n    description: \"\ud83d\udc99 Destek sistemini ayarlars\u0131n!\",\n    options: [\n        {", "    options: [\n        {\n            name: \"kanal\",\n            description: \"Destek mesaj\u0131n\u0131n at\u0131laca\u011f\u0131 kanal\u0131 ayarlars\u0131n!\",\n            type: 7,\n            required: true,\n            channel_types: [0]\n        },\n        {\n            name: \"log-kanal\u0131\",", "        {\n            name: \"log-kanal\u0131\",\n            description: \"Destek kapat\u0131ld\u0131\u011f\u0131nda mesaj at\u0131lacacak kanal\u0131 ayarlars\u0131n!\",\n            type: 7,\n            required: true,\n            channel_types: [0]\n        },\n        {\n            name: \"yetkili-rol\",\n            description: \"Destek yetkilisini ayarlars\u0131n!\",", "            name: \"yetkili-rol\",\n            description: \"Destek yetkilisini ayarlars\u0131n!\",\n            type: 8,\n            required: true,\n        },\n    ],\n\n    async execute(client, interaction) {\n        await interaction.deferReply({ ephemeral: true });\n", "        await interaction.deferReply({ ephemeral: true });\n\n        const yetki = new Discord.EmbedBuilder()\n        .setColor(\"Red\")\n        .setDescription(\"<:carpi:1040649840394260510> | Bu komutu kullanabilmek i\u00e7in `Y\u00f6netici` yetkisine sahip olmal\u0131s\u0131n!\")\n\n    const ticketkanal = interaction.options.get('kanal')?.channel\n    const logkanal = interaction.options.get('log-kanal\u0131')?.channel\n    const rol = interaction.options.get('yetkili-rol')?.role\n\n    if (!interaction.memberPermissions?.has(\"Administrator\")) return interaction.followUp({ embeds: [yetki] })\n\n    const ticketSystem = db.fetch(`ticketSystem_${interaction.guild?.id}`)\n    const ticketSystemDate: IAFK = db.fetch(`ticketSystemDate_${interaction.guild?.id}`)\n            ", "    const rol = interaction.options.get('yetkili-rol')?.role\n\n    if (!interaction.memberPermissions?.has(\"Administrator\")) return interaction.followUp({ embeds: [yetki] })\n\n    const ticketSystem = db.fetch(`ticketSystem_${interaction.guild?.id}`)\n    const ticketSystemDate: IAFK = db.fetch(`ticketSystemDate_${interaction.guild?.id}`)\n            \n    interface IAFK {\n        date: number\n    }\n    ", "    if (ticketSystem && ticketSystemDate) {\n\n        const date = new EmbedBuilder()\n        .setDescription(`<:carpi:1040649840394260510> | Bu sistem <t:${parseInt(`${ticketSystemDate.date / 1000}`)}:R> \u00f6nce a\u00e7\u0131lm\u0131\u015f!`)\n    \n    return interaction.followUp({ embeds: [date] })\n    }\n\n    const category = await interaction.guild?.channels.create({\n        name: 'Destek Talepleri',\n        type: Discord.ChannelType.GuildCategory,\n        permissionOverwrites: [\n          {\n            id: interaction.guild?.id,\n            deny: [Discord.PermissionsBitField.Flags.ViewChannel],\n          },\n        ],\n      });    \n\n    const basarili = new EmbedBuilder()\n        .setColor(\"Green\")\n        .setDescription(`<:tik:1039607067729727519> | __**Destek Sistemi**__ ba\u015far\u0131yla ayarland\u0131!\\n\\n<:kanal:1040649841996464139> Destek Kanal\u0131: ${ticketkanal}\\n<:kanal:1040649841996464139> Log Kanal\u0131: ${logkanal}\\n<:bot:1039607042291269703> Yetkili Rol\u00fc: ${rol}`)\n        db.set(`ticketKanal_${interaction.guild?.id}`, logkanal?.id)\n        db.set(`ticketSystem_${interaction.guild?.id}`, { yetkili: rol?.id, ticketchannel: ticketkanal?.id })\n        db.set(`ticketCategory_${interaction.guild?.id}`, { category:  category?.id, log: logkanal?.id });\n        db.set(`ticketSystemDate_${interaction.guild?.id}`, { date: Date.now() })\n\n        const menu = new Discord.EmbedBuilder()\n        .setColor(\"#000000\")\n        .setTitle(\"<:soru:1039607065045385256> | Destek talebi nas\u0131l a\u00e7abilirim?\")\n        .setDescription(\"> A\u015fa\u011f\u0131daki **Destek Talebi Olu\u015ftur** butonuna basarak destek talebi olu\u015fturabilirsin!\")\n        .setFooter({ text: \"Silex\" })\n\n        const channelDB: IAFK = db.fetch(`ticketSystem_${interaction.guild?.id}`);\n        const channel = interaction.guild?.channels.cache.get(channelDB.ticketchannel)\n\n            ", "        interface IAFK {\n            ticketchannel: string\n        }\n        if(channel && channel.type === ChannelType.GuildText) {\n        \n            channel.send({embeds: [menu], components: [\n                new ActionRowBuilder<ButtonBuilder>().addComponents(\n                    new Discord.ButtonBuilder()\n                    .setEmoji(\"1044325577064190033\")\n                    .setLabel(\"Destek Talebi Olu\u015ftur\")\n                    .setStyle(Discord.ButtonStyle.Secondary)\n                    .setCustomId(\"ticketolustur\"),\n                new Discord.ButtonBuilder()\n                    .setEmoji(\"1039607065045385256\")\n                    .setLabel(\"Nas\u0131l olu\u015fturabilirim?\")\n                    .setStyle(Discord.ButtonStyle.Secondary)\n                    .setCustomId(\"ticketnasilacilir\")\n                )\n            ]})\n\n        }", "    return interaction.followUp({ embeds: [basarili], ephemeral: true }).catch((e) => { })\n\n    }\n}"]}
{"filename": "src/Commands/avatar.ts", "chunked_list": ["import { ActionRowBuilder, ChannelType, ButtonBuilder, ButtonStyle, EmbedBuilder } from \"discord.js\";\nimport db from \"croxydb\";\nimport { Commands } from \"../Interfaces\";\n\nexport const Command : Commands = {\n    name: \"avatar\",\n    description: \"\ud83d\udc99 Birinin Avatar\u0131na Bakars\u0131n!\",\n    options: [\n        {\n            type: 6,", "        {\n            type: 6,\n            name: \"kullan\u0131c\u0131\",\n            description: \"Kullan\u0131c\u0131 belirt.\",\n            required: true\n        }\n    ],\n\n    async execute(client, interaction) {\n        await interaction.deferReply(); ", "    async execute(client, interaction) {\n        await interaction.deferReply(); \n\n        const member = interaction.options.getUser('kullan\u0131c\u0131')\n\n        const embed = new EmbedBuilder()\n        .setTitle(`${member?.username} adl\u0131 kullan\u0131c\u0131n\u0131n avatar\u0131!`)\n        .setImage(`${member?.avatarURL()}`)\n\n        interaction.followUp({", "\n        interaction.followUp({\n            embeds:[\n                embed\n            ],\n        })\n    }\n}"]}
{"filename": "src/Commands/istatistik.ts", "chunked_list": ["import { ActionRowBuilder, ChannelType, ButtonBuilder, ButtonStyle, EmbedBuilder } from \"discord.js\";\nimport { codeBlock } from \"discord.js\";\nimport { Commands } from \"../Interfaces\";\nimport moment from \"moment\";\n\nexport const Command : Commands = {\n    name: \"istatistik\",\n    description: \"\ud83d\udc99 Botun istatisti\u011fini g\u00f6r\u00fcrs\u00fcn!\",\n\n    async execute(client, interaction) {", "\n    async execute(client, interaction) {\n        const date : number = Date.now();\n        let members = client.guilds.cache.reduce((a, b) => a + b.memberCount, 0).toLocaleString()\n        await interaction.deferReply();\n\n        const row = new ActionRowBuilder()\n        .addComponents(\n        new ButtonBuilder()\n        .setLabel(\"Yenile\")", "        new ButtonBuilder()\n        .setLabel(\"Yenile\")\n        .setEmoji(\"1039607071093567658\")\n        .setStyle(ButtonStyle.Secondary)\n        .setCustomId(\"yenile\")\n        )\n\n        interaction.followUp({ embeds: [\n            new EmbedBuilder()\n            .addFields([", "            new EmbedBuilder()\n            .addFields([\n                {\n                    name: \"Discord API;\",\n                    value: `${codeBlock(\"yaml\", `${client.ws.ping}ms`)}`,\n                    inline: true\n                },\n                {\n                    name: \"Mesaj gecikmesi;\",\n                    value: `${codeBlock(\"yaml\", `${(Date.now() - date).toString()}ms`)}`,", "                    name: \"Mesaj gecikmesi;\",\n                    value: `${codeBlock(\"yaml\", `${(Date.now() - date).toString()}ms`)}`,\n                    inline: true\n                },\n            ])\n            .addFields([\n                {\n                    name: \"Sunucu Say\u0131s\u0131:\",\n                    value: `${codeBlock(\"yaml\", `${client.guilds.cache.size}`)}`,\n                    inline: true", "                    value: `${codeBlock(\"yaml\", `${client.guilds.cache.size}`)}`,\n                    inline: true\n                },\n                {\n                    name: \"Kullan\u0131c\u0131 Say\u0131s\u0131;\",\n                    value: `${codeBlock(\"yaml\", `${members}`)}`,\n                    inline: true\n                }\n            ])\n            ],", "            ])\n            ],\n            components: [row] as any })\n    }\n}"]}
{"filename": "src/Commands/mesaj-log.ts", "chunked_list": ["import { ActionRowBuilder, ChannelType, ButtonBuilder, ButtonStyle, EmbedBuilder } from \"discord.js\";\nimport db from \"croxydb\";\nimport Discord from \"discord.js\";\nimport { Commands } from \"../Interfaces\";\n\nexport const Command : Commands = {\n    name:\"mesaj-log\",\n    description: '\ud83d\udc99 Mesaj Log sistemini ayarlars\u0131n!',\n    options: [\n        {", "    options: [\n        {\n            name: \"kanal\",\n            description: \"Mesaj Log kanal\u0131n\u0131 ayarlars\u0131n!\",\n            type: 7,\n            required: true,\n            channel_types: [0]\n        },\n    ],\n", "    ],\n\n    async execute(client, interaction) {\n        await interaction.deferReply({ ephemeral: true });\n\n        const yetki = new Discord.EmbedBuilder()\n        .setColor(\"Red\")\n        .setDescription(\"<:carpi:1040649840394260510> | Bu komutu kullanabilmek i\u00e7in `Kanallar\u0131 Y\u00f6net` yetkisine sahip olmal\u0131s\u0131n!\")\n\n    const MessageLog = interaction.options.get('kanal')?.channel", "\n    const MessageLog = interaction.options.get('kanal')?.channel\n\n    if (!interaction.memberPermissions?.has(\"ManageChannels\")) return interaction.followUp({ embeds: [yetki] })\n\n        db.set(`mesajLog_${interaction.guild?.id}`, { channel: MessageLog?.id })\n\n        return interaction.followUp(\"<:tik:1039607067729727519> | Mesaj Log kanal\u0131 <#\"+MessageLog+\"> olarak ayarland\u0131!\")\n        }\n\n    }"]}
{"filename": "src/Commands/k\u00fcf\u00fcr-engel.ts", "chunked_list": ["import { ActionRowBuilder, ChannelType, ButtonBuilder, ButtonStyle, EmbedBuilder } from \"discord.js\";\nimport db from \"croxydb\";\nimport Discord from \"discord.js\";\nimport { Commands } from \"../Interfaces\";\n\nexport const Command : Commands = {\n    name: \"k\u00fcf\u00fcr-engel\",\n    description: \"\ud83d\udc99 K\u00fcf\u00fcr Engel Sistemini A\u00e7\u0131p Kapat\u0131rs\u0131n!\",\n    options: [    \n      {", "    options: [    \n      {\n      type: 3,\n      name: \"se\u00e7enek\",\n      description: \"Sistemi kapatacak m\u0131s\u0131n yoksa a\u00e7acak m\u0131s\u0131n?\",\n      required: true,\n      choices: [\n        {\n          name: \"A\u00e7\",\n          value: \"ac\"", "          name: \"A\u00e7\",\n          value: \"ac\"\n        },\n        {\n          name: \"Kapat\",\n          value: \"kapat\"\n        }\n      ]\n    }\n  ],", "    }\n  ],\n\n    async execute(client, interaction) {\n      await interaction.deferReply({ ephemeral: true });\n        const kufurEngelSystemTrue = interaction.options.get(\"se\u00e7enek\")?.value\n        const kufurEngelSystem = db.fetch(`kufurengel_${interaction.guild?.id}`)\n\n        switch(kufurEngelSystemTrue) {\n            case \"ac\": {\n                interface IAFK {\n                    date: number\n                }\n                const yetki = new Discord.EmbedBuilder()\n                .setColor(\"Red\")\n                .setDescription(\"<:carpi:1040649840394260510> | Bu komutu kullanabilmek i\u00e7in `Y\u00f6netici` yetkisine sahip olmal\u0131s\u0131n!\")\n        ", "        switch(kufurEngelSystemTrue) {\n            case \"ac\": {\n                interface IAFK {\n                    date: number\n                }\n                const yetki = new Discord.EmbedBuilder()\n                .setColor(\"Red\")\n                .setDescription(\"<:carpi:1040649840394260510> | Bu komutu kullanabilmek i\u00e7in `Y\u00f6netici` yetkisine sahip olmal\u0131s\u0131n!\")\n        \n              if (!interaction.memberPermissions?.has(\"Administrator\")) return interaction.followUp({ embeds: [yetki] })\n              const kufurEngelSystem = db.fetch(`kufurengel_${interaction.guild?.id}`)\n              const kufurEngelSystemDate: IAFK = db.fetch(`kufurengelDate_${interaction.guild?.id}`)\n              ", "              if (!interaction.memberPermissions?.has(\"Administrator\")) return interaction.followUp({ embeds: [yetki] })\n              const kufurEngelSystem = db.fetch(`kufurengel_${interaction.guild?.id}`)\n              const kufurEngelSystemDate: IAFK = db.fetch(`kufurengelDate_${interaction.guild?.id}`)\n              \n              if (kufurEngelSystem && kufurEngelSystemDate) {\n                  const date = new EmbedBuilder()\n                  .setDescription(`<:carpi:1040649840394260510> | Bu sistem <t:${parseInt(`${kufurEngelSystemDate.date / 1000}`)}:R> \u00f6nce a\u00e7\u0131lm\u0131\u015f!`)\n              \n              return interaction.followUp({ embeds: [date] })\n              }\n              db.set(`kufurengel_${interaction.guild?.id}`, true)\n              db.set(`kufurengelDate_${interaction.guild?.id}`, { date: Date.now() })\n              return interaction.followUp({ content: \"<:tik:1039607067729727519> | Ba\u015far\u0131l\u0131 bir \u015fekilde sistem a\u00e7\u0131ld\u0131!\" });\n            }\n        \n            case \"kapat\": {\n              const yetki = new Discord.EmbedBuilder()\n              .setColor(\"Red\")\n              .setDescription(\"<:carpi:1040649840394260510> | Bu komutu kullanabilmek i\u00e7in `Y\u00f6netici` yetkisine sahip olmal\u0131s\u0131n!\")\n      ", "            if (!interaction.memberPermissions?.has(\"Administrator\")) return interaction.followUp({ embeds: [yetki] })\n              if(!kufurEngelSystem) return interaction.followUp({ content: \"<:carpi:1040649840394260510> | Bu sistem zaten kapal\u0131?\" });\n        \n              db.delete(`kufurengel_${interaction.guild?.id}`, true)\n              db.delete(`kufurengelDate_${interaction.guild?.id}`, true)\n              return interaction.followUp({ content: \"<:tik:1039607067729727519> | Ba\u015far\u0131l\u0131 bir \u015fekilde sistem kapat\u0131ld\u0131!\" });\n            }\n          }\n    }\n}"]}
{"filename": "src/Commands/saya\u00e7.ts", "chunked_list": ["import { ActionRowBuilder, ChannelType, ButtonBuilder, ButtonStyle, EmbedBuilder } from \"discord.js\";\nimport db from \"croxydb\";\nimport Discord from \"discord.js\";\nimport { Commands } from \"../Interfaces\";\n\nexport const Command : Commands = {\n    name:\"saya\u00e7\",\n    description: '\ud83d\udc99 Saya\u00e7 sistemini ayarlars\u0131n!',\n    options: [\n        {", "    options: [\n        {\n            name: \"kanal\",\n            description: \"Saya\u00e7 kanal\u0131n\u0131 ayarlars\u0131n!\",\n            type: 7,\n            required: true,\n            channel_types: [0]\n        },\n    ],\n", "    ],\n\n    async execute(client, interaction) {\n        await interaction.deferReply({ ephemeral: true });\n\n        const yetki = new Discord.EmbedBuilder()\n        .setColor(\"Red\")\n        .setDescription(\"<:carpi:1040649840394260510> | Bu komutu kullanabilmek i\u00e7in `Kanallar\u0131 Y\u00f6net` yetkisine sahip olmal\u0131s\u0131n!\")\n\n    const sayacChannel = interaction.options.get('kanal')?.channel", "\n    const sayacChannel = interaction.options.get('kanal')?.channel\n\n    if (!interaction.memberPermissions?.has(\"ManageChannels\")) return interaction.followUp({ embeds: [yetki] })\n\n        db.set(`sayac_${interaction.guild?.id}`, { channel: sayacChannel?.id })\n\n        return interaction.followUp(\"<:tik:1039607067729727519> | Saya\u00e7 kanal\u0131 <#\"+sayacChannel+\"> olarak ayarland\u0131!\")\n        }\n\n    }"]}
{"filename": "src/Commands/kick.ts", "chunked_list": ["import { ActionRowBuilder, ChannelType, ButtonBuilder, ButtonStyle, EmbedBuilder, PermissionsBitField } from \"discord.js\";\nimport db from \"croxydb\";\nimport Discord from \"discord.js\";\nimport { Commands } from \"../Interfaces\";\n\nexport const Command : Commands = {\n    name: \"kick\",\n    description: '\ud83d\udc99 Kullan\u0131c\u0131y\u0131 Sunucudan Atars\u0131n.',\n    options: [\n        {", "    options: [\n        {\n            name:\"kullan\u0131c\u0131\",\n            description:\"Yasaklan\u0131cak Kullan\u0131c\u0131y\u0131 Se\u00e7in.\",\n            type:6,\n            required:true\n        },\n    ],\n\n    async execute(client, interaction) {", "\n    async execute(client, interaction) {\n        await interaction.deferReply({ ephemeral: true });\n\n        const member = interaction.options.getUser('kullan\u0131c\u0131')\n\n        const yetki = new Discord.EmbedBuilder()\n        .setColor(\"Red\")\n        .setDescription(\"<:carpi:1040649840394260510> | Bu komutu kullanabilmek i\u00e7in `\u00dcyeleri At` yetkisine sahip olmal\u0131s\u0131n!\")\n\n    if (!interaction.memberPermissions?.has(\"KickMembers\")) return interaction.followUp({ embeds: [yetki] })\n        \n        interaction.guild?.members.kick(`${member?.id}`)\n\n        interaction.followUp(`<:tik:1039607067729727519> | Ba\u015far\u0131yla \u00dcyeyi Att\u0131m!`)\n    }\n}", "        .setDescription(\"<:carpi:1040649840394260510> | Bu komutu kullanabilmek i\u00e7in `\u00dcyeleri At` yetkisine sahip olmal\u0131s\u0131n!\")\n\n    if (!interaction.memberPermissions?.has(\"KickMembers\")) return interaction.followUp({ embeds: [yetki] })\n        \n        interaction.guild?.members.kick(`${member?.id}`)\n\n        interaction.followUp(`<:tik:1039607067729727519> | Ba\u015far\u0131yla \u00dcyeyi Att\u0131m!`)\n    }\n}"]}
{"filename": "src/Commands/g\u00f6rsel-engel-s\u0131f\u0131rla.ts", "chunked_list": ["import { ActionRowBuilder, ChannelType, ButtonBuilder, ButtonStyle, EmbedBuilder } from \"discord.js\";\nimport db from \"croxydb\";\nimport Discord from \"discord.js\";\nimport { Commands } from \"../Interfaces\";\n\nexport const Command : Commands = {\n    name:\"g\u00f6rsel-engel-s\u0131f\u0131rla\",\n    description: '\ud83d\udc99 G\u00f6rsel engel sistemini s\u0131f\u0131rlars\u0131n!',\n    options: [],\n", "    options: [],\n\n    async execute(client, interaction) {\n        await interaction.deferReply({ ephemeral: true });\n\n        const yetki = new Discord.EmbedBuilder()\n        .setColor(\"Red\")\n        .setDescription(\"<:carpi:1040649840394260510> | Bu komutu kullanabilmek i\u00e7in `Kanallar\u0131 Y\u00f6net` yetkisine sahip olmal\u0131s\u0131n!\")\n\n    if (!interaction.memberPermissions?.has(\"ManageChannels\")) return interaction.followUp({ embeds: [yetki] })\n\n        db.delete(`g\u00f6rselengel.${interaction.guild?.id}`, true)\n\n        return interaction.followUp(\"<:tik:1039607067729727519> | G\u00f6rsel Engel ba\u015far\u0131yla kapat\u0131ld\u0131!\")\n\n        }\n\n    }", "\n    if (!interaction.memberPermissions?.has(\"ManageChannels\")) return interaction.followUp({ embeds: [yetki] })\n\n        db.delete(`g\u00f6rselengel.${interaction.guild?.id}`, true)\n\n        return interaction.followUp(\"<:tik:1039607067729727519> | G\u00f6rsel Engel ba\u015far\u0131yla kapat\u0131ld\u0131!\")\n\n        }\n\n    }"]}
{"filename": "src/Commands/g\u00f6rsel-engel.ts", "chunked_list": ["import { ActionRowBuilder, ChannelType, ButtonBuilder, ButtonStyle, EmbedBuilder } from \"discord.js\";\nimport db from \"croxydb\";\nimport Discord from \"discord.js\";\nimport { Commands } from \"../Interfaces\";\n\nexport const Command : Commands = {\n    name:\"g\u00f6rsel-engel\",\n    description: '\ud83d\udc99 G\u00f6rsel engel sistemini ayarlars\u0131n!',\n    options: [\n        {", "    options: [\n        {\n            name: \"kanal\",\n            description: \"G\u00f6rsel engel kanal\u0131n\u0131 ayarlars\u0131n!\",\n            type: 7,\n            required: true,\n            channel_types: [0]\n        },\n    ],\n", "    ],\n\n    async execute(client, interaction) {\n        await interaction.deferReply({ ephemeral: true });\n\n        const yetki = new Discord.EmbedBuilder()\n        .setColor(\"Red\")\n        .setDescription(\"<:carpi:1040649840394260510> | Bu komutu kullanabilmek i\u00e7in `Kanallar\u0131 Y\u00f6net` yetkisine sahip olmal\u0131s\u0131n!\")\n\n    const gorselEngelChannel = interaction.options.get('kanal')?.channel", "\n    const gorselEngelChannel = interaction.options.get('kanal')?.channel\n\n    if (!interaction.memberPermissions?.has(\"ManageChannels\")) return interaction.followUp({ embeds: [yetki] })\n\n        db.set(`g\u00f6rselengel.${interaction.guild?.id}`, gorselEngelChannel?.id)\n\n        return interaction.followUp(\"<:tik:1039607067729727519> | <#\"+gorselEngelChannel+\"> kanal\u0131nda sadece gif ve resimlere izin verece\u011fim!\")\n\n        }\n\n    }"]}
{"filename": "src/Commands/destek-sistemi-s\u0131f\u0131rla.ts", "chunked_list": ["import { ActionRowBuilder, ChannelType, ButtonBuilder, ButtonStyle, EmbedBuilder } from \"discord.js\";\nimport db from \"croxydb\";\nimport Discord from \"discord.js\";\nimport { Commands } from \"../Interfaces\";\n\nexport const Command : Commands = {\n    name: \"destek-sistemi-s\u0131f\u0131rla\",\n    description: \"\ud83d\udc99 Destek sistemini s\u0131f\u0131rlars\u0131n!\",\n    options: [],\n", "    options: [],\n\n    async execute(client, interaction) {\n        await interaction.deferReply({ ephemeral: true });\n\n        const yetki = new Discord.EmbedBuilder()\n        .setColor(\"Red\")\n        .setDescription(\"<:carpi:1040649840394260510> | Bu komutu kullanabilmek i\u00e7in `Y\u00f6netici` yetkisine sahip olmal\u0131s\u0131n!\")\n\n    if (!interaction.memberPermissions?.has(\"Administrator\")) return interaction.followUp({ embeds: [yetki] })\n\n    const basarili = new EmbedBuilder()\n    .setColor(\"Green\")\n    .setDescription(`<:tik:1039607067729727519> | __**Destek Sistemi**__ ba\u015far\u0131yla s\u0131f\u0131rland\u0131!`)    \n\n    db.delete(`ticketKanal_${interaction.guild?.id}`, true)\n    db.delete(`ticketSystem_${interaction.guild?.id}`, true)\n    db.delete(`ticketCategory_${interaction.guild?.id}`, true)\n    db.delete(`ticketSystemDate_${interaction.guild?.id}`, true)\n    db.delete(`ticketLvl_${interaction.guild?.id}`, true)\n", "\n    if (!interaction.memberPermissions?.has(\"Administrator\")) return interaction.followUp({ embeds: [yetki] })\n\n    const basarili = new EmbedBuilder()\n    .setColor(\"Green\")\n    .setDescription(`<:tik:1039607067729727519> | __**Destek Sistemi**__ ba\u015far\u0131yla s\u0131f\u0131rland\u0131!`)    \n\n    db.delete(`ticketKanal_${interaction.guild?.id}`, true)\n    db.delete(`ticketSystem_${interaction.guild?.id}`, true)\n    db.delete(`ticketCategory_${interaction.guild?.id}`, true)\n    db.delete(`ticketSystemDate_${interaction.guild?.id}`, true)\n    db.delete(`ticketLvl_${interaction.guild?.id}`, true)\n", "    return interaction.followUp({ embeds: [basarili] }).catch((e) => { })\n        }\n\n    }"]}
{"filename": "src/Commands/kanal-kapat.ts", "chunked_list": ["import { ActionRowBuilder, ChannelType, ButtonBuilder, ButtonStyle, EmbedBuilder, PermissionsBitField, GuildTextBasedChannel } from \"discord.js\";\nimport db from \"croxydb\";\nimport Discord from \"discord.js\";\nimport { Commands } from \"../Interfaces\";\n\nexport const Command : Commands = {\n    name: \"kanal-kapat\",\n    description: \"\ud83d\udc99 Kanal\u0131 mesaj g\u00f6nderimine kapat\u0131r!\",\n    options: [],\n", "    options: [],\n\n    async execute(client, interaction) {\n        await interaction.deferReply();\n\n        const yetki = new Discord.EmbedBuilder()\n        .setColor(\"Red\")\n        .setDescription(\"<:carpi:1040649840394260510> | Bu komutu kullanabilmek i\u00e7in `Y\u00f6netici` yetkisine sahip olmal\u0131s\u0131n!\")\n\n    if (!interaction.memberPermissions?.has(\"Administrator\")) return interaction.followUp({ embeds: [yetki] })\n\ninteraction.followUp({ embeds: [new EmbedBuilder()\n    .setAuthor({ name: \"Merhaba, Ben Silex!\" })\n    .setColor(\"#2F3136\")\n    .setDescription(\"> A\u015fa\u011f\u0131daki butona basarak kanala mesaj yaz\u0131lmas\u0131n\u0131 kapatabilirsin.\")],\n    components: [\n        new ActionRowBuilder<ButtonBuilder>().addComponents(\n            new ButtonBuilder()\n            .setLabel(`Kanal\u0131 kapat.`)\n            .setCustomId(`kanalkapat`)\n            .setStyle(ButtonStyle.Secondary)\n        )\n    ] })\n\n    }\n};", "\n    if (!interaction.memberPermissions?.has(\"Administrator\")) return interaction.followUp({ embeds: [yetki] })\n\ninteraction.followUp({ embeds: [new EmbedBuilder()\n    .setAuthor({ name: \"Merhaba, Ben Silex!\" })\n    .setColor(\"#2F3136\")\n    .setDescription(\"> A\u015fa\u011f\u0131daki butona basarak kanala mesaj yaz\u0131lmas\u0131n\u0131 kapatabilirsin.\")],\n    components: [\n        new ActionRowBuilder<ButtonBuilder>().addComponents(\n            new ButtonBuilder()\n            .setLabel(`Kanal\u0131 kapat.`)\n            .setCustomId(`kanalkapat`)\n            .setStyle(ButtonStyle.Secondary)\n        )\n    ] })\n\n    }\n};"]}
{"filename": "src/Commands/mesaj-log-s\u0131f\u0131rla.ts", "chunked_list": ["import { ActionRowBuilder, ChannelType, ButtonBuilder, ButtonStyle, EmbedBuilder } from \"discord.js\";\nimport db from \"croxydb\";\nimport Discord from \"discord.js\";\nimport { Commands } from \"../Interfaces\";\n\nexport const Command : Commands = {\n    name:\"mesaj-log-s\u0131f\u0131rla\",\n    description: '\ud83d\udc99 Mesaj Log sistemini s\u0131f\u0131rlars\u0131n!',\n    options: [],\n", "    options: [],\n\n    async execute(client, interaction) {\n        await interaction.deferReply({ ephemeral: true });\n\n        const yetki = new Discord.EmbedBuilder()\n        .setColor(\"Red\")\n        .setDescription(\"<:carpi:1040649840394260510> | Bu komutu kullanabilmek i\u00e7in `Kanallar\u0131 Y\u00f6net` yetkisine sahip olmal\u0131s\u0131n!\")\n\n    if (!interaction.memberPermissions?.has(\"ManageChannels\")) return interaction.followUp({ embeds: [yetki] })\n\n        db.set(`mesajLog_${interaction.guild?.id}`, true)\n\n        return interaction.followUp(\"<:tik:1039607067729727519> | Mesaj log kanal\u0131 s\u0131f\u0131rland\u0131!\")\n        }\n\n    }", "\n    if (!interaction.memberPermissions?.has(\"ManageChannels\")) return interaction.followUp({ embeds: [yetki] })\n\n        db.set(`mesajLog_${interaction.guild?.id}`, true)\n\n        return interaction.followUp(\"<:tik:1039607067729727519> | Mesaj log kanal\u0131 s\u0131f\u0131rland\u0131!\")\n        }\n\n    }"]}
{"filename": "src/Commands/ban.ts", "chunked_list": ["import { ActionRowBuilder, ChannelType, ButtonBuilder, ButtonStyle, EmbedBuilder, PermissionsBitField } from \"discord.js\";\nimport db from \"croxydb\";\nimport Discord from \"discord.js\";\nimport { Commands } from \"../Interfaces\";\n\nexport const Command : Commands = {\n    name: \"ban\",\n    description: \"\ud83d\udc99 Kullan\u0131c\u0131y\u0131 Sunucudan Yasaklars\u0131n.\",\n    options: [\n        {", "    options: [\n        {\n            name:\"kullan\u0131c\u0131\",\n            description:\"Yasaklan\u0131cak Kullan\u0131c\u0131y\u0131 Se\u00e7in.\",\n            type:6,\n            required:true\n        },\n        {\n            name:\"sebep\",\n            description:\"Hangi Sebepten dolay\u0131 yasaklan\u0131cak?\",", "            name:\"sebep\",\n            description:\"Hangi Sebepten dolay\u0131 yasaklan\u0131cak?\",\n            type:3,\n            required:true\n        },\n    ],\n\n    async execute(client, interaction) {\n        await interaction.deferReply({ ephemeral: true });\n", "        await interaction.deferReply({ ephemeral: true });\n\n        const member = interaction.options.getUser('kullan\u0131c\u0131')\n        const sebep = interaction.options.get(\"sebep\")?.value\n        const yetki = new Discord.EmbedBuilder()\n        .setColor(\"Red\")\n        .setDescription(\"<:carpi:1040649840394260510> | Bu komutu kullanabilmek i\u00e7in `\u00dcyeleri Banla` yetkisine sahip olmal\u0131s\u0131n!\")\n\n    if (!interaction.memberPermissions?.has(\"BanMembers\")) return interaction.followUp({ embeds: [yetki] })\n        \n        interaction.guild?.members.ban(`${member?.id}`, { reason: `${sebep}`})\n\n        interaction.followUp(`<:tik:1039607067729727519> | Ba\u015far\u0131yla \u00dcyeyi Yasaklad\u0131m!`)\n    }\n}", "    if (!interaction.memberPermissions?.has(\"BanMembers\")) return interaction.followUp({ embeds: [yetki] })\n        \n        interaction.guild?.members.ban(`${member?.id}`, { reason: `${sebep}`})\n\n        interaction.followUp(`<:tik:1039607067729727519> | Ba\u015far\u0131yla \u00dcyeyi Yasaklad\u0131m!`)\n    }\n}"]}
{"filename": "src/Commands/butonrol.ts", "chunked_list": ["import { ActionRowBuilder, ChannelType, ButtonBuilder, ButtonStyle, EmbedBuilder } from \"discord.js\";\nimport db from \"croxydb\";\nimport Discord from \"discord.js\";\nimport { Commands } from \"../Interfaces\";\n\nexport const Command : Commands = {\n    name: \"buton-rol\",\n    description: \"\ud83d\udc99 Rol alma sistemini ayarlars\u0131n!\",\n    options: [\n        {", "    options: [\n        {\n            name:\"rol\",\n            description:\"L\u00fctfen bir rol etiketle!\",\n            type:8,\n            required:true\n        },\n        {\n            type: 3,\n            name: \"yaz\u0131\",", "            type: 3,\n            name: \"yaz\u0131\",\n            description: \"L\u00fctfen bir embed mesaj yaz\u0131s\u0131 gir!\",\n            required: true\n        }\n    ],\n\n    async execute(client, interaction) {\n        await interaction.deferReply(); \n", "        await interaction.deferReply(); \n\n        const rol = interaction.options.get(\"rol\")?.role\n        const yaz\u0131 = interaction.options.get(\"yaz\u0131\")?.value\n\n        const yetki = new Discord.EmbedBuilder()\n        .setColor(\"Red\")\n        .setDescription(\"<:carpi:1040649840394260510> | Bu komutu kullanabilmek i\u00e7in `Rolleri Y\u00f6net` yetkisine sahip olmal\u0131s\u0131n!\")\n\n      if (!interaction.memberPermissions?.has(\"ManageRoles\")) return interaction.followUp({ embeds: [yetki] })\n\n        interaction.followUp({ embeds: [\n            new EmbedBuilder()\n            .setTitle(`Silex - Buton Rol Al Sistemi!`)\n            .setDescription(`${yaz\u0131}`)\n            .setColor(\"Blue\")\n            ],\n            components: [\n                new ActionRowBuilder<ButtonBuilder>().addComponents(\n                    new ButtonBuilder()\n                    .setLabel(rol?.name ?? \"Bilinmiyor.\")\n                    .setStyle(ButtonStyle.Secondary)\n                    .setCustomId(`rol`)\n                )\n            ]})\n            db.set(`buton_rol_${interaction.guild?.id}`, {\n                rol:  rol?.id\n            })\n    }\n}", "\n      if (!interaction.memberPermissions?.has(\"ManageRoles\")) return interaction.followUp({ embeds: [yetki] })\n\n        interaction.followUp({ embeds: [\n            new EmbedBuilder()\n            .setTitle(`Silex - Buton Rol Al Sistemi!`)\n            .setDescription(`${yaz\u0131}`)\n            .setColor(\"Blue\")\n            ],\n            components: [\n                new ActionRowBuilder<ButtonBuilder>().addComponents(\n                    new ButtonBuilder()\n                    .setLabel(rol?.name ?? \"Bilinmiyor.\")\n                    .setStyle(ButtonStyle.Secondary)\n                    .setCustomId(`rol`)\n                )\n            ]})\n            db.set(`buton_rol_${interaction.guild?.id}`, {\n                rol:  rol?.id\n            })\n    }\n}"]}
{"filename": "src/Commands/kanal-a\u00e7.ts", "chunked_list": ["import { ActionRowBuilder, ChannelType, ButtonBuilder, ButtonStyle, EmbedBuilder, PermissionsBitField, GuildTextBasedChannel } from \"discord.js\";\nimport db from \"croxydb\";\nimport Discord from \"discord.js\";\nimport { Commands } from \"../Interfaces\";\n\nexport const Command : Commands = {\n    name: \"kanal-a\u00e7\",\n    description: \"\ud83d\udc99 Kanal\u0131 mesaj g\u00f6nderimine a\u00e7ar!\",\n    options: [],\n", "    options: [],\n\n    async execute(client, interaction) {\n        await interaction.deferReply();\n\n        const yetki = new Discord.EmbedBuilder()\n        .setColor(\"Red\")\n        .setDescription(\"<:carpi:1040649840394260510> | Bu komutu kullanabilmek i\u00e7in `Y\u00f6netici` yetkisine sahip olmal\u0131s\u0131n!\")\n\n    if (!interaction.memberPermissions?.has(\"Administrator\")) return interaction.followUp({ embeds: [yetki] })\n\ninteraction.followUp({ embeds: [new EmbedBuilder()\n    .setAuthor({ name: \"Merhaba, Ben Silex!\" })\n    .setColor(\"#2F3136\")\n    .setDescription(\"> A\u015fa\u011f\u0131daki butona basarak kanala mesaj yaz\u0131lmas\u0131n\u0131 a\u00e7abilirsin.\")],\n    components: [\n        new ActionRowBuilder<ButtonBuilder>().addComponents(\n            new ButtonBuilder()\n            .setLabel(`Kanal\u0131 a\u00e7.`)\n            .setCustomId(`kanalac`)\n            .setStyle(ButtonStyle.Secondary)\n        )\n    ] })\n\n    }\n};", "\n    if (!interaction.memberPermissions?.has(\"Administrator\")) return interaction.followUp({ embeds: [yetki] })\n\ninteraction.followUp({ embeds: [new EmbedBuilder()\n    .setAuthor({ name: \"Merhaba, Ben Silex!\" })\n    .setColor(\"#2F3136\")\n    .setDescription(\"> A\u015fa\u011f\u0131daki butona basarak kanala mesaj yaz\u0131lmas\u0131n\u0131 a\u00e7abilirsin.\")],\n    components: [\n        new ActionRowBuilder<ButtonBuilder>().addComponents(\n            new ButtonBuilder()\n            .setLabel(`Kanal\u0131 a\u00e7.`)\n            .setCustomId(`kanalac`)\n            .setStyle(ButtonStyle.Secondary)\n        )\n    ] })\n\n    }\n};"]}
{"filename": "src/Commands/yeni-hesap-engel.ts", "chunked_list": ["import { ActionRowBuilder, ChannelType, ButtonBuilder, ButtonStyle, EmbedBuilder } from \"discord.js\";\nimport db from \"croxydb\";\nimport Discord from \"discord.js\";\nimport { Commands } from \"../Interfaces\";\n\nexport const Command : Commands = {\n    name: \"yeni-hesap-engel\",\n    description: \"\ud83d\udc99 Yeni hesap engel sistemini ayarlars\u0131n!\",\n    options: [\n        {", "    options: [\n        {\n            name: \"log-kanal\u0131\",\n            description: \"Yeni hesap olan \u00fcyeler engellendi\u011finde mesaj gidecek kanal.\",\n            type: 7,\n            required: true,\n            channel_types: [0]\n        },\n        {\n            name: \"cezal\u0131-rol\u00fc\",", "        {\n            name: \"cezal\u0131-rol\u00fc\",\n            description: \"Yeni hesap olan \u00fcyelere verilecek rol.\",\n            type: 8,\n            required: true,\n        },\n    ],\n\n    async execute(client, interaction) {\n        await interaction.deferReply({ ephemeral: true });", "    async execute(client, interaction) {\n        await interaction.deferReply({ ephemeral: true });\n\n        const yetki = new Discord.EmbedBuilder()\n        .setColor(\"Red\")\n        .setDescription(\"<:carpi:1040649840394260510> | Bu komutu kullanabilmek i\u00e7in `Y\u00f6netici` yetkisine sahip olmal\u0131s\u0131n!\")\n\n    const logkanal = interaction.options.get('log-kanal\u0131')?.channel\n    const cezal\u0131Rol: any = await interaction.guild?.roles.fetch(`${interaction.options.get('cezal\u0131-rol\u00fc', true)?.role?.id}`)\n\n    if (!interaction.memberPermissions?.has(\"Administrator\")) return interaction.followUp({ embeds: [yetki] })\n            \n    const basarili = new Discord.EmbedBuilder()\n    .setColor(\"Green\")\n    .setDescription(`${logkanal} **yeni hesap engel** log kanal\u0131 olarak ayarland\u0131,\\n${cezal\u0131Rol} rol\u00fcde cezal\u0131 rol olarak ayarland\u0131.`)\n\n    const pozisyon = new EmbedBuilder()\n    .setColor(\"Red\")\n    .setDescription(`${cezal\u0131Rol} benim rol\u00fcmden y\u00fcksekte!\\n\\n**Sunucu Ayarlar\u0131** -> __**Roller**__ k\u0131sm\u0131ndan rol\u00fcm\u00fc ${cezal\u0131Rol} rol\u00fcn\u00fcn \u00fczerine s\u00fcr\u00fcklemelisin.`)\n", "    const cezal\u0131Rol: any = await interaction.guild?.roles.fetch(`${interaction.options.get('cezal\u0131-rol\u00fc', true)?.role?.id}`)\n\n    if (!interaction.memberPermissions?.has(\"Administrator\")) return interaction.followUp({ embeds: [yetki] })\n            \n    const basarili = new Discord.EmbedBuilder()\n    .setColor(\"Green\")\n    .setDescription(`${logkanal} **yeni hesap engel** log kanal\u0131 olarak ayarland\u0131,\\n${cezal\u0131Rol} rol\u00fcde cezal\u0131 rol olarak ayarland\u0131.`)\n\n    const pozisyon = new EmbedBuilder()\n    .setColor(\"Red\")\n    .setDescription(`${cezal\u0131Rol} benim rol\u00fcmden y\u00fcksekte!\\n\\n**Sunucu Ayarlar\u0131** -> __**Roller**__ k\u0131sm\u0131ndan rol\u00fcm\u00fc ${cezal\u0131Rol} rol\u00fcn\u00fcn \u00fczerine s\u00fcr\u00fcklemelisin.`)\n", "if (cezal\u0131Rol.position >= cezal\u0131Rol.guild.members.me.roles.highest.position) return interaction.followUp({ embeds: [pozisyon], ephemeral: true })\n\n    interaction.followUp({ embeds: [basarili], ephemeral: true }).catch((e) => { })\n\n    db.set(`yeniHesapEngel_${interaction.guild?.id}`, { log: logkanal?.id, rol: cezal\u0131Rol.id })\n\n    }\n}"]}
{"filename": "src/Commands/capslock-koruma.ts", "chunked_list": ["import { ActionRowBuilder, ChannelType, ButtonBuilder, ButtonStyle, EmbedBuilder } from \"discord.js\";\nimport db from \"croxydb\";\nimport Discord from \"discord.js\";\nimport { Commands } from \"../Interfaces\";\n\nexport const Command : Commands = {\n    name: \"capslock-engel\",\n    description: \"\ud83d\udc99 CapsLock Engel Sistemini A\u00e7\u0131p Kapat\u0131rs\u0131n!\",\n    options: [    \n      {", "    options: [    \n      {\n      type: 3,\n      name: \"se\u00e7enek\",\n      description: \"Sistemi kapatacak m\u0131s\u0131n yoksa a\u00e7acak m\u0131s\u0131n?\",\n      required: true,\n      choices: [\n        {\n          name: \"A\u00e7\",\n          value: \"ac\"", "          name: \"A\u00e7\",\n          value: \"ac\"\n        },\n        {\n          name: \"Kapat\",\n          value: \"kapat\"\n        }\n      ]\n    }\n  ],", "    }\n  ],\n\n    async execute(client, interaction) {\n      await interaction.deferReply({ ephemeral: true });\n        const capslockSystemTrue = interaction.options.get(\"se\u00e7enek\")?.value\n        const capslockSystem = db.fetch(`capslockengel_${interaction.guild?.id}`)\n\n        switch(capslockSystemTrue) {\n            case \"ac\": {\n                interface IAFK {\n                    date: number\n                }\n                const yetki = new Discord.EmbedBuilder()\n                .setColor(\"Red\")\n                .setDescription(\"<:carpi:1040649840394260510> | Bu komutu kullanabilmek i\u00e7in `Y\u00f6netici` yetkisine sahip olmal\u0131s\u0131n!\")\n        ", "        switch(capslockSystemTrue) {\n            case \"ac\": {\n                interface IAFK {\n                    date: number\n                }\n                const yetki = new Discord.EmbedBuilder()\n                .setColor(\"Red\")\n                .setDescription(\"<:carpi:1040649840394260510> | Bu komutu kullanabilmek i\u00e7in `Y\u00f6netici` yetkisine sahip olmal\u0131s\u0131n!\")\n        \n              if (!interaction.memberPermissions?.has(\"Administrator\")) return interaction.followUp({ embeds: [yetki] })\n              const capslockSystem = db.fetch(`capslockengel_${interaction.guild?.id}`)\n              const capslockSystemDate: IAFK = db.fetch(`capslockSystemDate_${interaction.guild?.id}`)\n              ", "              if (!interaction.memberPermissions?.has(\"Administrator\")) return interaction.followUp({ embeds: [yetki] })\n              const capslockSystem = db.fetch(`capslockengel_${interaction.guild?.id}`)\n              const capslockSystemDate: IAFK = db.fetch(`capslockSystemDate_${interaction.guild?.id}`)\n              \n              if (capslockSystem && capslockSystemDate) {\n                  const date = new EmbedBuilder()\n                  .setDescription(`<:carpi:1040649840394260510> | Bu sistem <t:${parseInt(`${capslockSystemDate.date / 1000}`)}:R> \u00f6nce a\u00e7\u0131lm\u0131\u015f!`)\n              \n              return interaction.followUp({ embeds: [date] })\n              }\n              db.set(`capslockengel_${interaction.guild?.id}`, true)\n              db.set(`capslockSystemDate_${interaction.guild?.id}`, { date: Date.now() })\n              return interaction.followUp({ content: \"<:tik:1039607067729727519> | Ba\u015far\u0131l\u0131 bir \u015fekilde sistem a\u00e7\u0131ld\u0131!\" });\n            }\n        \n            case \"kapat\": {\n              const yetki = new Discord.EmbedBuilder()\n              .setColor(\"Red\")\n              .setDescription(\"<:carpi:1040649840394260510> | Bu komutu kullanabilmek i\u00e7in `Y\u00f6netici` yetkisine sahip olmal\u0131s\u0131n!\")\n      ", "            if (!interaction.memberPermissions?.has(\"Administrator\")) return interaction.followUp({ embeds: [yetki] })\n              if(!capslockSystem) return interaction.followUp({ content: \"<:carpi:1040649840394260510> | Bu sistem zaten kapal\u0131?\" });\n        \n              db.delete(`capslockengel_${interaction.guild?.id}`, true)\n              db.delete(`capslockSystemDate_${interaction.guild?.id}`, true)\n              return interaction.followUp({ content: \"<:tik:1039607067729727519> | Ba\u015far\u0131l\u0131 bir \u015fekilde sistem kapat\u0131ld\u0131!\" });\n            }\n          }\n    }\n}"]}
{"filename": "src/Commands/resimli-giri\u015f-\u00e7\u0131k\u0131\u015f.ts", "chunked_list": ["import { ActionRowBuilder, ChannelType, ButtonBuilder, ButtonStyle, EmbedBuilder } from \"discord.js\";\nimport db from \"croxydb\";\nimport Discord from \"discord.js\";\nimport { Commands } from \"../Interfaces\";\n\nexport const Command : Commands = {\n    name:\"resimli-giri\u015f-\u00e7\u0131k\u0131\u015f\",\n    description: '\ud83d\udc99 Resimli Giri\u015f \u00c7\u0131k\u0131\u015f sistemini ayarlars\u0131n!',\n    options: [\n        {", "    options: [\n        {\n            name: \"kanal\",\n            description: \"Resimli Giri\u015f \u00c7\u0131k\u0131\u015f kanal\u0131n\u0131 ayarlars\u0131n!\",\n            type: 7,\n            required: true,\n            channel_types: [0]\n        },\n    ],\n", "    ],\n\n    async execute(client, interaction) {\n        await interaction.deferReply({ ephemeral: true });\n\n        const yetki = new Discord.EmbedBuilder()\n        .setColor(\"Red\")\n        .setDescription(\"<:carpi:1040649840394260510> | Bu komutu kullanabilmek i\u00e7in `Kanallar\u0131 Y\u00f6net` yetkisine sahip olmal\u0131s\u0131n!\")\n\n    const resimliGiris = interaction.options.get('kanal')?.channel", "\n    const resimliGiris = interaction.options.get('kanal')?.channel\n\n    if (!interaction.memberPermissions?.has(\"ManageChannels\")) return interaction.followUp({ embeds: [yetki] })\n\n        db.set(`canvaskanal_${interaction.guild?.id}`, { channel: resimliGiris?.id })\n\n        return interaction.followUp(\"<:tik:1039607067729727519> | Resimli Giri\u015f \u00c7\u0131k\u0131\u015f <#\"+resimliGiris+\"> olarak ayarland\u0131!\")\n        }\n\n    }"]}
{"filename": "src/Events/guildMemberAdd.ts", "chunked_list": ["import { Events } from \"../Interfaces\";\nimport { Message, EmbedBuilder, GuildMember, GuildBasedChannel, ChannelType, ActionRowBuilder, ButtonBuilder, AttachmentBuilder } from \"discord.js\";\nimport Discord from \"discord.js\";\nimport db from \"croxydb\";\nimport config from \"../config.json\";\nimport { time } from \"console\";\nimport Canvas from \"canvas\";\n\nexport const Event : Events = {\n    name: \"guildMemberAdd\",", "export const Event : Events = {\n    name: \"guildMemberAdd\",\n\n    async execute(client, member: GuildMember) {\n        \n        let sayacx: { channel: string } = db.fetch(`sayac_${member.guild.id}`);\n        const sayacChannel = member.guild?.channels.cache.get(sayacx.channel)\n        if(sayacx) {\n        if(sayacChannel && sayacChannel.type === ChannelType.GuildText) {\n        \n            sayacChannel.send({ embeds: [{ description:  `:inbox_tray: | ${member} sunucuya kat\u0131ld\u0131! Sunucumuz **${member.guild.memberCount}** ki\u015fi oldu.`, color: 0x2F3136 }] }).catch(() => {});\n\n        }\n    }\n\n        let resimliGiris: { channel: string } = db.fetch(`canvaskanal_${member.guild.id}`);\n        const resimliGirisChannel = member.guild?.channels.cache.get(resimliGiris.channel)", "        if(sayacChannel && sayacChannel.type === ChannelType.GuildText) {\n        \n            sayacChannel.send({ embeds: [{ description:  `:inbox_tray: | ${member} sunucuya kat\u0131ld\u0131! Sunucumuz **${member.guild.memberCount}** ki\u015fi oldu.`, color: 0x2F3136 }] }).catch(() => {});\n\n        }\n    }\n\n        let resimliGiris: { channel: string } = db.fetch(`canvaskanal_${member.guild.id}`);\n        const resimliGirisChannel = member.guild?.channels.cache.get(resimliGiris.channel)\n        if(resimliGiris) { \n\n            const canvas = Canvas.createCanvas(648, 387);\n            const ctx = canvas.getContext(\"2d\");\n\n            const background = await Canvas.loadImage(\"https://cdn.discordapp.com/attachments/1059089831604531243/1067877929251508376/gelen.png\");\n\n            ctx.drawImage(background, 0, 0, canvas.width, canvas.height);\n            ctx.strokeStyle = \"#3c3c3c\";\n            ctx.strokeRect(0, 0, canvas.width, canvas.height);\n\n            ctx.fillStyle = `#D3D3D3`;\n            ctx.font = `37px \"Warsaw\"`;\n            ctx.textAlign = \"center\";\n            ctx.fillText(`${member.user.tag}`, 320, 300);\n\n            var avatar1 = member.displayAvatarURL()\n            let avatarURL: string | any = await Canvas.loadImage(avatar1.replace(\"webp\", \"jpg\"));      \n\n            let boyut = 85, x = 325.5, y = 161;\n            ctx.beginPath();\n            ctx.arc(x, y, boyut, 0, 2 * Math.PI, false);\n            ctx.clip();\n            ctx.drawImage(avatarURL, (x - boyut), (y - boyut), (boyut * 2), (boyut * 2));\n      \n            const resimliGiris = new AttachmentBuilder(canvas.toBuffer(), { name: 'giris.png' });\n", "        if(resimliGiris) { \n\n            const canvas = Canvas.createCanvas(648, 387);\n            const ctx = canvas.getContext(\"2d\");\n\n            const background = await Canvas.loadImage(\"https://cdn.discordapp.com/attachments/1059089831604531243/1067877929251508376/gelen.png\");\n\n            ctx.drawImage(background, 0, 0, canvas.width, canvas.height);\n            ctx.strokeStyle = \"#3c3c3c\";\n            ctx.strokeRect(0, 0, canvas.width, canvas.height);\n\n            ctx.fillStyle = `#D3D3D3`;\n            ctx.font = `37px \"Warsaw\"`;\n            ctx.textAlign = \"center\";\n            ctx.fillText(`${member.user.tag}`, 320, 300);\n\n            var avatar1 = member.displayAvatarURL()\n            let avatarURL: string | any = await Canvas.loadImage(avatar1.replace(\"webp\", \"jpg\"));      \n\n            let boyut = 85, x = 325.5, y = 161;\n            ctx.beginPath();\n            ctx.arc(x, y, boyut, 0, 2 * Math.PI, false);\n            ctx.clip();\n            ctx.drawImage(avatarURL, (x - boyut), (y - boyut), (boyut * 2), (boyut * 2));\n      \n            const resimliGiris = new AttachmentBuilder(canvas.toBuffer(), { name: 'giris.png' });\n", "            if(resimliGirisChannel && resimliGirisChannel.type === ChannelType.GuildText) {\n\n                resimliGirisChannel.send({ content: `${member} sunucumuza ho\u015fgeldin! Sunucumuz **${member.guild.memberCount}** ki\u015fi oldu.`, files: [resimliGiris] })\n\n                if (member.user.bot) {\n                    resimliGirisChannel.send(`Bu bir bot, ${member.user.tag}`);\n                    }\n            }\n        }\n\n        const yeniHesap = db.get(`yeniHesapEngel_${member.guild.id}`)\n        let yeniHesapx: { log: string } = db.get(`yeniHesapEngel_${member.guild.id}`)\n", "        if (yeniHesap && yeniHesapx) {\n            let logKanal = member.guild?.channels.cache.get(yeniHesapx.log)\n            if (!logKanal) return;\n            let cezal\u0131Rol = yeniHesap.rol\n            if (!cezal\u0131Rol) return;\n    \n            let role: any = member.guild.roles.cache.get(cezal\u0131Rol)\n    \n            await member.roles.add(role).catch(l => {\n    \n                const rolEmbed = new EmbedBuilder()\n                    .setColor(\"Red\")\n                    .setDescription(\"Cezal\u0131 rol\u00fc bulunamad\u0131\u011f\u0131 i\u00e7in **sistem s\u0131f\u0131rland\u0131.**\")\n    ", "            await member.roles.add(role).catch(l => {\n    \n                const rolEmbed = new EmbedBuilder()\n                    .setColor(\"Red\")\n                    .setDescription(\"Cezal\u0131 rol\u00fc bulunamad\u0131\u011f\u0131 i\u00e7in **sistem s\u0131f\u0131rland\u0131.**\")\n    \n                    if(logKanal && logKanal.type === ChannelType.GuildText) {\n\n                        logKanal.send({ embeds: [rolEmbed] })\n        \n                    }\n\n                db.delete(`yeniHesapEngel_${member.guild.id}`, true)\n                return;\n            })\n    ", "            if (role) {\n                const now = new Date().getTime() - (await client.users.fetch(member.id)).createdAt.getTime() < 1296000000\n    \n                if (now) {\n    \n                    if (!logKanal) {\n                        db.delete(`yeniHesapEngel_${member.guild.id}`, true)\n                        return;\n                    }\n    \n                    await member.roles.add(role)\n    \n                    const logEmbed = new EmbedBuilder()\n                        .setAuthor({ name: member.user.tag, iconURL: member.user.displayAvatarURL() })\n                        .setDescription(`${member} adl\u0131 kullan\u0131c\u0131 yeni hesap oldu\u011fu i\u00e7in cezal\u0131 rol\u00fc verildi.`)\n                        .setTimestamp()\n                        .setColor(\"Red\")\n    ", "                        if(logKanal && logKanal.type === ChannelType.GuildText) {\n\n                            logKanal.send({ embeds: [logEmbed] })\n            \n                        }\n\n                }\n            }\n        };\n\n    }\n}"]}
{"filename": "src/Events/messageDelete.ts", "chunked_list": ["import { Events } from \"../Interfaces\";\nimport { Message, EmbedBuilder, GuildMember, GuildBasedChannel, ChannelType, ActionRowBuilder, ButtonBuilder, AttachmentBuilder } from \"discord.js\";\nimport Discord from \"discord.js\";\nimport db from \"croxydb\";\nimport config from \"../config.json\";\nimport { time } from \"console\";\nimport Canvas from \"canvas\";\n\nexport const Event : Events = {\n    name: \"messageDelete\",", "export const Event : Events = {\n    name: \"messageDelete\",\n\n    async execute(client, message: Message) {\n        \n        let MessageLog: { channel: string } = db.fetch(`mesajLog_${message.guild?.id}`);\n        const MessageLogChannel = message.guild?.channels.cache.get(MessageLog.channel)\n        if(MessageLog) {\n        if(MessageLogChannel && MessageLogChannel.type === ChannelType.GuildText) {\n            let me = client.user?.id\n            if (!message.author?.bot) {", "        if(MessageLogChannel && MessageLogChannel.type === ChannelType.GuildText) {\n            let me = client.user?.id\n            if (!message.author?.bot) {\n                if (!message.author) return;\n                if (message.author.id !== me) {\n    \n                    const msg = message.content.slice(0, 1020);\n    \n                    const messageDelete = new EmbedBuilder()\n                        .setColor(\"Red\")\n                        .setDescription(`Mesaj ${message.channel || \"kanal bulunamad\u0131\"} adl\u0131 kanalda silindi`)\n                        .addFields(\n                            { name: \"At\u0131ld\u0131\u011f\u0131 Zaman:\", value: \"<t:\" + Math.floor(Date.now() / 1000) + \":F>\" },\n                            { name: `Kullan\u0131c\u0131:`, value: `<@!${message.author.id || \"\u00fcye bulunamad\u0131\"}> (${message.author.id || \"\u00fcye bulunamad\u0131\"})` },\n                            { name: `Silinen Mesaj:`, value: `\\`${msg || \"Mesaj bulunamad\u0131\"}\\`` }\n                        )\n                        .setTimestamp()\n    ", "                    MessageLogChannel.send({ embeds: [messageDelete] }).catch(e => { })\n                } else {\n                    return;\n                }\n            }\n        }\n    }\n    }\n}"]}
{"filename": "src/Events/ready.ts", "chunked_list": ["import { Events } from \"../Interfaces\";\n\nexport const Event: Events = {\n  name: \"ready\",\n  once: false,\n\n  async execute(client) {\n\n    console.log(`Aktif: ${client.user?.tag}`)\n  ", "    console.log(`Aktif: ${client.user?.tag}`)\n  \n  },\n};"]}
{"filename": "src/Events/messageCreate.ts", "chunked_list": ["import { Events } from \"../Interfaces\";\nimport { Message, EmbedBuilder, PermissionsBitField, GuildTextBasedChannel, ChannelType } from \"discord.js\";\nimport db from \"croxydb\";\nimport Discord from \"discord.js\";\nimport config from \"../config.json\";\nimport { time } from \"console\";\n\nexport const Event : Events = {\n    name: \"messageCreate\",\n", "    name: \"messageCreate\",\n\n    async execute(client, message: Message) {\n        \n        if (db.fetch(`afk_${message.author.id}`)) {\n            \n            interface IAFK {\n                afkDate: number,\n                sebep: string\n            }\n\n        const afkDate: IAFK = db.fetch(`afkDate_${message.author.id}`)\n            const sebep: IAFK  = db.fetch(`afk_${message.author.id}`)\n            ", "            if (afkDate && sebep) {\n                const date = new EmbedBuilder()\n                .setDescription(`${message.author} Ho\u015f geldin! **${sebep.sebep}** sebebiyle <t:${parseInt(`${afkDate.afkDate / 1000}`)}:R> afk'yd\u0131n`)\n                db.delete(`afk_${message.author.id}`, true)\n                db.delete(`afkDate_${message.author.id}`, true)\n            \n            return message.reply({ embeds: [date] })\n            }\n        \n             }\n\n             var kullan\u0131c\u0131 = message.mentions.users.first();", "             interface AFKSEBEP {\n                sebep: string\n             }\n             if (kullan\u0131c\u0131) {\n           \n             const sebep: AFKSEBEP = db.fetch(`afk_${kullan\u0131c\u0131.id}`)\n           \n             if (sebep) {\n               const sebeps = new EmbedBuilder()\n               .setDescription(`<:soru:1039607065045385256> | Etiketledi\u011fin kullan\u0131c\u0131 **${sebep.sebep}** sebebiyle afk modunda!`)\n               message.reply({ embeds: [sebeps] });\n             }\n           }\n", "             if (message.content.length > 4) {\n                if (db.fetch(`capslockengel_${message.guild?.id}`)) {\n                  let caps = message.content.toUpperCase()\n                  if (message.content == caps) {\n                   if (!message.member?.permissions.has(\"Administrator\")) {\n                      if (!message.mentions.users.first()) {\n                       message.delete()\n                        const embed = new EmbedBuilder()\n                        .setTitle(`<:uyari:1040649846400499712> **UYARI!**`)\n                        .setDescription(`\u270b | ${message.author}, Bu sunucuda b\u00fcy\u00fck harf kullan\u0131m\u0131 engelleniyor!`)\n                        .setFooter({text: message.author.username, iconURL: message.author.displayAvatarURL()})\n                        .setTimestamp()\n                        message.channel.send({embeds: [embed]}).then((msg) => setTimeout(() => { msg.delete() }, 3000))\n            }\n           }\n            }\n          }\n         }\n\n         let kanal = db.get(`g\u00f6rselengel.${message.guild?.id}`);", "         if(message.channel.id == kanal){\n           if(!message.attachments.first()){\n       \n             if(message.member?.permissions.has(Discord.PermissionsBitField.Flags.Administrator)) return;\n             if(message.author?.bot) return;\n             message.delete()\n             const embed = new EmbedBuilder()\n             .setColor(\"Random\")\n             .setDescription(`${message.author}, Bu Kanalda Sadece GIF & Resim Atabilirsiniz.`)\n             .setFooter({text: message.author.tag+\" UYARI!\", iconURL: message.author.displayAvatarURL()})\n             .setTimestamp()\n             message.channel.send({embeds: [embed]}).then((msg) => setTimeout(() => { msg.delete() }, 3000))\n       \n           };\n         \n         };\n\n         let kufur = db.fetch(`kufurengel_${message.guild?.id}`)\n    ", "         if(kufur) {\n         const kufurler = [\n           \n           \"amk\",\n           \"pi\u00e7\",\n           \"yarrak\",\n           \"o\u00e7\",\n           \"g\u00f6t\",\n           \"amq\",\n           \"yav\u015fak\",\n           \"amc\u0131k\",\n           \"amc\u0131\",\n           \"orospu\",\n           \"sikim\",\n           \"sikeyim\",\n           \"aq\", \n           \"mk\"\n              \n         ]\n         ", "       if(kufurler.some(alo => message.content.toLowerCase().includes(alo)))\u200a{\n           if(message.member?.permissions.has(Discord.PermissionsBitField.Flags.Administrator)) return;\n           if(message.author?.bot) return;\n     \n       message.delete()\n       message.channel.send(`<:carpi:1040649840394260510> | Hey <@${message.author.id}>, Bu Sunucuda K\u00fcf\u00fcr Engel Sistemi Aktif! `).then((msg) => setTimeout(() => { msg.delete() }, 5000))\n       }\n       }\n\n       const data = db.fetch(`yasakl\u0131_kelime_${message.guild?.id}`)\n       if(data) {", "       if(data) {\n       if(message.member?.permissions.has(Discord.PermissionsBitField.Flags.Administrator)) return;\n       if(message.author?.bot) return;\n       if(data.includes(message.content)) {\n       message.delete()\n       const embed = new EmbedBuilder()\n       .setTitle(`<:uyari:1040649846400499712> **UYARI!**`)\n       .setDescription(`\u270b | ${message.author}, Bu sunucuda bu kelime yasak!`)\n       .setFooter({text: message.author.username, iconURL: message.author.displayAvatarURL()})\n       .setTimestamp()\n       message.channel.send({ embeds: [embed] }).then((msg) => setTimeout(() => { msg.delete() }, 5000))\n       }\n     }\n\n    }\n}"]}
{"filename": "src/Events/interactionCreate.ts", "chunked_list": ["import { CommandInteraction, EmbedBuilder, codeBlock, ActionRowBuilder, ButtonBuilder, ButtonStyle, ModalActionRowComponentBuilder, Role, PermissionsBitField, User, ChannelType, GuildTextChannelResolvable, GuildTextBasedChannel } from \"discord.js\";\nimport db from \"croxydb\";\nimport Discord from \"discord.js\";\nimport { Events } from \"../Interfaces\";\n\nexport const Event : Events = {\n    name: \"interactionCreate\",\n\n    async execute(client, interaction) {\n        if(interaction.isChatInputCommand()) {\n            const cmd = client.commands.get(interaction.commandName);\n", "    async execute(client, interaction) {\n        if(interaction.isChatInputCommand()) {\n            const cmd = client.commands.get(interaction.commandName);\n\n            if(cmd) {\n                try {\n                    cmd.execute(client, interaction)\n                } catch (err) {\n                    interaction.followUp({ content: \"Tebrikler, bir hata buldun! bunu geli\u015ftiricilerimize s\u00f6ylesen iyi edersin; https://discord.gg/\", ephemeral: true })                 \n                }\n            }\n     }", "     if (interaction.isModalSubmit()) {\n      if(interaction.customId === 'ticketforms'){\n        const ticketSystem = db.fetch(`ticketSystem_${interaction.guild?.id}`)\n      \n      \n        const lvl = db.fetch(`ticketLvl_${interaction.guild?.id}`) || 0;\n      \n        db.add(`ticketLvl_${interaction.guild?.id}`, 1)\n      \n      \n        const ticketYetkili = await interaction.guild.roles.cache.find((ch: Role)=> ch.id === ticketSystem.yetkili );\n      \n        const ticketCategory = db.fetch(`ticketCategory_${interaction.guild?.id}`);\n      \n        const ticketsebep = interaction.fields.getTextInputValue('ticketInput');\n       const channel = await interaction.guild.channels.create({\n         name: `ticket-${interaction.user.username}-`+lvl,\n         type: Discord.ChannelType.GuildText,\n         parent: ticketCategory.category,\n         permissionOverwrites: [\n           {\n             id: interaction.guild.id,\n             deny: [Discord.PermissionsBitField.Flags.ViewChannel],\n           },\n            {\n             id: interaction.user.id,\n             allow: [Discord.PermissionsBitField.Flags.ViewChannel, Discord.PermissionsBitField.Flags.SendMessages],\n           },\n           {\n            id: ticketYetkili.id,\n            allow: [Discord.PermissionsBitField.Flags.ViewChannel, Discord.PermissionsBitField.Flags.SendMessages],\n           },\n         ],\n       });\n       const sebepTicket = new Discord.EmbedBuilder()\n       .setDescription(`Neden talep a\u00e7t\u0131\u011f\u0131n\u0131 \u00f6\u011frenebilir miyiz?\\n> \\`${ticketsebep}\\``)\n       const ticketUserEmbed = new Discord.EmbedBuilder()\n       .setAuthor({ name: `${interaction.user.username} | Destek a\u00e7\u0131ld\u0131`, iconURL: `${interaction.user.displayAvatarURL({ dynmaic: true })} ` })\n       .setThumbnail(interaction.guild.iconURL({ dynmaic: true }))\n       .addFields([ \n        { name: \"Destek a\u00e7an:\", value: `${interaction.user}`, inline: true },\n        { name: \"A\u00e7\u0131l\u0131\u015f zaman\u0131:\", value: `<t:${parseInt(`${channel.createdTimestamp / 1000}`)}:R>`, inline: true }\n       ])\n       .setColor('Green')\n       .setFooter({ text: `Olu\u015fturan: ${client.user?.tag}`, iconURL: `${client.user?.avatarURL()}` })\n       .setTimestamp()\n       \n       const row = new Discord.ActionRowBuilder()\n       .addComponents(\n         new Discord.ButtonBuilder()\n           .setCustomId(`ticketClose`)\n           .setLabel('Destek kapat\u0131ls\u0131n.')\n           .setEmoji(\"\ud83d\udd12\")\n           .setStyle(Discord.ButtonStyle.Secondary),\n       );\n       \n        interaction.reply({ content: `<:tik:1039607067729727519> **|** Senin i\u00e7in bir tane destek kanal\u0131 ${channel} olu\u015fturldu.`, ephemeral: true })\n      \n        db.set(`ticketChannelUser_${interaction.guild?.id}${channel.id}`, { user: interaction.user.id })\n        db.set(`ticketUser_${interaction.user.id}${interaction.guild?.id}`, { whOpen: interaction.user.id, date: Date.now() })\n      \n        channel.send({ content: `<@${interaction.user.id}> | ${ticketYetkili}`, embeds: [ticketUserEmbed] })\n        return channel.send({ embeds: [sebepTicket], components: [row]  })\n      \n      }\n     }\n    ", "     if (interaction.isButton()) {\n\n        if(interaction.customId === \"rol\") {\n            const rolelDB: Role = db.fetch(`buton_rol_${interaction.guild?.id}`);\n            const role = interaction.guild?.roles.cache.get(rolelDB.rol)\n    \n                \n            interface Role {\n                rol: string\n            }\n            if(!interaction.member.roles.cache.has(role.id)) { \n            interaction.member.roles.add(role.id)\n          interaction.reply({content: \"<:tik:1039607067729727519> | Rol Ba\u015far\u0131yla Verildi!\", ephemeral: true})\n           } else {\n             \n            interaction.member.roles.remove(role.id)\n          interaction.reply({content: \"<:carpi:1040649840394260510> | Rol Ba\u015far\u0131yla Al\u0131nd\u0131!\", ephemeral: true})\n        }\n          }\n", "            if(!interaction.member.roles.cache.has(role.id)) { \n            interaction.member.roles.add(role.id)\n          interaction.reply({content: \"<:tik:1039607067729727519> | Rol Ba\u015far\u0131yla Verildi!\", ephemeral: true})\n           } else {\n             \n            interaction.member.roles.remove(role.id)\n          interaction.reply({content: \"<:carpi:1040649840394260510> | Rol Ba\u015far\u0131yla Al\u0131nd\u0131!\", ephemeral: true})\n        }\n          }\n\n          if(interaction.customId === \"ticketnasilacilir\") {\n            const embed = new Discord.EmbedBuilder()\n            .setAuthor({ name: \"Silex Destek Men\u00fcs\u00fc\", iconURL: `${client.user?.avatarURL()}`})\n            .setTitle(\"\u30fbDestek talebi nas\u0131l olu\u015fturabilirsin.\")\n            .setDescription(\"**Destek Talebi Olu\u015ftur** butonuna t\u0131klad\u0131ktan sonra kar\u015f\u0131na bir form gelecektir. O formu doldurduktan sonra destek talebin ba\u015far\u0131l\u0131 bir \u015fekilde olu\u015fturulacakt\u0131r.\")\n            .setImage(`https://cdn.discordapp.com/attachments/1059089831604531243/1064225401297195058/image.png`)\n            .setColor('Blue')\n              interaction.reply({ embeds: [embed], ephemeral: true })\n          }\n        ", "          if(interaction.customId === \"ticketnasilacilir\") {\n            const embed = new Discord.EmbedBuilder()\n            .setAuthor({ name: \"Silex Destek Men\u00fcs\u00fc\", iconURL: `${client.user?.avatarURL()}`})\n            .setTitle(\"\u30fbDestek talebi nas\u0131l olu\u015fturabilirsin.\")\n            .setDescription(\"**Destek Talebi Olu\u015ftur** butonuna t\u0131klad\u0131ktan sonra kar\u015f\u0131na bir form gelecektir. O formu doldurduktan sonra destek talebin ba\u015far\u0131l\u0131 bir \u015fekilde olu\u015fturulacakt\u0131r.\")\n            .setImage(`https://cdn.discordapp.com/attachments/1059089831604531243/1064225401297195058/image.png`)\n            .setColor('Blue')\n              interaction.reply({ embeds: [embed], ephemeral: true })\n          }\n        \n          if(interaction.customId === `ticketolustur`) {\n          \n            const find = db.fetch(`ticketUser_${interaction.user?.id}${interaction.guild?.id}`)", "          if(interaction.customId === `ticketolustur`) {\n          \n            const find = db.fetch(`ticketUser_${interaction.user?.id}${interaction.guild?.id}`)\n            if(find) {\n              const ticketVar = new Discord.EmbedBuilder()\n              .setDescription(`<:carpi:1040649840394260510> Zaten bir talebin bulunmakta.`)\n              return interaction.reply({ embeds: [ticketVar], ephemeral: true })\n            }\n  \n            const ticketmodal = new Discord.ModalBuilder()\n            .setCustomId('ticketforms')\n            .setTitle('Destek Olu\u015fturma Formu');\n      \n            const ticketInput = new Discord.TextInputBuilder()\n            .setCustomId('ticketInput')\n            .setLabel(\"Destek Olu\u015fturma Sebebiniz Nedir?\")\n            .setRequired(true)  \n            .setStyle(Discord.TextInputStyle.Paragraph);\n      \n        \n            const afirstActionRow = new ActionRowBuilder<ModalActionRowComponentBuilder>().addComponents(ticketInput);\n      \n            ticketmodal.addComponents(afirstActionRow);\n      \n            await interaction.showModal(ticketmodal);\n            \n          }\n", "          if(interaction.customId === `ticketClose`) {\n            interaction.channel.permissionOverwrites.set([\n              {\n                id: interaction.guild.id,\n                deny: [PermissionsBitField.Flags.ViewChannel],\n              },        \n            ]);\n            const row = new Discord.ActionRowBuilder()\n            .addComponents(\n              new Discord.ButtonBuilder()\n                .setCustomId(`ticketDelete`)\n                .setLabel('Destek silinsin.')\n                .setEmoji(\"\ud83d\uddd1\ufe0f\")\n                .setStyle(Discord.ButtonStyle.Secondary),\n            );\n            const ticketClose = new Discord.EmbedBuilder()\n            .setDescription(`<:tik:1039607067729727519> | Bu destek talebi kapat\u0131lm\u0131\u015ft\u0131r.`)\n            .setColor('Green')\n            interaction.reply({ embeds: [ticketClose], components: [row] })\n          }\n", "          if(interaction.customId === `ticketDelete`) {\n\n            const chnl = db.fetch(`ticketChannelUser_${interaction.guild?.id}${interaction.channel?.id}`);\n            const x = chnl.user;\n            const adam = await interaction.guild.members.cache.find((user: User) => user.id === x);\n            const usr = db.fetch(`ticketUser_${x}${interaction.guild?.id}`);\n   \n             const ticketLog = db.fetch(`ticketKanal_${interaction.guild?.id}`)\n             const ticketcloseembed = new EmbedBuilder()\n             .setTitle(`${adam.user.tag} adl\u0131 ki\u015finin destek verileri.`)\n             .addFields(\n               { name: \"Destek A\u00e7an:\", value: `<@${usr.whOpen}>`, inline: true },\n               { name: \"Deste\u011fin Kapat\u0131l\u0131\u015f Tarihi:\", value: `<t:${parseInt(`${Date.now() / 1000}`)}:R>`, inline: true  },\n               { name: '\\u200B', value: '\\u200B' },\n               { name: \"Deste\u011fi Kapatan:\", value: `<@${interaction.user?.id}>`, inline: true },\n               { name: \"Deste\u011fin A\u00e7\u0131l\u0131\u015f Tarihi:\", value: `<t:${parseInt(`${usr.date / 1000}`)}:R>`, inline: true  },\n                     )\n             .setColor('Green')\n             .setThumbnail(`${adam.user?.displayAvatarURL()}`)\n\n             const ticketlog: GuildTextBasedChannel = interaction.guild?.channels.cache.get(ticketLog)\n          ", "          if(ticketlog && ticketlog.type === ChannelType.GuildText) {\n            ticketlog.send({ embeds: [ticketcloseembed] })\n          } else console.log(\"yok\")\n          \n             db.delete(`ticketChannelUser_${interaction.guild?.id}${interaction.channel?.id}`, true);\n             db.delete(`ticketUser_${x}${interaction.guild?.id}`, true);\n   \n             return interaction.channel.delete();\n           }\n\n           if(interaction.customId === `kanalac`) {\n            interaction.update({ embeds: [new EmbedBuilder()\n              .setAuthor({ name: \"Merhaba, Ben Silex!\" })\n              .setColor(\"#2F3136\")\n              .setDescription(\"> Kanal mesaj g\u00f6nderimine a\u00e7\u0131ld\u0131!\")],\n              components: [\n                  new ActionRowBuilder<ButtonBuilder>().addComponents(\n                      new ButtonBuilder()\n                      .setLabel(`Kanal\u0131 a\u00e7.`)\n                      .setCustomId(`kanalac`)\n                      .setDisabled(true)\n                      .setStyle(ButtonStyle.Secondary)\n                  )\n              ] })", "           if(interaction.customId === `kanalac`) {\n            interaction.update({ embeds: [new EmbedBuilder()\n              .setAuthor({ name: \"Merhaba, Ben Silex!\" })\n              .setColor(\"#2F3136\")\n              .setDescription(\"> Kanal mesaj g\u00f6nderimine a\u00e7\u0131ld\u0131!\")],\n              components: [\n                  new ActionRowBuilder<ButtonBuilder>().addComponents(\n                      new ButtonBuilder()\n                      .setLabel(`Kanal\u0131 a\u00e7.`)\n                      .setCustomId(`kanalac`)\n                      .setDisabled(true)\n                      .setStyle(ButtonStyle.Secondary)\n                  )\n              ] })", "              if(interaction.channel.type === ChannelType.GuildText) {\n                interaction.channel.permissionOverwrites.edit(interaction.guild.id, { SendMessages: true })\n            }\n\n           }\n           if(interaction.customId === `kanalkapat`) {\n            interaction.update({ embeds: [new EmbedBuilder()\n              .setAuthor({ name: \"Merhaba, Ben Silex!\" })\n              .setColor(\"#2F3136\")\n              .setDescription(\"> Kanal mesaj g\u00f6nderimine kapat\u0131ld\u0131!\")],\n              components: [\n                  new ActionRowBuilder<ButtonBuilder>().addComponents(\n                      new ButtonBuilder()\n                      .setLabel(`Kanal\u0131 kapat.`)\n                      .setCustomId(`kanalkapat`)\n                      .setDisabled(true)\n                      .setStyle(ButtonStyle.Secondary)\n                  )\n              ] })", "              if(interaction.channel.type === ChannelType.GuildText) {\n                interaction.channel.permissionOverwrites.edit(interaction.guild.id, { SendMessages: false })\n            }\n\n           }\n\n    }\n    },\n}"]}
{"filename": "src/Events/guildMemberRemove.ts", "chunked_list": ["import { Events } from \"../Interfaces\";\nimport { Message, EmbedBuilder, GuildMember, GuildBasedChannel, ChannelType, ActionRowBuilder, ButtonBuilder, AttachmentBuilder } from \"discord.js\";\nimport Discord from \"discord.js\";\nimport db from \"croxydb\";\nimport config from \"../config.json\";\nimport { time } from \"console\";\nimport Canvas from \"canvas\";\n\nexport const Event : Events = {\n    name: \"guildMemberRemove\",", "export const Event : Events = {\n    name: \"guildMemberRemove\",\n\n    async execute(client, member: GuildMember) {\n        \n        let sayacx: { channel: string } = db.fetch(`sayac_${member.guild.id}`);\n        const sayacChannel = member.guild?.channels.cache.get(sayacx.channel)\n        if(sayacx) {\n        if(sayacChannel && sayacChannel.type === ChannelType.GuildText) {\n        \n            sayacChannel.send({ embeds: [{ description:  `:outbox_tray: | ${member} sunucudan ayr\u0131ld\u0131! Sunucumuz **${member.guild.memberCount}** ki\u015fi kald\u0131!`, color: 0x2F3136 }] }).catch(() => {});\n\n        }\n    }\n\n    let resimliGiris: { channel: string } = db.fetch(`canvaskanal_${member.guild.id}`);\n    const resimliGirisChannel = member.guild?.channels.cache.get(resimliGiris.channel)", "        if(sayacChannel && sayacChannel.type === ChannelType.GuildText) {\n        \n            sayacChannel.send({ embeds: [{ description:  `:outbox_tray: | ${member} sunucudan ayr\u0131ld\u0131! Sunucumuz **${member.guild.memberCount}** ki\u015fi kald\u0131!`, color: 0x2F3136 }] }).catch(() => {});\n\n        }\n    }\n\n    let resimliGiris: { channel: string } = db.fetch(`canvaskanal_${member.guild.id}`);\n    const resimliGirisChannel = member.guild?.channels.cache.get(resimliGiris.channel)\n    if(resimliGiris) { \n\n        const canvas = Canvas.createCanvas(648, 387);\n        const ctx = canvas.getContext(\"2d\");\n\n        const background = await Canvas.loadImage(\"https://cdn.discordapp.com/attachments/1059089831604531243/1067877929016635412/giden.png\");\n\n        ctx.drawImage(background, 0, 0, canvas.width, canvas.height);\n        ctx.strokeStyle = \"#3c3c3c\";\n        ctx.strokeRect(0, 0, canvas.width, canvas.height);\n\n        ctx.fillStyle = `#D3D3D3`;\n        ctx.font = `37px \"Warsaw\"`;\n        ctx.textAlign = \"center\";\n        ctx.fillText(`${member.user.tag}`, 320, 300);\n\n        var avatar1 = member.displayAvatarURL()\n        let avatarURL: string | any = await Canvas.loadImage(avatar1.replace(\"webp\", \"jpg\"));      \n\n        let boyut = 85, x = 325.5, y = 161;\n        ctx.beginPath();\n        ctx.arc(x, y, boyut, 0, 2 * Math.PI, false);\n        ctx.clip();\n        ctx.drawImage(avatarURL, (x - boyut), (y - boyut), (boyut * 2), (boyut * 2));\n  \n        const resimliGiris = new AttachmentBuilder(canvas.toBuffer(), { name: 'cikis.png' });\n", "    if(resimliGiris) { \n\n        const canvas = Canvas.createCanvas(648, 387);\n        const ctx = canvas.getContext(\"2d\");\n\n        const background = await Canvas.loadImage(\"https://cdn.discordapp.com/attachments/1059089831604531243/1067877929016635412/giden.png\");\n\n        ctx.drawImage(background, 0, 0, canvas.width, canvas.height);\n        ctx.strokeStyle = \"#3c3c3c\";\n        ctx.strokeRect(0, 0, canvas.width, canvas.height);\n\n        ctx.fillStyle = `#D3D3D3`;\n        ctx.font = `37px \"Warsaw\"`;\n        ctx.textAlign = \"center\";\n        ctx.fillText(`${member.user.tag}`, 320, 300);\n\n        var avatar1 = member.displayAvatarURL()\n        let avatarURL: string | any = await Canvas.loadImage(avatar1.replace(\"webp\", \"jpg\"));      \n\n        let boyut = 85, x = 325.5, y = 161;\n        ctx.beginPath();\n        ctx.arc(x, y, boyut, 0, 2 * Math.PI, false);\n        ctx.clip();\n        ctx.drawImage(avatarURL, (x - boyut), (y - boyut), (boyut * 2), (boyut * 2));\n  \n        const resimliGiris = new AttachmentBuilder(canvas.toBuffer(), { name: 'cikis.png' });\n", "        if(resimliGirisChannel && resimliGirisChannel.type === ChannelType.GuildText) {\n\n            resimliGirisChannel.send({ content: `${member} sunucumuzdan \u00e7\u0131kt\u0131! Sunucumuz **${member.guild.memberCount}** ki\u015fi kald\u0131.` , files: [resimliGiris] })\n\n            if (member.user.bot) {\n                resimliGirisChannel.send(`Bu bir bot, ${member.user.tag}`);\n                }\n        }\n    }\n\n    }\n}"]}
{"filename": "src/Interfaces/Commands.ts", "chunked_list": ["import { GuildChannelTypes, CommandInteraction } from \"discord.js\";\nimport { Bot } from \"../Client\";\n\ninterface Localizations {\n    tr: string,\n    en: string\n}\n\ninterface Choice {\n    name: string,\n    name_localizations?: string,\n    value: string | number,\n}\n", "interface Choice {\n    name: string,\n    name_localizations?: string,\n    value: string | number,\n}\n\ninterface Options {\n    type: 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11,\n    name: string,\n    name_localizations?: Localizations,\n    description: string,\n    description_localizations?: Localizations,\n    required?: boolean,\n    choices?: Choice[],\n    options?: Options[],\n    channel_types?: GuildChannelTypes[],\n    min_value?: number,\n    max_value?: number,\n    min_length?: number,\n    max_length?: number,\n    autocomplete?: boolean\n}\n", "export interface Commands {\n    name: string,\n    name_localizations?: Localizations,\n    description: string,\n    description_localizations?: Localizations,\n    options?: Options[],\n    default_member_permissions?: number,\n    dm_permission?: boolean,\n    nsfw?: boolean,\n    execute: (client: Bot, interaction: CommandInteraction) => Promise<void> | any;\n}"]}
{"filename": "src/Interfaces/Events.ts", "chunked_list": ["import { ClientEvents } from \"discord.js\";\nimport { Bot } from \"../Client\";\n\nexport interface Events { \n    name: keyof ClientEvents;\n    once?: boolean;\n    execute: (client: Bot, ...args: any) => Promise<any> | any;\n}"]}
{"filename": "src/Interfaces/Config.ts", "chunked_list": ["export interface Config {\n    token: string,\n    database: {\n        url: string,\n    }\n}\n"]}
{"filename": "src/Interfaces/index.ts", "chunked_list": ["export { Commands } from \"./Commands\"\nexport { Events } from \"./Events\"\nexport { Config } from \"./Config\""]}
{"filename": "src/Interfaces/Options.ts", "chunked_list": ["import { GuildChannelTypes } from \"discord.js\";\n\ninterface Choices {\n    name: string,\n    value: string\n}\n\nexport interface Options {\n    type: 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11\n    name: string;\n    description: string;\n    channel_types?: GuildChannelTypes[]\n    choices?: Choices[]\n    focused?: boolean;\n    required?: boolean;\n    options?: Options[]\n}"]}
{"filename": "src/Client/index.ts", "chunked_list": ["import { Client, Collection } from \"discord.js\";\nimport { Config, Commands, Events } from \"../Interfaces\";\n\nimport { Routes, REST } from \"discord.js\";\n\nimport configFile from \"../config.json\";\n\nimport fs from \"fs\";\nimport path from \"path\";\nimport { connect, set } from \"mongoose\";", "import path from \"path\";\nimport { connect, set } from \"mongoose\";\n\nexport class Bot extends Client {\n    public config : Config = configFile;\n    public commands : Collection<string, Commands> = new Collection()\n\n    async connect() {\n        const rest = new REST({ version: \"10\" }).setToken(this.config.token);\n\n        //this.mongodb()\n        this.registeredCommands()\n        this.registeredEvents()\n        this.postingCommands(rest)\n\n        this.login(this.config.token)\n    }\n\n    async registeredEvents() {\n        fs.readdir(path.join(__dirname, \"../Events\"), (err, events: string[]) => {", "            if(err) throw new Error(err.message);\n\n            events.forEach(async (event : string) => {\n                try {\n                    const { Event }: { Event: Events } = await import(`../Events/${event}`);\n\n                    if(Event.once) {\n                        this.once(Event.name, (...args) => {\n                            Event.execute(this, ...args)\n                        });\n                    } else {\n                        this.on(Event.name, (...args) => {\n                            Event.execute(this, ...args)\n                        });\n                    }\n", "                } catch (err) {\n                    throw err;\n                }\n            });\n       });\n\n       return this;\n    }\n\n    public async registeredCommands() {\n        fs.readdir(path.join(__dirname, \"../Commands\"), (err, commands: string[]) => {", "            if(err) throw new Error(err.message);\n\n            commands.forEach(async (command : string) => {\n                try {\n                    const { Command }: { Command: Commands } = await import(`../Commands/${command}`);\n\n                    this.commands.set(Command.name, Command)\n                    \n                } catch (err) {\n                    throw err;\n                }\n            });\n       });\n    }\n\n    public async postingCommands(rest: any) {\n        this.once(\"ready\", async() => {\n            await rest.put(Routes.applicationCommands(\"777595295055085588\"), { body: this.commands.toJSON() });\n        });\n    }\n    public async mongodb() {\n        set(\"strictQuery\", false)\n\n       connect(this.config.database.url)\n    }\n}", "                } catch (err) {\n                    throw err;\n                }\n            });\n       });\n    }\n\n    public async postingCommands(rest: any) {\n        this.once(\"ready\", async() => {\n            await rest.put(Routes.applicationCommands(\"777595295055085588\"), { body: this.commands.toJSON() });\n        });\n    }\n    public async mongodb() {\n        set(\"strictQuery\", false)\n\n       connect(this.config.database.url)\n    }\n}"]}
