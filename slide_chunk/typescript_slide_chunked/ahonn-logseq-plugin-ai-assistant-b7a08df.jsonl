{"filename": "vite.config.ts", "chunked_list": ["import reactPlugin from \"@vitejs/plugin-react\";\nimport { defineConfig } from \"vite\";\nimport logseqDevPlugin from \"vite-plugin-logseq\";\n\n// https://vitejs.dev/config/\nexport default defineConfig({\n  plugins: [logseqDevPlugin(), reactPlugin()],\n  // Makes HMR available for development\n  build: {\n    target: \"esnext\",", "  build: {\n    target: \"esnext\",\n    minify: \"esbuild\",\n  },\n});\n"]}
{"filename": "src/utils.ts", "chunked_list": ["import { BlockEntity } from '@logseq/libs/dist/LSPlugin.user';\n\nexport async function getBlockContent(block: BlockEntity) {\n  let content = block.content ?? '';\n  const childrens = [block.children];\n\n  let level = 1;\n  while (childrens.length > 0) {\n    const children = childrens.shift();\n    for (const child of children!) {\n      content += '\\n' + '\\t'.repeat(level) + '- ' + (child as BlockEntity).content;\n    }\n    level += 1;\n  }\n\n  return content;\n}\n", "    for (const child of children!) {\n      content += '\\n' + '\\t'.repeat(level) + '- ' + (child as BlockEntity).content;\n    }\n    level += 1;\n  }\n\n  return content;\n}\n"]}
{"filename": "src/settings.ts", "chunked_list": ["import { SettingSchemaDesc } from '@logseq/libs/dist/LSPlugin.user';\nimport { IPrompt } from './prompts/type';\n\nexport interface ISettings {\n  apiKey: string;\n  basePath: string;\n  model: string;\n  tag: string;\n  customPrompts: {\n    enable: boolean;\n    prompts: IPrompt[];\n  };\n}\n\nconst settings: SettingSchemaDesc[] = [\n  {\n    key: 'apiKey',\n    type: 'string',\n    title: 'API Key',\n    description: 'Enter your OpenAI API key.',\n    default: '',\n  },\n  {\n    key: 'basePath',\n    type: 'string',\n    title: 'openApi basePath',\n    description: 'Enter your openApi proxy basePath',\n    default: 'https://api.openai.com/v1',\n  },\n  {\n    key: 'model',\n    type: 'string',\n    title: 'Model',\n    description: 'Choose the OpenAI model (e.g., \"gpt-3.5-turbo\").',\n    default: 'gpt-3.5-turbo',\n  },\n  {\n    key: 'tag',\n    type: 'string',\n    title: 'Tag',\n    description: 'Add specific tags to AI-generated content',\n    default: '[[\ud83e\udd16]]'\n  },\n  {\n    key: 'customPrompts',\n    type: 'object',\n    title: 'Custom Prompts',\n    description: 'Enable and manage custom prompts.',\n    default: {\n      enable: false,\n      prompts: [],\n    },\n  },\n];\n\nexport default settings;\n"]}
{"filename": "src/prompts/make-shorter.ts", "chunked_list": ["import { IPrompt, PromptOutputType } from \"./type\";\n\nexport const makeShorter: IPrompt = {\n  name: 'Make Shorter',\n  prompt: `\n    Please shorten the following text while maintaining its key points:\n    \"\"\"\n    {content}\n    \"\"\"\n  `,", "    \"\"\"\n  `,\n  output: PromptOutputType.replace,\n};\n"]}
{"filename": "src/prompts/change-tone-to-casual.ts", "chunked_list": ["import { IPrompt, PromptOutputType } from \"./type\";\n\nexport const ChangeToneToCasual: IPrompt = {\n  name: 'Change Tone to Casual',\n  prompt: `\n    Please rewrite the following text with a casual tone:\n    \"\"\"\n    {content}\n    \"\"\"\n  `,", "    \"\"\"\n  `,\n  output: PromptOutputType.replace,\n};\n"]}
{"filename": "src/prompts/make-longer.ts", "chunked_list": ["import { IPrompt, PromptOutputType } from \"./type\";\n\nexport const makeLonger: IPrompt = {\n  name: 'Make Longer',\n  prompt: `\n    Please expand the following text, providing more details and depth:\n    \"\"\"\n    {content}\n    \"\"\"\n  `,", "    \"\"\"\n  `,\n  output: PromptOutputType.replace,\n};\n"]}
{"filename": "src/prompts/summarize.ts", "chunked_list": ["import { IPrompt, PromptOutputType } from './type';\n\nexport const Summarize: IPrompt = {\n  name: 'Summarize',\n  prompt: `\n    Please provide a concise summary of the following text:\n    \"\"\"\n    {content}\n    \"\"\"\n  `,", "    \"\"\"\n  `,\n  output: PromptOutputType.property,\n};\n"]}
{"filename": "src/prompts/change-tone-to-professional.ts", "chunked_list": ["import { IPrompt, PromptOutputType } from './type';\n\nexport const ChangeToneToProfessional: IPrompt = {\n  name: 'Change Tone to Professional',\n  prompt: `\n    Please rewrite the following text with a more professional tone:\n    \"\"\"\n    {content}\n    \"\"\"\n  `,", "    \"\"\"\n  `,\n  output: PromptOutputType.replace,\n};\n"]}
{"filename": "src/prompts/ask-ai.ts", "chunked_list": ["import { IPrompt, PromptOutputType } from './type';\n\nexport const AskAI: IPrompt = {\n  name: 'Ask AI',\n  prompt: `\n    I have a question:\n    \"\"\"\n    {content}\n    \"\"\"\n    Please provide a helpful answer.", "    \"\"\"\n    Please provide a helpful answer.\n  `,\n  output: PromptOutputType.insert,\n};\n"]}
{"filename": "src/prompts/generate-ideas.ts", "chunked_list": ["import { IPrompt, PromptOutputType } from \"./type\";\n\nexport const GenerateIdeas: IPrompt = {\n  name: 'Generate Ideas',\n  prompt: `\n    Please creative ideas related to the following topic:\n    \"\"\"\n    {content}\n    \"\"\"\n  `,", "    \"\"\"\n  `,\n  output: PromptOutputType.insert,\n  format: [],\n};\n"]}
{"filename": "src/prompts/index.ts", "chunked_list": ["export * from './ask-ai';\nexport * from './change-tone-to-casual';\nexport * from './change-tone-to-confident';\nexport * from './change-tone-to-friendly';\nexport * from './change-tone-to-professional';\nexport * from './explain-this';\nexport * from './generate-ideas';\nexport * from './make-longer';\nexport * from './make-shorter';\nexport * from './summarize';", "export * from './make-shorter';\nexport * from './summarize';\n"]}
{"filename": "src/prompts/type.ts", "chunked_list": ["export interface IPrompt {\n  name: string;\n  prompt: string;\n  output: PromptOutputType;\n  format?: string | [] | { [key: string]: string };\n}\n\nexport enum PromptOutputType {\n  property = 'property',\n  replace = 'replace',\n  insert = 'insert',\n}\n"]}
{"filename": "src/prompts/explain-this.ts", "chunked_list": ["import { IPrompt, PromptOutputType } from \"./type\";\n\nexport const ExplainThis: IPrompt = {\n  name: 'Explain This',\n  prompt: `\n    Please provide a clear explanation for the following text or code snippet:\n    \"\"\"\n    {content}\n    \"\"\"\n  `,", "    \"\"\"\n  `,\n  output: PromptOutputType.insert,\n};\n"]}
{"filename": "src/prompts/change-tone-to-friendly.ts", "chunked_list": ["import { IPrompt, PromptOutputType } from \"./type\";\n\nexport const ChangeToneToFriendly: IPrompt = {\n  name: 'Change Tone to Friendly',\n  prompt: `\n    Please rewrite the following text with a friendly tone:\n    \"\"\"\n    {content}\n    \"\"\"\n  `,", "    \"\"\"\n  `,\n  output: PromptOutputType.replace,\n};\n"]}
{"filename": "src/prompts/change-tone-to-confident.ts", "chunked_list": ["import { IPrompt, PromptOutputType } from \"./type\";\n\nexport const ChangeToneToConfident: IPrompt = {\n  name: 'Change Tone to Confident',\n  prompt: `\n    Please rewrite the following text with a confident tone:\n    \"\"\"\n    {content}\n    \"\"\"\n  `,", "    \"\"\"\n  `,\n  output: PromptOutputType.replace,\n};\n"]}
