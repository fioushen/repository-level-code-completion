{"filename": "src/com/xxf/i18n/plugin/Test.java", "chunked_list": ["package com.xxf.i18n.plugin;\n\nimport com.xxf.i18n.plugin.bean.StringEntity;\n\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.regex.Matcher;\nimport java.util.regex.Pattern;\n\npublic class Test {\n    private static int index = 0;", "\npublic class Test {\n    private static int index = 0;\n    public static void main(String[] args) {\n        String s=replaceUsingSB(\"MainActivity.kt\",\" val DateFormat.displayName: String\\n\" +\n                \"        get() = when (this) {\\n\" +\n                \"            DateFormat.LL -> com.xxf.application.applicationContext.getString(com.next.space.cflow.resources.R.string.full_date)\\n\" +\n                \"            DateFormat.YYYY_MM_DD -> \\\"\u5e74/\u6708/\u65e5\\\"\\n\" +\n                \"            DateFormat.DD_MM_YYYY -> \\\"\u65e5/\u6708/\u5e74\\\"\\n\" +\n                \"            DateFormat.MM_DD_YYYY -> \\\"\u6708/\u65e5/\u5e74\\\"\\n\" +\n                \"            DateFormat.RELATIVE -> \\\"\u76f8\u5bf9\u65e5\u671f\\\"\\n\" +\n                \"            else -> com.xxf.application.applicationContext.getString(com.next.space.cflow.resources.R.string.unknown)\\n\" +\n                \"        }\\n\" +\n                \"\\n\" +\n                \"    val TimeFormat.displayName: String\\n\" +\n                \"        get() = when (this) {\\n\" +\n                \"            TimeFormat.H_12 -> \\\"12\u5c0f\u65f6\u5236\\\"\\n\" +\n                \"            TimeFormat.H_24 -> \\\"24\u5c0f\u65f6\u5236\\\"\\n\" +\n                \"            else -> com.xxf.application.applicationContext.getString(com.next.space.cflow.resources.R.string.unknown)\\n\" +\n                \"        }\",new ArrayList<>());\n        System.out.println(\"============>s:\"+s);\n    }", "    public static String replaceUsingSB(String fileName, String str, List<StringEntity> strings) {\n        StringBuilder sb = new StringBuilder(str.length());\n        Pattern p = Pattern.compile(\"(?=\\\".{1,20}\\\")\\\"[^$+,\\\\n]*[\\\\u4E00-\\\\u9FFF]+[^$+,\\\\n]*\\\"\");\n        Matcher m = p.matcher(str);\n        int lastIndex = 0;\n        while (m.find()) {\n            sb.append(str, lastIndex, m.start());\n\n            final String id = fileName + \"_kt_str_\" + (index++);\n            strings.add(new StringEntity(id, m.group()));\n\n            sb.append(\"com.xxf.application.applicationContext.getString(com.next.space.cflow.resources.R.string.\"+id+\")\");\n            lastIndex = m.end();\n        }\n        sb.append(str.substring(lastIndex));\n        return sb.toString();\n    }\n}\n"]}
{"filename": "src/com/xxf/i18n/plugin/action/ToStringXml.java", "chunked_list": ["package com.xxf.i18n.plugin.action;\n\nimport com.xxf.i18n.plugin.bean.StringEntity;\nimport com.xxf.i18n.plugin.utils.FileUtils;\nimport com.intellij.notification.Notification;\nimport com.intellij.notification.NotificationType;\nimport com.intellij.notification.Notifications;\nimport com.intellij.openapi.actionSystem.AnAction;\nimport com.intellij.openapi.actionSystem.AnActionEvent;\nimport com.intellij.openapi.actionSystem.CommonDataKeys;", "import com.intellij.openapi.actionSystem.AnActionEvent;\nimport com.intellij.openapi.actionSystem.CommonDataKeys;\nimport com.intellij.openapi.actionSystem.PlatformDataKeys;\nimport com.intellij.openapi.editor.Editor;\nimport com.intellij.openapi.editor.SelectionModel;\nimport com.intellij.openapi.vfs.VirtualFile;\nimport org.w3c.dom.Node;\nimport org.w3c.dom.NodeList;\nimport org.xml.sax.SAXException;\n", "import org.xml.sax.SAXException;\n\nimport javax.xml.parsers.DocumentBuilderFactory;\nimport javax.xml.parsers.ParserConfigurationException;\nimport java.io.IOException;\nimport java.io.InputStream;\n\npublic class ToStringXml extends AnAction {\n\n    @Override\n    public void actionPerformed(AnActionEvent e) {\n        VirtualFile file = e.getData(PlatformDataKeys.VIRTUAL_FILE);", "    public void actionPerformed(AnActionEvent e) {\n        VirtualFile file = e.getData(PlatformDataKeys.VIRTUAL_FILE);\n        if (file == null) {\n            showHint(\"\u627e\u4e0d\u5230\u76ee\u6807\u6587\u4ef6\");\n            return;\n        }\n\n        String extension = file.getExtension();\n        if (extension != null && extension.equalsIgnoreCase(\"xml\")) {\n            if (!file.getParent().getName().startsWith(\"layout\")) {\n                showError(\"\u8bf7\u9009\u62e9\u5e03\u5c40\u6587\u4ef6\");\n                return;\n            }\n        }\n\n        //\u83b7\u53d6\u5f53\u524d\u7f16\u8f91\u5668\u5bf9\u8c61\n        Editor editor = e.getRequiredData(CommonDataKeys.EDITOR);\n        //\u83b7\u53d6\u9009\u62e9\u7684\u6570\u636e\u6a21\u578b\n        SelectionModel selectionModel = editor.getSelectionModel();\n        //\u83b7\u53d6\u5f53\u524d\u9009\u62e9\u7684\u6587\u672c\n        String selectedText = selectionModel.getSelectedText();\n\n        StringBuilder sb = new StringBuilder();\n", "        if (extension != null && extension.equalsIgnoreCase(\"xml\")) {\n            if (!file.getParent().getName().startsWith(\"layout\")) {\n                showError(\"\u8bf7\u9009\u62e9\u5e03\u5c40\u6587\u4ef6\");\n                return;\n            }\n        }\n\n        //\u83b7\u53d6\u5f53\u524d\u7f16\u8f91\u5668\u5bf9\u8c61\n        Editor editor = e.getRequiredData(CommonDataKeys.EDITOR);\n        //\u83b7\u53d6\u9009\u62e9\u7684\u6570\u636e\u6a21\u578b\n        SelectionModel selectionModel = editor.getSelectionModel();\n        //\u83b7\u53d6\u5f53\u524d\u9009\u62e9\u7684\u6587\u672c\n        String selectedText = selectionModel.getSelectedText();\n\n        StringBuilder sb = new StringBuilder();\n", "        try {\n            StringEntity singleStrings;\n            StringBuilder oldContent = new StringBuilder(); //\u6574\u4e2afile\u5b57\u4e32\n            try {\n                oldContent.append(new String(file.contentsToByteArray(), \"utf-8\")); //\u6e90\u6587\u4ef6\u6574\u4f53\u5b57\u7b26\u4e32\n            } catch (IOException e1) {\n                e1.printStackTrace();\n            }\n\n            InputStream is = null;\n            try {\n                is = file.getInputStream(); //\u6e90\u6587\u4ef6layout\u4e0b\u9762\u7684xml\n                singleStrings = extraStringEntity(is, file.getNameWithoutExtension().toLowerCase(), oldContent,\n                        selectionModel.getSelectionEndPosition().line,selectedText);", "            try {\n                is = file.getInputStream(); //\u6e90\u6587\u4ef6layout\u4e0b\u9762\u7684xml\n                singleStrings = extraStringEntity(is, file.getNameWithoutExtension().toLowerCase(), oldContent,\n                        selectionModel.getSelectionEndPosition().line,selectedText);\n                if (singleStrings != null) {\n                    sb.append(\"\\n    <string name=\\\"\" + singleStrings.getId() + \"\\\">\" + singleStrings.getValue() + \"</string>\");\n                    FileUtils.replaceContentToFile(file.getPath(), oldContent.toString()); //\u4fdd\u5b58\u5230layout.xml\n                }\n            } catch (IOException e1) {\n                e1.printStackTrace();\n            } finally {\n                FileUtils.closeQuietly(is);\n            }\n\n        }catch (Exception ioException) {\n            ioException.printStackTrace();\n        }\n\n        //\u4fdd\u5b58\u5230strings.xml\n        VirtualFile resDir = file.getParent().getParent();//\u83b7\u53d6layout\u6587\u4ef6\u5939\u7684\u7236\u6587\u4ef6\u5939\uff0c\u770b\u662f\u4e0d\u662fres\n        //\u83b7\u53d6res\u6587\u4ef6\u5939\u4e0b\u9762\u7684values", "        if (resDir.getName().equalsIgnoreCase(\"res\")) {\n            VirtualFile[] chids = resDir.getChildren(); //\u83b7\u53d6res\u6587\u4ef6\u5939\u4e0b\u9762\u6587\u4ef6\u5939\u5217\u8868\n            for (VirtualFile chid : chids) { //\u904d\u5386\u5bfb\u627evalues\u6587\u4ef6\u5939\u4e0b\u9762\u7684strings\u6587\u4ef6\n                if (chid.getName().startsWith(\"values\")) {\n                    if (chid.isDirectory()) {\n                        VirtualFile[] values = chid.getChildren();\n                        for (VirtualFile value : values) {\n                            if (value.getName().startsWith(\"strings\")) { //\u627e\u5230\u7b2c\u4e00\u4e2astrings\u6587\u4ef6\n                                try {\n                                    String content = new String(value.contentsToByteArray(), \"utf-8\"); //\u6e90\u6587\u4ef6\u5185\u5bb9\n                                    System.out.println(\"utf-8=\" + content);\n                                    String result = content.replace(\"</resources>\", sb.toString() + \"\\n</resources>\"); //\u5728\u6700\u4e0b\u65b9\u52a0\u4e0a\u65b0\u7684\u5b57\u4e32\n                                    FileUtils.replaceContentToFile(value.getPath(), result);//\u66ff\u6362\u6587\u4ef6\n                                    showHint(\"\u8f6c\u6362\u6210\u529f!\");\n                                } catch (IOException e1) {\n                                    e1.printStackTrace();\n                                    showError(e1.getMessage());\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        //System.out.println(selectedText);\n\n    }\n\n\n    private int index = 0;\n   /* private void layoutChild(VirtualFile file, StringBuilder sb) {\n        index = 0;\n\n        String extension = file.getExtension();", "                                try {\n                                    String content = new String(value.contentsToByteArray(), \"utf-8\"); //\u6e90\u6587\u4ef6\u5185\u5bb9\n                                    System.out.println(\"utf-8=\" + content);\n                                    String result = content.replace(\"</resources>\", sb.toString() + \"\\n</resources>\"); //\u5728\u6700\u4e0b\u65b9\u52a0\u4e0a\u65b0\u7684\u5b57\u4e32\n                                    FileUtils.replaceContentToFile(value.getPath(), result);//\u66ff\u6362\u6587\u4ef6\n                                    showHint(\"\u8f6c\u6362\u6210\u529f!\");\n                                } catch (IOException e1) {\n                                    e1.printStackTrace();\n                                    showError(e1.getMessage());\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        //System.out.println(selectedText);\n\n    }\n\n\n    private int index = 0;\n   /* private void layoutChild(VirtualFile file, StringBuilder sb) {\n        index = 0;\n\n        String extension = file.getExtension();", "        if (extension != null && extension.equalsIgnoreCase(\"xml\")) {\n            if (!file.getParent().getName().startsWith(\"layout\")) {\n                showError(\"\u8bf7\u9009\u62e9\u5e03\u5c40\u6587\u4ef6\");\n                return;\n            }\n        }\n\n        List<StringEntity> strings;\n        StringBuilder oldContent = new StringBuilder(); //\u6574\u4e2afile\u5b57\u4e32\n        try {\n            oldContent.append(new String(file.contentsToByteArray(), \"utf-8\")); //\u6e90\u6587\u4ef6\u6574\u4f53\u5b57\u7b26\u4e32\n        } catch (IOException e1) {\n            e1.printStackTrace();\n        }\n\n        InputStream is = null;", "        try {\n            oldContent.append(new String(file.contentsToByteArray(), \"utf-8\")); //\u6e90\u6587\u4ef6\u6574\u4f53\u5b57\u7b26\u4e32\n        } catch (IOException e1) {\n            e1.printStackTrace();\n        }\n\n        InputStream is = null;\n        try {\n            is = file.getInputStream(); //\u6e90\u6587\u4ef6layout\u4e0b\u9762\u7684xml\n            strings = extraStringEntity(is, file.getNameWithoutExtension().toLowerCase(), oldContent);\n            if (strings != null) {", "            if (strings != null) {\n                for (StringEntity string : strings) { //\u521b\u5efa\u5b57\u7b26\u4e32\n                    sb.append(\"\\n    <string name=\\\"\" + string.getId() + \"\\\">\" + string.getValue() + \"</string>\");\n                }\n                FileUtils.replaceContentToFile(file.getPath(), oldContent.toString());\n            }\n        } catch (IOException e1) {\n            e1.printStackTrace();\n        } finally {\n            FileUtils.closeQuietly(is);\n        }\n\n    }*/\n\n    /*\n    * \u4f20\u5165\u6e90xml\u7684\u6587\u4ef6\u6d41\u3002\u6587\u4ef6\u540d\u79f0\uff0c\u6587\u4ef6\u5b57\u7b26\u4e32\n    * */\n    private StringEntity extraStringEntity(InputStream is, String fileName, StringBuilder oldContent,int line,String oricontent) {\n", "        try {\n            return generateStrings(DocumentBuilderFactory.newInstance().newDocumentBuilder().parse(is), fileName, oldContent,line, oricontent);\n        } catch (SAXException e) {\n            throw new RuntimeException(e);\n        } catch (IOException e) {\n            throw new RuntimeException(e);\n        } catch (ParserConfigurationException e) {\n            throw new RuntimeException(e);\n        }\n    }\n\n    /*\n    * \u4f20\u5165\n    * */\n    private StringEntity generateStrings(Node node, String fileName, StringBuilder oldContent,int line,String oricontent) {\n        StringEntity result = new StringEntity();", "        if (node.getNodeType() == Node.ELEMENT_NODE) {//\u6587\u4ef6\u6362\u884c\u8282\u70b9\n            Node stringNode = node.getAttributes().getNamedItem(\"android:text\"); //\u83b7\u53d6\u8be5\u540d\u5b57\u7684\u8282\u70b9\n            if (stringNode != null) { //\u6709\u503c\n                String value = stringNode.getNodeValue();\n                if (!value.contains(\"@string\")&&value.contains(oricontent)) { //\u5224\u65ad\u662f\u5426\u5df2\u7ecf\u662f@\u5b57\u7b26\u4e32\n                    final String id = fileName + \"_text_\" + (line); //\u547d\u540d\u65b9\u5f0f\uff1a\u6587\u4ef6\u540d\u79f0_text+_index\n                    result=new StringEntity(id, value);\n                    String newContent = oldContent.toString().replaceFirst(\"\\\"\" + value + \"\\\"\", \"\\\"@string/\" + id + \"\\\"\");\n                    oldContent = oldContent.replace(0, oldContent.length(), newContent);\n                    return result;\n                }\n            }\n\n            Node hintNode = node.getAttributes().getNamedItem(\"android:hint\");", "            if (hintNode != null) {\n                String value = hintNode.getNodeValue();\n                if (!value.contains(\"@string\")&&value.contains(oricontent)) {\n                    final String id = fileName + \"_hint_text_\" + (line);\n                    result=new StringEntity(id, value);\n                    String newContent = oldContent.toString().replaceFirst(\"\\\"\" + value + \"\\\"\", \"\\\"@string/\" + id + \"\\\"\");\n                    oldContent = oldContent.replace(0, oldContent.length(), newContent);\n                    return result;\n                }\n            }\n\n        }\n\n\n\n        NodeList children = node.getChildNodes();", "        for (int j = 0; j < children.getLength(); j++) {\n            StringEntity itemresult = generateStrings(children.item(j), fileName, oldContent,line,oricontent);\n            if (itemresult!=null){\n                return itemresult;\n            }\n        }\n        return null;\n    }\n\n\n\n\n\n    private void showHint(String msg) {\n        Notifications.Bus.notify(new Notification(\"DavidString\", \"DavidString\", msg, NotificationType.WARNING));\n    }\n    private void showError(String msg) {\n        Notifications.Bus.notify(new Notification(\"DavidString\", \"DavidString\", msg, NotificationType.ERROR));\n    }\n\n}\n"]}
{"filename": "src/com/xxf/i18n/plugin/action/JavaTest.java", "chunked_list": ["package com.xxf.i18n.plugin.action;\n\nimport com.xxf.i18n.plugin.utils.FileUtils;\nimport org.w3c.dom.Node;\nimport org.w3c.dom.NodeList;\n\nimport javax.xml.parsers.DocumentBuilderFactory;\nimport java.io.ByteArrayInputStream;\nimport java.io.InputStream;\n\npublic class JavaTest {", "import java.io.InputStream;\n\npublic class JavaTest {\n    public static void main(String[] args) {\n        InputStream is = null;\n        try {\n            //is = file.getInputStream();\n            String str=\"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?>\\n\" +\n                    \"<resources>\\n\" +\n                    \"    <string name=\\\"flowus_app_name\\\">FlowUs \u606f\u6d41</string>\\n\" +\n                    \"    <string name=\\\"app_name\\\">FlowUs \u606f\u6d41</string>\\n\" +\n                    \"    <string name=\\\"ok\\\">\u786e\u5b9a</string>\\n\" +\n                    \"    <string name=\\\"ok\\\">1</string>\\n\" +\n                    \"</resources>\";\n            is =new ByteArrayInputStream(str.getBytes());\n            Node node= DocumentBuilderFactory.newInstance().newDocumentBuilder().parse(is);\n            findStringNode(node);\n        } catch (Exception e1) {\n            e1.printStackTrace();\n        } finally {\n            FileUtils.closeQuietly(is);\n        }\n\n    }\n\n    private static void findStringNode(Node node){", "        if (node.getNodeType() == Node.ELEMENT_NODE\n                &&\"string\".equals(node.getNodeName())) {\n            Node key = node.getAttributes().getNamedItem(\"name\");\n            if(key!=null) {\n                System.out.println(\"=========>nodeType:\" + key.getNodeValue() +\"    \"+ node.getTextContent());\n            }\n        }\n        NodeList children = node.getChildNodes();\n        for (int j = 0; j < children.getLength(); j++) {\n            findStringNode(children.item(j));\n        }\n    }\n\n}\n", "        for (int j = 0; j < children.getLength(); j++) {\n            findStringNode(children.item(j));\n        }\n    }\n\n}\n"]}
{"filename": "src/com/xxf/i18n/plugin/action/IosDirAction.java", "chunked_list": ["package com.xxf.i18n.plugin.action;\n\nimport com.google.common.collect.Lists;\nimport com.intellij.openapi.actionSystem.AnAction;\nimport com.intellij.openapi.actionSystem.AnActionEvent;\nimport com.intellij.openapi.actionSystem.IdeActions;\nimport com.intellij.openapi.actionSystem.PlatformDataKeys;\nimport com.intellij.openapi.project.Project;\nimport com.intellij.openapi.vfs.StandardFileSystems;\nimport com.intellij.openapi.vfs.VirtualFile;", "import com.intellij.openapi.vfs.StandardFileSystems;\nimport com.intellij.openapi.vfs.VirtualFile;\nimport com.xxf.i18n.plugin.bean.StringEntity;\nimport com.xxf.i18n.plugin.utils.FileUtils;\nimport com.xxf.i18n.plugin.utils.MessageUtils;\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;", "import java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.regex.Matcher;\nimport java.util.regex.Pattern;\n\n\n/**", "\n/**\n * \u652f\u6301ios\u7684.m\u6587\u4ef6\u81ea\u52a8\u62bd\u53d6\u5b57\u7b26\u4e32\n * Created by xyw on 2023/5/23.\n */\npublic class IosDirAction extends AnAction {\n\n    private int index = 0;\n    //\u907f\u514d\u91cd\u590d key \u4e2d\u6587\u5b57\u7b26\u4e32 value \u4e3a\u5df2\u7ecf\u751f\u6210\u7684id\n    Map<String,String> valueKeyMap = new  HashMap();\n\n    @Override", "    public void actionPerformed(AnActionEvent e) {\n        Project currentProject = e.getProject();\n\n        //\u68c0\u67e5\u9879\u76ee\u7684\u914d\u7f6e\n        String path= FileUtils.getConfigPathValue(currentProject);\n        if(path==null||path.length()<=0){\n            MessageUtils.showAlert(e,String.format(\"\u8bf7\u5728%s\\n\u76ee\u5f55\u4e0b\u9762\u521b\u5efa%s\u6587\u4ef6,\u4e14\u8bbe\u7f6e\u6709\u6548\u7684\u751f\u6210\u6587\u4ef6\u8def\u5f84(xxx.strings)\",\n                    FileUtils.getConfigPathDir(currentProject).getPath(),\n                    FileUtils.getConfigPathFileName()));\n            return;\n        }\n        VirtualFile targetStringFile = StandardFileSystems.local().findFileByPath(path);", "        if (targetStringFile == null||!targetStringFile.exists()) {\n            MessageUtils.showAlert(e,String.format(\"\u8bf7\u5728%s\\n\u76ee\u5f55\u4e0b\u9762\u521b\u5efa%s\u6587\u4ef6,\u4e14\u8bbe\u7f6e\u6709\u6548\u7684\u751f\u6210\u6587\u4ef6\u8def\u5f84(xxx.strings)\",\n                    FileUtils.getConfigPathDir(currentProject).getPath(),\n                    FileUtils.getConfigPathFileName()));\n            return;\n        }\n\n        String extension = targetStringFile.getExtension();\n        if (extension == null || !extension.equalsIgnoreCase(\"strings\")) {\n            MessageUtils.showAlert(e,\"\u751f\u6210\u7684\u6587\u4ef6\u7c7b\u578b\u5fc5\u987b\u662fstrings\");\n            return;\n        }\n\n        VirtualFile eventFile = e.getData(PlatformDataKeys.VIRTUAL_FILE);", "        if (extension == null || !extension.equalsIgnoreCase(\"strings\")) {\n            MessageUtils.showAlert(e,\"\u751f\u6210\u7684\u6587\u4ef6\u7c7b\u578b\u5fc5\u987b\u662fstrings\");\n            return;\n        }\n\n        VirtualFile eventFile = e.getData(PlatformDataKeys.VIRTUAL_FILE);\n        if (eventFile == null) {\n            MessageUtils.showAlert(e,\"\u627e\u4e0d\u5230\u76ee\u6807\u6587\u4ef6\");\n            return;\n        }\n\n        valueKeyMap.clear();\n        //\u8bfb\u53d6\u5df2\u7ecf\u5b58\u5728\u7684 \u590d\u7528,\u8fd9\u91cc\u5efa\u8bae\u90fd\u662f\u6309\u4e2d\u6587\u6765\n        readFileToDict(targetStringFile);\n\n\n        StringBuilder sb = new StringBuilder();\n        int resultStart= valueKeyMap.size();\n        //\u626b\u63cf.m\u6587\u4ef6\n        classChild(eventFile,sb, valueKeyMap);\n        int resultCount= valueKeyMap.size()-resultStart;\n\n", "        try {\n            if(!sb.isEmpty()){\n                String content = new String(targetStringFile.contentsToByteArray(), \"utf-8\"); //\u6e90\u6587\u4ef6\u5185\u5bb9\n                String result = content+sb.toString();\n                FileUtils.replaceContentToFile(targetStringFile.getPath(), result);//\u66ff\u6362\u6587\u4ef6\n            }\n            MessageUtils.showAlert(e,String.format(\"\u56fd\u9645\u5316\u6267\u884c\u5b8c\u6210,\u65b0\u751f\u6210\uff08%d)\u6761\u7ed3\u679c\",resultCount));\n        } catch (IOException ex) {\n            ex.printStackTrace();\n            MessageUtils.showAlert(e,ex.getMessage());\n        }\n\n        e.getActionManager().getAction(IdeActions.ACTION_SYNCHRONIZE).actionPerformed(e);\n    }\n\n    /**\n     * \u5c06\u5df2\u7ecf\u5b58\u5728\u5b57\u7b26\u4e32\u8bfb\u53d6\u5230\u5b57\u5178\u91cc\u9762 \u907f\u514d\u91cd\u590d\n     * @param file\n     */\n    private void readFileToDict( VirtualFile file){", "        try  {\n            BufferedReader br\n                    = new BufferedReader(new InputStreamReader(file.getInputStream()));\n            String line;\n            while ((line = br.readLine()) != null) {\n                //\"email_input_hint\"=\"\u8bf7\u8f93\u5165\u90ae\u7bb1\";\n                if(line.endsWith(\";\")){\n                    String[] split = line.split(\"=\");\n                    if(split!=null&&split.length==2){\n                        String key=split[0].trim();\n                        String value=split[1].trim();", "                    if(split!=null&&split.length==2){\n                        String key=split[0].trim();\n                        String value=split[1].trim();\n                        if(key.startsWith(\"\\\"\")&&key.endsWith(\"\\\"\")){\n                            key=key.substring(1,key.length()-1);\n                        }\n                        if(value.startsWith(\"\\\"\")&&value.endsWith(\"\\\";\")){\n                            value=value.substring(1,value.length()-2);\n                        }\n                        if(!valueKeyMap.containsKey(value)){\n                            valueKeyMap.put(value,key);\n                        }\n                    }\n                }\n            }\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n\n    /**\n     *  \u6267\u884c .m\u6587\u4ef6\n     * @param file\n     * @param sb\n     */\n    private  void classChild(VirtualFile file, StringBuilder sb,Map<String,String> strDistinctMap){\n        index = 0;", "                        if(!valueKeyMap.containsKey(value)){\n                            valueKeyMap.put(value,key);\n                        }\n                    }\n                }\n            }\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n\n    /**\n     *  \u6267\u884c .m\u6587\u4ef6\n     * @param file\n     * @param sb\n     */\n    private  void classChild(VirtualFile file, StringBuilder sb,Map<String,String> strDistinctMap){\n        index = 0;", "        if(file.isDirectory()){\n            VirtualFile[] children = file.getChildren();\n            for (VirtualFile child : children) {\n                classChild(child,sb,strDistinctMap);\n            }\n        }else{\n            String extension = file.getExtension();\n            if (extension != null && extension.equalsIgnoreCase(\"m\")) {\n                List<StringEntity> strings;\n                StringBuilder oldContent = new StringBuilder();\n                try {\n                    oldContent.append(new String(file.contentsToByteArray(), \"utf-8\"));\n                } catch (IOException e1) {\n                    e1.printStackTrace();\n                }\n                InputStream is = null;", "                try {\n                    oldContent.append(new String(file.contentsToByteArray(), \"utf-8\"));\n                } catch (IOException e1) {\n                    e1.printStackTrace();\n                }\n                InputStream is = null;\n                try {\n                    is = file.getInputStream();\n                    //ios \u6587\u4ef6\u540d\u53ef\u4ee5\u6709+\u53f7\n                    strings = extraClassEntity(is, file.getNameWithoutExtension().toLowerCase().replaceAll(\"\\\\+\",\"_\"), oldContent,strDistinctMap);\n                    if (strings != null) {", "                    if (strings != null) {\n                        for (StringEntity string : strings) {\n                            sb.append(\"\\n\\\"\"+string.getId() + \"\\\"=\\\"\" + string.getValue() + \"\\\";\");\n                        }\n                        FileUtils.replaceContentToFile(file.getPath(), oldContent.toString());\n                    }\n                } catch (IOException e1) {\n                    e1.printStackTrace();\n                } finally {\n                    FileUtils.closeQuietly(is);\n                }\n            }\n        }\n    }\n\n\n    private List<StringEntity> extraClassEntity(InputStream is, String fileName, StringBuilder oldContent,Map<String,String> strDistinctMap) {\n        List<StringEntity> strings = Lists.newArrayList();\n        String resultText=replaceUsingSB(fileName,oldContent.toString(),strings,strDistinctMap);\n        oldContent = oldContent.replace(0, oldContent.length(), resultText);\n        return strings;\n    }\n", "    public  String replaceUsingSB(String fileName, String str, List<StringEntity> strings,Map<String,String> strDistinctMap) {\n        StringBuilder sb = new StringBuilder(str.length());\n        Pattern p = Pattern.compile(\"(?=@\\\".{1,150}\\\")@\\\"[^$+,\\\\n\\\"{}]*[\\\\u4E00-\\\\u9FFF]+[^$+,\\\\n\\\"{}]*\\\"\");\n        Matcher m = p.matcher(str);\n        int lastIndex = 0;\n        while (m.find()) {\n            sb.append(str, lastIndex, m.start());\n\n            String subStr=m.group();\n            //\u53bb\u9664\u524d\u540e\u7684\u53cc\u5f15\u53f7\n            if(subStr.startsWith(\"@\\\"\")&&subStr.endsWith(\"\\\"\")){\n                //\u8fd9\u91cc\u622a\u53d6\n                subStr=subStr.substring(2,subStr.length()-1);\n            }\n            //\u590d\u7528\u5df2\u7ecf\u5b58\u5728\u7684\n            String id=strDistinctMap.get(subStr);", "            if(subStr.startsWith(\"@\\\"\")&&subStr.endsWith(\"\\\"\")){\n                //\u8fd9\u91cc\u622a\u53d6\n                subStr=subStr.substring(2,subStr.length()-1);\n            }\n            //\u590d\u7528\u5df2\u7ecf\u5b58\u5728\u7684\n            String id=strDistinctMap.get(subStr);\n            if(id==null||id.length()<=0){\n                //\u751f\u6210\u65b0\u7684id\n                id = currentIdString(fileName);\n                strDistinctMap.put(subStr,id);\n                strings.add(new StringEntity(id, subStr));\n            }\n\n            sb.append(\"R.string.localized_\"+id+\"\");\n            lastIndex = m.end();\n        }\n        sb.append(str.substring(lastIndex));\n        return sb.toString();\n    }\n\n    private String currentIdString(String fileName){\n        //\u9700\u8981\u52a0\u65f6\u95f4  \u591a\u6b21\u751f\u6210\u7684key\u907f\u514d\u9519\u4f4d\u548c\u51b2\u7a81,key \u4e00\u6837 \u5185\u5bb9\u4e0d\u4e00\u6837 \u5408\u5e76\u98ce\u9669\u592a\u9ad8\n        final String id = fileName +\"_\"+ System.currentTimeMillis() +\"_\"  + (index++);\n        return id;\n    }\n}\n"]}
{"filename": "src/com/xxf/i18n/plugin/action/AndroidDirAction.java", "chunked_list": ["package com.xxf.i18n.plugin.action;\n\nimport com.intellij.openapi.project.Project;\nimport com.intellij.openapi.vfs.StandardFileSystems;\nimport com.xxf.i18n.plugin.bean.StringEntity;\nimport com.xxf.i18n.plugin.utils.AndroidStringFileUtils;\nimport com.xxf.i18n.plugin.utils.FileUtils;\nimport com.google.common.collect.Lists;\nimport com.intellij.openapi.actionSystem.AnAction;\nimport com.intellij.openapi.actionSystem.AnActionEvent;", "import com.intellij.openapi.actionSystem.AnAction;\nimport com.intellij.openapi.actionSystem.AnActionEvent;\nimport com.intellij.openapi.actionSystem.IdeActions;\nimport com.intellij.openapi.actionSystem.PlatformDataKeys;\nimport com.intellij.openapi.vfs.VirtualFile;\nimport com.xxf.i18n.plugin.utils.MessageUtils;\nimport org.w3c.dom.NamedNodeMap;\nimport org.w3c.dom.Node;\nimport org.w3c.dom.NodeList;\nimport org.xml.sax.SAXException;", "import org.w3c.dom.NodeList;\nimport org.xml.sax.SAXException;\n\nimport javax.xml.parsers.DocumentBuilderFactory;\nimport javax.xml.parsers.ParserConfigurationException;\nimport java.io.*;\nimport java.util.Arrays;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;", "import java.util.List;\nimport java.util.Map;\nimport java.util.regex.Matcher;\nimport java.util.regex.Pattern;\n\n/**\n * layout\u6216\u8005java(\u4ec5\u652f\u6301kt)\u6587\u4ef6\u5939\u8f6c\u6210strings\n * Created by xyw on 2023/5/21.\n */\npublic class AndroidDirAction extends AnAction {\n\n    /**\n     *\u89e3\u6790\u7684\u5c5e\u6027\u540d\n     */\n    private List<String> textAttributeNamesList = Arrays.asList(\"android:text\",\"android:hint\",\"app:leftText\",\"app:rightText\",\"app:titleText\");\n    private int index = 0;\n\n    //\u907f\u514d\u91cd\u590d key \u4e2d\u6587\u5b57\u7b26\u4e32 value \u4e3a\u5df2\u7ecf\u751f\u6210\u7684id\n    Map<String,String> valueKeyMap = new  HashMap();\n\n    @Override", " */\npublic class AndroidDirAction extends AnAction {\n\n    /**\n     *\u89e3\u6790\u7684\u5c5e\u6027\u540d\n     */\n    private List<String> textAttributeNamesList = Arrays.asList(\"android:text\",\"android:hint\",\"app:leftText\",\"app:rightText\",\"app:titleText\");\n    private int index = 0;\n\n    //\u907f\u514d\u91cd\u590d key \u4e2d\u6587\u5b57\u7b26\u4e32 value \u4e3a\u5df2\u7ecf\u751f\u6210\u7684id\n    Map<String,String> valueKeyMap = new  HashMap();\n\n    @Override", "    public void actionPerformed(AnActionEvent e) {\n        Project currentProject = e.getProject();\n        //\u68c0\u67e5\u9879\u76ee\u7684\u914d\u7f6e\n        String path= FileUtils.getConfigPathValue(currentProject);\n        if(path==null||path.length()<=0){\n            MessageUtils.showAlert(e,String.format(\"\u8bf7\u5728%s\\n\u76ee\u5f55\u4e0b\u9762\u521b\u5efa%s\u6587\u4ef6,\u4e14\u8bbe\u7f6e\u6709\u6548\u7684\u751f\u6210\u6587\u4ef6\u8def\u5f84(string.xml)\",\n                    FileUtils.getConfigPathDir(currentProject).getPath(),\n                    FileUtils.getConfigPathFileName()));\n            return;\n        }\n        VirtualFile targetStringFile = StandardFileSystems.local().findFileByPath(path);", "        if (targetStringFile == null||!targetStringFile.exists()) {\n            MessageUtils.showAlert(e,String.format(\"\u8bf7\u5728%s\\n\u76ee\u5f55\u4e0b\u9762\u521b\u5efa%s\u6587\u4ef6,\u4e14\u8bbe\u7f6e\u6709\u6548\u7684\u751f\u6210\u6587\u4ef6\u8def\u5f84(string.xml)\",\n                    FileUtils.getConfigPathDir(currentProject).getPath(),\n                    FileUtils.getConfigPathFileName()));\n            return;\n        }\n\n        String extension = targetStringFile.getExtension();\n        if (extension == null || !extension.equalsIgnoreCase(\"xml\")) {\n            MessageUtils.showAlert(e,\"\u751f\u6210\u7684\u6587\u4ef6\u7c7b\u578b\u5fc5\u987b\u662fstring.xml\");\n            return;\n        }\n\n\n        VirtualFile eventFile = e.getData(PlatformDataKeys.VIRTUAL_FILE);", "        if (extension == null || !extension.equalsIgnoreCase(\"xml\")) {\n            MessageUtils.showAlert(e,\"\u751f\u6210\u7684\u6587\u4ef6\u7c7b\u578b\u5fc5\u987b\u662fstring.xml\");\n            return;\n        }\n\n\n        VirtualFile eventFile = e.getData(PlatformDataKeys.VIRTUAL_FILE);\n        if (eventFile == null) {\n            MessageUtils.showAlert(e,\"\u627e\u4e0d\u5230\u76ee\u6807\u6587\u4ef6\");\n            return;\n        }\n\n\n        valueKeyMap.clear();\n        //\u8bfb\u53d6\u5df2\u7ecf\u5b58\u5728\u7684 \u590d\u7528,\u8fd9\u91cc\u5efa\u8bae\u90fd\u662f\u6309\u4e2d\u6587\u6765\n        readFileToDict(targetStringFile);\n        int resultStart= valueKeyMap.size();\n\n        StringBuilder sb = new StringBuilder();\n        //layout \u76ee\u5f55 \u53ef\u80fd\u662fpad layout_s600dp\u7b49\u7b49", "        if(eventFile.isDirectory() && eventFile.getName().startsWith(\"layout\")) {\n            //\u904d\u5386\u6240\u6709layout\u6587\u4ef6\uff0c\u7136\u540e\u83b7\u53d6\u5176\u4e2d\u7684\u5b57\u4e32\u5199\u5230stringbuilder\u91cc\u9762\u53bb\n            VirtualFile[] children = eventFile.getChildren();\n            for (VirtualFile child : children) {\n                layoutChild(child, sb);\n            }\n        }else if(eventFile.getExtension()!=null && eventFile.getExtension().equalsIgnoreCase(\"xml\")){\n            //\u53ef\u80fd\u662flayout\u5e03\u5c40\u6587\u4ef6\n            layoutChild(eventFile, sb);\n        }else{\n            //\u904d\u5386\u6240\u6709 kt\u6587\u4ef6\uff0c\u7136\u540e\u83b7\u53d6\u5176\u4e2d\u7684\u5b57\u4e32\u5199\u5230stringbuilder\u91cc\u9762\u53bb\n            classChild(eventFile, sb);\n        }\n        int resultCount= valueKeyMap.size()-resultStart;\n", "        try {\n            if(!sb.isEmpty()) {\n                String content = new String(targetStringFile.contentsToByteArray(), \"utf-8\"); //\u6e90\u6587\u4ef6\u5185\u5bb9\n                String result = content.replace(\"</resources>\", sb.toString() + \"\\n</resources>\"); //\u5728\u6700\u4e0b\u65b9\u52a0\u4e0a\u65b0\u7684\u5b57\u4e32\n                FileUtils.replaceContentToFile(targetStringFile.getPath(), result);//\u66ff\u6362\u6587\u4ef6\n            }\n\n            Map<String, List<String>> repeatRecords = AndroidStringFileUtils.getRepeatRecords(targetStringFile);\n            StringBuilder repeatStringBuilder=new StringBuilder(\"\u91cd\u590d\u6761\u6570:\"+repeatRecords.size());\n            if(repeatRecords.size()>0){\n                repeatStringBuilder.append(\"\\n\u8bf7\u786e\u8ba4\u662f\u5426xxf_i18n_plugin_path.txt\u662f\u4e2d\u6587\u6e05\u5355,\u5426\u5219\u53bb\u91cd\u6ca1\u6709\u610f\u4e49\");\n                repeatStringBuilder.append(\"\\n\u8bf7\u786e\u8ba4\u662f\u5426xxf_i18n_plugin_path.txt\u662f\u4e2d\u6587\u6e05\u5355,\u5426\u5219\u53bb\u91cd\u6ca1\u6709\u610f\u4e49\");\n            }", "            if(repeatRecords.size()>0){\n                repeatStringBuilder.append(\"\\n\u8bf7\u786e\u8ba4\u662f\u5426xxf_i18n_plugin_path.txt\u662f\u4e2d\u6587\u6e05\u5355,\u5426\u5219\u53bb\u91cd\u6ca1\u6709\u610f\u4e49\");\n                repeatStringBuilder.append(\"\\n\u8bf7\u786e\u8ba4\u662f\u5426xxf_i18n_plugin_path.txt\u662f\u4e2d\u6587\u6e05\u5355,\u5426\u5219\u53bb\u91cd\u6ca1\u6709\u610f\u4e49\");\n            }\n            for(Map.Entry<String,List<String>> entry : repeatRecords.entrySet()){\n                repeatStringBuilder.append(\"\\nvalue:\"+entry.getKey());\n                repeatStringBuilder.append(\"\\nkeys:\");\n                for (String key:entry.getValue()) {\n                    repeatStringBuilder.append(\"\\n\");\n                    repeatStringBuilder.append(key);\n                }\n                repeatStringBuilder.append(\"\\n\\n\");\n            }\n\n            MessageUtils.showAlert(e,String.format(\"\u56fd\u9645\u5316\u6267\u884c\u5b8c\u6210,\u65b0\u751f\u6210\uff08%d)\u6761\u7ed3\u679c,%s\", resultCount,repeatStringBuilder.toString()));\n        } catch (IOException ex) {\n            ex.printStackTrace();\n            MessageUtils.showAlert(e,ex.getMessage());\n        }\n\n        e.getActionManager().getAction(IdeActions.ACTION_SYNCHRONIZE).actionPerformed(e);\n    }\n\n    /**\n     * \u5c06\u5df2\u7ecf\u5b58\u5728\u5b57\u7b26\u4e32\u8bfb\u53d6\u5230\u5b57\u5178\u91cc\u9762 \u907f\u514d\u91cd\u590d\n     * @param file\n     */\n    private void readFileToDict(VirtualFile file){\n        InputStream is = null;", "        try {\n            is = file.getInputStream();\n//            String str=\"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?>\\n\" +\n//                    \"<resources>\\n\" +\n//                    \"    <string name=\\\"flowus_app_name\\\">FlowUs \u606f\u6d41</string>\\n\" +\n//                    \"    <string name=\\\"app_name\\\">FlowUs \u606f\u6d41</string>\\n\" +\n//                    \"    <string name=\\\"ok\\\">\u786e\u5b9a</string>\\n\" +\n//                    \"</resources>\";\n//            is =new ByteArrayInputStream(str.getBytes());\n            Node node=DocumentBuilderFactory.newInstance().newDocumentBuilder().parse(is);\n            this.findStringNode(node);\n        } catch (Throwable ex) {\n            ex.printStackTrace();\n        } finally {\n            FileUtils.closeQuietly(is);\n        }\n\n    }\n\n    private void findStringNode(Node node){", "        if (node.getNodeType() == Node.ELEMENT_NODE\n                &&\"string\".equals(node.getNodeName())) {\n            Node key = node.getAttributes().getNamedItem(\"name\");\n            if(key!=null) {\n                String valueKey=node.getTextContent();\n                if(!this.valueKeyMap.containsKey(valueKey)){\n                    this.valueKeyMap.put(valueKey,key.getNodeValue());\n                }\n            }\n        }\n        NodeList children = node.getChildNodes();", "        for (int j = 0; j < children.getLength(); j++) {\n            findStringNode(children.item(j));\n        }\n    }\n\n    /**\n     *  \u6267\u884c java \u6587\u4ef6\u548ckt\u6587\u4ef6\n     * @param file\n     * @param sb\n     */\n    private  void classChild(VirtualFile file, StringBuilder sb){\n        index = 0;", "        if(file.isDirectory()){\n            VirtualFile[] children = file.getChildren();\n            for (VirtualFile child : children) {\n                classChild(child,sb);\n            }\n        }else{\n            String extension = file.getExtension();\n            if (extension != null && extension.equalsIgnoreCase(\"kt\")) {\n                List<StringEntity> strings;\n                StringBuilder oldContent = new StringBuilder();\n                try {\n                    oldContent.append(new String(file.contentsToByteArray(), \"utf-8\"));\n                } catch (IOException e1) {\n                    e1.printStackTrace();\n                }\n                InputStream is = null;", "                try {\n                    oldContent.append(new String(file.contentsToByteArray(), \"utf-8\"));\n                } catch (IOException e1) {\n                    e1.printStackTrace();\n                }\n                InputStream is = null;\n                try {\n                    is = file.getInputStream();\n                    strings = extraClassEntity(is, file.getNameWithoutExtension().toLowerCase(), oldContent, valueKeyMap);\n                    if (strings != null) {\n                        for (StringEntity string : strings) {\n                            sb.append(\"\\n    <string name=\\\"\" + string.getId() + \"\\\">\" + string.getValue() + \"</string>\");\n                        }\n                        FileUtils.replaceContentToFile(file.getPath(), oldContent.toString());\n                    }\n                } catch (IOException e1) {\n                    e1.printStackTrace();\n                } finally {\n                    FileUtils.closeQuietly(is);\n                }\n            }\n        }\n    }\n\n\n    private List<StringEntity> extraClassEntity(InputStream is, String fileName, StringBuilder oldContent,Map<String,String> strDistinctMap) {\n        List<StringEntity> strings = Lists.newArrayList();\n        String resultText=replaceUsingSB(fileName,oldContent.toString(),strings,strDistinctMap);\n        oldContent = oldContent.replace(0, oldContent.length(), resultText);\n        return strings;\n    }\n", "                    if (strings != null) {\n                        for (StringEntity string : strings) {\n                            sb.append(\"\\n    <string name=\\\"\" + string.getId() + \"\\\">\" + string.getValue() + \"</string>\");\n                        }\n                        FileUtils.replaceContentToFile(file.getPath(), oldContent.toString());\n                    }\n                } catch (IOException e1) {\n                    e1.printStackTrace();\n                } finally {\n                    FileUtils.closeQuietly(is);\n                }\n            }\n        }\n    }\n\n\n    private List<StringEntity> extraClassEntity(InputStream is, String fileName, StringBuilder oldContent,Map<String,String> strDistinctMap) {\n        List<StringEntity> strings = Lists.newArrayList();\n        String resultText=replaceUsingSB(fileName,oldContent.toString(),strings,strDistinctMap);\n        oldContent = oldContent.replace(0, oldContent.length(), resultText);\n        return strings;\n    }\n", "    public  String replaceUsingSB(String fileName, String str, List<StringEntity> strings,Map<String,String> strDistinctMap) {\n        StringBuilder sb = new StringBuilder(str.length());\n        Pattern p = Pattern.compile(\"(?=\\\".{1,60}\\\")\\\"[^$+,\\\\n\\\"{}]*[\\\\u4E00-\\\\u9FFF]+[^$+,\\\\n\\\"{}]*\\\"\");\n        Matcher m = p.matcher(str);\n        int lastIndex = 0;\n        while (m.find()) {\n            sb.append(str, lastIndex, m.start());\n\n            String value=m.group();\n            //\u53bb\u9664\u524d\u540e\u7684\u53cc\u5f15\u53f7\n            if(value.startsWith(\"\\\"\")&&value.endsWith(\"\\\"\")){\n                value=value.substring(1,value.length()-1);\n            }\n            //\u590d\u7528\u5df2\u7ecf\u5b58\u5728\u7684\n            String id=strDistinctMap.get(value);", "            if(value.startsWith(\"\\\"\")&&value.endsWith(\"\\\"\")){\n                value=value.substring(1,value.length()-1);\n            }\n            //\u590d\u7528\u5df2\u7ecf\u5b58\u5728\u7684\n            String id=strDistinctMap.get(value);\n            if(id==null||id.length()<=0){\n                //\u751f\u6210\u65b0\u7684id\n                id = currentIdString(fileName);\n                strDistinctMap.put(value,id);\n                strings.add(new StringEntity(id, value));\n            }\n\n            sb.append(\"com.xxf.application.applicationContext.getString(com.next.space.cflow.resources.R.string.\"+id+\")\");\n            lastIndex = m.end();\n        }\n        sb.append(str.substring(lastIndex));\n        return sb.toString();\n    }\n\n\n    /**\n     * \u9012\u5f52\u6267\u884clayout xml\n     * @param file\n     * @param sb\n     */\n    private void layoutChild(VirtualFile file, StringBuilder sb) {\n        index = 0;\n\n        String extension = file.getExtension();", "        if (extension != null && extension.equalsIgnoreCase(\"xml\")) {\n            if (!file.getParent().getName().startsWith(\"layout\")) {\n                MessageUtils.showNotify(\"\u8bf7\u9009\u62e9\u5e03\u5c40\u6587\u4ef6\");\n                return;\n            }\n        }\n\n\n        List<StringEntity> strings;\n        StringBuilder oldContent = new StringBuilder();\n        try {\n            oldContent.append(new String(file.contentsToByteArray(), \"utf-8\"));\n        } catch (IOException e1) {\n            e1.printStackTrace();\n        }\n        InputStream is = null;", "        try {\n            oldContent.append(new String(file.contentsToByteArray(), \"utf-8\"));\n        } catch (IOException e1) {\n            e1.printStackTrace();\n        }\n        InputStream is = null;\n        try {\n            is = file.getInputStream();\n            strings = extraStringEntity(is, file.getNameWithoutExtension().toLowerCase(), oldContent);\n            if (strings != null) {\n                for (StringEntity string : strings) {\n                    sb.append(\"\\n    <string name=\\\"\" + string.getId() + \"\\\">\" + string.getValue() + \"</string>\");\n                }\n                FileUtils.replaceContentToFile(file.getPath(), oldContent.toString());\n            }\n        } catch (IOException e1) {\n            e1.printStackTrace();\n        } finally {\n            FileUtils.closeQuietly(is);\n        }\n\n    }\n\n    private List<StringEntity> extraStringEntity(InputStream is, String fileName, StringBuilder oldContent) {\n        List<StringEntity> strings = Lists.newArrayList();", "            if (strings != null) {\n                for (StringEntity string : strings) {\n                    sb.append(\"\\n    <string name=\\\"\" + string.getId() + \"\\\">\" + string.getValue() + \"</string>\");\n                }\n                FileUtils.replaceContentToFile(file.getPath(), oldContent.toString());\n            }\n        } catch (IOException e1) {\n            e1.printStackTrace();\n        } finally {\n            FileUtils.closeQuietly(is);\n        }\n\n    }\n\n    private List<StringEntity> extraStringEntity(InputStream is, String fileName, StringBuilder oldContent) {\n        List<StringEntity> strings = Lists.newArrayList();", "        try {\n            return generateStrings(DocumentBuilderFactory.newInstance().newDocumentBuilder().parse(is), strings, fileName, oldContent);\n        } catch (SAXException e) {\n            throw new RuntimeException(e);\n        } catch (IOException e) {\n            throw new RuntimeException(e);\n        } catch (ParserConfigurationException e) {\n            throw new RuntimeException(e);\n        }\n    }\n    private String currentIdString(String fileName){\n        //\u9700\u8981\u52a0\u65f6\u95f4  \u591a\u6b21\u751f\u6210\u7684key\u907f\u514d\u9519\u4f4d\u548c\u51b2\u7a81,key \u4e00\u6837 \u5185\u5bb9\u4e0d\u4e00\u6837 \u5408\u5e76\u98ce\u9669\u592a\u9ad8\n        final String id = fileName +\"_\"+ System.currentTimeMillis() +\"_\"  + (index++);\n        return id;\n    }\n\n    private List<StringEntity> generateStrings(Node node, List<StringEntity> strings, String fileName, StringBuilder oldContent) {", "        if (node.getNodeType() == Node.ELEMENT_NODE) {\n            NamedNodeMap attributes = node.getAttributes();\n            for (int i = 0; i <attributes.getLength() ; i++) {\n                Node item = attributes.item(i);\n                if(textAttributeNamesList.contains(item.getNodeName())){\n                    String value = item.getNodeValue();\n                    if (value!=null && !value.contains(\"@string\")) {\n                        //\u590d\u7528\u5df2\u7ecf\u5b58\u5728\u7684\n                        String id= valueKeyMap.get(value);\n                        if(id==null||id.length()<=0){\n                            //\u751f\u6210\u65b0\u7684id\n                            id = currentIdString(fileName);\n                            valueKeyMap.put(value,id);\n                            strings.add(new StringEntity(id, value));\n                        }\n\n                        String newContent = oldContent.toString().replaceFirst(\"\\\"\" + value + \"\\\"\", \"\\\"@string/\" + id + \"\\\"\");\n                        oldContent = oldContent.replace(0, oldContent.length(), newContent);\n                    }\n                }\n            }\n        }\n        NodeList children = node.getChildNodes();", "                        if(id==null||id.length()<=0){\n                            //\u751f\u6210\u65b0\u7684id\n                            id = currentIdString(fileName);\n                            valueKeyMap.put(value,id);\n                            strings.add(new StringEntity(id, value));\n                        }\n\n                        String newContent = oldContent.toString().replaceFirst(\"\\\"\" + value + \"\\\"\", \"\\\"@string/\" + id + \"\\\"\");\n                        oldContent = oldContent.replace(0, oldContent.length(), newContent);\n                    }\n                }\n            }\n        }\n        NodeList children = node.getChildNodes();", "        for (int j = 0; j < children.getLength(); j++) {\n            generateStrings(children.item(j), strings, fileName, oldContent);\n        }\n        return strings;\n    }\n\n}\n"]}
{"filename": "src/com/xxf/i18n/plugin/utils/MessageUtils.java", "chunked_list": ["package com.xxf.i18n.plugin.utils;\n\nimport com.intellij.notification.Notification;\nimport com.intellij.notification.NotificationType;\nimport com.intellij.notification.Notifications;\nimport com.intellij.openapi.actionSystem.AnActionEvent;\nimport com.intellij.openapi.project.Project;\nimport com.intellij.openapi.ui.Messages;\n\n/**", "\n/**\n * \u652f\u6301ios\u7684.m\u6587\u4ef6\u81ea\u52a8\u62bd\u53d6\u5b57\u7b26\u4e32\n * Created by xyw on 2023/5/23.\n */\npublic class MessageUtils {\n    public static void showAlert(AnActionEvent e,String message){\n        Project currentProject = e.getProject();\n        Messages.showMessageDialog(currentProject,\n                message,\n                \"\u63d0\u793a\",\n                Messages.getInformationIcon());\n    }", "    public static void showNotify(String msg) {\n        Notifications.Bus.notify(new Notification(\"XXFi18nString\", \"\u63d0\u793a\", msg, NotificationType.INFORMATION));\n    }\n}\n"]}
{"filename": "src/com/xxf/i18n/plugin/utils/IOSStringFileUtils.java", "chunked_list": ["package com.xxf.i18n.plugin.utils;\n\npublic class IOSStringFileUtils {\n}\n"]}
{"filename": "src/com/xxf/i18n/plugin/utils/AndroidStringFileUtils.java", "chunked_list": ["package com.xxf.i18n.plugin.utils;\n\nimport com.intellij.openapi.vfs.VirtualFile;\nimport com.xxf.i18n.plugin.bean.StringEntity;\nimport org.w3c.dom.NamedNodeMap;\nimport org.w3c.dom.Node;\nimport org.w3c.dom.NodeList;\n\nimport javax.xml.parsers.DocumentBuilderFactory;\nimport java.io.ByteArrayInputStream;", "import javax.xml.parsers.DocumentBuilderFactory;\nimport java.io.ByteArrayInputStream;\nimport java.io.InputStream;\nimport java.util.*;\n\npublic class AndroidStringFileUtils {\n\n    public static void main(String[] args) {\n        String str=\"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?>\\n\" +\n                \"<ScrollView xmlns:android=\\\"http://schemas.android.com/apk/res/android\\\"\\n\" +\n                \"    xmlns:app=\\\"http://schemas.android.com/apk/res-auto\\\"\\n\" +\n                \"    android:id=\\\"@+id/scrollView\\\"\\n\" +\n                \"    android:layout_width=\\\"match_parent\\\"\\n\" +\n                \"    android:layout_height=\\\"match_parent\\\">\\n\" +\n                \"\\n\" +\n                \"    <LinearLayout xmlns:android=\\\"http://schemas.android.com/apk/res/android\\\"\\n\" +\n                \"        android:layout_width=\\\"match_parent\\\"\\n\" +\n                \"        android:layout_height=\\\"match_parent\\\"\\n\" +\n                \"        android:background=\\\"@android:color/white\\\"\\n\" +\n                \"        android:orientation=\\\"vertical\\\">\\n\" +\n                \"\\n\" +\n                \"        <com.xxf.view.round.XXFRoundImageTextView\\n\" +\n                \"            android:id=\\\"@+id/textImage\\\"\\n\" +\n                \"            android:layout_width=\\\"40dp\\\"\\n\" +\n                \"            android:layout_height=\\\"40dp\\\"\\n\" +\n                \"            android:layout_marginTop=\\\"40dp\\\"\\n\" +\n                \"            android:background=\\\"#6cf\\\" />\\n\" +\n                \"\\n\" +\n                \"        <View\\n\" +\n                \"            android:id=\\\"@+id/statusbarLayout\\\"\\n\" +\n                \"            android:layout_width=\\\"wrap_content\\\"\\n\" +\n                \"            android:layout_height=\\\"25dp\\\" />\\n\" +\n                \"\\n\" +\n                \"        <LinearLayout\\n\" +\n                \"            android:layout_width=\\\"match_parent\\\"\\n\" +\n                \"            android:layout_height=\\\"wrap_content\\\"\\n\" +\n                \"            android:orientation=\\\"horizontal\\\">\\n\" +\n                \"\\n\" +\n                \"            <TextView\\n\" +\n                \"                android:layout_width=\\\"match_parent\\\"\\n\" +\n                \"                android:layout_height=\\\"match_parent\\\"\\n\" +\n                \"                android:layout_weight=\\\"1\\\"\\n\" +\n                \"                android:background=\\\"@drawable/test\\\"\\n\" +\n                \"                android:padding=\\\"30dp\\\"\\n\" +\n                \"                android:text=\\\"\u6d4b\u8bd5\\\"\\n\" +\n                \"                android:textColor=\\\"@android:color/white\\\" />\\n\" +\n                \"\\n\" +\n                \"            <TextView\\n\" +\n                \"                android:layout_width=\\\"match_parent\\\"\\n\" +\n                \"                android:layout_height=\\\"match_parent\\\"\\n\" +\n                \"                android:layout_weight=\\\"1\\\"\\n\" +\n                \"                android:background=\\\"@drawable/test2\\\"\\n\" +\n                \"                android:gravity=\\\"right\\\"\\n\" +\n                \"                android:padding=\\\"20dp\\\"\\n\" +\n                \"                android:text=\\\"\u6d4b\u8bd5\\\"\\n\" +\n                \"                android:textColor=\\\"@android:color/white\\\" />\\n\" +\n                \"\\n\" +\n                \"        </LinearLayout>\\n\" +\n                \"\\n\" +\n                \"        <com.xxf.view.view.ReverseFrameLayout xmlns:android=\\\"http://schemas.android.com/apk/res/android\\\"\\n\" +\n                \"            android:id=\\\"@+id/grayLayout\\\"\\n\" +\n                \"            android:layout_width=\\\"match_parent\\\"\\n\" +\n                \"            android:layout_height=\\\"match_parent\\\">\\n\" +\n                \"\\n\" +\n                \"\\n\" +\n                \"            <LinearLayout xmlns:android=\\\"http://schemas.android.com/apk/res/android\\\"\\n\" +\n                \"                android:layout_width=\\\"match_parent\\\"\\n\" +\n                \"                android:layout_height=\\\"match_parent\\\"\\n\" +\n                \"                android:background=\\\"@android:color/white\\\"\\n\" +\n                \"                android:orientation=\\\"vertical\\\">\\n\" +\n                \"\\n\" +\n                \"                <com.xxf.arch.test.MyEditText\\n\" +\n                \"                    android:layout_width=\\\"match_parent\\\"\\n\" +\n                \"                    android:layout_height=\\\"wrap_content\\\"\\n\" +\n                \"                    android:hint=\\\"\u8bf7\u8f93\u5165\\\" />\\n\" +\n                \"\\n\" +\n                \"                <TextView\\n\" +\n                \"                    android:layout_width=\\\"match_parent\\\"\\n\" +\n                \"                    android:layout_height=\\\"wrap_content\\\"\\n\" +\n                \"                    android:background=\\\"@color/BC2\\\"\\n\" +\n                \"                    android:padding=\\\"10dp\\\"\\n\" +\n                \"                    android:text=\\\"\u6d4b\u8bd5\u6587\u672c1234567abcdefg\\\"\\n\" +\n                \"                    android:textColor=\\\"@color/C1\\\" />\\n\" +\n                \"\\n\" +\n                \"                <TextView\\n\" +\n                \"                    android:layout_width=\\\"match_parent\\\"\\n\" +\n                \"                    android:layout_height=\\\"wrap_content\\\"\\n\" +\n                \"                    android:background=\\\"@android:color/black\\\"\\n\" +\n                \"                    android:padding=\\\"10dp\\\"\\n\" +\n                \"                    android:text=\\\"\u6d4b\u8bd5\u6587\u672c1234567abcdefg\\\"\\n\" +\n                \"                    android:textColor=\\\"@android:color/white\\\" />\\n\" +\n                \"\\n\" +\n                \"\\n\" +\n                \"                <Button\\n\" +\n                \"                    android:id=\\\"@+id/bt_http\\\"\\n\" +\n                \"                    android:layout_width=\\\"match_parent\\\"\\n\" +\n                \"                    android:layout_height=\\\"wrap_content\\\"\\n\" +\n                \"                    android:background=\\\"@color/BC2\\\"\\n\" +\n                \"                    android:padding=\\\"10dp\\\"\\n\" +\n                \"                    android:text=\\\"http\\\"\\n\" +\n                \"                    android:textColor=\\\"@color/C1\\\" />\\n\" +\n                \"\\n\" +\n                \"                <Button\\n\" +\n                \"                    android:id=\\\"@+id/bt_test\\\"\\n\" +\n                \"                    android:layout_width=\\\"wrap_content\\\"\\n\" +\n                \"                    android:layout_height=\\\"wrap_content\\\"\\n\" +\n                \"                    android:padding=\\\"10dp\\\"\\n\" +\n                \"                    android:text=\\\"test\\\" />\\n\" +\n                \"\\n\" +\n                \"                <Button\\n\" +\n                \"                    android:id=\\\"@+id/bt_permission_req\\\"\\n\" +\n                \"                    android:layout_width=\\\"wrap_content\\\"\\n\" +\n                \"                    android:layout_height=\\\"wrap_content\\\"\\n\" +\n                \"                    android:padding=\\\"10dp\\\"\\n\" +\n                \"                    android:text=\\\"permission_req\\\" />\\n\" +\n                \"\\n\" +\n                \"\\n\" +\n                \"                <Button\\n\" +\n                \"                    android:id=\\\"@+id/bt_permission_get\\\"\\n\" +\n                \"                    android:layout_width=\\\"wrap_content\\\"\\n\" +\n                \"                    android:layout_height=\\\"wrap_content\\\"\\n\" +\n                \"                    android:padding=\\\"10dp\\\"\\n\" +\n                \"                    android:text=\\\"permission_get\\\" />\\n\" +\n                \"\\n\" +\n                \"                <Button\\n\" +\n                \"                    android:id=\\\"@+id/file\\\"\\n\" +\n                \"                    android:layout_width=\\\"wrap_content\\\"\\n\" +\n                \"                    android:layout_height=\\\"wrap_content\\\"\\n\" +\n                \"                    android:text=\\\"file\\\" />\\n\" +\n                \"\\n\" +\n                \"                <EditText\\n\" +\n                \"                    android:layout_width=\\\"match_parent\\\"\\n\" +\n                \"                    android:layout_height=\\\"wrap_content\\\"\\n\" +\n                \"                    android:inputType=\\\"numberDecimal\\\" />\\n\" +\n                \"\\n\" +\n                \"\\n\" +\n                \"                <Button\\n\" +\n                \"                    android:id=\\\"@+id/bt_startActivityForResult\\\"\\n\" +\n                \"                    android:layout_width=\\\"wrap_content\\\"\\n\" +\n                \"                    android:layout_height=\\\"wrap_content\\\"\\n\" +\n                \"                    android:padding=\\\"10dp\\\"\\n\" +\n                \"                    android:text=\\\"startActivityForResult\\\" />\\n\" +\n                \"\\n\" +\n                \"                <Button\\n\" +\n                \"                    android:layout_width=\\\"wrap_content\\\"\\n\" +\n                \"                    android:layout_height=\\\"wrap_content\\\"\\n\" +\n                \"                    android:onClick=\\\"jumpState\\\"\\n\" +\n                \"                    android:padding=\\\"10dp\\\"\\n\" +\n                \"                    android:text=\\\"state\\\" />\\n\" +\n                \"                <Button\\n\" +\n                \"                    android:id=\\\"@+id/bt_sp\\\"\\n\" +\n                \"                    android:layout_width=\\\"wrap_content\\\"\\n\" +\n                \"                    android:layout_height=\\\"wrap_content\\\"\\n\" +\n                \"                    android:padding=\\\"10dp\\\"\\n\" +\n                \"                    android:text=\\\"navigation\\\" />\\n\" +\n                \"\\n\" +\n                \"                <FrameLayout\\n\" +\n                \"                    android:id=\\\"@+id/contentPanel\\\"\\n\" +\n                \"                    android:layout_width=\\\"match_parent\\\"\\n\" +\n                \"                    android:layout_height=\\\"wrap_content\\\" />\\n\" +\n                \"\\n\" +\n                \"\\n\" +\n                \"                <androidx.cardview.widget.CardView\\n\" +\n                \"                    app:cardCornerRadius=\\\"8dp\\\"\\n\" +\n                \"                    app:cardElevation=\\\"10dp\\\"\\n\" +\n                \"                    android:layout_width=\\\"match_parent\\\"\\n\" +\n                \"                    android:layout_height=\\\"wrap_content\\\">\\n\" +\n                \"\\n\" +\n                \"                    <TextView\\n\" +\n                \"                        android:layout_width=\\\"wrap_content\\\"\\n\" +\n                \"                        android:layout_height=\\\"wrap_content\\\"\\n\" +\n                \"                        android:padding=\\\"10dp\\\"\\n\" +\n                \"                        android:text=\\\"startA\\\\n\\\\n\\\\n\\\\nctivityForResult\\\" />\\n\" +\n                \"                </androidx.cardview.widget.CardView>\\n\" +\n                \"            </LinearLayout>\\n\" +\n                \"        </com.xxf.view.view.ReverseFrameLayout>\\n\" +\n                \"\\n\" +\n                \"        <TextView\\n\" +\n                \"            android:layout_width=\\\"wrap_content\\\"\\n\" +\n                \"            android:layout_height=\\\"wrap_content\\\"\\n\" +\n                \"            android:text=\\\"hgdghfdgdf\\n\" +\n                \"\\\\nhsfdhgfghdf\\\\nhgfdhgfdgdgf\\\\nsdhggfd\\\\bgfdhgd\\\\nhsdfd\\\\\\n\" +\n                \"nsdfhsfd\\\\nsdhgs\\\" />\\n\" +\n                \"    </LinearLayout>\\n\" +\n                \"</ScrollView>\";\n        InputStream is = null;", "        try {\n            is =new ByteArrayInputStream(str.getBytes());\n            Node node=DocumentBuilderFactory.newInstance().newDocumentBuilder().parse(is);\n            test(node);\n        } catch (Throwable ex) {\n            ex.printStackTrace();\n        } finally {\n            FileUtils.closeQuietly(is);\n        }\n\n    }\n\n\n    private static void test(Node node) {", "        if (node.getNodeType() == Node.ELEMENT_NODE) {\n            NamedNodeMap attributes = node.getAttributes();\n            for (int i = 0; i <attributes.getLength() ; i++) {\n                Node item = attributes.item(i);\n                String nodeName = item.getNodeName();\n                if(Arrays.asList(\"android:text\",\"android:hint\",\"app:leftText\",\"app:rightText\",\"app:titleText\").contains(nodeName)) {\n                    String value =item.getNodeValue();\n                    if (value!=null && !value.contains(\"@string\")) {\n                        System.out.println(\"=========>\" + nodeName+\"  \"+value);\n                    }\n                }\n            }\n        }\n        NodeList children = node.getChildNodes();", "        for (int j = 0; j < children.getLength(); j++) {\n            test(children.item(j));\n        }\n    }\n\n    /**\n     * \u67e5\u627e\u5230\u91cd\u590d\u7684\u5b57\u7b26\u4e32\u8bb0\u5f55\n     *\n     * @param file\n     * @return        //value keys\n     */", "   public static Map<String, List<String>> getRepeatRecords(VirtualFile file){\n       //value keys\n        Map<String, List<String>> recordMap=new LinkedHashMap<>();\n        InputStream is = null;\n        try {\n            is = file.getInputStream();\n            Node node= DocumentBuilderFactory.newInstance().newDocumentBuilder().parse(is);\n            findStringNode(node,recordMap);\n        } catch (Throwable ex) {\n            ex.printStackTrace();\n        } finally {\n            FileUtils.closeQuietly(is);\n        }\n\n       //\u91cd\u590d\u7684ids\n       Map<String, List<String>> repeatMap=new LinkedHashMap<>();", "       for(Map.Entry<String,List<String>> entry : recordMap.entrySet()){\n           if(entry.getValue()!=null&&entry.getValue().size()>1) {\n               repeatMap.put(entry.getKey(), entry.getValue());\n           }\n       }\n        return repeatMap;\n    }\n\n    private static void findStringNode(Node node, Map<String, List<String>> recordMap){\n        if (node.getNodeType() == Node.ELEMENT_NODE\n                &&\"string\".equals(node.getNodeName())) {\n            Node key = node.getAttributes().getNamedItem(\"name\");", "        if (node.getNodeType() == Node.ELEMENT_NODE\n                &&\"string\".equals(node.getNodeName())) {\n            Node key = node.getAttributes().getNamedItem(\"name\");\n            if(key!=null) {\n                String valueKey=node.getTextContent();\n                List<String> ids=recordMap.getOrDefault(valueKey,new ArrayList<>());\n                ids.add(key.getNodeValue());\n                recordMap.put(valueKey,ids);\n            }\n        }\n        NodeList children = node.getChildNodes();", "        for (int j = 0; j < children.getLength(); j++) {\n            findStringNode(children.item(j),recordMap);\n        }\n    }\n}\n"]}
{"filename": "src/com/xxf/i18n/plugin/utils/FileUtils.java", "chunked_list": ["package com.xxf.i18n.plugin.utils;\n\nimport com.intellij.openapi.project.Project;\nimport com.intellij.openapi.vfs.VirtualFile;\n\nimport java.io.*;\n\n/**\n * Created by xyw on 2023/5/21.\n */\npublic class FileUtils {\n", " * Created by xyw on 2023/5/21.\n */\npublic class FileUtils {\n\n    public static VirtualFile getConfigPathDir(Project currentProject){\n        VirtualFile ideaConfigDir= currentProject.getProjectFile().getParent();\n        return ideaConfigDir;\n    }\n\n    public static String getConfigPathFileName(){\n        String configFileName=\"xxf_i18n_plugin_path.txt\";\n        return configFileName;\n    }", "    public static String getConfigPathFileName(){\n        String configFileName=\"xxf_i18n_plugin_path.txt\";\n        return configFileName;\n    }\n    public static VirtualFile getConfigPathFile(Project currentProject){\n        VirtualFile ideaConfigDir=getConfigPathDir(currentProject);\n        String configFileName=getConfigPathFileName();\n        VirtualFile pathConfigFile = ideaConfigDir.findChild(configFileName);\n        return pathConfigFile;\n    }\n    public static String getConfigPathValue(Project currentProject){\n        VirtualFile pathConfigFile = getConfigPathFile(currentProject);\n        return getString(pathConfigFile);\n    }\n", "    public static String getConfigPathValue(Project currentProject){\n        VirtualFile pathConfigFile = getConfigPathFile(currentProject);\n        return getString(pathConfigFile);\n    }\n\n    public static String getString(VirtualFile file){\n        try {\n            return new String(file.contentsToByteArray(), \"utf-8\");\n        } catch (Throwable e) {\n            e.printStackTrace();\n        }\n        return null;\n    }\n    /*\n    * append\u5185\u5bb9\u5230\u76ee\u6807\u6587\u4ef6\n    * */", "    public static void replaceContentToFile(String path, String con) {\n        try {\n            OutputStreamWriter osw = new OutputStreamWriter(new FileOutputStream(path), \"UTF-8\");\n            BufferedWriter bw = new BufferedWriter(osw);\n            bw.write(con);\n            bw.flush();\n            bw.close();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n\n", "    public static void closeQuietly(Closeable c) {\n        if(c != null) {\n            try {\n                c.close();\n            } catch (IOException var2) {\n                ;\n            }\n        }\n\n    }\n\n}\n"]}
{"filename": "src/com/xxf/i18n/plugin/bean/StringEntity.java", "chunked_list": ["package com.xxf.i18n.plugin.bean;\n\n/**\n * \u5b57\u7b26\u4e32\u5b9e\u4f53\u7c7b\n * Created by xyw on 2023/5/21.\n */\npublic class StringEntity {\n    private String id;\n    private String value;\n\n    public StringEntity() {\n    }\n\n    public StringEntity(String id, String value) {\n        this.id = id;\n        this.value = value;\n    }\n", "    public String getId() {\n        return id;\n    }\n\n    public void setId(String id) {\n        this.id = id;\n    }\n\n    public String getValue() {\n        return value;\n    }\n", "    public String getValue() {\n        return value;\n    }\n\n    public void setValue(String value) {\n        this.value = value;\n    }\n}\n"]}
