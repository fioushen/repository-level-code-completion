{"filename": "posts/exercicios/ExercicioHeranca/code/Mamifero.java", "chunked_list": ["\n\npublic class Mamifero extends Animal {\n\n    public void mamar() {\n    }\n\n}\n"]}
{"filename": "posts/exercicios/ExercicioHeranca/code/Morcego.java", "chunked_list": ["\n\npublic class Morcego  extends Mamifero{\n\n}\n"]}
{"filename": "posts/exercicios/ExercicioHeranca/code/code1.java", "chunked_list": ["Animal a1 = new Animal();\nAnimal a2 = new Mamifero();\nAnimal a3 = new Cachorro();\nAnimal a4 = new Morcego();\n\nMamifero m1 = new Animal();\nMamifero m2 = new Mamifero();\nMamifero m3 = new Cachorro();\nMamifero m4 = new Morcego();\n", "Mamifero m4 = new Morcego();\n\nCachorro c1 = new Animal();\nCachorro c2 = new Mamifero();\nCachorro c3 = new Cachorro();\nCachorro c4 = new Morcego();\n\nMorcego mo1 = new Animal();\nMorcego mo2 = new Mamifero();\nMorcego mo3 = new Cachorro();", "Morcego mo2 = new Mamifero();\nMorcego mo3 = new Cachorro();\nMorcego mo4 = new Morcego();\n"]}
{"filename": "posts/exercicios/ExercicioHeranca/code/Animal.java", "chunked_list": ["\n\npublic class Animal {\n\n    public void mover() {\n    }\n\n}\n"]}
{"filename": "posts/exercicios/ExercicioHeranca/code/code2.java", "chunked_list": ["Animal a5 = new Cachorro();\na5.mover();\na5.mamar();\nCachorro c5 = (Cachorro) a5;\nc5.mover();\nc5.mamar();\n\nMamifero m5 = new Morcego();\nm5.mover();\nm5.mamar();", "m5.mover();\nm5.mamar();\nMorcego mo5 = (Morcego) m5;\nmo5.mover();\nmo5.mamar();\n\nCachorro c6 = new Cachorro();\nMamifero m6 = c6;\nAnimal a6 = m6;\nMorcego mo6 = a6;", "Animal a6 = m6;\nMorcego mo6 = a6;\n"]}
{"filename": "posts/exercicios/ExercicioHeranca/code/Cachorro.java", "chunked_list": ["\n\npublic class Cachorro  extends Mamifero {\n\n}\n"]}
{"filename": "posts/code/abstract/Gerente.java", "chunked_list": ["public class Gerente extends Funcionario implements Usuario {\n    //...\n    public boolean autenticar(){\n        return true;\n    }       \n}\n"]}
{"filename": "posts/code/abstract/Funcionario.java", "chunked_list": ["public class Funcionario {\n    //...\n}\n"]}
{"filename": "posts/code/abstract/Seguranca.java", "chunked_list": ["public class Seguranca extends Funcionario {\n    //...\n}\n"]}
{"filename": "posts/code/abstract/Cliente.java", "chunked_list": ["public class Cliente {\n    //...    \n}"]}
{"filename": "posts/code/abstract/AutenticadorDeUsuario.java", "chunked_list": ["public class AutenticadorDeUsuario {\n    public boolean autentica ( Usuario u ) {\n        // implementa\u00e7\u00e3o\n    }\n}\n"]}
{"filename": "posts/code/abstract/PessoaJuridica.java", "chunked_list": ["public class PessoaJuridica extends Cliente implements Usuario {\n    //...    \n    public boolean autenticar(){\n        return true;\n    }   \n}\n"]}
{"filename": "posts/code/abstract/PessoaFisica.java", "chunked_list": ["public class PessoaFisica extends Cliente {\n    //...\n}\n"]}
{"filename": "posts/code/abstract/Usuario.java", "chunked_list": ["public interface Usuario {\n    boolean autenticar();    \n}\n"]}
{"filename": "posts/code/quadrado/Quadrado.java", "chunked_list": ["public class Quadrado {\n    private Cor cor;\n    private String tamanho;\n    \n    public Quadrado(Cor cor, String tamanho) {\n        setTamanho(tamanho);\n        setCor(cor);\n    }\n    public Cor getCor() {\n        return cor;\n    }", "    public Cor getCor() {\n        return cor;\n    }\n    public String getTamanho() {\n        return tamanho;\n    }\n    public void setCor(Cor cor) {\n        this.cor = cor;\n    }\n    public void setTamanho(String tamanho) {\n        if(Integer.parseInt(tamanho)>0){\n            this.tamanho = tamanho;    \n        }        \n    }    \n}\n\n\n", "    public void setTamanho(String tamanho) {\n        if(Integer.parseInt(tamanho)>0){\n            this.tamanho = tamanho;    \n        }        \n    }    \n}\n\n\n"]}
{"filename": "posts/code/quadrado/Cor.java", "chunked_list": ["public enum Cor {\n    \n    AMARELO(1), AZUL(2), VERDE(3) , VERMELHO(4);\n    \n    private final int valor;\n    private Cor(int valor){\n        this.valor = valor;\n    }\n    public int getValor() {\n        return valor;\n    }\n\n}\n", "    public int getValor() {\n        return valor;\n    }\n\n}\n"]}
{"filename": "posts/code/threads/App.java", "chunked_list": ["public class App {\n    public static void main(String[] args) throws Exception {\n        System.out.println(\"inicio main\");        \n        MinhaThread ta = new MinhaThread(\"A\"); \n        ta.start();\n        MinhaThread tb = new MinhaThread(\"B\"); \n        tb.start();\n\n        Thread t1 = new Thread(new MeuRunnable(\"A\")); \n        t1.start();\n\n        Thread t2 = new Thread(new MeuRunnable(\"B\")); \n        t2.start();\n\n        System.out.println(\"fim main\");\n    }\n}\n"]}
{"filename": "posts/code/threads/MinhaThread.java", "chunked_list": ["public class MinhaThread  extends Thread{\n    private String id;\n\n    public MinhaThread(String id) {        \n        this.id = id;\n    }\n\n    @Override\n    public void run() {\n        for(int x=0;x<1000000;x++){ \n            \n            System.out.println(Thread.currentThread().toString()+\"Thread \"+id+\": \"+x); \n        } \n    }\n    \n}\n", "    public void run() {\n        for(int x=0;x<1000000;x++){ \n            \n            System.out.println(Thread.currentThread().toString()+\"Thread \"+id+\": \"+x); \n        } \n    }\n    \n}\n"]}
{"filename": "posts/code/threads/MeuRunnable.java", "chunked_list": ["public class MeuRunnable implements Runnable {\n    private String id;\n\n    public MeuRunnable(String id) {\n        this.id = id;\n    }\n\n    @Override\n    public void run() {\n        for(int x=0;x<1000000;x++){ \n            System.out.println(Thread.currentThread().toString()+\"Runnable \"+id+\": \"+x); \n        } \n    }    \n}\n", "    public void run() {\n        for(int x=0;x<1000000;x++){ \n            System.out.println(Thread.currentThread().toString()+\"Runnable \"+id+\": \"+x); \n        } \n    }    \n}\n"]}
{"filename": "posts/code/collections/SortedSetExample.java", "chunked_list": ["import java.util.SortedSet;\nimport java.util.TreeSet;\n\npublic class SortedSetExample {\n\n  public static void main(String[] args) {\n    SortedSet<Integer> conjunto1 = new TreeSet<>();\n    conjunto1.add(1);\n    conjunto1.add(5);\n    conjunto1.add(2);\n    conjunto1.add(3);\n    conjunto1.add(9);\n    System.out.println(\"Elementos menores que 7 no conjunto1: \" + conjunto1.headSet(7));\n\n    SortedSet<String> conjunto2 = new TreeSet<>();\n    conjunto2.add(\"Geeks\");\n    conjunto2.add(\"For\");\n    conjunto2.add(\"Geeks\");\n    conjunto2.add(\"Code\");\n    conjunto2.add(\"It\");\n    System.out.println(\"Elementos menores que Z no conjunto2: \" + conjunto2.headSet(\"Z\"));\n  }\n}"]}
{"filename": "posts/code/collections/Predicate.java", "chunked_list": ["Predicate<String> isNull = Objects::isNull;\nPredicate<String> isEmpty = String::isEmpty;\nPredicate<String> isNullOrEmpty = isNull.or(isEmpty);\n\nCollection<String> strings = new ArrayList<>();\nstrings.add(null);\nstrings.add(\"\");\nstrings.add(\"one\");\nstrings.add(\"two\");\nstrings.add(\"\");", "strings.add(\"two\");\nstrings.add(\"\");\nstrings.add(\"three\");\nstrings.add(null);\n\nSystem.out.println(\"strings = \" + strings);\nstrings.removeIf(isNullOrEmpty);\nSystem.out.println(\"filtered strings = \" + strings);"]}
{"filename": "posts/code/collections/ListExample.java", "chunked_list": ["import java.util.ArrayList;\nimport java.util.List;\n\nclass ListExample {\n    public static void main(String[] args){\n        int n = 5;\n        List<Integer> arrli = new ArrayList<Integer>(n);\n        for (int i = 1; i <= n; i++){\n            arrli.add(i);\n        }\n        System.out.println(arrli);\n        arrli.remove(3);\n        System.out.println(arrli);\n        arrli.set(1, 10);\n        System.out.println(arrli);", "        for (Integer integer : arrli.subList(1, 3)) {\n            System.out.print(integer + \" \");\n        }\n\n    }\n}"]}
{"filename": "posts/code/collections/Usuario.java", "chunked_list": ["import java.util.SortedSet;\nimport java.util.TreeSet;\n\npublic class Usuario implements Comparable {\n    public String login;\n    public String nome;\n\n    public Usuario(String login, String nome) {\n        this.login = login;\n        this.nome = nome;\n    }\n\n    @Override", "    public int hashCode() {\n        final int prime = 31;\n        int result = 1;\n        result = prime * result + ((login == null) ? 0 : login.hashCode());\n        return result;\n    }\n\n    @Override\n    public boolean equals(Object obj) {\n        if (this == obj)\n            return true;", "    public boolean equals(Object obj) {\n        if (this == obj)\n            return true;\n        if (obj == null)\n            return false;\n        if (getClass() != obj.getClass())\n            return false;\n        Usuario other = (Usuario) obj;\n        if (login == null) {\n            if (other.login != null)\n                return false;", "        if (login == null) {\n            if (other.login != null)\n                return false;\n        } else if (!login.equals(other.login))\n            return false;\n        return true;\n    }\n\n    @Override\n    public int compareTo(Object o) {\n        if(o instanceof Usuario){\n            Usuario u = (Usuario)o;\n            return this.nome.compareTo(u.nome);\n        }\n        return 0;\n    }\n\n    \n\n    @Override", "    public int compareTo(Object o) {\n        if(o instanceof Usuario){\n            Usuario u = (Usuario)o;\n            return this.nome.compareTo(u.nome);\n        }\n        return 0;\n    }\n\n    \n\n    @Override", "    public String toString() {\n        return \"Usuario [login=\" + login + \", nome=\" + nome + \"]\";\n    }\n\n    public static void main(String[] args) {\n        Usuario u = new Usuario(\"aaa\",\"Leandro\");\n        SortedSet<Usuario> conjunto1 = new TreeSet<>();\n        conjunto1.add(new Usuario(\"aaa\", \"CCCCC\"));\n        conjunto1.add(new Usuario(\"ccc\", \"BBBB1\"));\n        conjunto1.add(new Usuario(\"ccc\", \"BBBB1\"));\n        conjunto1.add(new Usuario(\"bbb\", \"AAAAA\"));\n\n        System.out.println(conjunto1);\n         \n    }\n\n    \n\n}\n"]}
{"filename": "posts/code/freetime/Lanchonete.java", "chunked_list": ["package br.edu.ifba.saj.ads.poo;\n\nimport java.util.ArrayList;\n\npublic class Lanchonete {\n\n    private ArrayList<Item> itens;\n    private ArrayList<Pedido> pedidos;\n    \n\n    public Lanchonete(){\n        itens = new ArrayList<>();\n        pedidos = new ArrayList<>();\n    }\n", "    public void addItem(Item item) {\n        itens.add(item);\n    }\n\n    public ArrayList<Item> getItens() {\n        return itens;\n    }\n\n    public ArrayList<Item> retirarLanche(QRCode comprovante) {\n        return comprovante.getPedido().getItens();\n    }\n", "    public Pedido criarNovoPedido(Cliente cliente){\n        Pedido pedido = new Pedido(pedidos.size(),cliente);\n        pedidos.add(pedido);\n        cliente.addPedido(pedido);\n        returno pedido;\n    }\n\n}\n"]}
{"filename": "posts/code/freetime/App.java", "chunked_list": ["/*----------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See LICENSE in the project root for license information.\n *---------------------------------------------------------------------------------------*/\n\npackage br.edu.ifba.saj.ads.poo;\n\nimport java.util.ArrayList;\n\nimport org.slf4j.Logger;", "\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\npublic class App {\n    \n    private static final Logger LOGGER = LoggerFactory.getLogger(App.class);\n\n    public static void main(String[] args) {\n        \n        Lanchonete lanchonete = new Lanchonete();\n        Item item = new Item(\"Coca\", 1);\n        lanchonete.addItem(item);\n        ArrayList<Item> itens = lanchonete.getItens();\n        Cliente cliente = new Cliente(\"Leandro\");\n        Pedido pedido = lanchonete.criarNovoPedido(cliente);\n        pedido.addItem(itens.get(0));\n        pedido.realizarPagamento();\n        lanchonete.retirarLanche(pedido.getComprovante());\n\n\n    }\n}\n", "    public static void main(String[] args) {\n        \n        Lanchonete lanchonete = new Lanchonete();\n        Item item = new Item(\"Coca\", 1);\n        lanchonete.addItem(item);\n        ArrayList<Item> itens = lanchonete.getItens();\n        Cliente cliente = new Cliente(\"Leandro\");\n        Pedido pedido = lanchonete.criarNovoPedido(cliente);\n        pedido.addItem(itens.get(0));\n        pedido.realizarPagamento();\n        lanchonete.retirarLanche(pedido.getComprovante());\n\n\n    }\n}\n"]}
{"filename": "posts/code/freetime/QRCode.java", "chunked_list": ["package br.edu.ifba.saj.ads.poo;\n\npublic class QRCode {\n    private Pedido pedido;\n\n    public QRCode(Pedido pedido) {\n        this.pedido = pedido;\n    }\n    //metodo exibir a imagem do QRCode basada no pedido\n    public void getImage(){        \n\n    }", "    public void getImage(){        \n\n    }\n    public Pedido getPedido() {\n        return pedido;\n    }\n\n}\n"]}
{"filename": "posts/code/freetime/Cliente.java", "chunked_list": ["package br.edu.ifba.saj.ads.poo;\n\nimport java.util.ArrayList;\n\npublic class Cliente {\n    private String nome;\n    private ArrayList<Pedido> pedidos;\n\n    public Cliente(String nome) {\n        this.nome = nome;\n        this.pedidos = new ArrayList<>();\n    }\n", "    public String getNome() {\n        return nome;\n    }\n\n    public void setNome(String nome) {\n        this.nome = nome;\n    }\n    \n    public void addPedido(Pedido pedido){\n        pedidos.add(pedido);\n    }\n    \n\n}\n", "    public void addPedido(Pedido pedido){\n        pedidos.add(pedido);\n    }\n    \n\n}\n"]}
{"filename": "posts/code/freetime/Pedido.java", "chunked_list": ["package br.edu.ifba.saj.ads.poo;\n\nimport java.util.ArrayList;\n\npublic class Pedido {\n    private Cliente cliente;\n    private ArrayList<Item> itens;\n    private Boolean pago = false;\n    private int codigo;\n\n    public Pedido(int codigo, Cliente cliente) {\n        this.codigo = codigo;\n        this.cliente = cliente;\n        this.itens = new ArrayList<>();\n    }\n", "    public Cliente getCliente() {\n        return cliente;\n    }\n\n    public void setCliente(Cliente cliente) {\n        this.cliente = cliente;\n    }\n\n    public void addItem(Item item) {\n        itens.add(item);\n    }\n", "    public void addItem(Item item) {\n        itens.add(item);\n    }\n\n    public void realizarPagamento() {\n        //logica para registro de pagamento\n        pago = true;\n    }\n\n    public Boolean isPago() {\n        return pago;\n    }\n", "    public Boolean isPago() {\n        return pago;\n    }\n\n    public QRCode getComprovante() {\n        if(!isPago()){\n            return null;\n        }else{\n            return new QRCode(this);\n        }\n    }\n\n    public ArrayList<Item> getItens() {\n        return itens;\n    }\n", "    public float getTotalPedido(){\n        float total = 0;\n        for (Item itempedido : itens ) {\n            total+=itempedido.getPreco();            \n        }\n        return total;\n    }\n\n    public int getCodigo() {\n        return codigo;\n    }\n\n\n}\n", "    public int getCodigo() {\n        return codigo;\n    }\n\n\n}\n"]}
{"filename": "posts/code/freetime/Item.java", "chunked_list": ["package br.edu.ifba.saj.ads.poo;\n\npublic class Item {\n    private String nome;\n    private float preco;\n\n    public Item(String nome, float preco) {\n        this.nome = nome;\n        this.preco = preco;\n    }\n", "    public String getNome() {\n        return nome;\n    }\n\n    public void setNome(String nome) {\n        this.nome = nome;\n    }\n\n    public float getPreco() {\n        return preco;\n    }\n", "    public float getPreco() {\n        return preco;\n    }\n\n    public void setPreco(float preco) {\n        this.preco = preco;\n    }\n\n    @Override\n    public int hashCode() {\n        final int prime = 31;\n        int result = 1;\n        result = prime * result + ((nome == null) ? 0 : nome.hashCode());\n        result = prime * result + Float.floatToIntBits(preco);\n        return result;\n    }\n\n    @Override", "    public int hashCode() {\n        final int prime = 31;\n        int result = 1;\n        result = prime * result + ((nome == null) ? 0 : nome.hashCode());\n        result = prime * result + Float.floatToIntBits(preco);\n        return result;\n    }\n\n    @Override\n    public boolean equals(Object obj) {\n        if (this == obj)\n            return true;", "    public boolean equals(Object obj) {\n        if (this == obj)\n            return true;\n        if (obj == null)\n            return false;\n        if (getClass() != obj.getClass())\n            return false;\n        Item other = (Item) obj;\n        if (nome == null) {\n            if (other.nome != null)\n                return false;", "        if (nome == null) {\n            if (other.nome != null)\n                return false;\n        } else if (!nome.equals(other.nome))\n            return false;\n        if (Float.floatToIntBits(preco) != Float.floatToIntBits(other.preco))\n            return false;\n        return true;\n    }\n\n    \n\n}\n"]}
{"filename": "posts/code/exception/TesteErro.java", "chunked_list": ["class TesteErro {\n    public static void main(String[] args) {\n        System.out.println(\"inicio do main\");\n        metodo1();\n        System.out.println(\"fim do main\");\n    }\n    static void metodo1() {\n        System.out.println(\"inicio do metodo1\");\n        metodo2();\n        System.out.println(\"fim do metodo1\");\n    }\n    static void metodo2() {\n        System.out.println(\"inicio do metodo2\");\n        int[] array = new int[10];", "        for (int i = 0; i <= 15; i++) {\n            array[i] = i;\n            System.out.println(i);\n        }\n        System.out.println(\"fim do metodo2\");\n    }\n}\n"]}
{"filename": "posts/code/av1reserva/Assento.java", "chunked_list": ["package posts.code.av1reserva;\n\npublic class Assento {\n\n    public Reserva criarReserva(Passageiro passageiro) {\n        return null;\n    }\n\n}\n"]}
{"filename": "posts/code/av1reserva/Voo.java", "chunked_list": ["package posts.code.av1reserva;\n\nimport java.util.ArrayList;\n\npublic class Voo {\n\n    public ArrayList<Assento> getAssentosDisponiveis() {\n        return null;\n    }\n\n}\n"]}
{"filename": "posts/code/av1reserva/Reserva.java", "chunked_list": ["package posts.code.av1reserva;\n\npublic class Reserva {\n\n    public int valor() {\n        return 0;\n    }\n\n}\n"]}
{"filename": "posts/code/av1reserva/EmpresaAerea.java", "chunked_list": ["package posts.code.av1reserva;\n\nimport java.util.ArrayList;\n\npublic class EmpresaAerea {\n\n    public ArrayList<Voo> pesquisaVoo(String string) {\n        //devolver lista de voos\n        return null;\n    }\n\n}\n"]}
{"filename": "posts/code/av1reserva/Passageiro.java", "chunked_list": ["package posts.code.av1reserva;\n\npublic class Passageiro {\n\n}\n"]}
{"filename": "posts/code/av1reserva/Principal.java", "chunked_list": ["package posts.code.av1reserva;\n\nimport java.util.ArrayList;\n\npublic class Principal {\n    //Escreve tamb\u00e9m o c\u00f3digo de uma classe principal que ir\u00e1 fazer uso das classes que representam os conceitos para exemplificar a realiza\u00e7\u00e3o de uma pesquisa de voo, uma reserva de duas passagens a\u00e9reas (escolhendo os assentos dispon\u00edveis) e verificando o valor total das reservas.\n    public static void main(String[] args) {\n        //pesquisa de voo\n        EmpresaAerea empresaAerea = new EmpresaAerea();\n        ArrayList<Voo> voos = empresaAerea.pesquisaVoo(\"SSA\");\n        //escolhe voo\n        Voo vooescolhido  = voos.get(0);\n        //escolhendo os assentos dispon\u00edveis\n        Assento assento1 = vooescolhido.getAssentosDisponiveis().get(0);\n        Assento assento2 = vooescolhido.getAssentosDisponiveis().get(1);\n        //uma reserva de duas passagens a\u00e9reas\n        Reserva reserva1 = assento1.criarReserva(new Passageiro());\n        Reserva reserva2 = assento2.criarReserva(new Passageiro());\n        \n        //verificando o valor total das reservas\n        double valorTotal = reserva1.valor() + reserva2.valor();\n        \n    }\n    \n}\n"]}
{"filename": "posts/code/modelagemDVD/DVD.java", "chunked_list": ["package modelagemDVD;\n\n/*\nUtilizando os conhecimentos de O.O. construa um programa utilizando as informa\u00e7\u00f5es abaixo. As caracter\u00edsticas de um DVD devem ser definidas de acordo com as informa\u00e7\u00f5es a seguir. Ao ser criado o DVD inicialmente est\u00e1 desligado. Seu volume pode alterar de 1 a 5 sendo que o n\u00edvel inicial \u00e9 2. \u00c9 poss\u00edvel inserir um filme no DVD. O filme possui as seguintes carater\u00edsticas: nome, categoria e dura\u00e7\u00e3o.\n\nAs seguintes opera\u00e7\u00f5es podem ser realizadas pelo DVD:\n\nligar e desligar;\naumentar e diminuir volume;\ninserir filme;", "aumentar e diminuir volume;\ninserir filme;\nplay e stop.\nO programa deve obedecer as seguintes regras:\n\nS\u00f3 \u00e9 poss\u00edvel fazer qualquer uma destas opera\u00e7\u00f5es se o DVD estiver ligado;\nS\u00f3 \u00e9 poss\u00edvel dar play no DVD se existir algum filme inserido;\nS\u00f3 \u00e9 poss\u00edvel dar stop se o DVD estiver em play;\nAo dar play deve aparecer o nome e a dura\u00e7\u00e3o do filme que est\u00e1 sendo exibido.\n", "Ao dar play deve aparecer o nome e a dura\u00e7\u00e3o do filme que est\u00e1 sendo exibido.\n\n */\npublic class DVD {\n    public boolean ligado;\n    private int volume;\n    private Filme filme;\n    private boolean emPlay;\n    //Ao ser criado o DVD inicialmente est\u00e1 desligado. Seu volume pode alterar de 1 a 5 sendo que o n\u00edvel inicial \u00e9 2.\n    public DVD(){\n        ligado = false;\n        volume = 2;\n        emPlay = false;\n    }\n    //Seu volume pode alterar de 1 a 5 ", "    public void aumentarVolume(){\n        if(ligado){\n            if(volume<5){\n                volume++;\n            }\n        }\n    }\n    //Seu volume pode alterar de 1 a 5 \n    public void diminuirVolume(){\n        if(ligado && volume>1){\n            volume--;\n        }\n    }\n    //m\u00e9todo de acesso", "    public void diminuirVolume(){\n        if(ligado && volume>1){\n            volume--;\n        }\n    }\n    //m\u00e9todo de acesso\n    public int getVolume() {\n        return volume;\n    }\n    //m\u00e9todo de acesso\n    public void setVolume(int volume) {", "    public void setVolume(int volume) {\n        if(ligado){\n            if(this.volume<=5 && this.volume>=1){\n                this.volume=volume;\n            }\n        }\n    }\n\n    //\u00c9 poss\u00edvel inserir um filme no DVD. \n    public void inserirFilme(Filme filme){\n        if(ligado){", "    public void inserirFilme(Filme filme){\n        if(ligado){\n            if(this.filme==null){\n                this.filme = filme;\n            }\n        }\n    }\n    public Filme removerFilme(){\n        stop();\n        Filme filmeRemovido = this.filme;\n        this.filme = null;\n        return filmeRemovido; \n    }\n\n    //ligar e desligar;", "    public void ligar(){\n        ligado = true;\n    }\n    public void desligar(){                \n        ligado = false;\n    }\n    //play e stop.\n    //S\u00f3 \u00e9 poss\u00edvel dar play no DVD se existir algum filme inserido\n    //Ao dar play deve aparecer o nome e a dura\u00e7\u00e3o do filme que est\u00e1 sendo exibido.\n    public void play(){\n        if(ligado){", "    public void play(){\n        if(ligado){\n            if(filme!= null){\n                emPlay = true;\n                System.out.println(filme.getNome()+\" - \"+filme.getDuracao());\n            }\n        }\n    }\n    //S\u00f3 \u00e9 poss\u00edvel dar stop se o DVD estiver em play;\n    public void stop(){\n        if(ligado){", "    public void stop(){\n        if(ligado){\n            if(emPlay){\n                emPlay = false;\n            }\n        }\n    }\n    @Override\n    public String toString() {\n        return \"DVD [ligado=\" + ligado + \", volume=\" + volume + \", filme=\" + filme + \", emPlay=\" + emPlay + \"]\";\n    }\n", "    public String toString() {\n        return \"DVD [ligado=\" + ligado + \", volume=\" + volume + \", filme=\" + filme + \", emPlay=\" + emPlay + \"]\";\n    }\n\n    public boolean isLigado() {\n        return ligado;\n    }\n    public void setLigado(boolean ligado) {\n        this.ligado = ligado;\n    }    \n}"]}
{"filename": "posts/code/modelagemDVD/Filme.java", "chunked_list": ["package modelagemDVD;\n/*\nO filme possui as seguintes carater\u00edsticas: nome, categoria e dura\u00e7\u00e3o.\n */\npublic class Filme {\n    private String nome;\n    private String categoria;\n    private double duracao;\n    \n    public Filme(String nome, String categoria, double duracao) {\n        this.nome = nome;\n        this.categoria = categoria;\n        this.duracao = duracao;\n    }\n", "    public String getNome() {\n        return nome;\n    }\n    public double getDuracao() {\n        return duracao;\n    }\n    public String getCategoria() {\n        return categoria;\n    }\n\n    @Override", "    public String toString() {\n        return \"Filme [nome=\" + nome + \", categoria=\" + categoria + \", duracao=\" + duracao + \"]\";\n    }\n\n    \n\n    \n}\n"]}
{"filename": "posts/code/modelagemDVD/Mesa.java", "chunked_list": ["package modelagemDVD;\n\npublic class Mesa {\n    public static void main(String[] args) {\n        DVD meuDVD = new DVD();\n        \n        Filme filme1 = new Filme(\"It\", \"Terror\", 600);\n        Filme filme2 = new Filme(\"It 2\", \"Terror\", 800);\n        System.out.println(meuDVD.toString());\n        meuDVD.inserirFilme(filme1);\n        meuDVD.play();\n        System.out.println(meuDVD);\n        meuDVD.ligar();\n        meuDVD.inserirFilme(filme1);\n        //meuDVD.volume = 100;\n        meuDVD.play();\n        meuDVD.aumentarVolume();\n        meuDVD.getVolume();\n        meuDVD.aumentarVolume();\n        meuDVD.aumentarVolume();\n        meuDVD.aumentarVolume();\n        meuDVD.aumentarVolume();\n        meuDVD.aumentarVolume();\n        meuDVD.diminuirVolume();\n        meuDVD.diminuirVolume();\n        meuDVD.diminuirVolume();\n        meuDVD.diminuirVolume();\n        meuDVD.diminuirVolume();\n        meuDVD.diminuirVolume();\n        meuDVD.diminuirVolume();\n        meuDVD.diminuirVolume();\n        meuDVD.diminuirVolume();\n        meuDVD.diminuirVolume();\n        System.out.println(meuDVD);\n        Filme filmeDevolvido = meuDVD.removerFilme();\n        meuDVD.inserirFilme(filmeDevolvido);\n        meuDVD.play();\n        filmeDevolvido = meuDVD.removerFilme();\n        meuDVD.inserirFilme(filme2);\n        meuDVD.play();\n        filmeDevolvido = meuDVD.removerFilme();\n        meuDVD.inserirFilme(filme1);\n        meuDVD.play();        \n    }\n}\n"]}
