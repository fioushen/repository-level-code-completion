{"filename": "src/test/java/com/example/ethbeijing/EthbeijingApplicationTests.java", "chunked_list": ["package com.example.ethbeijing;\n\nimport org.junit.jupiter.api.Test;\nimport org.springframework.boot.test.context.SpringBootTest;\n\n@SpringBootTest\nclass EthbeijingApplicationTests {\n\n    @Test\n    void contextLoads() {", "    @Test\n    void contextLoads() {\n    }\n\n}\n"]}
{"filename": "src/main/java/com/example/ethbeijing/EthbeijingApplication.java", "chunked_list": ["package com.example.ethbeijing;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\n\n@SpringBootApplication\npublic class EthbeijingApplication {\n\n    public static void main(String[] args) {\n        SpringApplication.run(EthbeijingApplication.class, args);\n    }\n\n}\n", "    public static void main(String[] args) {\n        SpringApplication.run(EthbeijingApplication.class, args);\n    }\n\n}\n"]}
{"filename": "src/main/java/com/example/ethbeijing/Controller/TransactionController.java", "chunked_list": ["package com.example.ethbeijing.Controller;\n\nimport com.example.ethbeijing.common.R;\n\nimport com.example.ethbeijing.entity.Transaction;\nimport lombok.extern.slf4j.Slf4j;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.data.domain.PageRequest;\nimport org.springframework.data.domain.Pageable;\nimport org.springframework.data.mongodb.core.MongoTemplate;", "import org.springframework.data.domain.Pageable;\nimport org.springframework.data.mongodb.core.MongoTemplate;\nimport org.springframework.data.mongodb.core.query.Criteria;\nimport org.springframework.data.mongodb.core.query.Query;\nimport org.springframework.web.bind.annotation.*;\n\nimport java.util.List;\n\n@Slf4j\n@RestController", "@Slf4j\n@RestController\n@RequestMapping(\"/data\")\n@CrossOrigin(origins = \"*\")\npublic class TransactionController {\n    @Autowired\n    private MongoTemplate mongoTemplate;\n    @GetMapping(\"/{hash}\")\n    public R<Transaction> get(@PathVariable String hash){\n        Transaction transaction = mongoTemplate.findOne(new Query(Criteria.where(\"tx_hash\").is(hash.toString())),Transaction.class);\n        return R.success(transaction);\n    }\n    @GetMapping(\"/page\")\n    public List<Transaction> findByPage(int pageIndex, int pageSize) {\n        System.out.println(pageIndex+pageSize);", "        if (pageIndex < 0) {\n            pageIndex = 0;\n        }\n        if (pageSize < 10) {\n            pageSize = 10;\n        }\n        Query query = new Query();\n        Pageable pageable = PageRequest.of(pageIndex, pageSize);\n        query.with(pageable);\n        return mongoTemplate.find(query, Transaction.class);\n    }\n}\n", "        query.with(pageable);\n        return mongoTemplate.find(query, Transaction.class);\n    }\n}\n"]}
{"filename": "src/main/java/com/example/ethbeijing/Controller/SocketController.java", "chunked_list": ["package com.example.ethbeijing.Controller;\n\nimport com.alibaba.fastjson.JSON;\nimport com.alibaba.fastjson.JSONArray;\nimport com.alibaba.fastjson.JSONObject;\nimport com.example.ethbeijing.common.R;\nimport org.springframework.web.bind.annotation.*;\n\nimport java.io.*;\nimport java.net.InetAddress;", "import java.io.*;\nimport java.net.InetAddress;\nimport java.net.Socket;\n\n@RestController\n@RequestMapping(\"/socket\")\n@CrossOrigin(origins = \"*\")\npublic class SocketController {\n@GetMapping(\"/{hash}\")\n    public R<Object> get(@PathVariable String hash) throws IOException {\n    JSONObject jsonObject = new JSONObject();\n    jsonObject.put(\"hash\", hash);\n    String str = jsonObject.toJSONString();\n    InetAddress addr = InetAddress.getLocalHost();\n    String host= addr.getHostAddress();\n    //String host=\"192.168.73.1\";\n    String res;\n    //String ip=addr.getHostAddress().toString(); //\u83b7\u53d6\u672c\u673aip\n    //log.info(\"\u8c03\u7528\u8fdc\u7a0b\u63a5\u53e3:host=>\"+ip+\",port=>\"+12345);\n\n    // \u521d\u59cb\u5316\u5957\u63a5\u5b57\uff0c\u8bbe\u7f6e\u8bbf\u95ee\u670d\u52a1\u7684\u4e3b\u673a\u548c\u8fdb\u7a0b\u7aef\u53e3\u53f7\uff0cHOST\u662f\u8bbf\u95eepython\u8fdb\u7a0b\u7684\u4e3b\u673a\u540d\u79f0\uff0c\u53ef\u4ee5\u662fIP\u5730\u5740\u6216\u8005\u57df\u540d\uff0cPORT\u662fpython\u8fdb\u7a0b\u7ed1\u5b9a\u7684\u7aef\u53e3\u53f7\n    Socket socket = new Socket(host,12345);", "    try {\n\n        // \u83b7\u53d6\u8f93\u51fa\u6d41\u5bf9\u8c61\n        OutputStream os = socket.getOutputStream();\n        PrintStream out = new PrintStream(os);\n        // \u53d1\u9001\u5185\u5bb9\n        out.print(str);\n        // \u544a\u8bc9\u670d\u52a1\u8fdb\u7a0b\uff0c\u5185\u5bb9\u53d1\u9001\u5b8c\u6bd5\uff0c\u53ef\u4ee5\u5f00\u59cb\u5904\u7406\n        out.print(\"over\");\n\n        // \u83b7\u53d6\u670d\u52a1\u8fdb\u7a0b\u7684\u8f93\u5165\u6d41\n        InputStream is = socket.getInputStream();\n        BufferedReader br = new BufferedReader(new InputStreamReader(is,\"utf-8\"));\n        String tmp = null;\n        StringBuilder sb = new StringBuilder();\n        // \u8bfb\u53d6\u5185\u5bb9", "        while((tmp=br.readLine())!=null)\n            sb.append(tmp).append('\\n');\n        System.out.print(sb);\n        // \u89e3\u6790\u7ed3\u679c\n        //res = JSON.toJSONString(sb.toString());\n        String strr=sb.toString().replace(\"\\n\", \"\");\n        System.out.println(strr);\n        JSONObject object= JSONObject.parseObject(strr);\n\n        return R.success(object);\n    } catch (IOException  e) {\n        e.printStackTrace();\n\n    } finally {", "        try {if(socket!=null) socket.close();} catch (IOException e) {}\n        System.out.print(\"\u8fdc\u7a0b\u63a5\u53e3\u8c03\u7528\u7ed3\u675f.\");\n\n    }\n    return R.error(\"\u672a\u77e5\u9519\u8bef\");\n\n}\n}\n"]}
{"filename": "src/main/java/com/example/ethbeijing/Controller/AccountController.java", "chunked_list": ["package com.example.ethbeijing.Controller;\n\nimport lombok.extern.slf4j.Slf4j;\nimport org.springframework.web.bind.annotation.CrossOrigin;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RestController;\n@Slf4j\n@RestController\n@RequestMapping(\"/\")\n@CrossOrigin(origins = \"*\")\npublic class AccountController {\n}\n", "@RequestMapping(\"/\")\n@CrossOrigin(origins = \"*\")\npublic class AccountController {\n}\n"]}
{"filename": "src/main/java/com/example/ethbeijing/entity/Transaction.java", "chunked_list": ["package com.example.ethbeijing.entity;\n\nimport lombok.Data;\n\nimport org.springframework.data.mongodb.core.mapping.Document;\nimport org.springframework.data.mongodb.core.mapping.Field;\nimport org.springframework.data.mongodb.core.mapping.MongoId;\n\nimport java.io.Serializable;\n", "import java.io.Serializable;\n\n@Data\n@Document(\"transaction\")\npublic class Transaction implements Serializable {\n    private static final long serialVersionUID=1L;\n    @MongoId\n    private String  id;\n    @Field(\"tx_blockhash\")\n    private String txBlockhash;\n    @Field(\"tx_blocknum\")\n    private String txBlocknum;\n    @Field(\"tx_fromaddr\")\n    private String txFromaddr;\n    @Field(\"tx_gas\")\n    private String txGas;\n    @Field(\"tx_gasprice\")\n    private String txGasprice;\n    @Field(\"tx_hash\")\n    private String txHash;\n    @Field(\"tx_input\")\n    private String txInput;\n    @Field(\"tx_nonce\")\n    private String txNonce;\n    @Field(\"tx_toaddr\")\n    private String txToaddr;\n    @Field(\"tx_index\")\n    private String txIndex;\n    @Field(\"tx_value\")\n    private String txValue;\n    @Field(\"tx_trace\")\n    private String txTrace;\n    @Field(\"p1_type\")\n    private String p1Type;\n    @Field(\"p2_type\")\n    private String p2Type;\n    @Field(\"p3_type\")\n    private String p3Type;\n    @Field(\"p4_type\")\n    private String p4Type;\n    @Field(\"p5_type\")\n    private String p5Type;\n    @Field(\"p6_type\")\n    private String p6Type;\n    @Field(\"p7_type\")\n    private String p7Type;\n    @Field(\"p8_type\")\n    private String p8Type;\n    @Field(\"re_contractaddress\")\n    private String reContractaddress;\n    @Field(\"re_cumulativegasused\")\n    private String reCumulativegasused;\n    @Field(\"re_gasused\")\n    private String reGasused;\n    @Field(\"re_status\")\n    private String reStatus;\n}\n"]}
{"filename": "src/main/java/com/example/ethbeijing/entity/Account.java", "chunked_list": ["package com.example.ethbeijing.entity;\n\nimport com.baomidou.mybatisplus.annotation.FieldFill;\nimport com.baomidou.mybatisplus.annotation.TableField;\nimport lombok.Data;\n\nimport java.io.Serializable;\nimport java.time.LocalDateTime;\n\n@Data\npublic class Account implements Serializable {\n    private static final long serialVersionUID=1L;\n    private String username;\n    private String password;\n    @TableField(fill= FieldFill.INSERT)\n    private LocalDateTime createTime;\n}\n", "\n@Data\npublic class Account implements Serializable {\n    private static final long serialVersionUID=1L;\n    private String username;\n    private String password;\n    @TableField(fill= FieldFill.INSERT)\n    private LocalDateTime createTime;\n}\n"]}
{"filename": "src/main/java/com/example/ethbeijing/common/R.java", "chunked_list": ["package com.example.ethbeijing.common;\n\n\nimport lombok.Data;\n\nimport java.io.Serializable;\nimport java.util.HashMap;\nimport java.util.Map;\n\n@Data\npublic class R<T> implements Serializable {\n    private Integer code;\n    private String msg;\n    private T data;\n    private Map map=new HashMap();\n    public static <T> R<T> success(T object) {\n        R<T> r = new R<T>();\n        r.data = object;\n        r.code = 1;\n        return r;\n    }\n    public static <T> R<T> error(String msg){\n        R<T> r =new R<T>();\n        r.msg=msg;\n        r.code=0;\n        return r;\n    }\n    public R<T> add(String key,Object value){\n        this.map.put(key,value);\n        return this;\n    }\n}\n", "\n@Data\npublic class R<T> implements Serializable {\n    private Integer code;\n    private String msg;\n    private T data;\n    private Map map=new HashMap();\n    public static <T> R<T> success(T object) {\n        R<T> r = new R<T>();\n        r.data = object;\n        r.code = 1;\n        return r;\n    }\n    public static <T> R<T> error(String msg){\n        R<T> r =new R<T>();\n        r.msg=msg;\n        r.code=0;\n        return r;\n    }\n    public R<T> add(String key,Object value){\n        this.map.put(key,value);\n        return this;\n    }\n}\n"]}
{"filename": "src/main/java/com/example/ethbeijing/Service/AccountServicce.java", "chunked_list": ["package com.example.ethbeijing.Service;\n\nimport com.baomidou.mybatisplus.extension.service.IService;\nimport com.example.ethbeijing.entity.Account;\n\npublic interface AccountServicce extends IService<Account> {\n}\n"]}
{"filename": "src/main/java/com/example/ethbeijing/Service/Impl/AccountServiceImpl.java", "chunked_list": ["package com.example.ethbeijing.Service.Impl;\n\nimport com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;\nimport com.example.ethbeijing.Service.AccountServicce;\nimport com.example.ethbeijing.entity.Account;\nimport com.example.ethbeijing.mapper.AccountMapper;\nimport org.springframework.stereotype.Service;\n\n@Service\npublic class AccountServiceImpl extends ServiceImpl<AccountMapper, Account> implements AccountServicce{\n}\n", "@Service\npublic class AccountServiceImpl extends ServiceImpl<AccountMapper, Account> implements AccountServicce{\n}\n"]}
{"filename": "src/main/java/com/example/ethbeijing/mapper/AccountMapper.java", "chunked_list": ["package com.example.ethbeijing.mapper;\n\nimport com.baomidou.mybatisplus.core.mapper.BaseMapper;\nimport com.example.ethbeijing.entity.Account;\nimport org.apache.ibatis.annotations.Mapper;\n\n@Mapper\npublic interface AccountMapper extends BaseMapper<Account> {\n}\n"]}
