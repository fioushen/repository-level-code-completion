{"filename": "src/test/java/io/blamer/hub/HubApplicationEntryTest.java", "chunked_list": ["/*\n * MIT License\n *\n * Copyright (c) 2023 Blamer.io\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is", " * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE", " * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\npackage io.blamer.hub;\n", "package io.blamer.hub;\n\nimport org.junit.jupiter.api.Test;\n\nclass HubApplicationEntryTest {\n\n  @Test\n  void loadsContext() {\n  }\n", "  }\n\n}\n"]}
{"filename": "src/main/java/io/blamer/hub/package-info.java", "chunked_list": ["/*\n * MIT License\n *\n * Copyright (c) 2023 Blamer.io\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is", " * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE", " * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n/**\n * Root HubApplication package.", "/**\n * Root HubApplication package.\n */\npackage io.blamer.hub;\n"]}
{"filename": "src/main/java/io/blamer/hub/HubApplicationEntry.java", "chunked_list": ["/*\n * MIT License\n *\n * Copyright (c) 2023 Blamer.io\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is", " * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE", " * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\npackage io.blamer.hub;\n", "package io.blamer.hub;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\n\n/**\n * Entry class.\n */\n@SpringBootApplication\npublic class HubApplicationEntry {\n\n  /**\n   * Entry point.\n   *\n   * @param args Application arguments\n   */", "@SpringBootApplication\npublic class HubApplicationEntry {\n\n  /**\n   * Entry point.\n   *\n   * @param args Application arguments\n   */\n  public static void main(final String[] args) {\n    SpringApplication.run(HubApplicationEntry.class, args);\n  }\n\n}\n", "  public static void main(final String[] args) {\n    SpringApplication.run(HubApplicationEntry.class, args);\n  }\n\n}\n"]}
{"filename": "src/main/java/io/blamer/hub/rq/RequestToken.java", "chunked_list": ["/*\n * MIT License\n *\n * Copyright (c) 2023 Blamer.io\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is", " * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE", " * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\npackage io.blamer.hub.rq;\n", "package io.blamer.hub.rq;\n\nimport lombok.Data;\n\n/**\n * Request token.\n *\n * @author Aliaksei Bialiauski (abialiauski.dev@gmail.com)\n * @since 0.0.0\n */", " * @since 0.0.0\n */\n@Data\npublic class RequestToken {\n\n  /**\n   * Token alias.\n   */\n  private final String alias;\n  /**\n   * Token value.\n   */\n  private final String value;\n  /**\n   * Chat ID.\n   */\n  private final long chat;\n}\n"]}
{"filename": "src/main/java/io/blamer/hub/rq/ChatAlreadyExists.java", "chunked_list": ["package io.blamer.hub.rq;\n\n/**\n * Chat already exists.\n *\n * @author Aliaksei Bialiauski (abialiauski.dev@gmail.com)\n * @since 0.0.0\n */\npublic class ChatAlreadyExists extends RuntimeException {\n\n  /**\n   * Ctor.\n   */\n  public ChatAlreadyExists() {\n  }\n\n  /**\n   * Ctor.\n   *\n   * @param message Message\n   */\n  public ChatAlreadyExists(final String message) {\n    super(message);\n  }\n\n  /**\n   * Ctor.\n   *\n   * @param message Message\n   * @param cause   Exception\n   */\n  public ChatAlreadyExists(final String message, final Throwable cause) {\n    super(message, cause);\n  }\n\n  /**\n   * Ctor.\n   *\n   * @param cause Exception\n   */\n  public ChatAlreadyExists(final Throwable cause) {\n    super(cause);\n  }\n}\n", "public class ChatAlreadyExists extends RuntimeException {\n\n  /**\n   * Ctor.\n   */\n  public ChatAlreadyExists() {\n  }\n\n  /**\n   * Ctor.\n   *\n   * @param message Message\n   */\n  public ChatAlreadyExists(final String message) {\n    super(message);\n  }\n\n  /**\n   * Ctor.\n   *\n   * @param message Message\n   * @param cause   Exception\n   */\n  public ChatAlreadyExists(final String message, final Throwable cause) {\n    super(message, cause);\n  }\n\n  /**\n   * Ctor.\n   *\n   * @param cause Exception\n   */\n  public ChatAlreadyExists(final Throwable cause) {\n    super(cause);\n  }\n}\n"]}
{"filename": "src/main/java/io/blamer/hub/rq/package-info.java", "chunked_list": ["/*\n * MIT License\n *\n * Copyright (c) 2023 Blamer.io\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is", " * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE", " * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n/**\n * @author Aliaksei Bialiauski (abialiauski.dev@gmail.com)", "/**\n * @author Aliaksei Bialiauski (abialiauski.dev@gmail.com)\n * @since 0.0.0\n */\npackage io.blamer.hub.rq;\n"]}
{"filename": "src/main/java/io/blamer/hub/rq/ChatToAdd.java", "chunked_list": ["/*\n * MIT License\n *\n * Copyright (c) 2023 Blamer.io\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is", " * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE", " * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\npackage io.blamer.hub.rq;\n", "package io.blamer.hub.rq;\n\nimport io.blamer.hub.model.Chat;\nimport io.blamer.hub.pg.PgChat;\nimport org.cactoos.Scalar;\n\n/**\n * Chat to add.\n *\n * @author Aliaksei Bialiauski (abialiauski.dev@gmail.com)", " *\n * @author Aliaksei Bialiauski (abialiauski.dev@gmail.com)\n * @since 0.0.0\n */\npublic final class ChatToAdd implements Scalar<Chat> {\n\n  /**\n   * Chat ID.\n   */\n  private final long chat;\n\n  /**\n   * Ctor.\n   *\n   * @param cht Chat ID\n   */\n  public ChatToAdd(final long cht) {\n    this.chat = cht;\n  }\n\n  @Override", "  public Chat value() throws Exception {\n    return new PgChat(this.chat);\n  }\n}\n"]}
{"filename": "src/main/java/io/blamer/hub/rq/TokenToAdd.java", "chunked_list": ["/*\n * MIT License\n *\n * Copyright (c) 2023 Blamer.io\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is", " * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE", " * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\npackage io.blamer.hub.rq;\n", "package io.blamer.hub.rq;\n\nimport io.blamer.hub.model.Token;\nimport io.blamer.hub.pg.PgToken;\nimport lombok.RequiredArgsConstructor;\nimport org.cactoos.Scalar;\n\n/**\n * Token to add.\n *", " * Token to add.\n *\n * @author Aliaksei Bialiauski (abialiauski.dev@gmail.com)\n * @since 0.0.0\n */\n@RequiredArgsConstructor\npublic class TokenToAdd implements Scalar<Token> {\n\n  /**\n   * Request.\n   */\n  private final RequestToken request;\n\n  @Override", "  public Token value() throws Exception {\n    return new PgToken(\n      null,\n      this.request.getValue(),\n      this.request.getAlias(),\n      this.request.getChat()\n    );\n  }\n}\n"]}
{"filename": "src/main/java/io/blamer/hub/pg/PgToken.java", "chunked_list": ["/*\n * MIT License\n *\n * Copyright (c) 2023 Blamer.io\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is", " * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE", " * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\npackage io.blamer.hub.pg;\n", "package io.blamer.hub.pg;\n\nimport io.blamer.hub.model.Chat;\nimport io.blamer.hub.model.Token;\nimport lombok.RequiredArgsConstructor;\n\n/**\n * Token in PostgreSQL.\n *\n * @author Aliaksei Bialiauski (abialiauski.dev@gmail.com)", " *\n * @author Aliaksei Bialiauski (abialiauski.dev@gmail.com)\n * @since 0.0.0\n */\n@RequiredArgsConstructor\npublic class PgToken implements Token {\n\n  /**\n   * Token ID.\n   */\n  private final Long id;\n  /**\n   * Token value.\n   */\n  private final String value;\n  /**\n   * Token alias.\n   */\n  private final String alias;\n  /**\n   * Chat ID.\n   */\n  private final long chat;\n\n  @Override", "  public Long id() {\n    return this.id;\n  }\n\n  @Override\n  public String value() {\n    return this.value;\n  }\n\n  @Override\n  public String alias() {\n    return this.alias;\n  }\n\n  @Override", "  public String alias() {\n    return this.alias;\n  }\n\n  @Override\n  public Chat chat() {\n    return new PgChat(this.chat);\n  }\n}\n"]}
{"filename": "src/main/java/io/blamer/hub/pg/package-info.java", "chunked_list": ["/*\n * MIT License\n *\n * Copyright (c) 2023 Blamer.io\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is", " * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE", " * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n/**\n * PostgreSQL.", "/**\n * PostgreSQL.\n *\n * @author Aliaksei Bialiauski (abialiauski.dev@gmail.com)\n * @since 0.0.0\n */\npackage io.blamer.hub.pg;\n"]}
{"filename": "src/main/java/io/blamer/hub/pg/PgChat.java", "chunked_list": ["package io.blamer.hub.pg;\n\nimport io.blamer.hub.model.Chat;\nimport lombok.RequiredArgsConstructor;\n\n/**\n * Chat in PostgreSQL.\n *\n * @author Aliaksei Bialiauski (abialiauski.dev@gmail.com)\n * @since 0.0.0", " * @author Aliaksei Bialiauski (abialiauski.dev@gmail.com)\n * @since 0.0.0\n */\n@RequiredArgsConstructor\npublic class PgChat implements Chat {\n\n  /**\n   * Chat ID.\n   */\n  private final long id;\n\n  @Override", "  public long id() {\n    return this.id;\n  }\n}\n"]}
{"filename": "src/main/java/io/blamer/hub/pg/Validated.java", "chunked_list": ["package io.blamer.hub.pg;\n\nimport io.blamer.hub.model.Chat;\nimport io.blamer.hub.model.Chats;\nimport io.blamer.hub.rq.ChatAlreadyExists;\nimport org.springframework.beans.factory.annotation.Qualifier;\nimport org.springframework.r2dbc.core.DatabaseClient;\nimport org.springframework.stereotype.Component;\nimport reactor.core.publisher.Mono;\n", "import reactor.core.publisher.Mono;\n\nimport java.util.function.Function;\n\n/**\n * Validated Chats.\n *\n * @author Aliaksei Bialiauski (abialiauski.dev@gmail.com)\n * @since 0.0.0\n */", " * @since 0.0.0\n */\n@Component\npublic class Validated implements Chats {\n\n  /**\n   * Chats.\n   */\n  private final Chats chats;\n  /**\n   * Database Client.\n   */\n  private final DatabaseClient db;\n\n  /**\n   * Ctor.\n   *\n   * @param chts Chats\n   * @param dbc  Database Client\n   */\n  public Validated(\n    @Qualifier(\"pgChats\") final Chats chts,\n    final DatabaseClient dbc\n  ) {\n    this.chats = chts;\n    this.db = dbc;\n  }\n\n  @Override\n  public Mono<Void> add(final Chat chat) {\n    return this.db.sql(\"SELECT c.id AS id FROM chat c WHERE c.id = :chat\")\n      .bind(\"chat\", chat.id())\n      .fetch()\n      .one()\n      .flatMap(rows ->\n        Mono.just((Long) rows.get(\"id\")))\n      .flatMap(\n        (Function<Long, Mono<Void>>) id ->\n          Mono.error(\n            new ChatAlreadyExists(\n              \"Chat ID %s already exists\"\n                .formatted(id)\n            )\n          )\n      ).switchIfEmpty(this.chats.add(chat));\n  }\n}\n"]}
{"filename": "src/main/java/io/blamer/hub/pg/PgTokens.java", "chunked_list": ["/*\n * MIT License\n *\n * Copyright (c) 2023 Blamer.io\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is", " * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE", " * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\npackage io.blamer.hub.pg;\n", "package io.blamer.hub.pg;\n\nimport io.blamer.hub.model.Token;\nimport io.blamer.hub.model.Tokens;\nimport org.springframework.r2dbc.core.DatabaseClient;\nimport org.springframework.stereotype.Component;\nimport reactor.core.publisher.Mono;\n\n/**\n * Tokens in PostgreSQL.", "/**\n * Tokens in PostgreSQL.\n *\n * @author Aliaksei Bialiauski (abialiauski.dev@gmail.com)\n * @since 0.0.0\n */\n@Component\npublic class PgTokens implements Tokens {\n\n  /**\n   * Database Client.\n   */\n  private final DatabaseClient db;\n\n  /**\n   * Ctor.\n   *\n   * @param dbc DatabaseClient\n   */\n  public PgTokens(final DatabaseClient dbc) {\n    this.db = dbc;\n  }\n\n  @Override\n  public Mono<Void> add(final Token token) {\n    return this.db.sql(\n        \"INSERT INTO token (token, alias, chat)\"\n          + \"VALUES (:token, :alias, :chat)\"\n      )\n      .bind(\"token\", token.value())\n      .bind(\"alias\", token.alias())\n      .bind(\"chat\", token.chat().id())\n      .fetch()\n      .first()\n      .then();\n  }\n}\n"]}
{"filename": "src/main/java/io/blamer/hub/pg/PgChats.java", "chunked_list": ["package io.blamer.hub.pg;\n\nimport io.blamer.hub.model.Chat;\nimport io.blamer.hub.model.Chats;\nimport org.springframework.r2dbc.core.DatabaseClient;\nimport org.springframework.stereotype.Component;\nimport reactor.core.publisher.Mono;\n\n/**\n * Chats in PostgreSQL.", "/**\n * Chats in PostgreSQL.\n *\n * @author Aliaksei Bialiauski (abialiauski.dev@gmail.com)\n * @since 0.0.0\n */\n@Component\npublic class PgChats implements Chats {\n\n  /**\n   * Database Client.\n   */\n  private final DatabaseClient db;\n\n  /**\n   * Ctor.\n   *\n   * @param dbc Database Client.\n   */\n  public PgChats(final DatabaseClient dbc) {\n    this.db = dbc;\n  }\n\n  @Override\n  public Mono<Void> add(final Chat chat) {\n    return this.db.sql(\n        \"INSERT INTO chat (id) VALUES (:id)\"\n      ).bind(\"id\", chat.id())\n      .fetch()\n      .first()\n      .then();\n  }\n}\n"]}
{"filename": "src/main/java/io/blamer/hub/model/package-info.java", "chunked_list": ["/*\n * MIT License\n *\n * Copyright (c) 2023 Blamer.io\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is", " * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE", " * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n/**\n * Model.", "/**\n * Model.\n *\n * @author Aliaksei Bialiauski (abialiauski.dev@gmail.com)\n * @since 0.0.0\n */\npackage io.blamer.hub.model;\n"]}
{"filename": "src/main/java/io/blamer/hub/model/Token.java", "chunked_list": ["package io.blamer.hub.model;\n\n/**\n * Token.\n *\n * @author Aliaksei Bialiauski ()\n * @since 0.0.0\n */\npublic interface Token {\n\n  /**\n   * Id.\n   *\n   * @return Token id\n   */\n  Long id();\n\n  /**\n   * Value.\n   *\n   * @return Token value\n   */\n  String value();\n\n  /**\n   * Alias.\n   *\n   * @return Token alias\n   */\n  String alias();\n\n  /**\n   * Chat.\n   *\n   * @return Token chat\n   */\n  Chat chat();\n}\n", "public interface Token {\n\n  /**\n   * Id.\n   *\n   * @return Token id\n   */\n  Long id();\n\n  /**\n   * Value.\n   *\n   * @return Token value\n   */\n  String value();\n\n  /**\n   * Alias.\n   *\n   * @return Token alias\n   */\n  String alias();\n\n  /**\n   * Chat.\n   *\n   * @return Token chat\n   */\n  Chat chat();\n}\n"]}
{"filename": "src/main/java/io/blamer/hub/model/Tokens.java", "chunked_list": ["package io.blamer.hub.model;\n\nimport reactor.core.publisher.Mono;\n\n/**\n * Tokens.\n *\n * @author Aliaksei Bialiauski (abialiauski.dev@gmail.com)\n * @since 0.0.0\n */\npublic interface Tokens {\n\n  /**\n   * Register new token.\n   *\n   * @param token Token\n   * @return Mono void publisher\n   */\n  Mono<Void> add(Token token);\n}\n", " * @since 0.0.0\n */\npublic interface Tokens {\n\n  /**\n   * Register new token.\n   *\n   * @param token Token\n   * @return Mono void publisher\n   */\n  Mono<Void> add(Token token);\n}\n"]}
{"filename": "src/main/java/io/blamer/hub/model/Chats.java", "chunked_list": ["package io.blamer.hub.model;\n\nimport reactor.core.publisher.Mono;\n\n/**\n * Chats.\n *\n * @author Aliaksei Bialiauski (abialiauski.dev@gmail.com)\n * @since 0.0.0\n */\npublic interface Chats {\n\n  /**\n   * Add new Chat.\n   *\n   * @param chat Chat\n   * @return Mono void publisher\n   */\n  Mono<Void> add(Chat chat);\n}\n", " * @since 0.0.0\n */\npublic interface Chats {\n\n  /**\n   * Add new Chat.\n   *\n   * @param chat Chat\n   * @return Mono void publisher\n   */\n  Mono<Void> add(Chat chat);\n}\n"]}
{"filename": "src/main/java/io/blamer/hub/model/Chat.java", "chunked_list": ["package io.blamer.hub.model;\n\n/**\n * Chat.\n *\n * @author Aliaksei Bialiauski (abialiauski.dev@gmail.com)\n * @since 0.0.0\n */\npublic interface Chat {\n\n  /**\n   * Chat ID.\n   *\n   * @return Chat ID\n   */\n  long id();\n}\n", "public interface Chat {\n\n  /**\n   * Chat ID.\n   *\n   * @return Chat ID\n   */\n  long id();\n}\n"]}
{"filename": "src/main/java/io/blamer/hub/controller/ChatController.java", "chunked_list": ["package io.blamer.hub.controller;\n\nimport io.blamer.hub.model.Chats;\nimport io.blamer.hub.pg.PgChat;\nimport org.springframework.beans.factory.annotation.Qualifier;\nimport org.springframework.web.bind.annotation.PostMapping;\nimport org.springframework.web.bind.annotation.RequestBody;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RestController;\nimport reactor.core.publisher.Mono;", "import org.springframework.web.bind.annotation.RestController;\nimport reactor.core.publisher.Mono;\n\n/**\n * Chat Controller.\n *\n * @author Aliaksei Bialiauski (abialiauski.dev@gmail.com)\n * @since 0.0.0\n */\n@RestController", " */\n@RestController\n@RequestMapping(\"/api/chats\")\npublic class ChatController {\n\n  /**\n   * Chats.\n   */\n  private final Chats chats;\n\n  /**\n   * Ctor.\n   *\n   * @param chats Chats\n   */\n  public ChatController(@Qualifier(\"validated\") final Chats chats) {\n    this.chats = chats;\n  }\n\n  /**\n   * Register new Chat ID.\n   *\n   * @param chat Chat ID\n   * @return Mono void publisher\n   */\n  @PostMapping\n  public Mono<Void> registerChatId(@RequestBody final Long chat) {\n    return this.chats.add(new PgChat(chat));\n  }\n}\n"]}
{"filename": "src/main/java/io/blamer/hub/controller/HubAdvice.java", "chunked_list": ["package io.blamer.hub.controller;\n\nimport io.blamer.hub.rq.ChatAlreadyExists;\nimport io.github.eocqrs.eokson.Jocument;\nimport io.github.eocqrs.eokson.MutableJson;\nimport lombok.extern.slf4j.Slf4j;\nimport org.springframework.http.HttpStatus;\nimport org.springframework.http.ResponseEntity;\nimport org.springframework.web.bind.annotation.ExceptionHandler;\nimport org.springframework.web.bind.annotation.RestControllerAdvice;", "import org.springframework.web.bind.annotation.ExceptionHandler;\nimport org.springframework.web.bind.annotation.RestControllerAdvice;\n\n/**\n * @author Aliaksei Bialiauski (abialiauski.dev@gmail.com)\n * @since 0.0.0\n */\n@Slf4j\n@RestControllerAdvice\npublic class HubAdvice {\n\n  /**\n   * Handle {@link ChatAlreadyExists}.\n   *\n   * @param ex ChatAlreadyExists\n   * @return ResponseEntity\n   */\n  @ExceptionHandler(ChatAlreadyExists.class)\n  public ResponseEntity<byte[]> handle(final ChatAlreadyExists ex) {\n    log.debug(\"Chat ID already exists\", ex);\n    return new ResponseEntity<>(\n      new Jocument(\n        new MutableJson()", "@RestControllerAdvice\npublic class HubAdvice {\n\n  /**\n   * Handle {@link ChatAlreadyExists}.\n   *\n   * @param ex ChatAlreadyExists\n   * @return ResponseEntity\n   */\n  @ExceptionHandler(ChatAlreadyExists.class)\n  public ResponseEntity<byte[]> handle(final ChatAlreadyExists ex) {\n    log.debug(\"Chat ID already exists\", ex);\n    return new ResponseEntity<>(\n      new Jocument(\n        new MutableJson()", "          .with(\"code\", HttpStatus.CONFLICT.value())\n          .with(\"message\", ex.getMessage())\n      ).byteArray(),\n      HttpStatus.CONFLICT\n    );\n  }\n}\n"]}
{"filename": "src/main/java/io/blamer/hub/controller/package-info.java", "chunked_list": ["/**\n * Endpoints.\n *\n * @author Aliaksei Bialiauski (abialiauski.dev@gmail.com)\n * @since 0.0.0\n */\npackage io.blamer.hub.controller;\n"]}
{"filename": "src/main/java/io/blamer/hub/controller/TokenController.java", "chunked_list": ["package io.blamer.hub.controller;\n\nimport io.blamer.hub.model.Tokens;\nimport io.blamer.hub.rq.RequestToken;\nimport io.blamer.hub.rq.TokenToAdd;\nimport org.springframework.web.bind.annotation.PostMapping;\nimport org.springframework.web.bind.annotation.RequestBody;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RestController;\nimport reactor.core.publisher.Mono;", "import org.springframework.web.bind.annotation.RestController;\nimport reactor.core.publisher.Mono;\n\n/**\n * Token controller.\n *\n * @author Aliaksei Bialiauski (abialiauski.dev@gmail.com)\n * @since 0.0.0\n */\n@RestController", " */\n@RestController\n@RequestMapping(\"/api/tokens\")\npublic class TokenController {\n\n  /**\n   * Tokens.\n   */\n  private final Tokens tokens;\n\n  /**\n   * Ctor.\n   *\n   * @param tkns Tokens\n   */\n  public TokenController(final Tokens tkns) {\n    this.tokens = tkns;\n  }\n\n  /**\n   * Registers new Token with Chat ID.\n   *\n   * @param request RequestToken\n   * @return Mono void publisher\n   * @throws Exception if something went wrong\n   */\n  @PostMapping\n  Mono<Void> registerToken(@RequestBody final RequestToken request)\n    throws Exception {\n    return this.tokens.add(new TokenToAdd(request).value());\n  }\n}\n"]}
