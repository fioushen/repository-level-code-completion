{"filename": "library/src/main/java/com/flyjingfish/titlebarlib/TitleBar.java", "chunked_list": ["package com.flyjingfish.titlebarlib;\n\nimport android.annotation.SuppressLint;\nimport android.app.Activity;\nimport android.content.Context;\nimport android.content.res.TypedArray;\nimport android.graphics.Color;\nimport android.graphics.drawable.ColorDrawable;\nimport android.graphics.drawable.Drawable;\nimport android.util.AttributeSet;", "import android.graphics.drawable.Drawable;\nimport android.util.AttributeSet;\nimport android.util.TypedValue;\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.view.ViewParent;\nimport android.view.ViewTreeObserver;\nimport android.widget.FrameLayout;\nimport android.widget.ImageView;", "import android.widget.FrameLayout;\nimport android.widget.ImageView;\nimport android.widget.RelativeLayout;\nimport android.widget.TextView;\n\nimport androidx.annotation.ColorInt;\nimport androidx.annotation.DrawableRes;\nimport androidx.annotation.NonNull;\nimport androidx.annotation.Nullable;\nimport androidx.annotation.StringRes;", "import androidx.annotation.Nullable;\nimport androidx.annotation.StringRes;\nimport androidx.annotation.StyleRes;\nimport androidx.appcompat.view.ContextThemeWrapper;\nimport androidx.constraintlayout.widget.ConstraintLayout;\nimport androidx.core.content.ContextCompat;\nimport androidx.lifecycle.Lifecycle;\nimport androidx.lifecycle.LifecycleEventObserver;\nimport androidx.lifecycle.LifecycleOwner;\n", "import androidx.lifecycle.LifecycleOwner;\n\n\npublic class TitleBar extends RelativeLayout {\n    private final ConstraintLayout titleBarContainer;\n    private final ImageView titleBarStatusBar;\n    private final TextView titleView;\n    private final FrameLayout customViewContainer;\n    private final ShadowView shadowView;\n    private final FrameLayout rightContainer;\n    private final FrameLayout leftContainer;\n    private boolean aboveContent = true;\n    private boolean isLayout;\n    private boolean isSetTitleGravity;\n    private static final TitleGravity DEFAULT_TITLE_GRAVITY = TitleGravity.CENTER;\n    private TitleGravity titleGravity;\n    private final ImageView backgroundView;\n    private Drawable pendingSetBackground;\n    private int rightTextStyle;\n    private int rightImageStyle;\n    private int backImageStyle;\n    private int backTextStyle;\n    private TextView backTextView;\n    private ImageView backImageView;\n    private TextView rightTextView;\n    private ImageView rightImageView;\n    private boolean isInitTitleBar;\n    private boolean isWindowTitleBar;\n    private final PaddingViewTreeObserver paddingViewTreeObserver = new PaddingViewTreeObserver();\n", "    public enum ShadowType {\n        NONE(0),\n        LINE(1),\n        GRADIENT(2);\n\n        final int type;\n\n        ShadowType(int type) {\n            this.type = type;\n        }\n", "        public static ShadowType getType(int type) {\n            if (type == 1) {\n                return LINE;\n            } else if (type == 2) {\n                return GRADIENT;\n            } else {\n                return NONE;\n            }\n        }\n    }\n", "    public enum TitleGravity {\n        START(0),\n        CENTER(1),\n        END(2);\n        final int type;\n\n        TitleGravity(int type) {\n            this.type = type;\n        }\n\n        public static TitleGravity getGravity(int gravity) {", "        public static TitleGravity getGravity(int gravity) {\n            if (gravity == 1) {\n                return CENTER;\n            } else if (gravity == 2) {\n                return END;\n            } else {\n                return START;\n            }\n        }\n    }\n", "    public enum LeftRightType {\n        NONE(0),\n        TEXT(1),\n        IMAGE(2);\n\n        final int type;\n\n        LeftRightType(int type) {\n            this.type = type;\n        }\n", "        public static LeftRightType getType(int type) {\n            if (type == 1) {\n                return TEXT;\n            } else if (type == 2) {\n                return IMAGE;\n            } else {\n                return NONE;\n            }\n        }\n    }\n\n    public TitleBar(Context context) {\n        this(context, null);\n    }\n\n    public TitleBar(Context context, AttributeSet attrs) {\n        this(context, attrs, 0);\n    }\n\n    public TitleBar(Context context, AttributeSet attrs, int defStyleAttr) {\n        super(context, attrs, defStyleAttr);\n        TypedArray a = context.obtainStyledAttributes(attrs, R.styleable.TitleBar);\n        View rootView = LayoutInflater.from(context).inflate(R.layout.layout_title_bar, this, true);\n        backgroundView = rootView.findViewById(R.id.iv_title_bar_bg);\n        titleBarContainer = rootView.findViewById(R.id.fl_title_bar_container);\n        titleBarStatusBar = rootView.findViewById(R.id.iv_title_bar_status_bar);\n        int titleStyle = a.getResourceId(R.styleable.TitleBar_title_bar_title_style, R.style.title_bar_title_style);\n        titleView = LayoutInflater.from(new ContextThemeWrapper(getContext(), titleStyle)).inflate(R.layout.layout_title_bar_title_view, titleBarContainer, true).findViewById(R.id.tv_title_bar_title);\n        setTitleViewParams(titleView, titleStyle);\n        customViewContainer = rootView.findViewById(R.id.fl_custom_view);\n        shadowView = rootView.findViewById(R.id.shadow_line);\n        rightContainer = rootView.findViewById(R.id.right_container);\n        leftContainer = rootView.findViewById(R.id.left_container);\n\n        int statusBarHeight = StatusBarHelper.getStatusbarHeight(getContext());\n        ViewGroup.LayoutParams layoutParams = titleBarStatusBar.getLayoutParams();\n        layoutParams.height = statusBarHeight;\n        titleBarStatusBar.setLayoutParams(layoutParams);\n\n        setOnBackViewClickListener(v -> ((Activity) context).finish());\n", "        if (pendingSetBackground != null) {\n            setBackground(pendingSetBackground);\n        }\n        int minHeight = a.getDimensionPixelOffset(R.styleable.TitleBar_android_minHeight, getResources().getDimensionPixelOffset(R.dimen.title_bar_minHeight));\n        setMinimumHeight(0);\n        titleBarContainer.setMinHeight(minHeight);\n\n        Drawable statusBarBackground = a.getDrawable(R.styleable.TitleBar_title_bar_status_bar_background);\n        setStatusBarBackground(statusBarBackground);\n        if (isInEditMode() && statusBarBackground != null) {\n            titleBarStatusBar.setVisibility(VISIBLE);\n        }\n\n        Drawable backgroundWithStatusBar = a.getDrawable(R.styleable.TitleBar_title_bar_background_with_status_bar);\n        setTitleBarBackgroundWithStatusBar(backgroundWithStatusBar);\n\n        ShadowType shadowType = ShadowType.getType(a.getInt(R.styleable.TitleBar_title_bar_shadow_type, ShadowType.NONE.type));\n        Drawable shadowColor = a.getDrawable(R.styleable.TitleBar_title_bar_shadow);\n        float shadowHeight = a.getDimension(R.styleable.TitleBar_title_bar_shadow_height, getResources().getDimension(R.dimen.title_bar_shadow_default_height));", "        if (isInEditMode() && statusBarBackground != null) {\n            titleBarStatusBar.setVisibility(VISIBLE);\n        }\n\n        Drawable backgroundWithStatusBar = a.getDrawable(R.styleable.TitleBar_title_bar_background_with_status_bar);\n        setTitleBarBackgroundWithStatusBar(backgroundWithStatusBar);\n\n        ShadowType shadowType = ShadowType.getType(a.getInt(R.styleable.TitleBar_title_bar_shadow_type, ShadowType.NONE.type));\n        Drawable shadowColor = a.getDrawable(R.styleable.TitleBar_title_bar_shadow);\n        float shadowHeight = a.getDimension(R.styleable.TitleBar_title_bar_shadow_height, getResources().getDimension(R.dimen.title_bar_shadow_default_height));\n        if (shadowColor instanceof ColorDrawable) {\n            setShadowPixel(shadowHeight, ((ColorDrawable) shadowColor).getColor(), shadowType);", "        if (shadowColor instanceof ColorDrawable) {\n            setShadowPixel(shadowHeight, ((ColorDrawable) shadowColor).getColor(), shadowType);\n        } else if (shadowColor == null && shadowType != ShadowType.NONE) {\n            setShadowPixel(shadowHeight, ContextCompat.getColor(context, R.color.title_bar_shadow_default_color), shadowType);\n        } else {\n            setShadowPixel(shadowHeight, shadowColor, shadowType);\n        }\n\n        LeftRightType rightType = LeftRightType.getType(a.getInt(R.styleable.TitleBar_title_bar_right_type, LeftRightType.NONE.type));\n        LeftRightType leftType = LeftRightType.getType(a.getInt(R.styleable.TitleBar_title_bar_back_type, LeftRightType.IMAGE.type));\n        TitleGravity titleGravity = TitleGravity.getGravity(a.getInt(R.styleable.TitleBar_title_bar_title_gravity, DEFAULT_TITLE_GRAVITY.type));\n        setTitleGravity(titleGravity);\n\n        CharSequence titleText = a.getText(R.styleable.TitleBar_title_bar_title);", "        if (titleText != null) {\n            titleView.setText(titleText);\n        }\n        rightTextStyle = a.getResourceId(R.styleable.TitleBar_title_bar_right_textView_style, R.style.title_bar_right_text_style);\n        rightImageStyle = a.getResourceId(R.styleable.TitleBar_title_bar_right_imageView_style, R.style.title_bar_right_image_style);\n        backImageStyle = a.getResourceId(R.styleable.TitleBar_title_bar_back_imageView_style, R.style.title_bar_back_image_style);\n        backTextStyle = a.getResourceId(R.styleable.TitleBar_title_bar_back_textView_style, R.style.title_bar_back_text_style);\n\n        int backLayoutRes = a.getResourceId(R.styleable.TitleBar_title_bar_back_layout, 0);\n        int titleLayoutRes = a.getResourceId(R.styleable.TitleBar_title_bar_title_layout, 0);\n        int rightLayoutRes = a.getResourceId(R.styleable.TitleBar_title_bar_right_layout, 0);\n", "        if (titleLayoutRes != 0) {\n            View titleLayout = LayoutInflater.from(context).inflate(titleLayoutRes, null, false);\n            setCustomView(titleLayout);\n        }\n\n\n        if (backLayoutRes != 0) {\n            View backLayout = LayoutInflater.from(context).inflate(backLayoutRes, null, false);\n            setCustomLeftView(backLayout);\n        } else if (leftType == LeftRightType.TEXT) {\n            CharSequence leftText = a.getText(R.styleable.TitleBar_title_bar_back_text);", "        } else if (leftType == LeftRightType.TEXT) {\n            CharSequence leftText = a.getText(R.styleable.TitleBar_title_bar_back_text);\n            if (leftText != null) {\n                getBackTextView().setText(leftText);\n            } else {\n                getBackTextView();\n            }\n        } else if (leftType == LeftRightType.IMAGE) {\n            Drawable leftDrawable = a.getDrawable(R.styleable.TitleBar_title_bar_back_src);\n            if (leftDrawable != null) {\n                getBackImageView().setImageDrawable(leftDrawable);\n            } else {\n                getBackImageView();\n            }\n        }\n", "            if (leftDrawable != null) {\n                getBackImageView().setImageDrawable(leftDrawable);\n            } else {\n                getBackImageView();\n            }\n        }\n\n        if (rightLayoutRes != 0) {\n            View rightLayout = LayoutInflater.from(context).inflate(rightLayoutRes, null, false);\n            setCustomRightView(rightLayout);\n        } else if (rightType == LeftRightType.TEXT) {\n            CharSequence rightText = a.getText(R.styleable.TitleBar_title_bar_right_text);", "        } else if (rightType == LeftRightType.TEXT) {\n            CharSequence rightText = a.getText(R.styleable.TitleBar_title_bar_right_text);\n            if (rightText != null) {\n                getRightTextView().setText(rightText);\n            } else {\n                getRightTextView();\n            }\n        } else if (rightType == LeftRightType.IMAGE) {\n            Drawable rightDrawable = a.getDrawable(R.styleable.TitleBar_title_bar_right_src);\n            if (rightDrawable != null) {\n                getRightImageView().setImageDrawable(rightDrawable);\n            } else {\n                getRightImageView();\n            }\n        }\n\n        a.recycle();\n    }\n\n    @Override\n    protected void onAttachedToWindow() {\n        super.onAttachedToWindow();\n        getViewTreeObserver().addOnGlobalLayoutListener(paddingViewTreeObserver);\n    }\n\n    @Override\n    protected void onDetachedFromWindow() {\n        super.onDetachedFromWindow();\n        getViewTreeObserver().removeOnGlobalLayoutListener(paddingViewTreeObserver);\n    }\n\n    @Override\n    protected void onLayout(boolean changed, int l, int t, int r, int b) {\n        super.onLayout(changed, l, t, r, b);\n        setTitleBarPaddings();\n        isLayout = true;", "            if (rightDrawable != null) {\n                getRightImageView().setImageDrawable(rightDrawable);\n            } else {\n                getRightImageView();\n            }\n        }\n\n        a.recycle();\n    }\n\n    @Override\n    protected void onAttachedToWindow() {\n        super.onAttachedToWindow();\n        getViewTreeObserver().addOnGlobalLayoutListener(paddingViewTreeObserver);\n    }\n\n    @Override\n    protected void onDetachedFromWindow() {\n        super.onDetachedFromWindow();\n        getViewTreeObserver().removeOnGlobalLayoutListener(paddingViewTreeObserver);\n    }\n\n    @Override\n    protected void onLayout(boolean changed, int l, int t, int r, int b) {\n        super.onLayout(changed, l, t, r, b);\n        setTitleBarPaddings();\n        isLayout = true;", "        if (isSetTitleGravity) {\n            setTitleGravity(titleGravity);\n            isSetTitleGravity = false;\n        }\n    }\n\n    /**\n     * \u6dfb\u52a0\u5230 Window \u5c42\n     */\n    public void attachToWindow() {\n        isWindowTitleBar = true;", "    public void attachToWindow() {\n        isWindowTitleBar = true;\n        if (getContext() instanceof LifecycleOwner) {\n            ((LifecycleOwner) getContext()).getLifecycle().addObserver(new LifecycleEventObserver() {\n                @Override\n                public void onStateChanged(@NonNull LifecycleOwner source, @NonNull Lifecycle.Event event) {\n                    if (event == Lifecycle.Event.ON_CREATE) {\n                        settingView();\n                        source.getLifecycle().removeObserver(this);\n                    }\n                }\n            });\n        } else {\n            settingView();\n        }\n    }\n\n    private void settingView() {\n        ViewParent viewParent = getParent();", "        if (viewParent != null) {\n            ((ViewGroup) viewParent).removeView(this);\n        }\n        ((ViewGroup) ((Activity) getContext()).getWindow().getDecorView()).addView(this, new ViewGroup.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));\n        setTitleBarPaddings();\n\n    }\n\n    private void setTitleBarPaddings() {\n        if (!(getContext() instanceof Activity)) {\n            return;\n        }\n        ViewParent viewParent = getParent();\n        View windowView = ((Activity) getContext()).getWindow().getDecorView();", "        if (!(getContext() instanceof Activity)) {\n            return;\n        }\n        ViewParent viewParent = getParent();\n        View windowView = ((Activity) getContext()).getWindow().getDecorView();\n        if (viewParent == windowView) {\n            titleBarStatusBar.setVisibility(VISIBLE);\n        }\n        getViewTreeObserver().addOnGlobalLayoutListener(new PaddingViewTreeObserver() {\n            @Override\n            public void onGlobalLayout() {\n                super.onGlobalLayout();\n                getViewTreeObserver().removeOnGlobalLayoutListener(this);\n            }\n        });\n\n    }\n\n    private class PaddingViewTreeObserver implements ViewTreeObserver.OnGlobalLayoutListener {\n        @Override", "            public void onGlobalLayout() {\n                super.onGlobalLayout();\n                getViewTreeObserver().removeOnGlobalLayoutListener(this);\n            }\n        });\n\n    }\n\n    private class PaddingViewTreeObserver implements ViewTreeObserver.OnGlobalLayoutListener {\n        @Override\n        public void onGlobalLayout() {\n            isInitTitleBar = true;\n            ViewParent viewParent = getParent();\n            View windowView = ((Activity) getContext()).getWindow().getDecorView();\n            ViewGroup content = ((Activity) getContext()).findViewById(android.R.id.content);\n            int[] contentLat = new int[2];\n            content.getLocationOnScreen(contentLat);\n            int leftMargin = contentLat[0];\n            int oldVisibility = titleBarStatusBar.getVisibility();", "        public void onGlobalLayout() {\n            isInitTitleBar = true;\n            ViewParent viewParent = getParent();\n            View windowView = ((Activity) getContext()).getWindow().getDecorView();\n            ViewGroup content = ((Activity) getContext()).findViewById(android.R.id.content);\n            int[] contentLat = new int[2];\n            content.getLocationOnScreen(contentLat);\n            int leftMargin = contentLat[0];\n            int oldVisibility = titleBarStatusBar.getVisibility();\n            if (viewParent == windowView) {\n                int paddingTop = (int) (contentLat[1] == 0 ? TitleBar.this.getHeight() - shadowView.getShadowMaxLength() : titleBarContainer.getHeight());\n                int titleBarVisibility = getVisibility();", "            if (viewParent == windowView) {\n                int paddingTop = (int) (contentLat[1] == 0 ? TitleBar.this.getHeight() - shadowView.getShadowMaxLength() : titleBarContainer.getHeight());\n                int titleBarVisibility = getVisibility();\n                if (titleBarVisibility != GONE){\n                    content.setPadding(0, aboveContent ? paddingTop : 0, 0, 0);\n                }\n                if (oldVisibility != VISIBLE) {\n                    titleBarStatusBar.setVisibility(VISIBLE);\n                }\n                TitleBar.this.setPadding(leftMargin, 0, leftMargin > 0 ? 0 : TitleBar.this.getWidth() - content.getWidth(), 0);\n            } else {\n                int[] titleBarLat = new int[2];\n                TitleBar.this.getLocationOnScreen(titleBarLat);\n                int newVisibility = contentLat[1] == 0 && titleBarLat[1] == 0 ? VISIBLE : GONE;", "                if (oldVisibility != newVisibility) {\n                    titleBarStatusBar.setVisibility(newVisibility);\n                }\n            }\n\n        }\n    }\n\n\n    public int getRightTextStyle() {\n        return rightTextStyle;\n    }\n\n    /**\n     * \u8bbe\u7f6e\u6b64\u9879\u4e4b\u540e\u5fc5\u987b \u518d\u6b21\u8c03\u7528 {@link TitleBar#getRightTextView()} \u624d\u53ef\u751f\u6548\n     *\n     * @param rightTextStyle \u53f3\u4fa7 TextView \u7684 style\n     */", "    public int getRightTextStyle() {\n        return rightTextStyle;\n    }\n\n    /**\n     * \u8bbe\u7f6e\u6b64\u9879\u4e4b\u540e\u5fc5\u987b \u518d\u6b21\u8c03\u7528 {@link TitleBar#getRightTextView()} \u624d\u53ef\u751f\u6548\n     *\n     * @param rightTextStyle \u53f3\u4fa7 TextView \u7684 style\n     */\n    public void setRightTextStyle(@StyleRes int rightTextStyle) {\n        this.rightTextStyle = rightTextStyle;\n    }\n", "    public void setRightTextStyle(@StyleRes int rightTextStyle) {\n        this.rightTextStyle = rightTextStyle;\n    }\n\n    public int getRightImageStyle() {\n        return rightImageStyle;\n    }\n\n    /**\n     * \u8bbe\u7f6e\u6b64\u9879\u4e4b\u540e\u5fc5\u987b \u518d\u6b21\u8c03\u7528 {@link TitleBar#getRightImageView()} \u624d\u53ef\u751f\u6548\n     *\n     * @param rightImageStyle \u53f3\u4fa7 ImageView \u7684 style\n     */", "    public void setRightImageStyle(@StyleRes int rightImageStyle) {\n        this.rightImageStyle = rightImageStyle;\n    }\n\n    public int getBackImageStyle() {\n        return backImageStyle;\n    }\n\n    /**\n     * \u8bbe\u7f6e\u6b64\u9879\u4e4b\u540e\u5fc5\u987b \u518d\u6b21\u8c03\u7528 {@link TitleBar#getBackImageView()} \u624d\u53ef\u751f\u6548\n     *\n     * @param backImageStyle \u5de6\u4fa7 ImageView \u7684 style\n     */", "    public void setBackImageStyle(@StyleRes int backImageStyle) {\n        this.backImageStyle = backImageStyle;\n    }\n\n    public int getBackTextStyle() {\n        return backTextStyle;\n    }\n\n    /**\n     * \u8bbe\u7f6e\u6b64\u9879\u4e4b\u540e\u5fc5\u987b \u518d\u6b21\u8c03\u7528 {@link TitleBar#getBackTextView()} \u624d\u53ef\u751f\u6548\n     *\n     * @param backTextStyle \u5de6\u4fa7 TextView \u7684 style\n     */", "    public void setBackTextStyle(@StyleRes int backTextStyle) {\n        this.backTextStyle = backTextStyle;\n    }\n\n    /**\n     * \u83b7\u53d6\u5de6\u4fa7 TextView\n     *\n     * @return TextView\n     */\n    public TextView getBackTextView() {\n        if (backTextView == null || (int) backTextView.getTag(R.id.title_bar_back_text_style) != backTextStyle) {\n            leftContainer.removeAllViews();\n            backImageView = null;\n            backTextView = null;\n            backTextView = LayoutInflater.from(new ContextThemeWrapper(getContext(), backTextStyle)).inflate(R.layout.layout_title_bar_back_text_view, leftContainer, true).findViewById(R.id.tv_title_bar_back);\n            setContainerViewParams(backTextView, backTextStyle);\n            backTextView.setTag(R.id.title_bar_back_text_style, backTextStyle);\n        }\n        return backTextView;\n    }\n\n    /**\n     * \u83b7\u53d6\u5de6\u4fa7 ImageView\n     *\n     * @return ImageView\n     */", "    public TextView getBackTextView() {\n        if (backTextView == null || (int) backTextView.getTag(R.id.title_bar_back_text_style) != backTextStyle) {\n            leftContainer.removeAllViews();\n            backImageView = null;\n            backTextView = null;\n            backTextView = LayoutInflater.from(new ContextThemeWrapper(getContext(), backTextStyle)).inflate(R.layout.layout_title_bar_back_text_view, leftContainer, true).findViewById(R.id.tv_title_bar_back);\n            setContainerViewParams(backTextView, backTextStyle);\n            backTextView.setTag(R.id.title_bar_back_text_style, backTextStyle);\n        }\n        return backTextView;\n    }\n\n    /**\n     * \u83b7\u53d6\u5de6\u4fa7 ImageView\n     *\n     * @return ImageView\n     */", "    public ImageView getBackImageView() {\n        if (backImageView == null || (int) backImageView.getTag(R.id.title_bar_back_image_style) != backImageStyle) {\n            leftContainer.removeAllViews();\n            backImageView = null;\n            backTextView = null;\n            backImageView = LayoutInflater.from(new ContextThemeWrapper(getContext(), backImageStyle)).inflate(R.layout.layout_title_bar_back_image_view, leftContainer, true).findViewById(R.id.iv_title_bar_back);\n            setContainerViewParams(backImageView, backImageStyle);\n            backImageView.setTag(R.id.title_bar_back_image_style, backImageStyle);\n        }\n        return backImageView;\n    }\n\n    /**\n     * \u83b7\u53d6\u53f3\u4fa7 TextView\n     *\n     * @return TextView\n     */", "    public TextView getRightTextView() {\n        if (rightTextView == null || (int) rightTextView.getTag(R.id.title_bar_right_text_style) != rightTextStyle) {\n            rightContainer.removeAllViews();\n            rightImageView = null;\n            rightTextView = null;\n            rightTextView = LayoutInflater.from(new ContextThemeWrapper(getContext(), rightTextStyle)).inflate(R.layout.layout_title_bar_right_text_view, rightContainer, true).findViewById(R.id.tv_right_view);\n            setContainerViewParams(rightTextView, rightTextStyle);\n            rightTextView.setTag(R.id.title_bar_right_text_style, rightTextStyle);\n        }\n        return rightTextView;\n    }\n\n    /**\n     * \u83b7\u53d6\u53f3\u4fa7 ImageView\n     *\n     * @return ImageView\n     */", "    public ImageView getRightImageView() {\n        if (rightImageView == null || (int) rightImageView.getTag(R.id.title_bar_right_image_style) != rightImageStyle) {\n            rightContainer.removeAllViews();\n            rightImageView = null;\n            rightTextView = null;\n            rightImageView = LayoutInflater.from(new ContextThemeWrapper(getContext(), rightImageStyle)).inflate(R.layout.layout_title_bar_right_image_view, rightContainer, true).findViewById(R.id.iv_right_view);\n            setContainerViewParams(rightImageView, rightImageStyle);\n            rightImageView.setTag(R.id.title_bar_right_image_style, rightImageStyle);\n        }\n        return rightImageView;\n    }\n\n    private void setContainerViewParams(View view, int style) {\n        FrameLayout.LayoutParams layoutParams = (FrameLayout.LayoutParams) view.getLayoutParams();\n        @SuppressLint(\"CustomViewStyleable\") TypedArray a = getContext().obtainStyledAttributes(style, R.styleable.TitleBar_Layout);\n        int width = a.getLayoutDimension(R.styleable.TitleBar_Layout_android_layout_width, layoutParams.width);\n        int height = a.getLayoutDimension(R.styleable.TitleBar_Layout_android_layout_height, layoutParams.height);\n        int gravity = a.getInt(R.styleable.TitleBar_Layout_android_layout_gravity, layoutParams.gravity);\n        int marginStart = a.getDimensionPixelOffset(R.styleable.TitleBar_Layout_android_layout_marginStart, -1);\n        int marginEnd = a.getDimensionPixelOffset(R.styleable.TitleBar_Layout_android_layout_marginEnd, -1);\n        int leftMargin = a.getDimensionPixelOffset(R.styleable.TitleBar_Layout_android_layout_marginLeft, layoutParams.leftMargin);\n        int rightMargin = a.getDimensionPixelOffset(R.styleable.TitleBar_Layout_android_layout_marginRight, layoutParams.rightMargin);\n        int topMargin = a.getDimensionPixelOffset(R.styleable.TitleBar_Layout_android_layout_marginTop, layoutParams.topMargin);\n        int bottomMargin = a.getDimensionPixelOffset(R.styleable.TitleBar_Layout_android_layout_marginBottom, layoutParams.bottomMargin);\n        int margin = a.getDimensionPixelOffset(R.styleable.TitleBar_Layout_android_layout_margin, -1);\n        int marginHorizontal = a.getDimensionPixelOffset(R.styleable.TitleBar_Layout_android_layout_marginHorizontal, margin);\n        int marginVertical = a.getDimensionPixelOffset(R.styleable.TitleBar_Layout_android_layout_marginVertical, margin);", "        if (view instanceof ImageView) {\n            if (view.getId() == R.id.iv_title_bar_back) {\n                Drawable drawable = a.getDrawable(R.styleable.TitleBar_Layout_android_src);\n                if (drawable != null) {\n                    ((ImageView) view).setImageDrawable(drawable);\n                } else {\n                    ((ImageView) view).setImageResource(R.drawable.ic_title_bar_back);\n                }\n            } else if (view.getId() == R.id.iv_right_view) {\n                Drawable drawable = a.getDrawable(R.styleable.TitleBar_Layout_android_src);\n                if (drawable != null) {\n                    ((ImageView) view).setImageDrawable(drawable);\n                } else {\n                    ((ImageView) view).setImageResource(R.drawable.ic_title_bar_more);\n                }\n            }", "            } else if (view.getId() == R.id.iv_right_view) {\n                Drawable drawable = a.getDrawable(R.styleable.TitleBar_Layout_android_src);\n                if (drawable != null) {\n                    ((ImageView) view).setImageDrawable(drawable);\n                } else {\n                    ((ImageView) view).setImageResource(R.drawable.ic_title_bar_more);\n                }\n            }\n        } else if (view instanceof TextView) {\n            if (view.getId() == R.id.tv_right_view) {\n                float textSize = a.getDimension(R.styleable.TitleBar_Layout_android_textSize, getResources().getDimension(R.dimen.title_bar_rightTextView_textSize));\n                ((TextView) view).setTextSize(TypedValue.COMPLEX_UNIT_PX, textSize);\n                int textColor = a.getColor(R.styleable.TitleBar_Layout_android_textColor, getResources().getColor(R.color.title_bar_rightTextView_textColor));\n                ((TextView) view).setTextColor(textColor);\n            }\n        }\n        a.recycle();\n        layoutParams.width = width;\n        layoutParams.height = height;\n        layoutParams.gravity = gravity;\n        layoutParams.leftMargin = leftMargin;\n        layoutParams.rightMargin = rightMargin;\n        layoutParams.topMargin = topMargin;\n        layoutParams.bottomMargin = bottomMargin;", "        } else if (view instanceof TextView) {\n            if (view.getId() == R.id.tv_right_view) {\n                float textSize = a.getDimension(R.styleable.TitleBar_Layout_android_textSize, getResources().getDimension(R.dimen.title_bar_rightTextView_textSize));\n                ((TextView) view).setTextSize(TypedValue.COMPLEX_UNIT_PX, textSize);\n                int textColor = a.getColor(R.styleable.TitleBar_Layout_android_textColor, getResources().getColor(R.color.title_bar_rightTextView_textColor));\n                ((TextView) view).setTextColor(textColor);\n            }\n        }\n        a.recycle();\n        layoutParams.width = width;\n        layoutParams.height = height;\n        layoutParams.gravity = gravity;\n        layoutParams.leftMargin = leftMargin;\n        layoutParams.rightMargin = rightMargin;\n        layoutParams.topMargin = topMargin;\n        layoutParams.bottomMargin = bottomMargin;", "        if (marginVertical != -1) {\n            layoutParams.topMargin = marginVertical;\n            layoutParams.bottomMargin = marginVertical;\n        }\n        if (marginHorizontal != -1) {\n            layoutParams.leftMargin = marginHorizontal;\n            layoutParams.rightMargin = marginHorizontal;\n        }\n        if (marginStart != -1) {\n            layoutParams.setMarginStart(marginStart);\n        }", "        if (marginStart != -1) {\n            layoutParams.setMarginStart(marginStart);\n        }\n        if (marginEnd != -1) {\n            layoutParams.setMarginEnd(marginEnd);\n        }\n        view.setLayoutParams(layoutParams);\n\n\n    }\n\n    private void setTitleViewParams(View view, int style) {\n        ConstraintLayout.LayoutParams layoutParams = (ConstraintLayout.LayoutParams) view.getLayoutParams();\n        @SuppressLint(\"CustomViewStyleable\") TypedArray a = getContext().obtainStyledAttributes(style, R.styleable.TitleBar_Layout);\n        int width = a.getLayoutDimension(R.styleable.TitleBar_Layout_android_layout_width, layoutParams.width);\n        int height = a.getLayoutDimension(R.styleable.TitleBar_Layout_android_layout_height, layoutParams.height);\n        int marginStart = a.getDimensionPixelOffset(R.styleable.TitleBar_Layout_android_layout_marginStart, -1);\n        int marginEnd = a.getDimensionPixelOffset(R.styleable.TitleBar_Layout_android_layout_marginEnd, -1);\n        int leftMargin = a.getDimensionPixelOffset(R.styleable.TitleBar_Layout_android_layout_marginLeft, layoutParams.leftMargin);\n        int rightMargin = a.getDimensionPixelOffset(R.styleable.TitleBar_Layout_android_layout_marginRight, layoutParams.rightMargin);\n        int topMargin = a.getDimensionPixelOffset(R.styleable.TitleBar_Layout_android_layout_marginTop, layoutParams.topMargin);\n        int bottomMargin = a.getDimensionPixelOffset(R.styleable.TitleBar_Layout_android_layout_marginBottom, layoutParams.bottomMargin);\n        int margin = a.getDimensionPixelOffset(R.styleable.TitleBar_Layout_android_layout_margin, -1);\n        int marginHorizontal = a.getDimensionPixelOffset(R.styleable.TitleBar_Layout_android_layout_marginHorizontal, margin);\n        int marginVertical = a.getDimensionPixelOffset(R.styleable.TitleBar_Layout_android_layout_marginVertical, margin);", "        if (view instanceof TextView) {\n            if (view.getId() == R.id.tv_title_bar_title) {\n                float textSize = a.getDimension(R.styleable.TitleBar_Layout_android_textSize, getResources().getDimension(R.dimen.title_bar_title_textSize));\n                ((TextView) view).setTextSize(TypedValue.COMPLEX_UNIT_PX, textSize);\n                int textColor = a.getColor(R.styleable.TitleBar_Layout_android_textColor, getResources().getColor(R.color.title_bar_title_textColor));\n                ((TextView) view).setTextColor(textColor);\n            }\n        }\n        a.recycle();\n        layoutParams.width = width;\n        layoutParams.height = height;\n        layoutParams.leftMargin = leftMargin;\n        layoutParams.rightMargin = rightMargin;\n        layoutParams.topMargin = topMargin;\n        layoutParams.bottomMargin = bottomMargin;", "        if (marginVertical != -1) {\n            layoutParams.topMargin = marginVertical;\n            layoutParams.bottomMargin = marginVertical;\n        }\n        if (marginHorizontal != -1) {\n            layoutParams.leftMargin = marginHorizontal;\n            layoutParams.rightMargin = marginHorizontal;\n        }\n        if (marginStart != -1) {\n            layoutParams.setMarginStart(marginStart);\n        }", "        if (marginStart != -1) {\n            layoutParams.setMarginStart(marginStart);\n        }\n        if (marginEnd != -1) {\n            layoutParams.setMarginEnd(marginEnd);\n        }\n        view.setLayoutParams(layoutParams);\n\n\n    }\n\n    /**\n     * \u83b7\u53d6\u8fd4\u56de ImageView\n     *\n     * @return ImageView\n     */\n    @Deprecated", "    public ImageView getBackView() {\n        return getBackImageView();\n    }\n\n    /**\n     * \u83b7\u53d6\u6807\u9898 TextView\n     *\n     * @return TextView\n     */\n    @NonNull\n    public TextView getTitleView() {\n        return titleView;\n    }\n\n    /**\n     * \u8bbe\u7f6e\u5e95\u90e8 Shadow \u6837\u5f0f\n     *\n     * @param shadowHeightDp shadow \u9ad8\u5ea6\n     * @param shadowColor    shadow \u989c\u8272\n     * @param shadowType     shadow \u6837\u5f0f {@link ShadowType#LINE} \u5b9e\u7ebf / {@link ShadowType#GRADIENT} \u6e10\u53d8\u7ebf\n     */", "    public TextView getTitleView() {\n        return titleView;\n    }\n\n    /**\n     * \u8bbe\u7f6e\u5e95\u90e8 Shadow \u6837\u5f0f\n     *\n     * @param shadowHeightDp shadow \u9ad8\u5ea6\n     * @param shadowColor    shadow \u989c\u8272\n     * @param shadowType     shadow \u6837\u5f0f {@link ShadowType#LINE} \u5b9e\u7ebf / {@link ShadowType#GRADIENT} \u6e10\u53d8\u7ebf\n     */", "    public void setShadow(float shadowHeightDp, @ColorInt int shadowColor, ShadowType shadowType) {\n        setShadowPixel(ScreenUtils.dp2px(getContext(), shadowHeightDp), shadowColor, shadowType);\n    }\n\n    /**\n     * \u8bbe\u7f6e\u5e95\u90e8 Shadow \u6837\u5f0f\n     *\n     * @param shadowHeightDp shadow \u9ad8\u5ea6\n     * @param shadowDrawable \u8d44\u6e90\u56fe\n     */\n    public void setShadow(float shadowHeightDp, Drawable shadowDrawable) {\n        setShadowPixel(ScreenUtils.dp2px(getContext(), shadowHeightDp), shadowDrawable, ShadowType.LINE);\n    }\n\n    /**\n     * @param shadowHeightDp    shadow \u9ad8\u5ea6\n     * @param shadowDrawableRes \u8d44\u6e90\u56feid\n     */", "    public void setShadow(float shadowHeightDp, Drawable shadowDrawable) {\n        setShadowPixel(ScreenUtils.dp2px(getContext(), shadowHeightDp), shadowDrawable, ShadowType.LINE);\n    }\n\n    /**\n     * @param shadowHeightDp    shadow \u9ad8\u5ea6\n     * @param shadowDrawableRes \u8d44\u6e90\u56feid\n     */\n    public void setShadow(float shadowHeightDp, @DrawableRes int shadowDrawableRes) {\n        setShadow(shadowHeightDp, ContextCompat.getDrawable(getContext(), shadowDrawableRes));\n    }\n\n    private void setShadowPixel(float shadowHeightPx, @ColorInt int shadowColor, ShadowType shadowType) {\n        int[] colors;", "    public void setShadow(float shadowHeightDp, @DrawableRes int shadowDrawableRes) {\n        setShadow(shadowHeightDp, ContextCompat.getDrawable(getContext(), shadowDrawableRes));\n    }\n\n    private void setShadowPixel(float shadowHeightPx, @ColorInt int shadowColor, ShadowType shadowType) {\n        int[] colors;\n        if (shadowType == ShadowType.GRADIENT) {\n            colors = new int[]{shadowColor, Color.TRANSPARENT};\n        } else {\n            colors = new int[]{shadowColor, shadowColor};\n        }\n        shadowView.setGradientColors(colors);\n        shadowView.setShadowMaxLength(shadowHeightPx);\n        setDisplayShadow(shadowType != ShadowType.NONE);\n    }\n\n    private void setShadowPixel(float shadowHeightPx, Drawable shadowDrawable, ShadowType shadowType) {\n        shadowView.setGradientColors(null);\n        shadowView.setBackground(shadowDrawable);\n        shadowView.setShadowMaxLength(shadowHeightPx);\n        setDisplayShadow(shadowType != ShadowType.NONE);\n    }\n\n    /**\n     * \u8bbe\u7f6e\u662f\u5426\u5c55\u793a Shadow\n     *\n     * @param showShadow shadow \u662f\u5426\u53ef\u89c1\n     */", "    public void setDisplayShadow(boolean showShadow) {\n        shadowView.setVisibility(showShadow ? VISIBLE : GONE);\n    }\n\n    @Override\n    public Drawable getBackground() {\n        if (titleBarContainer != null) {\n            return titleBarContainer.getBackground();\n        }\n        return super.getBackground();\n    }\n\n    /**\n     * \u5df2\u88ab\u5f03\u7528\uff0c\u53ef\u4ee5\u770b\u4e0b {@link TitleBar#setTitleBarBackground}\n     *\n     * @param background Drawable\n     */\n    @Deprecated\n    @Override", "    public void setBackground(Drawable background) {\n        if (backgroundView == null) {\n            pendingSetBackground = background;\n            return;\n        }\n        setTitleBarBackground(background);\n    }\n\n    /**\n     * \u5df2\u88ab\u5f03\u7528\uff0c\u53ef\u4ee5\u770b\u4e0b {@link TitleBar#setTitleBarBackgroundColor}\n     *\n     * @param color \u989c\u8272\n     */\n    @Deprecated\n    @Override", "    public void setBackgroundColor(@ColorInt int color) {\n        setTitleBarBackgroundColor(color);\n    }\n\n    /**\n     * \u5df2\u88ab\u5f03\u7528\uff0c\u53ef\u4ee5\u770b\u4e0b {@link TitleBar#setTitleBarBackgroundResource}\n     *\n     * @param resid \u8d44\u6e90id\n     */\n    @Deprecated\n    @Override", "    public void setBackgroundResource(@DrawableRes int resid) {\n        setTitleBarBackgroundResource(resid);\n    }\n\n    /**\n     * \u5df2\u88ab\u5f03\u7528\uff0c\u53ef\u4ee5\u770b\u4e0b {@link TitleBar#setTitleBarBackground}\n     *\n     * @param background Drawable\n     */\n    @Deprecated\n    @Override", "    public void setBackgroundDrawable(Drawable background) {\n        setTitleBarBackground(background);\n    }\n\n    /**\n     * \u8bbe\u7f6e\u6807\u9898\u680f\u80cc\u666f \uff08\u5305\u542b\u4e86\u72b6\u6001\u680f\uff09\n     *\n     * @param background \u80cc\u666f Drawable\n     */\n    public void setTitleBarBackgroundWithStatusBar(Drawable background) {\n        backgroundView.setBackground(background);\n    }\n\n    /**\n     * \u8bbe\u7f6e\u6807\u9898\u680f\u80cc\u666f \uff08\u5305\u542b\u4e86\u72b6\u6001\u680f\uff09\n     *\n     * @param resid \u80cc\u666f\u8d44\u6e90\u56fe\n     */", "    public void setTitleBarBackgroundWithStatusBar(Drawable background) {\n        backgroundView.setBackground(background);\n    }\n\n    /**\n     * \u8bbe\u7f6e\u6807\u9898\u680f\u80cc\u666f \uff08\u5305\u542b\u4e86\u72b6\u6001\u680f\uff09\n     *\n     * @param resid \u80cc\u666f\u8d44\u6e90\u56fe\n     */\n    public void setTitleBarBackgroundResourceWithStatusBar(@DrawableRes int resid) {\n        backgroundView.setBackgroundResource(resid);\n    }\n\n    /**\n     * \u8bbe\u7f6e\u6807\u9898\u680f\u80cc\u666f \uff08\u5305\u542b\u4e86\u72b6\u6001\u680f\uff09\n     *\n     * @param color \u80cc\u666f\u989c\u8272\n     */", "    public void setTitleBarBackgroundResourceWithStatusBar(@DrawableRes int resid) {\n        backgroundView.setBackgroundResource(resid);\n    }\n\n    /**\n     * \u8bbe\u7f6e\u6807\u9898\u680f\u80cc\u666f \uff08\u5305\u542b\u4e86\u72b6\u6001\u680f\uff09\n     *\n     * @param color \u80cc\u666f\u989c\u8272\n     */\n    public void setTitleBarBackgroundColorWithStatusBar(@ColorInt int color) {\n        backgroundView.setBackgroundColor(color);\n    }\n\n    /**\n     * \u8bbe\u7f6e\u6807\u9898\u680f\u80cc\u666f \uff08\u4e0d\u5305\u542b\u72b6\u6001\u680f\uff09\n     *\n     * @param background \u80cc\u666f Drawable\n     */", "    public void setTitleBarBackgroundColorWithStatusBar(@ColorInt int color) {\n        backgroundView.setBackgroundColor(color);\n    }\n\n    /**\n     * \u8bbe\u7f6e\u6807\u9898\u680f\u80cc\u666f \uff08\u4e0d\u5305\u542b\u72b6\u6001\u680f\uff09\n     *\n     * @param background \u80cc\u666f Drawable\n     */\n    public void setTitleBarBackground(Drawable background) {\n        titleBarContainer.setBackground(background);\n    }\n\n    /**\n     * \u8bbe\u7f6e\u6807\u9898\u680f\u80cc\u666f \uff08\u4e0d\u5305\u542b\u72b6\u6001\u680f\uff09\n     *\n     * @param resid \u80cc\u666f\u8d44\u6e90\u56fe\n     */", "    public void setTitleBarBackground(Drawable background) {\n        titleBarContainer.setBackground(background);\n    }\n\n    /**\n     * \u8bbe\u7f6e\u6807\u9898\u680f\u80cc\u666f \uff08\u4e0d\u5305\u542b\u72b6\u6001\u680f\uff09\n     *\n     * @param resid \u80cc\u666f\u8d44\u6e90\u56fe\n     */\n    public void setTitleBarBackgroundResource(@DrawableRes int resid) {\n        titleBarContainer.setBackgroundResource(resid);\n    }\n\n    /**\n     * \u8bbe\u7f6e\u6807\u9898\u680f\u80cc\u666f \uff08\u4e0d\u5305\u542b\u72b6\u6001\u680f\uff09\n     *\n     * @param color \u80cc\u666f\u989c\u8272\n     */", "    public void setTitleBarBackgroundResource(@DrawableRes int resid) {\n        titleBarContainer.setBackgroundResource(resid);\n    }\n\n    /**\n     * \u8bbe\u7f6e\u6807\u9898\u680f\u80cc\u666f \uff08\u4e0d\u5305\u542b\u72b6\u6001\u680f\uff09\n     *\n     * @param color \u80cc\u666f\u989c\u8272\n     */\n    public void setTitleBarBackgroundColor(@ColorInt int color) {\n        titleBarContainer.setBackgroundColor(color);\n    }\n\n    /**\n     * \u8bbe\u7f6e\u81ea\u5b9a\u4e49View\uff08\u4e2d\u95f4\u7684\uff09\n     *\n     * @param view \u81ea\u5b9a\u4e49View\n     */", "    public void setTitleBarBackgroundColor(@ColorInt int color) {\n        titleBarContainer.setBackgroundColor(color);\n    }\n\n    /**\n     * \u8bbe\u7f6e\u81ea\u5b9a\u4e49View\uff08\u4e2d\u95f4\u7684\uff09\n     *\n     * @param view \u81ea\u5b9a\u4e49View\n     */\n    public void setCustomView(View view) {\n        setCustomView(view, null);\n    }\n\n    /**\n     * \u8bbe\u7f6e\u81ea\u5b9a\u4e49View\uff08\u4e2d\u95f4\u7684\uff09\n     *\n     * @param view \u81ea\u5b9a\u4e49View\n     */", "    public void setCustomView(View view) {\n        setCustomView(view, null);\n    }\n\n    /**\n     * \u8bbe\u7f6e\u81ea\u5b9a\u4e49View\uff08\u4e2d\u95f4\u7684\uff09\n     *\n     * @param view \u81ea\u5b9a\u4e49View\n     */\n    public void setCustomView(View view, FrameLayout.LayoutParams layoutParams) {\n        customViewContainer.removeAllViews();", "    public void setCustomView(View view, FrameLayout.LayoutParams layoutParams) {\n        customViewContainer.removeAllViews();\n        if (layoutParams != null) {\n            customViewContainer.addView(view, layoutParams);\n        } else {\n            customViewContainer.addView(view);\n        }\n    }\n\n    /**\n     *\n     * @return \u83b7\u53d6\u81ea\u5b9a\u4e49View\uff08\u4e2d\u95f4\u7684\uff09\n     */\n    @Nullable", "    public View getCustomView() {\n        if (customViewContainer.getChildCount() > 0) {\n            return customViewContainer.getChildAt(0);\n        }\n        return null;\n    }\n\n    /**\n     * \u8bbe\u7f6e\u53f3\u4fa7\u81ea\u5b9a\u4e49View\n     *\n     * @param view \u81ea\u5b9a\u4e49View\n     */", "    public void setCustomRightView(View view) {\n        setCustomRightView(view, null);\n    }\n\n    /**\n     * \u8bbe\u7f6e\u53f3\u4fa7\u81ea\u5b9a\u4e49View\n     *\n     * @param view \u81ea\u5b9a\u4e49View\n     */\n    public void setCustomRightView(View view, FrameLayout.LayoutParams layoutParams) {\n//        isSetTitleGravity = true;\n        rightContainer.setOnClickListener(null);\n        rightContainer.setOnLongClickListener(null);\n        rightContainer.removeAllViews();\n        rightImageView = null;\n        rightTextView = null;", "    public void setCustomRightView(View view, FrameLayout.LayoutParams layoutParams) {\n//        isSetTitleGravity = true;\n        rightContainer.setOnClickListener(null);\n        rightContainer.setOnLongClickListener(null);\n        rightContainer.removeAllViews();\n        rightImageView = null;\n        rightTextView = null;\n        if (layoutParams != null) {\n            rightContainer.addView(view, layoutParams);\n        } else {\n            rightContainer.addView(view);\n        }\n    }\n\n    /**\n     *\n     * @return \u83b7\u53d6\u53f3\u4fa7\u7684\u81ea\u5b9a\u4e49View\n     */\n    @Nullable", "    public View getCustomRightView() {\n        if (rightContainer.getChildCount() > 0) {\n            return rightContainer.getChildAt(0);\n        }\n        return null;\n    }\n\n    /**\n     * \u8bbe\u7f6e\u5de6\u4fa7\u81ea\u5b9a\u4e49View\n     *\n     * @param view \u81ea\u5b9a\u4e49View\n     */", "    public void setCustomLeftView(View view) {\n        setCustomLeftView(view, null);\n    }\n\n    /**\n     * \u8bbe\u7f6e\u5de6\u4fa7\u81ea\u5b9a\u4e49View\n     *\n     * @param view \u81ea\u5b9a\u4e49View\n     */\n    public void setCustomLeftView(View view, FrameLayout.LayoutParams layoutParams) {\n//        isSetTitleGravity = true;\n        leftContainer.setOnClickListener(null);\n        leftContainer.setOnLongClickListener(null);\n        leftContainer.removeAllViews();\n        backImageView = null;\n        backTextView = null;", "    public void setCustomLeftView(View view, FrameLayout.LayoutParams layoutParams) {\n//        isSetTitleGravity = true;\n        leftContainer.setOnClickListener(null);\n        leftContainer.setOnLongClickListener(null);\n        leftContainer.removeAllViews();\n        backImageView = null;\n        backTextView = null;\n        if (layoutParams != null) {\n            leftContainer.addView(view, layoutParams);\n        } else {\n            leftContainer.addView(view);\n        }\n    }\n\n    /**\n     *\n     * @return \u83b7\u53d6\u5de6\u4fa7\u7684\u81ea\u5b9a\u4e49View\n     */\n    @Nullable", "    public View getCustomLeftView() {\n        if (leftContainer.getChildCount() > 0) {\n            return leftContainer.getChildAt(0);\n        }\n        return null;\n    }\n\n    /**\n     * \u8bbe\u7f6e\u662f\u5426\u5c55\u793a\u5de6\u4fa7View \uff08\u901a\u5e38\u662f\u6307 \u8fd4\u56de\u6309\u94ae\uff09\n     *\n     * @param showLeftView \u662f\u5426\u5c55\u793a\u5de6\u4fa7 View\n     */", "    public void setDisplayLeftView(boolean showLeftView) {\n        leftContainer.setVisibility(showLeftView ? VISIBLE : GONE);\n    }\n\n    /**\n     * \u8bbe\u7f6e\u662f\u5426\u5c55\u793a\u53f3\u4fa7View\n     *\n     * @param showRightView \u662f\u5426\u5c55\u793a\u53f3\u4fa7 View\n     */\n    public void setDisplayRightView(boolean showRightView) {\n        rightContainer.setVisibility(showRightView ? VISIBLE : GONE);\n    }\n\n    /**\n     * \u8bbe\u7f6e\u6807\u9898\n     *\n     * @param text \u6807\u9898\n     */", "    public void setDisplayRightView(boolean showRightView) {\n        rightContainer.setVisibility(showRightView ? VISIBLE : GONE);\n    }\n\n    /**\n     * \u8bbe\u7f6e\u6807\u9898\n     *\n     * @param text \u6807\u9898\n     */\n    public void setTitle(CharSequence text) {\n        if (titleView != null) {\n            titleView.setText(text);\n        }\n    }\n\n    /**\n     * \u8bbe\u7f6e\u6807\u9898\n     *\n     * @param resid \u6807\u9898id\n     */", "    public void setTitle(CharSequence text) {\n        if (titleView != null) {\n            titleView.setText(text);\n        }\n    }\n\n    /**\n     * \u8bbe\u7f6e\u6807\u9898\n     *\n     * @param resid \u6807\u9898id\n     */", "    public void setTitle(@StringRes int resid) {\n        if (titleView != null) {\n            titleView.setText(resid);\n        }\n    }\n\n    /**\n     * \u8bbe\u7f6e\u6807\u9898\u989c\u8272\n     *\n     * @param color \u989c\u8272\n     */", "    public void setTitleColor(@ColorInt int color) {\n        if (titleView != null) {\n            titleView.setTextColor(color);\n        }\n    }\n\n    /**\n     * \u8bbe\u7f6e\u6807\u9898\u4f4d\u7f6e\n     *\n     * @param gravity \u4f4d\u7f6e {@link TitleGravity}\n     */", "    public void setTitleGravity(TitleGravity gravity) {\n        titleGravity = gravity;\n        ConstraintLayout.LayoutParams layoutParams = (ConstraintLayout.LayoutParams) titleView.getLayoutParams();\n        if (gravity == TitleGravity.START) {\n            layoutParams.endToEnd = ConstraintLayout.LayoutParams.UNSET;\n            layoutParams.startToStart = ConstraintLayout.LayoutParams.UNSET;\n            layoutParams.startToEnd = R.id.left_container;\n            layoutParams.endToStart = R.id.right_container;\n            layoutParams.horizontalBias = 0;\n            layoutParams.leftMargin = 0;\n            layoutParams.rightMargin = 0;", "        } else if (gravity == TitleGravity.END) {\n            layoutParams.endToEnd = ConstraintLayout.LayoutParams.UNSET;\n            layoutParams.startToStart = ConstraintLayout.LayoutParams.UNSET;\n            layoutParams.startToEnd = R.id.left_container;\n            layoutParams.endToStart = R.id.right_container;\n            layoutParams.horizontalBias = 1f;\n            layoutParams.leftMargin = 0;\n            layoutParams.rightMargin = 0;\n        } else {\n            if (!isLayout) {\n                isSetTitleGravity = true;\n            }\n            int margin = Math.max(leftContainer.getWidth(), rightContainer.getWidth());\n            layoutParams.startToEnd = ConstraintLayout.LayoutParams.UNSET;\n            layoutParams.endToStart = ConstraintLayout.LayoutParams.UNSET;\n            layoutParams.horizontalBias = .5f;\n            layoutParams.endToEnd = ConstraintLayout.LayoutParams.PARENT_ID;\n            layoutParams.startToStart = ConstraintLayout.LayoutParams.PARENT_ID;\n            layoutParams.leftMargin = margin;\n            layoutParams.rightMargin = margin;\n        }\n        titleView.setLayoutParams(layoutParams);\n    }\n\n    /**\n     * \u8bbe\u7f6e\u8fd4\u56de\u70b9\u51fb\u76d1\u542c\n     *\n     * @param listener \u76d1\u542c\u5668\n     */", "            if (!isLayout) {\n                isSetTitleGravity = true;\n            }\n            int margin = Math.max(leftContainer.getWidth(), rightContainer.getWidth());\n            layoutParams.startToEnd = ConstraintLayout.LayoutParams.UNSET;\n            layoutParams.endToStart = ConstraintLayout.LayoutParams.UNSET;\n            layoutParams.horizontalBias = .5f;\n            layoutParams.endToEnd = ConstraintLayout.LayoutParams.PARENT_ID;\n            layoutParams.startToStart = ConstraintLayout.LayoutParams.PARENT_ID;\n            layoutParams.leftMargin = margin;\n            layoutParams.rightMargin = margin;\n        }\n        titleView.setLayoutParams(layoutParams);\n    }\n\n    /**\n     * \u8bbe\u7f6e\u8fd4\u56de\u70b9\u51fb\u76d1\u542c\n     *\n     * @param listener \u76d1\u542c\u5668\n     */", "    public void setOnBackViewClickListener(OnClickListener listener) {\n        if (leftContainer != null) {\n            leftContainer.setOnClickListener(listener);\n        }\n    }\n\n    /**\n     * \u8bbe\u7f6e\u8fd4\u56de\u957f\u6309\u76d1\u542c\n     *\n     * @param listener \u76d1\u542c\u5668\n     */", "    public void setOnBackViewLongClickListener(OnLongClickListener listener) {\n        if (leftContainer != null) {\n            leftContainer.setOnLongClickListener(listener);\n        }\n    }\n\n    /**\n     * \u8bbe\u7f6e\u53f3\u4fa7\u70b9\u51fb\u76d1\u542c\n     *\n     * @param listener \u76d1\u542c\u5668\n     */", "    public void setOnRightViewClickListener(OnClickListener listener) {\n        if (rightContainer != null) {\n            rightContainer.setOnClickListener(listener);\n        }\n    }\n\n    /**\n     * \u8bbe\u7f6e\u53f3\u4fa7\u957f\u6309\u76d1\u542c\n     *\n     * @param listener \u76d1\u542c\u5668\n     */", "    public void setOnRightViewLongClickListener(OnLongClickListener listener) {\n        if (rightContainer != null) {\n            rightContainer.setOnLongClickListener(listener);\n        }\n    }\n\n    /**\n     * \u9690\u85cf titleBar\n     */\n    public void hide() {\n        setVisibility(GONE);\n    }\n\n    /**\n     * \u663e\u793a titleBar\n     */", "    public void hide() {\n        setVisibility(GONE);\n    }\n\n    /**\n     * \u663e\u793a titleBar\n     */\n    public void show() {\n        setVisibility(VISIBLE);\n    }\n\n    @Override", "    public void setVisibility(int visibility) {\n        if (isWindowTitleBar && aboveContent) {\n            ViewGroup content = ((Activity) getContext()).findViewById(android.R.id.content);\n            if (visibility == GONE){\n                content.setPadding(0, 0, 0, 0);\n            }else if (isInitTitleBar){\n                int[] contentLat = new int[2];\n                content.getLocationOnScreen(contentLat);\n\n                int paddingTop = (int) (contentLat[1] == 0 ? TitleBar.this.getHeight() - shadowView.getShadowMaxLength() : titleBarContainer.getHeight());\n                content.setPadding(0, aboveContent ? paddingTop : 0, 0, 0);\n            }\n        }\n        super.setVisibility(visibility);\n    }\n", "    public boolean isAboveContent() {\n        return aboveContent;\n    }\n\n    /**\n     * TitleBar \u662f\u5426\u5728\u5185\u5bb9\u4e0a\u8fb9\n     *\n     * @param aboveContent true\u5219TitleBar\u548c\u5e03\u5c40\u6210\u4e0a\u4e0b\u7ed3\u6784\uff0cfalse\u5219TitleBar\u8986\u76d6\u5728\u5e03\u5c40\u4e0a\u65b9\n     */\n    public void setAboveContent(boolean aboveContent) {\n        this.aboveContent = aboveContent;\n        setTitleBarPaddings();\n    }\n\n    /**\n     * \u6b64\u65b9\u6cd5\u5df2\u88ab\u4fee\u6539\uff0c\u6574\u4e2aView\u7684\u9ad8\u5ea6\u8bbe\u5b9a\u5c06\u5e94\u7528\u4e8e \u8fd4\u56de\u4e00\u89c8 \uff0c\u8fd9\u4e2a\u5916\u5c42\u7684\u9ad8\u5ea6\u59cb\u7ec8\u662f{@link ViewGroup.LayoutParams#WRAP_CONTENT}<br>\n     * \u8be6\u60c5\u53ef\u770b{@link TitleBar#setTitleBarLayoutParams(ViewGroup.LayoutParams)}\n     */\n    @Override", "    public void setAboveContent(boolean aboveContent) {\n        this.aboveContent = aboveContent;\n        setTitleBarPaddings();\n    }\n\n    /**\n     * \u6b64\u65b9\u6cd5\u5df2\u88ab\u4fee\u6539\uff0c\u6574\u4e2aView\u7684\u9ad8\u5ea6\u8bbe\u5b9a\u5c06\u5e94\u7528\u4e8e \u8fd4\u56de\u4e00\u89c8 \uff0c\u8fd9\u4e2a\u5916\u5c42\u7684\u9ad8\u5ea6\u59cb\u7ec8\u662f{@link ViewGroup.LayoutParams#WRAP_CONTENT}<br>\n     * \u8be6\u60c5\u53ef\u770b{@link TitleBar#setTitleBarLayoutParams(ViewGroup.LayoutParams)}\n     */\n    @Override\n    public void setLayoutParams(ViewGroup.LayoutParams params) {\n        setTitleBarLayoutParams(params);\n    }\n\n    /**\n     * \u4e0d\u5efa\u8bae\u4f7f\u7528\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u56e0\u4e3a\u8fd9\u53ef\u80fd\u5305\u542b\u4f60\u4e0d\u9700\u8981\u7684\u4e1c\u897f\u3002\u8be6\u60c5\u53ef\u770b{@link TitleBar#getTitleBarLayoutParams}\n     *\n     * @return\n     */\n    @Deprecated\n    @Override\n    public ViewGroup.LayoutParams getLayoutParams() {\n        return super.getLayoutParams();\n    }\n\n    /**\n     * \u83b7\u53d6\u5b9e\u9645 {@link ViewGroup.LayoutParams} \u53c2\u6570\uff0c\u56e0\u4e3a\u6574\u4e2aTitleBar\u5b9e\u9645\u5305\u542b\u4e86<\u4e0a \u4e2d \u4e0b> \u4e09\u90e8\u5206\n     * \u90a3\u4e48\u6211\u4eec\u5b9e\u9645\u4e0a\u4e3b\u8981\u5173\u6ce8\u7684\u662f\u8fd4\u56de\u6309\u94ae\u90a3\u4e00\u680f\uff0c\u4e0d\u5173\u5fc3 shadow \u548c \u72b6\u6001\u680f\uff0c\u6240\u4ee5\u5efa\u8bae\u7528\u8fd9\u4e2a\n     * <ul>\n     *  <li> \u4e0a -> \u72b6\u6001\u680f\u5360\u4f4d\u6240\u7528\u7684View\n     *  <li> \u4e2d -> \u5c31\u662f\u8fd4\u56de\u6309\u94ae\u4e00\u680f\n     *  <li> \u4e0b -> \u663e\u793a shadow \u7684View\n     * </ul>\n     *\n     * @return\n     */\n    public ViewGroup.LayoutParams getTitleBarLayoutParams() {\n        ViewGroup.LayoutParams containerLayoutParams = titleBarContainer.getLayoutParams();\n        ViewGroup.LayoutParams layoutParams = super.getLayoutParams();", "    public void setLayoutParams(ViewGroup.LayoutParams params) {\n        setTitleBarLayoutParams(params);\n    }\n\n    /**\n     * \u4e0d\u5efa\u8bae\u4f7f\u7528\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u56e0\u4e3a\u8fd9\u53ef\u80fd\u5305\u542b\u4f60\u4e0d\u9700\u8981\u7684\u4e1c\u897f\u3002\u8be6\u60c5\u53ef\u770b{@link TitleBar#getTitleBarLayoutParams}\n     *\n     * @return\n     */\n    @Deprecated\n    @Override\n    public ViewGroup.LayoutParams getLayoutParams() {\n        return super.getLayoutParams();\n    }\n\n    /**\n     * \u83b7\u53d6\u5b9e\u9645 {@link ViewGroup.LayoutParams} \u53c2\u6570\uff0c\u56e0\u4e3a\u6574\u4e2aTitleBar\u5b9e\u9645\u5305\u542b\u4e86<\u4e0a \u4e2d \u4e0b> \u4e09\u90e8\u5206\n     * \u90a3\u4e48\u6211\u4eec\u5b9e\u9645\u4e0a\u4e3b\u8981\u5173\u6ce8\u7684\u662f\u8fd4\u56de\u6309\u94ae\u90a3\u4e00\u680f\uff0c\u4e0d\u5173\u5fc3 shadow \u548c \u72b6\u6001\u680f\uff0c\u6240\u4ee5\u5efa\u8bae\u7528\u8fd9\u4e2a\n     * <ul>\n     *  <li> \u4e0a -> \u72b6\u6001\u680f\u5360\u4f4d\u6240\u7528\u7684View\n     *  <li> \u4e2d -> \u5c31\u662f\u8fd4\u56de\u6309\u94ae\u4e00\u680f\n     *  <li> \u4e0b -> \u663e\u793a shadow \u7684View\n     * </ul>\n     *\n     * @return\n     */\n    public ViewGroup.LayoutParams getTitleBarLayoutParams() {\n        ViewGroup.LayoutParams containerLayoutParams = titleBarContainer.getLayoutParams();\n        ViewGroup.LayoutParams layoutParams = super.getLayoutParams();", "        if (layoutParams != null) {\n            layoutParams.height = containerLayoutParams.height;\n        }\n        return layoutParams;\n    }\n\n    /**\n     * \u8bbe\u7f6e\u5b9e\u9645 {@link ViewGroup.LayoutParams} \u53c2\u6570\uff0c\u539f\u56e0\u53ef\u770b{@link TitleBar#getTitleBarLayoutParams()}<br>\n     * TitleBar \u9ad8\u5ea6\u6c38\u8fdc\u662f{@link ViewGroup.LayoutParams#WRAP_CONTENT}\uff0c\u5b9e\u9645\u4e0a\u9ad8\u5ea6\u8bbe\u5b9a\u7ed9\u4e86 \u8fd4\u56de\u6309\u94ae\u4e00\u680f\n     */\n    public void setTitleBarLayoutParams(ViewGroup.LayoutParams params) {", "    public void setTitleBarLayoutParams(ViewGroup.LayoutParams params) {\n        if (titleBarContainer != null) {\n            ViewGroup.LayoutParams layoutParams = titleBarContainer.getLayoutParams();\n            layoutParams.height = params.height;\n            titleBarContainer.setLayoutParams(layoutParams);\n        }\n        params.height = ViewGroup.LayoutParams.WRAP_CONTENT;\n        super.setLayoutParams(params);\n    }\n\n    /**\n     * \u8bbe\u7f6e\u6574\u4e2a\u5305\u542b\u72b6\u6001\u680f\u548cshadow \u7684TitleBar\u7684 {@link ViewGroup.LayoutParams}\uff0c\u4e0d\u5efa\u8bae\u7528\u8fd9\u4e2a\n     *\n     * @param params\n     */", "    public void setRealLayoutParams(ViewGroup.LayoutParams params) {\n        super.setLayoutParams(params);\n    }\n\n    /**\n     * @return shadow\u9ad8\u5ea6\n     */\n    public int getShadowHeight() {\n        return shadowView.getHeight();\n    }\n\n    /**\n     * @return \u72b6\u6001\u680f\u9ad8\u5ea6\n     */", "    public int getStatusBarViewHeight() {\n        return titleBarStatusBar.getHeight();\n    }\n\n    /**\n     * \u8fd9\u4e2a\u9ad8\u5ea6\u662f\u5305\u542b\u72b6\u6001\u680f\uff0cshadow\u548c\u8fd4\u56de\u6309\u94ae\u4e00\u680f\u7684\u603b\u9ad8\u5ea6\n     *\n     * @return \u6574\u4e2aTitleBar \u7684\u9ad8\u5ea6\n     */\n    public int getTitleBarHeight() {\n        return getHeight();\n    }\n\n    /**\n     * \u8bbe\u7f6e\u72b6\u6001\u680f\u80cc\u666f\n     *\n     * @param background Drawable\n     */", "    public int getTitleBarHeight() {\n        return getHeight();\n    }\n\n    /**\n     * \u8bbe\u7f6e\u72b6\u6001\u680f\u80cc\u666f\n     *\n     * @param background Drawable\n     */\n    public void setStatusBarBackground(Drawable background) {\n        titleBarStatusBar.setBackground(background);\n    }\n\n    /**\n     * \u8bbe\u7f6e\u72b6\u6001\u680f\u80cc\u666f\n     *\n     * @param resid \u8d44\u6e90\u56fe\n     */", "    public void setStatusBarBackground(Drawable background) {\n        titleBarStatusBar.setBackground(background);\n    }\n\n    /**\n     * \u8bbe\u7f6e\u72b6\u6001\u680f\u80cc\u666f\n     *\n     * @param resid \u8d44\u6e90\u56fe\n     */\n    public void setStatusBarBackgroundResource(@DrawableRes int resid) {\n        titleBarStatusBar.setBackgroundResource(resid);\n    }\n\n    /**\n     * \u8bbe\u7f6e\u72b6\u6001\u680f\u80cc\u666f\n     *\n     * @param color \u989c\u8272\n     */", "    public void setStatusBarBackgroundResource(@DrawableRes int resid) {\n        titleBarStatusBar.setBackgroundResource(resid);\n    }\n\n    /**\n     * \u8bbe\u7f6e\u72b6\u6001\u680f\u80cc\u666f\n     *\n     * @param color \u989c\u8272\n     */\n    public void setStatusBarBackgroundColor(@ColorInt int color) {\n        titleBarStatusBar.setBackgroundColor(color);\n    }\n\n    /**\n     * \u83b7\u53d6\u72b6\u6001\u680fView\n     *\n     * @return ImageView\n     */", "    public void setStatusBarBackgroundColor(@ColorInt int color) {\n        titleBarStatusBar.setBackgroundColor(color);\n    }\n\n    /**\n     * \u83b7\u53d6\u72b6\u6001\u680fView\n     *\n     * @return ImageView\n     */\n    public ImageView getTitleBarStatusBar() {\n        return titleBarStatusBar;\n    }\n}\n", "    public ImageView getTitleBarStatusBar() {\n        return titleBarStatusBar;\n    }\n}\n"]}
{"filename": "library/src/main/java/com/flyjingfish/titlebarlib/DeviceHelper.java", "chunked_list": ["package com.flyjingfish.titlebarlib;\n\n\nimport android.os.Build;\nimport android.os.Environment;\nimport android.text.TextUtils;\n\nimport androidx.annotation.Nullable;\n\nimport java.io.Closeable;", "\nimport java.io.Closeable;\nimport java.io.File;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.lang.reflect.Method;\nimport java.util.Properties;\nimport java.util.regex.Matcher;\nimport java.util.regex.Pattern;\n", "import java.util.regex.Pattern;\n\nclass DeviceHelper {\n    private final static String KEY_MIUI_VERSION_NAME = \"ro.miui.ui.version.name\";\n    private static final String KEY_FLYME_VERSION_NAME = \"ro.build.display.id\";\n    private final static String FLYME = \"flyme\";\n    private final static String MEIZUBOARD[] = {\"m9\", \"M9\", \"mx\", \"MX\"};\n\n    private static String sMiuiVersionName;\n    private static String sFlymeVersionName;", "    private static String sMiuiVersionName;\n    private static String sFlymeVersionName;\n    private static final String BRAND = Build.BRAND.toLowerCase();\n    private static boolean isInfoReaded = false;\n\n    public static void close(Closeable c) {\n        if (c != null) {\n            try {\n                c.close();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n\n    private static void checkReadInfo() {", "        if (isInfoReaded) {\n            return;\n        }\n        isInfoReaded = true;\n        Properties properties = new Properties();\n\n        if (Build.VERSION.SDK_INT < Build.VERSION_CODES.O) {\n            // android 8.0\uff0c\u8bfb\u53d6 /system/uild.prop \u4f1a\u62a5 permission denied\n            FileInputStream fileInputStream = null;\n            try {\n                fileInputStream = new FileInputStream(new File(Environment.getRootDirectory(), \"build.prop\"));\n                properties.load(fileInputStream);\n            } catch (Exception e) {\n            } finally {\n                close(fileInputStream);\n            }\n        }\n\n        Class<?> clzSystemProperties = null;", "            try {\n                fileInputStream = new FileInputStream(new File(Environment.getRootDirectory(), \"build.prop\"));\n                properties.load(fileInputStream);\n            } catch (Exception e) {\n            } finally {\n                close(fileInputStream);\n            }\n        }\n\n        Class<?> clzSystemProperties = null;\n        try {\n            clzSystemProperties = Class.forName(\"android.os.SystemProperties\");\n            Method getMethod = clzSystemProperties.getDeclaredMethod(\"get\", String.class);\n            // miui\n            sMiuiVersionName = getLowerCaseName(properties, getMethod, KEY_MIUI_VERSION_NAME);\n            //flyme\n            sFlymeVersionName = getLowerCaseName(properties, getMethod, KEY_FLYME_VERSION_NAME);\n        } catch (Exception e) {\n        }\n    }\n\n    /**\n     * \u5224\u65ad\u662f\u5426\u662fflyme\u7cfb\u7edf\n     */\n    private static OnceReadValue<Void, Boolean> isFlymeValue = new OnceReadValue<Void, Boolean>() {\n        @Override\n        protected Boolean read(Void param) {\n            checkReadInfo();\n            return !TextUtils.isEmpty(sFlymeVersionName) && sFlymeVersionName.contains(FLYME);\n        }\n    };\n", "        try {\n            clzSystemProperties = Class.forName(\"android.os.SystemProperties\");\n            Method getMethod = clzSystemProperties.getDeclaredMethod(\"get\", String.class);\n            // miui\n            sMiuiVersionName = getLowerCaseName(properties, getMethod, KEY_MIUI_VERSION_NAME);\n            //flyme\n            sFlymeVersionName = getLowerCaseName(properties, getMethod, KEY_FLYME_VERSION_NAME);\n        } catch (Exception e) {\n        }\n    }\n\n    /**\n     * \u5224\u65ad\u662f\u5426\u662fflyme\u7cfb\u7edf\n     */\n    private static OnceReadValue<Void, Boolean> isFlymeValue = new OnceReadValue<Void, Boolean>() {\n        @Override\n        protected Boolean read(Void param) {\n            checkReadInfo();\n            return !TextUtils.isEmpty(sFlymeVersionName) && sFlymeVersionName.contains(FLYME);\n        }\n    };\n", "    public static boolean isFlyme() {\n        return isFlymeValue.get(null);\n    }\n\n    /**\n     * \u5224\u65ad\u662f\u5426\u662fMIUI\u7cfb\u7edf\n     */\n    public static boolean isMIUI() {\n        checkReadInfo();\n        return !TextUtils.isEmpty(sMiuiVersionName);\n    }\n", "    public static boolean isMIUIV5() {\n        checkReadInfo();\n        return \"v5\".equals(sMiuiVersionName);\n    }\n\n    public static boolean isMIUIV6() {\n        checkReadInfo();\n        return \"v6\".equals(sMiuiVersionName);\n    }\n\n    public static boolean isMIUIV7() {\n        checkReadInfo();\n        return \"v7\".equals(sMiuiVersionName);\n    }\n", "    public static boolean isMIUIV7() {\n        checkReadInfo();\n        return \"v7\".equals(sMiuiVersionName);\n    }\n\n    public static boolean isMIUIV8() {\n        checkReadInfo();\n        return \"v8\".equals(sMiuiVersionName);\n    }\n\n    public static boolean isMIUIV9() {\n        checkReadInfo();\n        return \"v9\".equals(sMiuiVersionName);\n    }\n", "    public static boolean isMIUIV9() {\n        checkReadInfo();\n        return \"v9\".equals(sMiuiVersionName);\n    }\n\n    public static boolean isFlymeLowerThan(int majorVersion) {\n        return isFlymeLowerThan(majorVersion, 0, 0);\n    }\n\n    public static boolean isFlymeLowerThan(int majorVersion, int minorVersion, int patchVersion) {\n        checkReadInfo();\n        boolean isLower = false;", "    public static boolean isFlymeLowerThan(int majorVersion, int minorVersion, int patchVersion) {\n        checkReadInfo();\n        boolean isLower = false;\n        if (sFlymeVersionName != null && !sFlymeVersionName.equals(\"\")) {\n            try {\n                Pattern pattern = Pattern.compile(\"(\\\\d+\\\\.){2}\\\\d\");\n                Matcher matcher = pattern.matcher(sFlymeVersionName);\n                if (matcher.find()) {\n                    String versionString = matcher.group();\n                    if (versionString.length() > 0) {\n                        String[] version = versionString.split(\"\\\\.\");", "                    if (versionString.length() > 0) {\n                        String[] version = versionString.split(\"\\\\.\");\n                        if (version.length >= 1) {\n                            if (Integer.parseInt(version[0]) < majorVersion) {\n                                isLower = true;\n                            }\n                        }\n\n                        if (version.length >= 2 && minorVersion > 0) {\n                            if (Integer.parseInt(version[1]) < majorVersion) {\n                                isLower = true;\n                            }\n                        }\n", "                        if (version.length >= 2 && minorVersion > 0) {\n                            if (Integer.parseInt(version[1]) < majorVersion) {\n                                isLower = true;\n                            }\n                        }\n\n                        if (version.length >= 3 && patchVersion > 0) {\n                            if (Integer.parseInt(version[2]) < majorVersion) {\n                                isLower = true;\n                            }\n                        }\n                    }\n                }\n            } catch (Throwable ignore) {\n\n            }\n        }\n        return isMeizu() && isLower;\n    }\n\n\n    private static OnceReadValue<Void, Boolean> isMeizuValue = new OnceReadValue<Void, Boolean>() {\n        @Override\n        protected Boolean read(Void param) {\n            checkReadInfo();\n            return isPhone(MEIZUBOARD) || isFlyme();\n        }\n    };\n", "    public static boolean isMeizu() {\n        return isMeizuValue.get(null);\n    }\n\n    private static OnceReadValue<Void, Boolean> isEssentialPhoneValue = new OnceReadValue<Void, Boolean>() {\n        @Override\n        protected Boolean read(Void param) {\n            return BRAND.contains(\"essential\");\n        }\n    };\n", "    public static boolean isEssentialPhone() {\n        return isEssentialPhoneValue.get(null);\n    }\n\n    private static boolean isPhone(String[] boards) {\n        checkReadInfo();\n        final String board = Build.BOARD;\n        if (board == null) {\n            return false;\n        }\n        for (String board1 : boards) {", "        for (String board1 : boards) {\n            if (board.equals(board1)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    @Nullable\n    private static String getLowerCaseName(Properties p, Method get, String key) {\n        String name = p.getProperty(key);", "        if (name == null) {\n            try {\n                name = (String) get.invoke(null, key);\n            } catch (Exception ignored) {\n            }\n        }\n        if (name != null) name = name.toLowerCase();\n        return name;\n    }\n}"]}
{"filename": "library/src/main/java/com/flyjingfish/titlebarlib/ScreenUtils.java", "chunked_list": ["package com.flyjingfish.titlebarlib;\n\n\nimport android.content.Context;\nimport android.util.DisplayMetrics;\nimport android.util.TypedValue;\nimport android.view.WindowManager;\n\nclass ScreenUtils {\n    private static int screenWidth;", "class ScreenUtils {\n    private static int screenWidth;\n    private static int screenHeight;\n    public static float dp2px(Context context,float dp){\n        return TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP,dp,context.getResources().getDisplayMetrics()) + 0.5f;\n    }\n\n    public static int getScreenWidth(Context context) {\n        DisplayMetrics outMetrics = new DisplayMetrics();\n        ((WindowManager) context.getSystemService(Context.WINDOW_SERVICE)).getDefaultDisplay().getRealMetrics(outMetrics);\n        return outMetrics.widthPixels;\n    }\n", "    public static int getScreenHeight(Context context) {\n        DisplayMetrics outMetrics = new DisplayMetrics();\n        ((WindowManager) context.getSystemService(Context.WINDOW_SERVICE)).getDefaultDisplay().getRealMetrics(outMetrics);\n        return outMetrics.heightPixels;\n    }\n\n    public static int getScreenWidth2Cache(Context context) {\n        if (screenWidth == 0){\n            screenWidth = getScreenWidth(context);\n        }\n        return screenWidth;\n    }\n", "    public static int getScreenHeight2Cache(Context context) {\n        if (screenHeight == 0){\n            screenHeight = getScreenHeight(context);\n        }\n        return screenHeight;\n    }\n\n    public static int getStatusBarHeight(Context context) {\n        return StatusBarHelper.getStatusbarHeight(context);\n    }\n}\n"]}
{"filename": "library/src/main/java/com/flyjingfish/titlebarlib/StatusBarHelper.java", "chunked_list": ["package com.flyjingfish.titlebarlib;\n\nimport android.annotation.TargetApi;\nimport android.app.Activity;\nimport android.content.Context;\nimport android.graphics.Color;\nimport android.os.Build;\nimport android.view.View;\nimport android.view.Window;\nimport android.view.WindowManager;", "import android.view.Window;\nimport android.view.WindowManager;\n\nimport androidx.annotation.ColorInt;\nimport androidx.core.view.ViewCompat;\nimport androidx.core.view.WindowCompat;\nimport androidx.core.view.WindowInsetsControllerCompat;\n\nimport java.lang.reflect.Field;\nimport java.lang.reflect.Method;", "import java.lang.reflect.Field;\nimport java.lang.reflect.Method;\n\nclass StatusBarHelper {\n\n    private enum StatusBarType {\n        Default, Miui, Flyme, Android6\n    }\n\n    private final static int STATUS_BAR_DEFAULT_HEIGHT_DP = 25; // \u5927\u90e8\u5206\u72b6\u6001\u680f\u90fd\u662f25dp", "\n    private final static int STATUS_BAR_DEFAULT_HEIGHT_DP = 25; // \u5927\u90e8\u5206\u72b6\u6001\u680f\u90fd\u662f25dp\n    // \u5728\u67d0\u4e9b\u673a\u5b50\u4e0a\u5b58\u5728\u4e0d\u540c\u7684density\u503c\uff0c\u6240\u4ee5\u589e\u52a0\u4e24\u4e2a\u865a\u62df\u503c\n    public static float sVirtualDensity = -1;\n    public static float sVirtualDensityDpi = -1;\n    private static int sStatusBarHeight = -1;\n    private static StatusBarType mStatusBarType = StatusBarType.Default;\n    private static Integer sTransparentValue;\n\n    public static void translucent(Activity activity) {\n        translucent(activity.getWindow());\n    }\n", "    public static void translucent(Activity activity) {\n        translucent(activity.getWindow());\n    }\n\n    public static void translucent(Window window) {\n        translucent(window, 0x40000000);\n    }\n\n    private static boolean supportTranslucent() {\n        // Essential Phone \u5728 Android 8 \u4e4b\u524d\u6c89\u6d78\u5f0f\u505a\u5f97\u4e0d\u5168\uff0c\u7cfb\u7edf\u4e0d\u4ece\u72b6\u6001\u680f\u9876\u90e8\u5f00\u59cb\u5e03\u5c40\u5374\u4f1a\u4e0b\u53d1 WindowInsets\n        return !(DeviceHelper.isEssentialPhone() && Build.VERSION.SDK_INT < 26);\n    }\n\n    /**\n     * \u6c89\u6d78\u5f0f\u72b6\u6001\u680f\u3002\n     * \u652f\u6301 4.4 \u4ee5\u4e0a\u7248\u672c\u7684 MIUI \u548c Flyme\uff0c\u4ee5\u53ca 5.0 \u4ee5\u4e0a\u7248\u672c\u7684\u5176\u4ed6 Android\u3002\n     *\n     * @param activity \u9700\u8981\u88ab\u8bbe\u7f6e\u6c89\u6d78\u5f0f\u72b6\u6001\u680f\u7684 Activity\u3002\n     */", "    public static void translucent(Activity activity, @ColorInt int colorOn5x) {\n        Window window = activity.getWindow();\n        translucent(window, colorOn5x);\n    }\n\n    public static boolean isNotchOfficialSupport(){\n        return Build.VERSION.SDK_INT >= Build.VERSION_CODES.P;\n    }\n\n    @TargetApi(19)\n    public static void translucent(Window window, @ColorInt int colorOn5x) {", "    public static void translucent(Window window, @ColorInt int colorOn5x) {\n        if (!supportTranslucent()) {\n            // \u7248\u672c\u5c0f\u4e8e4.4\uff0c\u7edd\u5bf9\u4e0d\u8003\u8651\u6c89\u6d78\u5f0f\n            return;\n        }\n\n        if (isNotchOfficialSupport()) {\n            handleDisplayCutoutMode(window);\n        }\n\n        if (Build.VERSION.SDK_INT < Build.VERSION_CODES.N) {\n            // \u5c0f\u7c73 Android 6.0 \uff0c\u5f00\u53d1\u7248 7.7.13 \u53ca\u4ee5\u540e\u7248\u672c\u8bbe\u7f6e\u9ed1\u8272\u5b57\u4f53\u53c8\u9700\u8981 clear FLAG_TRANSLUCENT_STATUS, \u56e0\u6b64\u8fd8\u539f\u4e3a\u5b98\u65b9\u6a21\u5f0f", "        if (Build.VERSION.SDK_INT < Build.VERSION_CODES.N) {\n            // \u5c0f\u7c73 Android 6.0 \uff0c\u5f00\u53d1\u7248 7.7.13 \u53ca\u4ee5\u540e\u7248\u672c\u8bbe\u7f6e\u9ed1\u8272\u5b57\u4f53\u53c8\u9700\u8981 clear FLAG_TRANSLUCENT_STATUS, \u56e0\u6b64\u8fd8\u539f\u4e3a\u5b98\u65b9\u6a21\u5f0f\n            if (DeviceHelper.isFlymeLowerThan(8) || (DeviceHelper.isMIUI() && Build.VERSION.SDK_INT < Build.VERSION_CODES.M)) {\n                window.setFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS,\n                        WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);\n                return;\n            }\n        }\n\n        int systemUiVisibility = window.getDecorView().getSystemUiVisibility();\n        systemUiVisibility |= View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN | View.SYSTEM_UI_FLAG_LAYOUT_STABLE;\n        window.getDecorView().setSystemUiVisibility(systemUiVisibility);", "        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\n            // android 6\u4ee5\u540e\u53ef\u4ee5\u6539\u72b6\u6001\u680f\u5b57\u4f53\u989c\u8272\uff0c\u56e0\u6b64\u53ef\u4ee5\u81ea\u884c\u8bbe\u7f6e\u4e3a\u900f\u660e\n            window.clearFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);\n            window.addFlags(WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS);\n            window.setStatusBarColor(Color.TRANSPARENT);\n        } else {\n            // android 5\u4e0d\u80fd\u4fee\u6539\u72b6\u6001\u680f\u5b57\u4f53\u989c\u8272\uff0c\u56e0\u6b64\u76f4\u63a5\u7528FLAG_TRANSLUCENT_STATUS\uff0cnexus\u8868\u73b0\u4e3a\u534a\u900f\u660e\n            // \u9b45\u65cf\u548c\u5c0f\u7c73\u7684\u8868\u73b0\u5982\u4f55\uff1f\n            // update: \u90e8\u5206\u624b\u673a\u8fd0\u7528FLAG_TRANSLUCENT_STATUS\u65f6\u80cc\u666f\u4e0d\u662f\u534a\u900f\u660e\u800c\u662f\u6ca1\u6709\u80cc\u666f\u4e86\u3002\u3002\u3002\u3002\u3002\n//                window.addFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);\n\n            // \u91c7\u53d6setStatusBarColor\u7684\u65b9\u5f0f\uff0c\u90e8\u5206\u673a\u578b\u4e0d\u652f\u6301\uff0c\u90a3\u5c31\u7eaf\u9ed1\u4e86\uff0c\u4fdd\u8bc1\u72b6\u6001\u680f\u56fe\u6807\u53ef\u89c1\n            window.clearFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);", "            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {\n                window.addFlags(WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS);\n                window.setStatusBarColor(colorOn5x);\n            }\n        }\n    }\n\n    /**\n     * \u5982\u679c\u539f\u672c\u5b58\u5728\u67d0\u4e00\u4e2aflag\uff0c \u5c31\u5c06\u5b83\u8fc1\u79fb\u5230 out\n     * @param window\n     * @param out\n     * @param type\n     * @return\n     */", "    public static int retainSystemUiFlag(Window window, int out, int type) {\n        int now = window.getDecorView().getSystemUiVisibility();\n        if ((now & type) == type) {\n            out |= type;\n        }\n        return out;\n    }\n\n    @TargetApi(28)\n    private static void handleDisplayCutoutMode(final Window window) {\n        View decorView = window.getDecorView();", "        if (decorView != null) {\n            if (ViewCompat.isAttachedToWindow(decorView)) {\n                realHandleDisplayCutoutMode(window, decorView);\n            } else {\n                decorView.addOnAttachStateChangeListener(new View.OnAttachStateChangeListener() {\n                    @Override\n                    public void onViewAttachedToWindow(View v) {\n                        v.removeOnAttachStateChangeListener(this);\n                        realHandleDisplayCutoutMode(window, v);\n                    }\n\n                    @Override", "                    public void onViewDetachedFromWindow(View v) {\n\n                    }\n                });\n            }\n        }\n    }\n\n    @TargetApi(28)\n    private static void realHandleDisplayCutoutMode(Window window, View decorView) {\n        if (decorView.getRootWindowInsets() != null &&\n                decorView.getRootWindowInsets().getDisplayCutout() != null) {\n            WindowManager.LayoutParams params = window.getAttributes();\n            params.layoutInDisplayCutoutMode = WindowManager.LayoutParams\n                    .LAYOUT_IN_DISPLAY_CUTOUT_MODE_SHORT_EDGES;\n            window.setAttributes(params);\n        }\n    }\n\n    /**\n     * \u8bbe\u7f6e\u72b6\u6001\u680f\u9ed1\u8272\u5b57\u4f53\u56fe\u6807\uff0c\n     * \u652f\u6301 4.4 \u4ee5\u4e0a\u7248\u672c MIUI \u548c Flyme\uff0c\u4ee5\u53ca 6.0 \u4ee5\u4e0a\u7248\u672c\u7684\u5176\u4ed6 Android\n     *\n     * @param activity \u9700\u8981\u88ab\u5904\u7406\u7684 Activity\n     */", "        if (decorView.getRootWindowInsets() != null &&\n                decorView.getRootWindowInsets().getDisplayCutout() != null) {\n            WindowManager.LayoutParams params = window.getAttributes();\n            params.layoutInDisplayCutoutMode = WindowManager.LayoutParams\n                    .LAYOUT_IN_DISPLAY_CUTOUT_MODE_SHORT_EDGES;\n            window.setAttributes(params);\n        }\n    }\n\n    /**\n     * \u8bbe\u7f6e\u72b6\u6001\u680f\u9ed1\u8272\u5b57\u4f53\u56fe\u6807\uff0c\n     * \u652f\u6301 4.4 \u4ee5\u4e0a\u7248\u672c MIUI \u548c Flyme\uff0c\u4ee5\u53ca 6.0 \u4ee5\u4e0a\u7248\u672c\u7684\u5176\u4ed6 Android\n     *\n     * @param activity \u9700\u8981\u88ab\u5904\u7406\u7684 Activity\n     */", "    public static boolean setStatusBarLightMode(Activity activity) {\n        if (activity == null) return false;\n\n        if (mStatusBarType != StatusBarType.Default) {\n            return setStatusBarLightMode(activity, mStatusBarType);\n        }\n        if (isMIUICustomStatusBarLightModeImpl() && MIUISetStatusBarLightMode(activity.getWindow(), true)) {\n            mStatusBarType = StatusBarType.Miui;\n            return true;\n        } else if (FlymeSetStatusBarLightMode(activity.getWindow(), true)) {\n            mStatusBarType = StatusBarType.Flyme;\n            return true;", "        } else if (FlymeSetStatusBarLightMode(activity.getWindow(), true)) {\n            mStatusBarType = StatusBarType.Flyme;\n            return true;\n        } else if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\n            Android6SetStatusBarLightMode(activity.getWindow(), true);\n            mStatusBarType = StatusBarType.Android6;\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * \u5df2\u77e5\u7cfb\u7edf\u7c7b\u578b\u65f6\uff0c\u8bbe\u7f6e\u72b6\u6001\u680f\u9ed1\u8272\u5b57\u4f53\u56fe\u6807\u3002\n     * \u652f\u6301 4.4 \u4ee5\u4e0a\u7248\u672c MIUI \u548c Flyme\uff0c\u4ee5\u53ca 6.0 \u4ee5\u4e0a\u7248\u672c\u7684\u5176\u4ed6 Android\n     *\n     * @param activity \u9700\u8981\u88ab\u5904\u7406\u7684 Activity\n     * @param type     StatusBar \u7c7b\u578b\uff0c\u5bf9\u5e94\u4e0d\u540c\u7684\u7cfb\u7edf\n     */\n    private static boolean setStatusBarLightMode(Activity activity, StatusBarType type) {", "        if (type == StatusBarType.Miui) {\n            return MIUISetStatusBarLightMode(activity.getWindow(), true);\n        } else if (type == StatusBarType.Flyme) {\n            return FlymeSetStatusBarLightMode(activity.getWindow(), true);\n        } else if (type == StatusBarType.Android6) {\n            return Android6SetStatusBarLightMode(activity.getWindow(), true);\n        }\n        return false;\n    }\n\n\n    /**\n     * \u8bbe\u7f6e\u72b6\u6001\u680f\u767d\u8272\u5b57\u4f53\u56fe\u6807\n     * \u652f\u6301 4.4 \u4ee5\u4e0a\u7248\u672c MIUI \u548c Flyme\uff0c\u4ee5\u53ca 6.0 \u4ee5\u4e0a\u7248\u672c\u7684\u5176\u4ed6 Android\n     */", "    public static boolean setStatusBarDarkMode(Activity activity) {\n        if (activity == null) return false;\n        if (mStatusBarType == StatusBarType.Default) {\n            // \u9ed8\u8ba4\u72b6\u6001\uff0c\u4e0d\u9700\u8981\u5904\u7406\n            return true;\n        }\n\n        if (mStatusBarType == StatusBarType.Miui) {\n            return MIUISetStatusBarLightMode(activity.getWindow(), false);\n        } else if (mStatusBarType == StatusBarType.Flyme) {\n            return FlymeSetStatusBarLightMode(activity.getWindow(), false);", "        } else if (mStatusBarType == StatusBarType.Flyme) {\n            return FlymeSetStatusBarLightMode(activity.getWindow(), false);\n        } else if (mStatusBarType == StatusBarType.Android6) {\n            return Android6SetStatusBarLightMode(activity.getWindow(), false);\n        }\n        return true;\n    }\n\n    /**\n     * \u8bbe\u7f6e\u72b6\u6001\u680f\u5b57\u4f53\u56fe\u6807\u4e3a\u6df1\u8272\uff0cAndroid 6\n     *\n     * @param window \u9700\u8981\u8bbe\u7f6e\u7684\u7a97\u53e3\n     * @param light  \u662f\u5426\u628a\u72b6\u6001\u680f\u5b57\u4f53\u53ca\u56fe\u6807\u989c\u8272\u8bbe\u7f6e\u4e3a\u6df1\u8272\n     * @return boolean \u6210\u529f\u6267\u884c\u8fd4\u56detrue\n     */\n    @TargetApi(23)\n    private static boolean Android6SetStatusBarLightMode(Window window, boolean light) {", "        if (Build.VERSION.SDK_INT > Build.VERSION_CODES.R) {\n            WindowInsetsControllerCompat insetsController = WindowCompat.getInsetsController(window, window.getDecorView());\n            if (insetsController != null) {\n                insetsController.setAppearanceLightStatusBars(light);\n            }\n        } else {\n            // \u7ecf\u8fc7\u6d4b\u8bd5\uff0c\u5c0f\u7c73 Android 11 \u7528  WindowInsetsControllerCompat \u4e0d\u8d77\u4f5c\u7528\uff0c \u6211\u8fd8\u80fd\u8bf4\u4ec0\u4e48\u5462\u3002\u3002\u3002\n            View decorView = window.getDecorView();\n            int systemUi = decorView.getSystemUiVisibility();\n            if (light) {\n                systemUi |= View.SYSTEM_UI_FLAG_LIGHT_STATUS_BAR;\n            } else {\n                systemUi &= ~View.SYSTEM_UI_FLAG_LIGHT_STATUS_BAR;\n            }\n            decorView.setSystemUiVisibility(systemUi);\n        }\n", "            if (light) {\n                systemUi |= View.SYSTEM_UI_FLAG_LIGHT_STATUS_BAR;\n            } else {\n                systemUi &= ~View.SYSTEM_UI_FLAG_LIGHT_STATUS_BAR;\n            }\n            decorView.setSystemUiVisibility(systemUi);\n        }\n\n        if (DeviceHelper.isMIUIV9()) {\n            // MIUI 9 \u4f4e\u4e8e 6.0 \u7248\u672c\u4f9d\u65e7\u53ea\u80fd\u56de\u9000\u5230\u4ee5\u524d\u7684\u65b9\u6848\n            // https://github.com/Tencent/QMUI_Android/issues/160\n            MIUISetStatusBarLightMode(window, light);\n        }\n        return true;\n    }\n\n    /**\n     * \u8bbe\u7f6e\u72b6\u6001\u680f\u5b57\u4f53\u56fe\u6807\u4e3a\u6df1\u8272\uff0c\u9700\u8981 MIUIV6 \u4ee5\u4e0a\n     *\n     * @param window \u9700\u8981\u8bbe\u7f6e\u7684\u7a97\u53e3\n     * @param light  \u662f\u5426\u628a\u72b6\u6001\u680f\u5b57\u4f53\u53ca\u56fe\u6807\u989c\u8272\u8bbe\u7f6e\u4e3a\u6df1\u8272\n     * @return boolean \u6210\u529f\u6267\u884c\u8fd4\u56de true\n     */\n    @SuppressWarnings(\"unchecked\")", "        if (DeviceHelper.isMIUIV9()) {\n            // MIUI 9 \u4f4e\u4e8e 6.0 \u7248\u672c\u4f9d\u65e7\u53ea\u80fd\u56de\u9000\u5230\u4ee5\u524d\u7684\u65b9\u6848\n            // https://github.com/Tencent/QMUI_Android/issues/160\n            MIUISetStatusBarLightMode(window, light);\n        }\n        return true;\n    }\n\n    /**\n     * \u8bbe\u7f6e\u72b6\u6001\u680f\u5b57\u4f53\u56fe\u6807\u4e3a\u6df1\u8272\uff0c\u9700\u8981 MIUIV6 \u4ee5\u4e0a\n     *\n     * @param window \u9700\u8981\u8bbe\u7f6e\u7684\u7a97\u53e3\n     * @param light  \u662f\u5426\u628a\u72b6\u6001\u680f\u5b57\u4f53\u53ca\u56fe\u6807\u989c\u8272\u8bbe\u7f6e\u4e3a\u6df1\u8272\n     * @return boolean \u6210\u529f\u6267\u884c\u8fd4\u56de true\n     */\n    @SuppressWarnings(\"unchecked\")", "    public static boolean MIUISetStatusBarLightMode(Window window, boolean light) {\n        boolean result = false;\n        if (window != null) {\n            Class clazz = window.getClass();\n            try {\n                int darkModeFlag;\n                Class layoutParams = Class.forName(\"android.view.MiuiWindowManager$LayoutParams\");\n                Field field = layoutParams.getField(\"EXTRA_FLAG_STATUS_BAR_DARK_MODE\");\n                darkModeFlag = field.getInt(layoutParams);\n                Method extraFlagField = clazz.getMethod(\"setExtraFlags\", int.class, int.class);\n                if (light) {\n                    extraFlagField.invoke(window, darkModeFlag, darkModeFlag);//\u72b6\u6001\u680f\u900f\u660e\u4e14\u9ed1\u8272\u5b57\u4f53\n                } else {\n                    extraFlagField.invoke(window, 0, darkModeFlag);//\u6e05\u9664\u9ed1\u8272\u5b57\u4f53\n                }\n                result = true;\n            } catch (Exception ignored) {\n\n            }\n        }\n        return result;\n    }\n\n    /**\n     * \u66f4\u6539\u72b6\u6001\u680f\u56fe\u6807\u3001\u6587\u5b57\u989c\u8272\u7684\u65b9\u6848\u662f\u5426\u662fMIUI\u81ea\u5bb6\u7684\uff0c MIUI9 && Android 6 \u4e4b\u540e\u7528\u56deAndroid\u539f\u751f\u5b9e\u73b0\n     * \u89c1\u5c0f\u7c73\u5f00\u53d1\u6587\u6863\u8bf4\u660e\uff1ahttps://dev.mi.com/console/doc/detail?pId=1159\n     */\n    private static boolean isMIUICustomStatusBarLightModeImpl() {", "                if (light) {\n                    extraFlagField.invoke(window, darkModeFlag, darkModeFlag);//\u72b6\u6001\u680f\u900f\u660e\u4e14\u9ed1\u8272\u5b57\u4f53\n                } else {\n                    extraFlagField.invoke(window, 0, darkModeFlag);//\u6e05\u9664\u9ed1\u8272\u5b57\u4f53\n                }\n                result = true;\n            } catch (Exception ignored) {\n\n            }\n        }\n        return result;\n    }\n\n    /**\n     * \u66f4\u6539\u72b6\u6001\u680f\u56fe\u6807\u3001\u6587\u5b57\u989c\u8272\u7684\u65b9\u6848\u662f\u5426\u662fMIUI\u81ea\u5bb6\u7684\uff0c MIUI9 && Android 6 \u4e4b\u540e\u7528\u56deAndroid\u539f\u751f\u5b9e\u73b0\n     * \u89c1\u5c0f\u7c73\u5f00\u53d1\u6587\u6863\u8bf4\u660e\uff1ahttps://dev.mi.com/console/doc/detail?pId=1159\n     */\n    private static boolean isMIUICustomStatusBarLightModeImpl() {", "        if (DeviceHelper.isMIUIV9() && Build.VERSION.SDK_INT < Build.VERSION_CODES.M) {\n            return true;\n        }\n        return DeviceHelper.isMIUIV5() || DeviceHelper.isMIUIV6() ||\n                DeviceHelper.isMIUIV7() || DeviceHelper.isMIUIV8();\n    }\n\n    /**\n     * \u8bbe\u7f6e\u72b6\u6001\u680f\u56fe\u6807\u4e3a\u6df1\u8272\u548c\u9b45\u65cf\u7279\u5b9a\u7684\u6587\u5b57\u98ce\u683c\n     * \u53ef\u4ee5\u7528\u6765\u5224\u65ad\u662f\u5426\u4e3a Flyme \u7528\u6237\n     *\n     * @param window \u9700\u8981\u8bbe\u7f6e\u7684\u7a97\u53e3\n     * @param light  \u662f\u5426\u628a\u72b6\u6001\u680f\u5b57\u4f53\u53ca\u56fe\u6807\u989c\u8272\u8bbe\u7f6e\u4e3a\u6df1\u8272\n     * @return boolean \u6210\u529f\u6267\u884c\u8fd4\u56detrue\n     */", "    public static boolean FlymeSetStatusBarLightMode(Window window, boolean light) {\n        boolean result = false;\n        if (window != null) {\n\n            Android6SetStatusBarLightMode(window, light);\n\n            // flyme \u5728 6.2.0.0A \u652f\u6301\u4e86 Android \u5b98\u65b9\u7684\u5b9e\u73b0\u65b9\u6848\uff0c\u65e7\u7684\u65b9\u6848\u5931\u6548\n            // \u9ad8\u7248\u672c\u8c03\u7528\u8fd9\u4e2a\u51fa\u73b0\u4e0d\u53ef\u9884\u671f\u7684 Bug,\u5b98\u65b9\u6587\u6863\u4e5f\u6ca1\u6709\u7ed9\u51fa\u5b8c\u6574\u7684\u9ad8\u4f4e\u7248\u672c\u517c\u5bb9\u65b9\u6848\n            if (DeviceHelper.isFlymeLowerThan(7)) {\n                try {\n                    WindowManager.LayoutParams lp = window.getAttributes();\n                    Field darkFlag = WindowManager.LayoutParams.class\n                            .getDeclaredField(\"MEIZU_FLAG_DARK_STATUS_BAR_ICON\");\n                    Field meizuFlags = WindowManager.LayoutParams.class\n                            .getDeclaredField(\"meizuFlags\");\n                    darkFlag.setAccessible(true);\n                    meizuFlags.setAccessible(true);\n                    int bit = darkFlag.getInt(null);\n                    int value = meizuFlags.getInt(lp);", "            if (DeviceHelper.isFlymeLowerThan(7)) {\n                try {\n                    WindowManager.LayoutParams lp = window.getAttributes();\n                    Field darkFlag = WindowManager.LayoutParams.class\n                            .getDeclaredField(\"MEIZU_FLAG_DARK_STATUS_BAR_ICON\");\n                    Field meizuFlags = WindowManager.LayoutParams.class\n                            .getDeclaredField(\"meizuFlags\");\n                    darkFlag.setAccessible(true);\n                    meizuFlags.setAccessible(true);\n                    int bit = darkFlag.getInt(null);\n                    int value = meizuFlags.getInt(lp);", "                    if (light) {\n                        value |= bit;\n                    } else {\n                        value &= ~bit;\n                    }\n                    meizuFlags.setInt(lp, value);\n                    window.setAttributes(lp);\n                    result = true;\n                } catch (Exception ignored) {\n\n                }", "            } else if (DeviceHelper.isFlyme()) {\n                result = true;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * \u83b7\u53d6\u662f\u5426\u5168\u5c4f\n     *\n     * @return \u662f\u5426\u5168\u5c4f\n     */", "    public static boolean isFullScreen(Activity activity) {\n        boolean ret = false;\n        try {\n            WindowManager.LayoutParams attrs = activity.getWindow().getAttributes();\n            ret = (attrs.flags & WindowManager.LayoutParams.FLAG_FULLSCREEN) != 0;\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n        return ret;\n    }\n\n    /**\n     * API19\u4e4b\u524d\u900f\u660e\u72b6\u6001\u680f\uff1a\u83b7\u53d6\u8bbe\u7f6e\u900f\u660e\u72b6\u6001\u680f\u7684system ui visibility\u7684\u503c\uff0c\u8fd9\u662f\u90e8\u5206\u6709\u63d0\u4f9b\u63a5\u53e3\u7684rom\u4f7f\u7528\u7684\n     * http://stackoverflow.com/questions/21865621/transparent-status-bar-before-4-4-kitkat\n     */", "    public static Integer getStatusBarAPITransparentValue(Context context) {\n        if (sTransparentValue != null) {\n            return sTransparentValue;\n        }\n        String[] systemSharedLibraryNames = context.getPackageManager()\n                .getSystemSharedLibraryNames();\n        String fieldName = null;\n        for (String lib : systemSharedLibraryNames) {\n            if (\"touchwiz\".equals(lib)) {\n                fieldName = \"SYSTEM_UI_FLAG_TRANSPARENT_BACKGROUND\";\n            } else if (lib.startsWith(\"com.sonyericsson.navigationbar\")) {\n                fieldName = \"SYSTEM_UI_FLAG_TRANSPARENT\";\n            }\n        }\n", "            if (\"touchwiz\".equals(lib)) {\n                fieldName = \"SYSTEM_UI_FLAG_TRANSPARENT_BACKGROUND\";\n            } else if (lib.startsWith(\"com.sonyericsson.navigationbar\")) {\n                fieldName = \"SYSTEM_UI_FLAG_TRANSPARENT\";\n            }\n        }\n\n        if (fieldName != null) {\n            try {\n                Field field = View.class.getField(fieldName);\n                if (field != null) {\n                    Class<?> type = field.getType();", "            try {\n                Field field = View.class.getField(fieldName);\n                if (field != null) {\n                    Class<?> type = field.getType();\n                    if (type == int.class) {\n                        sTransparentValue = field.getInt(null);\n                    }\n                }\n            } catch (Exception ignored) {\n            }\n        }\n        return sTransparentValue;\n    }\n\n    /**\n     * \u83b7\u53d6\u72b6\u6001\u680f\u7684\u9ad8\u5ea6\u3002\n     */", "    public static int getStatusbarHeight(Context context) {\n        if (sStatusBarHeight == -1) {\n            initStatusBarHeight(context);\n        }\n        return sStatusBarHeight;\n    }\n\n    private static void initStatusBarHeight(Context context) {\n        Class<?> clazz;\n        Object obj = null;\n        Field field = null;", "        try {\n            clazz = Class.forName(\"com.android.internal.R$dimen\");\n            obj = clazz.newInstance();\n            if (DeviceHelper.isMeizu()) {\n                try {\n                    field = clazz.getField(\"status_bar_height_large\");\n                } catch (Throwable t) {\n                    t.printStackTrace();\n                }\n            }\n            if (field == null) {\n                field = clazz.getField(\"status_bar_height\");\n            }\n        } catch (Throwable t) {\n            t.printStackTrace();\n        }", "            if (field == null) {\n                field = clazz.getField(\"status_bar_height\");\n            }\n        } catch (Throwable t) {\n            t.printStackTrace();\n        }\n        if (field != null && obj != null) {\n            try {\n                int id = Integer.parseInt(field.get(obj).toString());\n                sStatusBarHeight = context.getResources().getDimensionPixelSize(id);\n            } catch (Throwable t) {\n                t.printStackTrace();\n            }\n        }", "        if (sStatusBarHeight <= 0) {\n            try {\n                int resourceId = context.getResources().getIdentifier(\"status_bar_height\", \"dimen\", \"android\");\n                if (resourceId > 0) {\n                    sStatusBarHeight = context.getResources().getDimensionPixelSize(resourceId);\n                }\n            } catch (Throwable t) {\n                t.printStackTrace();\n            }\n        }\n        if (sStatusBarHeight <= 0) {", "        if (sStatusBarHeight <= 0) {\n            if (sVirtualDensity == -1) {\n                sStatusBarHeight = (int) ScreenUtils.dp2px(context, STATUS_BAR_DEFAULT_HEIGHT_DP);\n            } else {\n                sStatusBarHeight = (int) (STATUS_BAR_DEFAULT_HEIGHT_DP * sVirtualDensity + 0.5f);\n            }\n        }\n    }\n\n    public static void setVirtualDensity(float density) {\n        sVirtualDensity = density;\n    }\n", "    public static void setVirtualDensity(float density) {\n        sVirtualDensity = density;\n    }\n\n    public static void setVirtualDensityDpi(float densityDpi) {\n        sVirtualDensityDpi = densityDpi;\n    }\n\n    /**\n     * \u8bbe\u7f6e\u5168\u5c4f\n     *\n     * @param activity\n     */", "    public static void setFullScreen(Activity activity) {\n        try {\n            Window window = activity.getWindow();\n//        window.addFlags(WindowManager.LayoutParams.FLAG_LAYOUT_NO_LIMITS);\n            window.addFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN);\n        } catch (Exception ignored) {\n        }\n\n    }\n\n    /**\n     * \u53d6\u6d88\u5168\u5c4f\n     *\n     * @param activity\n     */", "    public static void cancelFullScreen(Activity activity) {\n        try {\n            Window window = activity.getWindow();\n            window.clearFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN);\n        } catch (Exception ignored) {\n        }\n//        window.clearFlags(WindowManager.LayoutParams.FLAG_LAYOUT_NO_LIMITS);\n    }\n}\n"]}
{"filename": "library/src/main/java/com/flyjingfish/titlebarlib/ClickTextView.java", "chunked_list": ["package com.flyjingfish.titlebarlib;\n\nimport android.content.Context;\nimport android.util.AttributeSet;\nimport android.view.ViewGroup;\n\nimport androidx.annotation.NonNull;\nimport androidx.annotation.Nullable;\nimport androidx.appcompat.widget.AppCompatTextView;\n\npublic class ClickTextView extends AppCompatTextView {\n    public ClickTextView(@NonNull Context context) {\n        this(context,null);\n    }\n\n    public ClickTextView(@NonNull Context context, @Nullable AttributeSet attrs) {\n        this(context, attrs,0);\n    }\n\n    public ClickTextView(@NonNull Context context, @Nullable AttributeSet attrs, int defStyleAttr) {\n        super(context, attrs, defStyleAttr);\n    }\n\n    @Override", "import androidx.appcompat.widget.AppCompatTextView;\n\npublic class ClickTextView extends AppCompatTextView {\n    public ClickTextView(@NonNull Context context) {\n        this(context,null);\n    }\n\n    public ClickTextView(@NonNull Context context, @Nullable AttributeSet attrs) {\n        this(context, attrs,0);\n    }\n\n    public ClickTextView(@NonNull Context context, @Nullable AttributeSet attrs, int defStyleAttr) {\n        super(context, attrs, defStyleAttr);\n    }\n\n    @Override", "    public void setOnClickListener(@Nullable OnClickListener l) {\n        ViewGroup parent;\n        if ((parent = (ViewGroup) getParent()) != null) {\n            if (l == null) {\n                parent.setOnClickListener(null);\n                return;\n            }\n            parent.setOnClickListener(v -> l.onClick(ClickTextView.this));\n        }\n    }\n\n    @Override", "    public void setOnLongClickListener(@Nullable OnLongClickListener l) {\n        ViewGroup parent;\n        if ((parent = (ViewGroup) getParent()) != null) {\n            if (l == null) {\n                parent.setOnLongClickListener(null);\n                return;\n            }\n            parent.setOnLongClickListener(v -> l.onLongClick(ClickTextView.this));\n        }\n    }\n\n}\n"]}
{"filename": "library/src/main/java/com/flyjingfish/titlebarlib/ClickImageView.java", "chunked_list": ["package com.flyjingfish.titlebarlib;\n\nimport android.content.Context;\nimport android.util.AttributeSet;\nimport android.view.ViewGroup;\n\nimport androidx.annotation.NonNull;\nimport androidx.annotation.Nullable;\nimport androidx.appcompat.widget.AppCompatImageView;\n\npublic class ClickImageView extends AppCompatImageView {\n    public ClickImageView(@NonNull Context context) {\n        this(context, null);\n    }\n\n    public ClickImageView(@NonNull Context context, @Nullable AttributeSet attrs) {\n        this(context, attrs, 0);\n    }\n\n    public ClickImageView(@NonNull Context context, @Nullable AttributeSet attrs, int defStyleAttr) {\n        super(context, attrs, defStyleAttr);\n    }\n\n    @Override", "import androidx.appcompat.widget.AppCompatImageView;\n\npublic class ClickImageView extends AppCompatImageView {\n    public ClickImageView(@NonNull Context context) {\n        this(context, null);\n    }\n\n    public ClickImageView(@NonNull Context context, @Nullable AttributeSet attrs) {\n        this(context, attrs, 0);\n    }\n\n    public ClickImageView(@NonNull Context context, @Nullable AttributeSet attrs, int defStyleAttr) {\n        super(context, attrs, defStyleAttr);\n    }\n\n    @Override", "    public void setOnClickListener(@Nullable OnClickListener l) {\n        ViewGroup parent;\n        if ((parent = (ViewGroup) getParent()) != null) {\n            if (l == null) {\n                parent.setOnClickListener(null);\n                return;\n            }\n            parent.setOnClickListener(v -> l.onClick(ClickImageView.this));\n        }\n    }\n\n    @Override", "    public void setOnLongClickListener(@Nullable OnLongClickListener l) {\n        ViewGroup parent;\n        if ((parent = (ViewGroup) getParent()) != null) {\n            if (l == null) {\n                parent.setOnLongClickListener(null);\n                return;\n            }\n            parent.setOnLongClickListener(v -> l.onLongClick(ClickImageView.this));\n        }\n    }\n\n}\n"]}
{"filename": "library/src/main/java/com/flyjingfish/titlebarlib/LogUtils.java", "chunked_list": ["package com.flyjingfish.titlebarlib;\n\nimport android.content.Context;\nimport android.content.pm.ApplicationInfo;\nimport android.util.Log;\n\nclass LogUtils {\n    private static final String TAG = \"TitleBar\";\n    private static boolean isGetDebugFlag;\n    private static boolean isApkInDebug;\n    public static boolean isApkInDebug(Context context) {", "    private static boolean isGetDebugFlag;\n    private static boolean isApkInDebug;\n    public static boolean isApkInDebug(Context context) {\n        try {\n            ApplicationInfo info = context.getApplicationInfo();\n            return (info.flags & ApplicationInfo.FLAG_DEBUGGABLE) != 0;\n        } catch (Exception e) {\n            return true;\n        }\n    }\n    public static boolean isDebug(Context context) {", "    public static boolean isDebug(Context context) {\n        if (!isGetDebugFlag){\n            isApkInDebug = isApkInDebug(context);\n            isGetDebugFlag = true;\n        }\n        return isApkInDebug;\n    }\n    public static void logD(String logText){\n        if (isApkInDebug){\n            Log.d(TAG,logText);\n        }\n    }\n}\n", "        if (isApkInDebug){\n            Log.d(TAG,logText);\n        }\n    }\n}\n"]}
{"filename": "library/src/main/java/com/flyjingfish/titlebarlib/ShadowView.java", "chunked_list": ["package com.flyjingfish.titlebarlib;\n\nimport android.content.Context;\nimport android.graphics.Canvas;\nimport android.graphics.Color;\nimport android.graphics.LinearGradient;\nimport android.graphics.Paint;\nimport android.graphics.Shader;\nimport android.graphics.drawable.Drawable;\nimport android.util.AttributeSet;", "import android.graphics.drawable.Drawable;\nimport android.util.AttributeSet;\nimport android.view.View;\n\nimport androidx.annotation.Nullable;\n\npublic class ShadowView extends View {\n\n    private final Paint mBgPaint;\n    private int[] gradientColors;\n    private float[] gradientPositions;\n    private float shadowMaxLength;\n\n    public ShadowView(Context context) {\n        this(context,null);\n    }\n\n    public ShadowView(Context context, @Nullable AttributeSet attrs) {\n        this(context, attrs,0);\n    }\n\n    public ShadowView(Context context, @Nullable AttributeSet attrs, int defStyleAttr) {\n        super(context, attrs, defStyleAttr);\n\n        mBgPaint = new Paint();\n        mBgPaint.setColor(Color.BLACK);\n        mBgPaint.setAntiAlias(true);\n        mBgPaint.setStrokeWidth(shadowMaxLength);\n        mBgPaint.setStyle(Paint.Style.STROKE);\n\n\n        gradientColors = null;\n        gradientPositions = null;\n    }\n\n    @Override\n    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {\n        super.onMeasure(widthMeasureSpec, heightMeasureSpec);\n        setMeasuredDimension(getMeasuredWidth(), (int) shadowMaxLength);\n    }\n\n    @Override\n    protected void onDraw(Canvas canvas) {", "        if (gradientColors == null || shadowMaxLength <= 0){\n            drawBackground(canvas);\n            super.onDraw(canvas);\n            return;\n        }\n        drawBackground(canvas);\n\n        int height = getHeight();\n        int width = getWidth();\n        float[] ptsBottom = new float[4];\n\n        mBgPaint.setStrokeWidth(shadowMaxLength);\n        ptsBottom[0] = 0;\n        ptsBottom[1] = height - shadowMaxLength / 2f;\n        ptsBottom[2] = width;\n        ptsBottom[3] = height - shadowMaxLength / 2f;\n        LinearGradient linearGradient = new LinearGradient(0, height - shadowMaxLength, 0, height, gradientColors, gradientPositions, Shader.TileMode.CLAMP);\n        mBgPaint.setShader(linearGradient);\n        canvas.drawLines(ptsBottom, mBgPaint);\n        super.onDraw(canvas);\n    }\n", "    public float getShadowMaxLength() {\n        return shadowMaxLength;\n    }\n\n    public void setShadowMaxLength(float shadowMaxLength) {\n        this.shadowMaxLength = shadowMaxLength;\n        invalidate();\n    }\n\n    public int[] getGradientColors() {\n        return gradientColors;\n    }\n", "    public void setGradientColors(int[] gradientColors) {\n        this.gradientColors = gradientColors;\n        invalidate();\n    }\n\n    public float[] getGradientPositions() {\n        return gradientPositions;\n    }\n\n    public void setGradientPositions(float[] gradientPositions) {\n        this.gradientPositions = gradientPositions;\n        invalidate();\n    }\n\n    private Drawable bgDrawable;\n    @Override", "    public void setGradientPositions(float[] gradientPositions) {\n        this.gradientPositions = gradientPositions;\n        invalidate();\n    }\n\n    private Drawable bgDrawable;\n    @Override\n    public void setBackground(Drawable background) {\n        bgDrawable = background;\n        invalidate();\n    }\n\n    @Override", "    public void setBackgroundDrawable(@Nullable Drawable background) {\n        setBackground(background);\n    }\n\n    @Override\n    public void setBackgroundResource(int resId) {\n        setBackground(getContext().getResources().getDrawable(resId));\n    }\n\n    private void drawBackground(Canvas canvas) {\n        final Drawable background = bgDrawable;", "        if (background == null) {\n            return;\n        }\n\n        background.setBounds(0, 0, getRight() - getLeft(), (int) (shadowMaxLength));\n\n        background.draw(canvas);\n    }\n}\n"]}
{"filename": "library/src/main/java/com/flyjingfish/titlebarlib/OnceReadValue.java", "chunked_list": ["package com.flyjingfish.titlebarlib;\n\nabstract class OnceReadValue<P, T> {\n\n    private volatile boolean isRead = false;\n    private T cacheValue;\n\n    public T get(P param){\n        if(isRead){\n            return cacheValue;\n        }\n        synchronized (this){", "        if(isRead){\n            return cacheValue;\n        }\n        synchronized (this){\n            if(!isRead){\n                cacheValue = read(param);\n                isRead = true;\n            }\n        }\n        return cacheValue;\n    }\n\n    protected abstract T read(P param);\n}"]}
{"filename": "app/src/main/java/com/flyjingfish/titlebar/DeviceHelper.java", "chunked_list": ["package com.flyjingfish.titlebar;\n\n\nimport android.os.Build;\nimport android.os.Environment;\nimport android.text.TextUtils;\n\nimport androidx.annotation.Nullable;\n\nimport java.io.Closeable;", "\nimport java.io.Closeable;\nimport java.io.File;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.lang.reflect.Method;\nimport java.util.Properties;\nimport java.util.regex.Matcher;\nimport java.util.regex.Pattern;\n", "import java.util.regex.Pattern;\n\nclass DeviceHelper {\n    private final static String KEY_MIUI_VERSION_NAME = \"ro.miui.ui.version.name\";\n    private static final String KEY_FLYME_VERSION_NAME = \"ro.build.display.id\";\n    private final static String FLYME = \"flyme\";\n    private final static String MEIZUBOARD[] = {\"m9\", \"M9\", \"mx\", \"MX\"};\n\n    private static String sMiuiVersionName;\n    private static String sFlymeVersionName;", "    private static String sMiuiVersionName;\n    private static String sFlymeVersionName;\n    private static final String BRAND = Build.BRAND.toLowerCase();\n    private static boolean isInfoReaded = false;\n\n    public static void close(Closeable c) {\n        if (c != null) {\n            try {\n                c.close();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n\n    private static void checkReadInfo() {", "        if (isInfoReaded) {\n            return;\n        }\n        isInfoReaded = true;\n        Properties properties = new Properties();\n\n        if (Build.VERSION.SDK_INT < Build.VERSION_CODES.O) {\n            // android 8.0\uff0c\u8bfb\u53d6 /system/uild.prop \u4f1a\u62a5 permission denied\n            FileInputStream fileInputStream = null;\n            try {\n                fileInputStream = new FileInputStream(new File(Environment.getRootDirectory(), \"build.prop\"));\n                properties.load(fileInputStream);\n            } catch (Exception e) {\n            } finally {\n                close(fileInputStream);\n            }\n        }\n\n        Class<?> clzSystemProperties = null;", "            try {\n                fileInputStream = new FileInputStream(new File(Environment.getRootDirectory(), \"build.prop\"));\n                properties.load(fileInputStream);\n            } catch (Exception e) {\n            } finally {\n                close(fileInputStream);\n            }\n        }\n\n        Class<?> clzSystemProperties = null;\n        try {\n            clzSystemProperties = Class.forName(\"android.os.SystemProperties\");\n            Method getMethod = clzSystemProperties.getDeclaredMethod(\"get\", String.class);\n            // miui\n            sMiuiVersionName = getLowerCaseName(properties, getMethod, KEY_MIUI_VERSION_NAME);\n            //flyme\n            sFlymeVersionName = getLowerCaseName(properties, getMethod, KEY_FLYME_VERSION_NAME);\n        } catch (Exception e) {\n        }\n    }\n\n    /**\n     * \u5224\u65ad\u662f\u5426\u662fflyme\u7cfb\u7edf\n     */\n    private static OnceReadValue<Void, Boolean> isFlymeValue = new OnceReadValue<Void, Boolean>() {\n        @Override\n        protected Boolean read(Void param) {\n            checkReadInfo();\n            return !TextUtils.isEmpty(sFlymeVersionName) && sFlymeVersionName.contains(FLYME);\n        }\n    };\n", "        try {\n            clzSystemProperties = Class.forName(\"android.os.SystemProperties\");\n            Method getMethod = clzSystemProperties.getDeclaredMethod(\"get\", String.class);\n            // miui\n            sMiuiVersionName = getLowerCaseName(properties, getMethod, KEY_MIUI_VERSION_NAME);\n            //flyme\n            sFlymeVersionName = getLowerCaseName(properties, getMethod, KEY_FLYME_VERSION_NAME);\n        } catch (Exception e) {\n        }\n    }\n\n    /**\n     * \u5224\u65ad\u662f\u5426\u662fflyme\u7cfb\u7edf\n     */\n    private static OnceReadValue<Void, Boolean> isFlymeValue = new OnceReadValue<Void, Boolean>() {\n        @Override\n        protected Boolean read(Void param) {\n            checkReadInfo();\n            return !TextUtils.isEmpty(sFlymeVersionName) && sFlymeVersionName.contains(FLYME);\n        }\n    };\n", "    public static boolean isFlyme() {\n        return isFlymeValue.get(null);\n    }\n\n    /**\n     * \u5224\u65ad\u662f\u5426\u662fMIUI\u7cfb\u7edf\n     */\n    public static boolean isMIUI() {\n        checkReadInfo();\n        return !TextUtils.isEmpty(sMiuiVersionName);\n    }\n", "    public static boolean isMIUIV5() {\n        checkReadInfo();\n        return \"v5\".equals(sMiuiVersionName);\n    }\n\n    public static boolean isMIUIV6() {\n        checkReadInfo();\n        return \"v6\".equals(sMiuiVersionName);\n    }\n\n    public static boolean isMIUIV7() {\n        checkReadInfo();\n        return \"v7\".equals(sMiuiVersionName);\n    }\n", "    public static boolean isMIUIV7() {\n        checkReadInfo();\n        return \"v7\".equals(sMiuiVersionName);\n    }\n\n    public static boolean isMIUIV8() {\n        checkReadInfo();\n        return \"v8\".equals(sMiuiVersionName);\n    }\n\n    public static boolean isMIUIV9() {\n        checkReadInfo();\n        return \"v9\".equals(sMiuiVersionName);\n    }\n", "    public static boolean isMIUIV9() {\n        checkReadInfo();\n        return \"v9\".equals(sMiuiVersionName);\n    }\n\n    public static boolean isFlymeLowerThan(int majorVersion) {\n        return isFlymeLowerThan(majorVersion, 0, 0);\n    }\n\n    public static boolean isFlymeLowerThan(int majorVersion, int minorVersion, int patchVersion) {\n        checkReadInfo();\n        boolean isLower = false;", "    public static boolean isFlymeLowerThan(int majorVersion, int minorVersion, int patchVersion) {\n        checkReadInfo();\n        boolean isLower = false;\n        if (sFlymeVersionName != null && !sFlymeVersionName.equals(\"\")) {\n            try {\n                Pattern pattern = Pattern.compile(\"(\\\\d+\\\\.){2}\\\\d\");\n                Matcher matcher = pattern.matcher(sFlymeVersionName);\n                if (matcher.find()) {\n                    String versionString = matcher.group();\n                    if (versionString.length() > 0) {\n                        String[] version = versionString.split(\"\\\\.\");", "                    if (versionString.length() > 0) {\n                        String[] version = versionString.split(\"\\\\.\");\n                        if (version.length >= 1) {\n                            if (Integer.parseInt(version[0]) < majorVersion) {\n                                isLower = true;\n                            }\n                        }\n\n                        if (version.length >= 2 && minorVersion > 0) {\n                            if (Integer.parseInt(version[1]) < majorVersion) {\n                                isLower = true;\n                            }\n                        }\n", "                        if (version.length >= 2 && minorVersion > 0) {\n                            if (Integer.parseInt(version[1]) < majorVersion) {\n                                isLower = true;\n                            }\n                        }\n\n                        if (version.length >= 3 && patchVersion > 0) {\n                            if (Integer.parseInt(version[2]) < majorVersion) {\n                                isLower = true;\n                            }\n                        }\n                    }\n                }\n            } catch (Throwable ignore) {\n\n            }\n        }\n        return isMeizu() && isLower;\n    }\n\n\n    private static OnceReadValue<Void, Boolean> isMeizuValue = new OnceReadValue<Void, Boolean>() {\n        @Override\n        protected Boolean read(Void param) {\n            checkReadInfo();\n            return isPhone(MEIZUBOARD) || isFlyme();\n        }\n    };\n", "    public static boolean isMeizu() {\n        return isMeizuValue.get(null);\n    }\n\n    private static OnceReadValue<Void, Boolean> isEssentialPhoneValue = new OnceReadValue<Void, Boolean>() {\n        @Override\n        protected Boolean read(Void param) {\n            return BRAND.contains(\"essential\");\n        }\n    };\n", "    public static boolean isEssentialPhone() {\n        return isEssentialPhoneValue.get(null);\n    }\n\n    private static boolean isPhone(String[] boards) {\n        checkReadInfo();\n        final String board = Build.BOARD;\n        if (board == null) {\n            return false;\n        }\n        for (String board1 : boards) {", "        for (String board1 : boards) {\n            if (board.equals(board1)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    @Nullable\n    private static String getLowerCaseName(Properties p, Method get, String key) {\n        String name = p.getProperty(key);", "        if (name == null) {\n            try {\n                name = (String) get.invoke(null, key);\n            } catch (Exception ignored) {\n            }\n        }\n        if (name != null) name = name.toLowerCase();\n        return name;\n    }\n}"]}
{"filename": "app/src/main/java/com/flyjingfish/titlebar/MainActivity.java", "chunked_list": ["package com.flyjingfish.titlebar;\n\nimport android.app.Activity;\nimport android.graphics.Color;\nimport android.graphics.Rect;\nimport android.os.Bundle;\nimport android.util.Log;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.widget.Toast;", "import android.view.ViewGroup;\nimport android.widget.Toast;\n\nimport com.flyjingfish.titlebarlib.TitleBar;\n\npublic class MainActivity extends BaseActivity {\n\n    private TitleBar titleBar2;\n\n    @Override\n    public String getTitleString() {\n        return \"\u8fd9\u91cc\u662f\u6807\u9898\";\n    }\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n//        titleBar2 = findViewById(R.id.title_bar);\n//        StatusBarHelper.translucent(this);\n//        StatusBarHelper.setStatusBarLightMode(this);\n        View view = new View(this);\n        view.setBackgroundColor(Color.RED);\n//        titleBar2.setCustomView(view );\n//        titleBar2.setBackgroundColor(Color.RED);\n//        titleBar.setShadow(20,Color.BLACK, TitleBar.ShadowType.GRADIENT);\n        Log.d(\"TitleBar\",\"onCreate-getStatusbarHeight\"+StatusBarHelper.getStatusbarHeight(this));\n    }\n", "    public String getTitleString() {\n        return \"\u8fd9\u91cc\u662f\u6807\u9898\";\n    }\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n//        titleBar2 = findViewById(R.id.title_bar);\n//        StatusBarHelper.translucent(this);\n//        StatusBarHelper.setStatusBarLightMode(this);\n        View view = new View(this);\n        view.setBackgroundColor(Color.RED);\n//        titleBar2.setCustomView(view );\n//        titleBar2.setBackgroundColor(Color.RED);\n//        titleBar.setShadow(20,Color.BLACK, TitleBar.ShadowType.GRADIENT);\n        Log.d(\"TitleBar\",\"onCreate-getStatusbarHeight\"+StatusBarHelper.getStatusbarHeight(this));\n    }\n", "    public void onClick(View view) {\n        switch (view.getId()) {\n            case R.id.btn_1:\n                StatusBarHelper.translucent(this);\n                StatusBarHelper.setStatusBarLightMode(this);\n                titleBar.setStatusBarBackgroundColor(Color.BLUE);\n                titleBar.setTitleGravity(TitleBar.TitleGravity.START);\n                titleBar.setTitleBarBackgroundColorWithStatusBar(Color.BLACK);\n                titleBar.getRightImageView().setVisibility(View.GONE);\n                titleBar.setDisplayShadow(true);\n                titleBar.setAboveContent(false);\n                titleBar.getBackTextView().setText(\"back\");\n\n                break;\n            case R.id.btn_2:\n                titleBar.setTitleGravity(TitleBar.TitleGravity.CENTER);\n                titleBar.getRightTextView().setVisibility(View.GONE);\n                titleBar.setTitleBarBackgroundColorWithStatusBar(Color.WHITE);\n                titleBar.getRightImageView().setOnClickListener(v -> Toast.makeText(v.getContext(),\"more\",Toast.LENGTH_SHORT).show());\n//                titleBar.hideShadow();\n                titleBar.setAboveContent(true);\n                ViewGroup content = findViewById(android.R.id.content);\n                int[] contentLat = new int[2];\n                content.getLocationOnScreen(contentLat);\n                Log.e(\"getLocationOnScreen\",contentLat[0]+\"==\"+contentLat[1]);\n                Rect rect = new Rect();\n                content.getLocalVisibleRect(rect);\n                Log.e(\"getLocationOnScreen\",content.getTop()+\"\");\n                break;\n            case R.id.btn_3:\n                titleBar.getRightTextView().setVisibility(View.VISIBLE);\n                titleBar.setTitleGravity(TitleBar.TitleGravity.END);\n                titleBar.getRightTextView().setText(\"11111\");\n                titleBar.getRightTextView().setTextColor(Color.BLUE);\n\n                break;\n        }\n    }\n}"]}
{"filename": "app/src/main/java/com/flyjingfish/titlebar/ScreenUtils.java", "chunked_list": ["package com.flyjingfish.titlebar;\n\n\nimport android.content.Context;\nimport android.util.DisplayMetrics;\nimport android.util.TypedValue;\nimport android.view.WindowManager;\n\nclass ScreenUtils {\n    private static int screenWidth;", "class ScreenUtils {\n    private static int screenWidth;\n    private static int screenHeight;\n    public static float dp2px(Context context,float dp){\n        return TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP,dp,context.getResources().getDisplayMetrics()) + 0.5f;\n    }\n\n    public static int getScreenWidth(Context context) {\n        DisplayMetrics outMetrics = new DisplayMetrics();\n        ((WindowManager) context.getSystemService(Context.WINDOW_SERVICE)).getDefaultDisplay().getRealMetrics(outMetrics);\n        return outMetrics.widthPixels;\n    }\n", "    public static int getScreenHeight(Context context) {\n        DisplayMetrics outMetrics = new DisplayMetrics();\n        ((WindowManager) context.getSystemService(Context.WINDOW_SERVICE)).getDefaultDisplay().getRealMetrics(outMetrics);\n        return outMetrics.heightPixels;\n    }\n\n    public static int getScreenWidth2Cache(Context context) {\n        if (screenWidth == 0){\n            screenWidth = getScreenWidth(context);\n        }\n        return screenWidth;\n    }\n", "    public static int getScreenHeight2Cache(Context context) {\n        if (screenHeight == 0){\n            screenHeight = getScreenHeight(context);\n        }\n        return screenHeight;\n    }\n\n    public static int getStatusBarHeight(Context context) {\n        return StatusBarHelper.getStatusbarHeight(context);\n    }\n}\n"]}
{"filename": "app/src/main/java/com/flyjingfish/titlebar/StatusBarHelper.java", "chunked_list": ["package com.flyjingfish.titlebar;\n\nimport android.annotation.TargetApi;\nimport android.app.Activity;\nimport android.content.Context;\nimport android.graphics.Color;\nimport android.os.Build;\nimport android.view.View;\nimport android.view.Window;\nimport android.view.WindowManager;", "import android.view.Window;\nimport android.view.WindowManager;\n\nimport androidx.annotation.ColorInt;\nimport androidx.core.view.ViewCompat;\nimport androidx.core.view.WindowCompat;\nimport androidx.core.view.WindowInsetsControllerCompat;\n\nimport java.lang.reflect.Field;\nimport java.lang.reflect.Method;", "import java.lang.reflect.Field;\nimport java.lang.reflect.Method;\n\nclass StatusBarHelper {\n\n    private enum StatusBarType {\n        Default, Miui, Flyme, Android6\n    }\n\n    private final static int STATUS_BAR_DEFAULT_HEIGHT_DP = 25; // \u5927\u90e8\u5206\u72b6\u6001\u680f\u90fd\u662f25dp", "\n    private final static int STATUS_BAR_DEFAULT_HEIGHT_DP = 25; // \u5927\u90e8\u5206\u72b6\u6001\u680f\u90fd\u662f25dp\n    // \u5728\u67d0\u4e9b\u673a\u5b50\u4e0a\u5b58\u5728\u4e0d\u540c\u7684density\u503c\uff0c\u6240\u4ee5\u589e\u52a0\u4e24\u4e2a\u865a\u62df\u503c\n    public static float sVirtualDensity = -1;\n    public static float sVirtualDensityDpi = -1;\n    private static int sStatusBarHeight = -1;\n    private static StatusBarType mStatusBarType = StatusBarType.Default;\n    private static Integer sTransparentValue;\n\n    public static void translucent(Activity activity) {\n        translucent(activity.getWindow());\n    }\n", "    public static void translucent(Activity activity) {\n        translucent(activity.getWindow());\n    }\n\n    public static void translucent(Window window) {\n        translucent(window, 0x40000000);\n    }\n\n    private static boolean supportTranslucent() {\n        // Essential Phone \u5728 Android 8 \u4e4b\u524d\u6c89\u6d78\u5f0f\u505a\u5f97\u4e0d\u5168\uff0c\u7cfb\u7edf\u4e0d\u4ece\u72b6\u6001\u680f\u9876\u90e8\u5f00\u59cb\u5e03\u5c40\u5374\u4f1a\u4e0b\u53d1 WindowInsets\n        return !(DeviceHelper.isEssentialPhone() && Build.VERSION.SDK_INT < 26);\n    }\n\n    /**\n     * \u6c89\u6d78\u5f0f\u72b6\u6001\u680f\u3002\n     * \u652f\u6301 4.4 \u4ee5\u4e0a\u7248\u672c\u7684 MIUI \u548c Flyme\uff0c\u4ee5\u53ca 5.0 \u4ee5\u4e0a\u7248\u672c\u7684\u5176\u4ed6 Android\u3002\n     *\n     * @param activity \u9700\u8981\u88ab\u8bbe\u7f6e\u6c89\u6d78\u5f0f\u72b6\u6001\u680f\u7684 Activity\u3002\n     */", "    public static void translucent(Activity activity, @ColorInt int colorOn5x) {\n        Window window = activity.getWindow();\n        translucent(window, colorOn5x);\n    }\n\n    public static boolean isNotchOfficialSupport(){\n        return Build.VERSION.SDK_INT >= Build.VERSION_CODES.P;\n    }\n\n    @TargetApi(19)\n    public static void translucent(Window window, @ColorInt int colorOn5x) {", "    public static void translucent(Window window, @ColorInt int colorOn5x) {\n        if (!supportTranslucent()) {\n            // \u7248\u672c\u5c0f\u4e8e4.4\uff0c\u7edd\u5bf9\u4e0d\u8003\u8651\u6c89\u6d78\u5f0f\n            return;\n        }\n\n        if (isNotchOfficialSupport()) {\n            handleDisplayCutoutMode(window);\n        }\n\n        if (Build.VERSION.SDK_INT < Build.VERSION_CODES.N) {\n            // \u5c0f\u7c73 Android 6.0 \uff0c\u5f00\u53d1\u7248 7.7.13 \u53ca\u4ee5\u540e\u7248\u672c\u8bbe\u7f6e\u9ed1\u8272\u5b57\u4f53\u53c8\u9700\u8981 clear FLAG_TRANSLUCENT_STATUS, \u56e0\u6b64\u8fd8\u539f\u4e3a\u5b98\u65b9\u6a21\u5f0f", "        if (Build.VERSION.SDK_INT < Build.VERSION_CODES.N) {\n            // \u5c0f\u7c73 Android 6.0 \uff0c\u5f00\u53d1\u7248 7.7.13 \u53ca\u4ee5\u540e\u7248\u672c\u8bbe\u7f6e\u9ed1\u8272\u5b57\u4f53\u53c8\u9700\u8981 clear FLAG_TRANSLUCENT_STATUS, \u56e0\u6b64\u8fd8\u539f\u4e3a\u5b98\u65b9\u6a21\u5f0f\n            if (DeviceHelper.isFlymeLowerThan(8) || (DeviceHelper.isMIUI() && Build.VERSION.SDK_INT < Build.VERSION_CODES.M)) {\n                window.setFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS,\n                        WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);\n                return;\n            }\n        }\n\n        int systemUiVisibility = window.getDecorView().getSystemUiVisibility();\n        systemUiVisibility |= View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN | View.SYSTEM_UI_FLAG_LAYOUT_STABLE;\n        window.getDecorView().setSystemUiVisibility(systemUiVisibility);", "        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\n            // android 6\u4ee5\u540e\u53ef\u4ee5\u6539\u72b6\u6001\u680f\u5b57\u4f53\u989c\u8272\uff0c\u56e0\u6b64\u53ef\u4ee5\u81ea\u884c\u8bbe\u7f6e\u4e3a\u900f\u660e\n            window.clearFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);\n            window.addFlags(WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS);\n            window.setStatusBarColor(Color.TRANSPARENT);\n        } else {\n            // android 5\u4e0d\u80fd\u4fee\u6539\u72b6\u6001\u680f\u5b57\u4f53\u989c\u8272\uff0c\u56e0\u6b64\u76f4\u63a5\u7528FLAG_TRANSLUCENT_STATUS\uff0cnexus\u8868\u73b0\u4e3a\u534a\u900f\u660e\n            // \u9b45\u65cf\u548c\u5c0f\u7c73\u7684\u8868\u73b0\u5982\u4f55\uff1f\n            // update: \u90e8\u5206\u624b\u673a\u8fd0\u7528FLAG_TRANSLUCENT_STATUS\u65f6\u80cc\u666f\u4e0d\u662f\u534a\u900f\u660e\u800c\u662f\u6ca1\u6709\u80cc\u666f\u4e86\u3002\u3002\u3002\u3002\u3002\n//                window.addFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);\n\n            // \u91c7\u53d6setStatusBarColor\u7684\u65b9\u5f0f\uff0c\u90e8\u5206\u673a\u578b\u4e0d\u652f\u6301\uff0c\u90a3\u5c31\u7eaf\u9ed1\u4e86\uff0c\u4fdd\u8bc1\u72b6\u6001\u680f\u56fe\u6807\u53ef\u89c1\n            window.clearFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);", "            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {\n                window.addFlags(WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS);\n                window.setStatusBarColor(colorOn5x);\n            }\n        }\n    }\n\n    /**\n     * \u5982\u679c\u539f\u672c\u5b58\u5728\u67d0\u4e00\u4e2aflag\uff0c \u5c31\u5c06\u5b83\u8fc1\u79fb\u5230 out\n     * @param window\n     * @param out\n     * @param type\n     * @return\n     */", "    public static int retainSystemUiFlag(Window window, int out, int type) {\n        int now = window.getDecorView().getSystemUiVisibility();\n        if ((now & type) == type) {\n            out |= type;\n        }\n        return out;\n    }\n\n    @TargetApi(28)\n    private static void handleDisplayCutoutMode(final Window window) {\n        View decorView = window.getDecorView();", "        if (decorView != null) {\n            if (ViewCompat.isAttachedToWindow(decorView)) {\n                realHandleDisplayCutoutMode(window, decorView);\n            } else {\n                decorView.addOnAttachStateChangeListener(new View.OnAttachStateChangeListener() {\n                    @Override\n                    public void onViewAttachedToWindow(View v) {\n                        v.removeOnAttachStateChangeListener(this);\n                        realHandleDisplayCutoutMode(window, v);\n                    }\n\n                    @Override", "                    public void onViewDetachedFromWindow(View v) {\n\n                    }\n                });\n            }\n        }\n    }\n\n    @TargetApi(28)\n    private static void realHandleDisplayCutoutMode(Window window, View decorView) {\n        if (decorView.getRootWindowInsets() != null &&\n                decorView.getRootWindowInsets().getDisplayCutout() != null) {\n            WindowManager.LayoutParams params = window.getAttributes();\n            params.layoutInDisplayCutoutMode = WindowManager.LayoutParams\n                    .LAYOUT_IN_DISPLAY_CUTOUT_MODE_SHORT_EDGES;\n            window.setAttributes(params);\n        }\n    }\n\n    /**\n     * \u8bbe\u7f6e\u72b6\u6001\u680f\u9ed1\u8272\u5b57\u4f53\u56fe\u6807\uff0c\n     * \u652f\u6301 4.4 \u4ee5\u4e0a\u7248\u672c MIUI \u548c Flyme\uff0c\u4ee5\u53ca 6.0 \u4ee5\u4e0a\u7248\u672c\u7684\u5176\u4ed6 Android\n     *\n     * @param activity \u9700\u8981\u88ab\u5904\u7406\u7684 Activity\n     */", "        if (decorView.getRootWindowInsets() != null &&\n                decorView.getRootWindowInsets().getDisplayCutout() != null) {\n            WindowManager.LayoutParams params = window.getAttributes();\n            params.layoutInDisplayCutoutMode = WindowManager.LayoutParams\n                    .LAYOUT_IN_DISPLAY_CUTOUT_MODE_SHORT_EDGES;\n            window.setAttributes(params);\n        }\n    }\n\n    /**\n     * \u8bbe\u7f6e\u72b6\u6001\u680f\u9ed1\u8272\u5b57\u4f53\u56fe\u6807\uff0c\n     * \u652f\u6301 4.4 \u4ee5\u4e0a\u7248\u672c MIUI \u548c Flyme\uff0c\u4ee5\u53ca 6.0 \u4ee5\u4e0a\u7248\u672c\u7684\u5176\u4ed6 Android\n     *\n     * @param activity \u9700\u8981\u88ab\u5904\u7406\u7684 Activity\n     */", "    public static boolean setStatusBarLightMode(Activity activity) {\n        if (activity == null) return false;\n\n        if (mStatusBarType != StatusBarType.Default) {\n            return setStatusBarLightMode(activity, mStatusBarType);\n        }\n        if (isMIUICustomStatusBarLightModeImpl() && MIUISetStatusBarLightMode(activity.getWindow(), true)) {\n            mStatusBarType = StatusBarType.Miui;\n            return true;\n        } else if (FlymeSetStatusBarLightMode(activity.getWindow(), true)) {\n            mStatusBarType = StatusBarType.Flyme;\n            return true;", "        } else if (FlymeSetStatusBarLightMode(activity.getWindow(), true)) {\n            mStatusBarType = StatusBarType.Flyme;\n            return true;\n        } else if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\n            Android6SetStatusBarLightMode(activity.getWindow(), true);\n            mStatusBarType = StatusBarType.Android6;\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * \u5df2\u77e5\u7cfb\u7edf\u7c7b\u578b\u65f6\uff0c\u8bbe\u7f6e\u72b6\u6001\u680f\u9ed1\u8272\u5b57\u4f53\u56fe\u6807\u3002\n     * \u652f\u6301 4.4 \u4ee5\u4e0a\u7248\u672c MIUI \u548c Flyme\uff0c\u4ee5\u53ca 6.0 \u4ee5\u4e0a\u7248\u672c\u7684\u5176\u4ed6 Android\n     *\n     * @param activity \u9700\u8981\u88ab\u5904\u7406\u7684 Activity\n     * @param type     StatusBar \u7c7b\u578b\uff0c\u5bf9\u5e94\u4e0d\u540c\u7684\u7cfb\u7edf\n     */\n    private static boolean setStatusBarLightMode(Activity activity, StatusBarType type) {", "        if (type == StatusBarType.Miui) {\n            return MIUISetStatusBarLightMode(activity.getWindow(), true);\n        } else if (type == StatusBarType.Flyme) {\n            return FlymeSetStatusBarLightMode(activity.getWindow(), true);\n        } else if (type == StatusBarType.Android6) {\n            return Android6SetStatusBarLightMode(activity.getWindow(), true);\n        }\n        return false;\n    }\n\n\n    /**\n     * \u8bbe\u7f6e\u72b6\u6001\u680f\u767d\u8272\u5b57\u4f53\u56fe\u6807\n     * \u652f\u6301 4.4 \u4ee5\u4e0a\u7248\u672c MIUI \u548c Flyme\uff0c\u4ee5\u53ca 6.0 \u4ee5\u4e0a\u7248\u672c\u7684\u5176\u4ed6 Android\n     */", "    public static boolean setStatusBarDarkMode(Activity activity) {\n        if (activity == null) return false;\n        if (mStatusBarType == StatusBarType.Default) {\n            // \u9ed8\u8ba4\u72b6\u6001\uff0c\u4e0d\u9700\u8981\u5904\u7406\n            return true;\n        }\n\n        if (mStatusBarType == StatusBarType.Miui) {\n            return MIUISetStatusBarLightMode(activity.getWindow(), false);\n        } else if (mStatusBarType == StatusBarType.Flyme) {\n            return FlymeSetStatusBarLightMode(activity.getWindow(), false);", "        } else if (mStatusBarType == StatusBarType.Flyme) {\n            return FlymeSetStatusBarLightMode(activity.getWindow(), false);\n        } else if (mStatusBarType == StatusBarType.Android6) {\n            return Android6SetStatusBarLightMode(activity.getWindow(), false);\n        }\n        return true;\n    }\n\n    /**\n     * \u8bbe\u7f6e\u72b6\u6001\u680f\u5b57\u4f53\u56fe\u6807\u4e3a\u6df1\u8272\uff0cAndroid 6\n     *\n     * @param window \u9700\u8981\u8bbe\u7f6e\u7684\u7a97\u53e3\n     * @param light  \u662f\u5426\u628a\u72b6\u6001\u680f\u5b57\u4f53\u53ca\u56fe\u6807\u989c\u8272\u8bbe\u7f6e\u4e3a\u6df1\u8272\n     * @return boolean \u6210\u529f\u6267\u884c\u8fd4\u56detrue\n     */\n    @TargetApi(23)\n    private static boolean Android6SetStatusBarLightMode(Window window, boolean light) {", "        if (Build.VERSION.SDK_INT > Build.VERSION_CODES.R) {\n            WindowInsetsControllerCompat insetsController = WindowCompat.getInsetsController(window, window.getDecorView());\n            if (insetsController != null) {\n                insetsController.setAppearanceLightStatusBars(light);\n            }\n        } else {\n            // \u7ecf\u8fc7\u6d4b\u8bd5\uff0c\u5c0f\u7c73 Android 11 \u7528  WindowInsetsControllerCompat \u4e0d\u8d77\u4f5c\u7528\uff0c \u6211\u8fd8\u80fd\u8bf4\u4ec0\u4e48\u5462\u3002\u3002\u3002\n            View decorView = window.getDecorView();\n            int systemUi = decorView.getSystemUiVisibility();\n            if (light) {\n                systemUi |= View.SYSTEM_UI_FLAG_LIGHT_STATUS_BAR;\n            } else {\n                systemUi &= ~View.SYSTEM_UI_FLAG_LIGHT_STATUS_BAR;\n            }\n            decorView.setSystemUiVisibility(systemUi);\n        }\n", "            if (light) {\n                systemUi |= View.SYSTEM_UI_FLAG_LIGHT_STATUS_BAR;\n            } else {\n                systemUi &= ~View.SYSTEM_UI_FLAG_LIGHT_STATUS_BAR;\n            }\n            decorView.setSystemUiVisibility(systemUi);\n        }\n\n        if (DeviceHelper.isMIUIV9()) {\n            // MIUI 9 \u4f4e\u4e8e 6.0 \u7248\u672c\u4f9d\u65e7\u53ea\u80fd\u56de\u9000\u5230\u4ee5\u524d\u7684\u65b9\u6848\n            // https://github.com/Tencent/QMUI_Android/issues/160\n            MIUISetStatusBarLightMode(window, light);\n        }\n        return true;\n    }\n\n    /**\n     * \u8bbe\u7f6e\u72b6\u6001\u680f\u5b57\u4f53\u56fe\u6807\u4e3a\u6df1\u8272\uff0c\u9700\u8981 MIUIV6 \u4ee5\u4e0a\n     *\n     * @param window \u9700\u8981\u8bbe\u7f6e\u7684\u7a97\u53e3\n     * @param light  \u662f\u5426\u628a\u72b6\u6001\u680f\u5b57\u4f53\u53ca\u56fe\u6807\u989c\u8272\u8bbe\u7f6e\u4e3a\u6df1\u8272\n     * @return boolean \u6210\u529f\u6267\u884c\u8fd4\u56de true\n     */\n    @SuppressWarnings(\"unchecked\")", "        if (DeviceHelper.isMIUIV9()) {\n            // MIUI 9 \u4f4e\u4e8e 6.0 \u7248\u672c\u4f9d\u65e7\u53ea\u80fd\u56de\u9000\u5230\u4ee5\u524d\u7684\u65b9\u6848\n            // https://github.com/Tencent/QMUI_Android/issues/160\n            MIUISetStatusBarLightMode(window, light);\n        }\n        return true;\n    }\n\n    /**\n     * \u8bbe\u7f6e\u72b6\u6001\u680f\u5b57\u4f53\u56fe\u6807\u4e3a\u6df1\u8272\uff0c\u9700\u8981 MIUIV6 \u4ee5\u4e0a\n     *\n     * @param window \u9700\u8981\u8bbe\u7f6e\u7684\u7a97\u53e3\n     * @param light  \u662f\u5426\u628a\u72b6\u6001\u680f\u5b57\u4f53\u53ca\u56fe\u6807\u989c\u8272\u8bbe\u7f6e\u4e3a\u6df1\u8272\n     * @return boolean \u6210\u529f\u6267\u884c\u8fd4\u56de true\n     */\n    @SuppressWarnings(\"unchecked\")", "    public static boolean MIUISetStatusBarLightMode(Window window, boolean light) {\n        boolean result = false;\n        if (window != null) {\n            Class clazz = window.getClass();\n            try {\n                int darkModeFlag;\n                Class layoutParams = Class.forName(\"android.view.MiuiWindowManager$LayoutParams\");\n                Field field = layoutParams.getField(\"EXTRA_FLAG_STATUS_BAR_DARK_MODE\");\n                darkModeFlag = field.getInt(layoutParams);\n                Method extraFlagField = clazz.getMethod(\"setExtraFlags\", int.class, int.class);\n                if (light) {\n                    extraFlagField.invoke(window, darkModeFlag, darkModeFlag);//\u72b6\u6001\u680f\u900f\u660e\u4e14\u9ed1\u8272\u5b57\u4f53\n                } else {\n                    extraFlagField.invoke(window, 0, darkModeFlag);//\u6e05\u9664\u9ed1\u8272\u5b57\u4f53\n                }\n                result = true;\n            } catch (Exception ignored) {\n\n            }\n        }\n        return result;\n    }\n\n    /**\n     * \u66f4\u6539\u72b6\u6001\u680f\u56fe\u6807\u3001\u6587\u5b57\u989c\u8272\u7684\u65b9\u6848\u662f\u5426\u662fMIUI\u81ea\u5bb6\u7684\uff0c MIUI9 && Android 6 \u4e4b\u540e\u7528\u56deAndroid\u539f\u751f\u5b9e\u73b0\n     * \u89c1\u5c0f\u7c73\u5f00\u53d1\u6587\u6863\u8bf4\u660e\uff1ahttps://dev.mi.com/console/doc/detail?pId=1159\n     */\n    private static boolean isMIUICustomStatusBarLightModeImpl() {", "                if (light) {\n                    extraFlagField.invoke(window, darkModeFlag, darkModeFlag);//\u72b6\u6001\u680f\u900f\u660e\u4e14\u9ed1\u8272\u5b57\u4f53\n                } else {\n                    extraFlagField.invoke(window, 0, darkModeFlag);//\u6e05\u9664\u9ed1\u8272\u5b57\u4f53\n                }\n                result = true;\n            } catch (Exception ignored) {\n\n            }\n        }\n        return result;\n    }\n\n    /**\n     * \u66f4\u6539\u72b6\u6001\u680f\u56fe\u6807\u3001\u6587\u5b57\u989c\u8272\u7684\u65b9\u6848\u662f\u5426\u662fMIUI\u81ea\u5bb6\u7684\uff0c MIUI9 && Android 6 \u4e4b\u540e\u7528\u56deAndroid\u539f\u751f\u5b9e\u73b0\n     * \u89c1\u5c0f\u7c73\u5f00\u53d1\u6587\u6863\u8bf4\u660e\uff1ahttps://dev.mi.com/console/doc/detail?pId=1159\n     */\n    private static boolean isMIUICustomStatusBarLightModeImpl() {", "        if (DeviceHelper.isMIUIV9() && Build.VERSION.SDK_INT < Build.VERSION_CODES.M) {\n            return true;\n        }\n        return DeviceHelper.isMIUIV5() || DeviceHelper.isMIUIV6() ||\n                DeviceHelper.isMIUIV7() || DeviceHelper.isMIUIV8();\n    }\n\n    /**\n     * \u8bbe\u7f6e\u72b6\u6001\u680f\u56fe\u6807\u4e3a\u6df1\u8272\u548c\u9b45\u65cf\u7279\u5b9a\u7684\u6587\u5b57\u98ce\u683c\n     * \u53ef\u4ee5\u7528\u6765\u5224\u65ad\u662f\u5426\u4e3a Flyme \u7528\u6237\n     *\n     * @param window \u9700\u8981\u8bbe\u7f6e\u7684\u7a97\u53e3\n     * @param light  \u662f\u5426\u628a\u72b6\u6001\u680f\u5b57\u4f53\u53ca\u56fe\u6807\u989c\u8272\u8bbe\u7f6e\u4e3a\u6df1\u8272\n     * @return boolean \u6210\u529f\u6267\u884c\u8fd4\u56detrue\n     */", "    public static boolean FlymeSetStatusBarLightMode(Window window, boolean light) {\n        boolean result = false;\n        if (window != null) {\n\n            Android6SetStatusBarLightMode(window, light);\n\n            // flyme \u5728 6.2.0.0A \u652f\u6301\u4e86 Android \u5b98\u65b9\u7684\u5b9e\u73b0\u65b9\u6848\uff0c\u65e7\u7684\u65b9\u6848\u5931\u6548\n            // \u9ad8\u7248\u672c\u8c03\u7528\u8fd9\u4e2a\u51fa\u73b0\u4e0d\u53ef\u9884\u671f\u7684 Bug,\u5b98\u65b9\u6587\u6863\u4e5f\u6ca1\u6709\u7ed9\u51fa\u5b8c\u6574\u7684\u9ad8\u4f4e\u7248\u672c\u517c\u5bb9\u65b9\u6848\n            if (DeviceHelper.isFlymeLowerThan(7)) {\n                try {\n                    WindowManager.LayoutParams lp = window.getAttributes();\n                    Field darkFlag = WindowManager.LayoutParams.class\n                            .getDeclaredField(\"MEIZU_FLAG_DARK_STATUS_BAR_ICON\");\n                    Field meizuFlags = WindowManager.LayoutParams.class\n                            .getDeclaredField(\"meizuFlags\");\n                    darkFlag.setAccessible(true);\n                    meizuFlags.setAccessible(true);\n                    int bit = darkFlag.getInt(null);\n                    int value = meizuFlags.getInt(lp);", "            if (DeviceHelper.isFlymeLowerThan(7)) {\n                try {\n                    WindowManager.LayoutParams lp = window.getAttributes();\n                    Field darkFlag = WindowManager.LayoutParams.class\n                            .getDeclaredField(\"MEIZU_FLAG_DARK_STATUS_BAR_ICON\");\n                    Field meizuFlags = WindowManager.LayoutParams.class\n                            .getDeclaredField(\"meizuFlags\");\n                    darkFlag.setAccessible(true);\n                    meizuFlags.setAccessible(true);\n                    int bit = darkFlag.getInt(null);\n                    int value = meizuFlags.getInt(lp);", "                    if (light) {\n                        value |= bit;\n                    } else {\n                        value &= ~bit;\n                    }\n                    meizuFlags.setInt(lp, value);\n                    window.setAttributes(lp);\n                    result = true;\n                } catch (Exception ignored) {\n\n                }", "            } else if (DeviceHelper.isFlyme()) {\n                result = true;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * \u83b7\u53d6\u662f\u5426\u5168\u5c4f\n     *\n     * @return \u662f\u5426\u5168\u5c4f\n     */", "    public static boolean isFullScreen(Activity activity) {\n        boolean ret = false;\n        try {\n            WindowManager.LayoutParams attrs = activity.getWindow().getAttributes();\n            ret = (attrs.flags & WindowManager.LayoutParams.FLAG_FULLSCREEN) != 0;\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n        return ret;\n    }\n\n    /**\n     * API19\u4e4b\u524d\u900f\u660e\u72b6\u6001\u680f\uff1a\u83b7\u53d6\u8bbe\u7f6e\u900f\u660e\u72b6\u6001\u680f\u7684system ui visibility\u7684\u503c\uff0c\u8fd9\u662f\u90e8\u5206\u6709\u63d0\u4f9b\u63a5\u53e3\u7684rom\u4f7f\u7528\u7684\n     * http://stackoverflow.com/questions/21865621/transparent-status-bar-before-4-4-kitkat\n     */", "    public static Integer getStatusBarAPITransparentValue(Context context) {\n        if (sTransparentValue != null) {\n            return sTransparentValue;\n        }\n        String[] systemSharedLibraryNames = context.getPackageManager()\n                .getSystemSharedLibraryNames();\n        String fieldName = null;\n        for (String lib : systemSharedLibraryNames) {\n            if (\"touchwiz\".equals(lib)) {\n                fieldName = \"SYSTEM_UI_FLAG_TRANSPARENT_BACKGROUND\";\n            } else if (lib.startsWith(\"com.sonyericsson.navigationbar\")) {\n                fieldName = \"SYSTEM_UI_FLAG_TRANSPARENT\";\n            }\n        }\n", "            if (\"touchwiz\".equals(lib)) {\n                fieldName = \"SYSTEM_UI_FLAG_TRANSPARENT_BACKGROUND\";\n            } else if (lib.startsWith(\"com.sonyericsson.navigationbar\")) {\n                fieldName = \"SYSTEM_UI_FLAG_TRANSPARENT\";\n            }\n        }\n\n        if (fieldName != null) {\n            try {\n                Field field = View.class.getField(fieldName);\n                if (field != null) {\n                    Class<?> type = field.getType();", "            try {\n                Field field = View.class.getField(fieldName);\n                if (field != null) {\n                    Class<?> type = field.getType();\n                    if (type == int.class) {\n                        sTransparentValue = field.getInt(null);\n                    }\n                }\n            } catch (Exception ignored) {\n            }\n        }\n        return sTransparentValue;\n    }\n\n    /**\n     * \u83b7\u53d6\u72b6\u6001\u680f\u7684\u9ad8\u5ea6\u3002\n     */", "    public static int getStatusbarHeight(Context context) {\n        if (sStatusBarHeight == -1) {\n            initStatusBarHeight(context);\n        }\n        return sStatusBarHeight;\n    }\n\n    private static void initStatusBarHeight(Context context) {\n        Class<?> clazz;\n        Object obj = null;\n        Field field = null;", "        try {\n            clazz = Class.forName(\"com.android.internal.R$dimen\");\n            obj = clazz.newInstance();\n            if (DeviceHelper.isMeizu()) {\n                try {\n                    field = clazz.getField(\"status_bar_height_large\");\n                } catch (Throwable t) {\n                    t.printStackTrace();\n                }\n            }\n            if (field == null) {\n                field = clazz.getField(\"status_bar_height\");\n            }\n        } catch (Throwable t) {\n            t.printStackTrace();\n        }", "            if (field == null) {\n                field = clazz.getField(\"status_bar_height\");\n            }\n        } catch (Throwable t) {\n            t.printStackTrace();\n        }\n        if (field != null && obj != null) {\n            try {\n                int id = Integer.parseInt(field.get(obj).toString());\n                sStatusBarHeight = context.getResources().getDimensionPixelSize(id);\n            } catch (Throwable t) {\n                t.printStackTrace();\n            }\n        }", "        if (sStatusBarHeight <= 0) {\n            int height = 0;\n            int resourceId = context.getResources().getIdentifier(\"status_bar_height\", \"dimen\", \"android\");\n            if (resourceId > 0) {\n                height = context.getResources().getDimensionPixelSize(resourceId);\n            }\n            sStatusBarHeight = height;\n        }\n        if (sStatusBarHeight <= 0) {\n            if (sVirtualDensity == -1) {\n                sStatusBarHeight = (int) ScreenUtils.dp2px(context, STATUS_BAR_DEFAULT_HEIGHT_DP);\n            } else {\n                sStatusBarHeight = (int) (STATUS_BAR_DEFAULT_HEIGHT_DP * sVirtualDensity + 0.5f);\n            }\n        }\n    }\n", "        if (sStatusBarHeight <= 0) {\n            if (sVirtualDensity == -1) {\n                sStatusBarHeight = (int) ScreenUtils.dp2px(context, STATUS_BAR_DEFAULT_HEIGHT_DP);\n            } else {\n                sStatusBarHeight = (int) (STATUS_BAR_DEFAULT_HEIGHT_DP * sVirtualDensity + 0.5f);\n            }\n        }\n    }\n\n    public static void setVirtualDensity(float density) {\n        sVirtualDensity = density;\n    }\n", "    public static void setVirtualDensity(float density) {\n        sVirtualDensity = density;\n    }\n\n    public static void setVirtualDensityDpi(float densityDpi) {\n        sVirtualDensityDpi = densityDpi;\n    }\n\n    /**\n     * \u8bbe\u7f6e\u5168\u5c4f\n     *\n     * @param activity\n     */", "    public static void setFullScreen(Activity activity) {\n        try {\n            Window window = activity.getWindow();\n//        window.addFlags(WindowManager.LayoutParams.FLAG_LAYOUT_NO_LIMITS);\n            window.addFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN);\n        } catch (Exception ignored) {\n        }\n\n    }\n\n    /**\n     * \u53d6\u6d88\u5168\u5c4f\n     *\n     * @param activity\n     */", "    public static void cancelFullScreen(Activity activity) {\n        try {\n            Window window = activity.getWindow();\n            window.clearFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN);\n        } catch (Exception ignored) {\n        }\n//        window.clearFlags(WindowManager.LayoutParams.FLAG_LAYOUT_NO_LIMITS);\n    }\n}\n"]}
{"filename": "app/src/main/java/com/flyjingfish/titlebar/BaseActivity.java", "chunked_list": ["package com.flyjingfish.titlebar;\n\nimport android.graphics.Color;\nimport android.os.Bundle;\nimport android.view.ViewGroup;\nimport android.widget.FrameLayout;\nimport android.widget.TextView;\n\nimport androidx.appcompat.app.AppCompatActivity;\n", "import androidx.appcompat.app.AppCompatActivity;\n\nimport com.flyjingfish.titlebarlib.TitleBar;\n\npublic class BaseActivity extends AppCompatActivity {\n    protected TitleBar titleBar;\n\n    public boolean isShowTitleBar(){\n        return true;\n    }\n", "    public String getTitleString(){\n        return \"\";\n    }\n\n    public boolean titleAboveContent(){\n        return true;\n    }\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        titleBar = new TitleBar(this);\n        titleBar.setShadow(4, Color.parseColor(\"#406200EE\"), TitleBar.ShadowType.GRADIENT);\n        titleBar.setTitleGravity(TitleBar.TitleGravity.CENTER);\n        titleBar.setOnBackViewClickListener(v -> finish());", "        if (isShowTitleBar()){\n            titleBar.show();\n        }else {\n            titleBar.hide();\n        }\n        titleBar.setTitle(getTitleString());\n        titleBar.setAboveContent(titleAboveContent());\n        titleBar.attachToWindow();\n    }\n}\n"]}
{"filename": "app/src/main/java/com/flyjingfish/titlebar/OnceReadValue.java", "chunked_list": ["package com.flyjingfish.titlebar;\n\nabstract class OnceReadValue<P, T> {\n\n    private volatile boolean isRead = false;\n    private T cacheValue;\n\n    public T get(P param){\n        if(isRead){\n            return cacheValue;\n        }\n        synchronized (this){", "        if(isRead){\n            return cacheValue;\n        }\n        synchronized (this){\n            if(!isRead){\n                cacheValue = read(param);\n                isRead = true;\n            }\n        }\n        return cacheValue;\n    }\n\n    protected abstract T read(P param);\n}"]}
