{"filename": "src/test/java/com/fiap/grupo9/appconsumoeletro/AppConsumoEletroApplicationTests.java", "chunked_list": ["package com.fiap.grupo9.appconsumoeletro;\n\nimport org.junit.jupiter.api.Test;\nimport org.springframework.boot.test.context.SpringBootTest;\n\n@SpringBootTest\nclass AppConsumoEletroApplicationTests {\n\n    @Test\n    void contextLoads() {", "    @Test\n    void contextLoads() {\n    }\n\n}\n"]}
{"filename": "src/main/java/com/fiap/grupo9/appconsumoeletro/AppConsumoEletroApplication.java", "chunked_list": ["package com.fiap.grupo9.appconsumoeletro;\n\n\n\nimport io.swagger.v3.oas.models.Components;\nimport io.swagger.v3.oas.models.OpenAPI;\nimport io.swagger.v3.oas.models.info.Info;\nimport io.swagger.v3.oas.models.info.License;\n\nimport org.springframework.beans.factory.annotation.Value;", "\nimport org.springframework.beans.factory.annotation.Value;\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.context.annotation.Bean;\n\n@SpringBootApplication\npublic class AppConsumoEletroApplication {\n\n    public static void main(String[] args) {\n        SpringApplication.run(AppConsumoEletroApplication.class, args);\n    }\n}\n", "    public static void main(String[] args) {\n        SpringApplication.run(AppConsumoEletroApplication.class, args);\n    }\n}\n"]}
{"filename": "src/main/java/com/fiap/grupo9/appconsumoeletro/config/OpenAPI.java", "chunked_list": ["package com.fiap.grupo9.appconsumoeletro.config;\n\nimport io.swagger.v3.oas.annotations.OpenAPIDefinition;\nimport io.swagger.v3.oas.annotations.info.Info;\nimport org.springframework.context.annotation.Configuration;\n\n@Configuration\n@OpenAPIDefinition(\n        info = @Info(\n                title = \"API para gerenciar o consumo eletr\u00f4nico\",", "        info = @Info(\n                title = \"API para gerenciar o consumo eletr\u00f4nico\",\n                description = \"Visualizar o consumo de energia de cada aparelho eletr\u00f4nico e usu\u00e1rio\"\n        )\n)\npublic class OpenAPI {\n}\n"]}
{"filename": "src/main/java/com/fiap/grupo9/appconsumoeletro/config/ValidatorBean.java", "chunked_list": ["package com.fiap.grupo9.appconsumoeletro.config;\n\nimport jakarta.validation.Validation;\nimport jakarta.validation.Validator;\nimport org.springframework.context.annotation.Configuration;\n\n@Configuration\npublic class ValidatorBean {\n    Validator validator(){\n        return Validation.buildDefaultValidatorFactory().getValidator();\n    }\n}\n"]}
{"filename": "src/main/java/com/fiap/grupo9/appconsumoeletro/dominio/Pessoa.java", "chunked_list": ["package com.fiap.grupo9.appconsumoeletro.dominio;\n\nimport java.time.LocalDate;\n\npublic class Pessoa {\n    private String nome;\n    private LocalDate dataNascimento;\n    private Parentesco parentesco;\n\n}\n"]}
{"filename": "src/main/java/com/fiap/grupo9/appconsumoeletro/dominio/Parentesco.java", "chunked_list": ["package com.fiap.grupo9.appconsumoeletro.dominio;\n\npublic enum Parentesco {\n    PAI, MAE, FILHO, PADRASTO, MADRASTA, ENTEADOS, GENRO, NORA, SOGRO, SOGRA, AVO, NETO, IRMAO;\n}\n"]}
{"filename": "src/main/java/com/fiap/grupo9/appconsumoeletro/dominio/Residencia.java", "chunked_list": ["package com.fiap.grupo9.appconsumoeletro.dominio;\n\npublic class Residencia {\n\n    Endereco endereco;\n    Pessoa pessoa;\n    Eletrodomestico eletrodomestico;\n\n\n    public void cadastrarPessoa() {\n\n    }\n\n}\n", "    public void cadastrarPessoa() {\n\n    }\n\n}\n"]}
{"filename": "src/main/java/com/fiap/grupo9/appconsumoeletro/dominio/Endereco.java", "chunked_list": ["package com.fiap.grupo9.appconsumoeletro.dominio;\n\nimport java.util.Objects;\nimport java.util.UUID;\n\npublic class Endereco {\n    private UUID uuid;\n    private String cep;\n    private String end;\n    private String numero;\n    private String bairro;\n    private String cidade;\n    private String uf;\n    private String complemento;\n", "    public String getCep() {\n        return cep;\n    }\n\n    public void setCep(String cep) {\n        this.cep = cep;\n    }\n\n    public String getEnd() {\n        return end;\n    }\n", "    public String getEnd() {\n        return end;\n    }\n\n    public void setEnd(String end) {\n        this.end = end;\n    }\n\n    public String getNumero() {\n        return numero;\n    }\n", "    public String getNumero() {\n        return numero;\n    }\n\n    public void setNumero(String numero) {\n        this.numero = numero;\n    }\n\n    public String getBairro() {\n        return bairro;\n    }\n", "    public String getBairro() {\n        return bairro;\n    }\n\n    public void setBairro(String bairro) {\n        this.bairro = bairro;\n    }\n\n    public String getCidade() {\n        return cidade;\n    }\n", "    public String getCidade() {\n        return cidade;\n    }\n\n    public void setCidade(String cidade) {\n        this.cidade = cidade;\n    }\n\n    public String getUf() {\n        return uf;\n    }\n", "    public String getUf() {\n        return uf;\n    }\n\n    public void setUf(String uf) {\n        this.uf = uf;\n    }\n\n    public String getComplemento() {\n        return complemento;\n    }\n", "    public String getComplemento() {\n        return complemento;\n    }\n\n    public void setComplemento(String complemento) {\n        this.complemento = complemento;\n    }\n\n    public UUID getUuid() {\n        return uuid;\n    }\n", "    public UUID getUuid() {\n        return uuid;\n    }\n\n    public void setUuid(UUID uuid) {\n        this.uuid = uuid;\n    }\n\n    @Override\n    public boolean equals(Object o) {\n        if (this == o) return true;", "    public boolean equals(Object o) {\n        if (this == o) return true;\n        if (!(o instanceof Endereco endereco)) return false;\n        return Objects.equals(getCep(), endereco.getCep()) && Objects.equals(getNumero(), endereco.getNumero()) && Objects.equals(getBairro(), endereco.getBairro()) && Objects.equals(getCidade(), endereco.getCidade()) && Objects.equals(getUf(), endereco.getUf()) && Objects.equals(getComplemento(), endereco.getComplemento());\n    }\n\n    @Override\n    public int hashCode() {\n        return Objects.hash(getCep(), getNumero(), getBairro(), getCidade(), getUf(), getComplemento());\n    }\n}\n"]}
{"filename": "src/main/java/com/fiap/grupo9/appconsumoeletro/dominio/Eletrodomestico.java", "chunked_list": ["package com.fiap.grupo9.appconsumoeletro.dominio;\n\nimport java.time.LocalDateTime;\n\npublic class Eletrodomestico {\n\n    private String nome;\n    private String modelo;\n    private Double potencia;\n    private Double voltagem;\n    private Double consumo;\n\n}\n"]}
{"filename": "src/main/java/com/fiap/grupo9/appconsumoeletro/exceptions/DominioException.java", "chunked_list": ["package com.fiap.grupo9.appconsumoeletro.exceptions;\n\npublic class DominioException extends RuntimeException{\n    public DominioException(String message) {\n        super(message);\n    }\n}\n"]}
{"filename": "src/main/java/com/fiap/grupo9/appconsumoeletro/exceptions/EnderecoJaCadastradoException.java", "chunked_list": ["package com.fiap.grupo9.appconsumoeletro.exceptions;\n\npublic class EnderecoJaCadastradoException extends DominioException {\n    public EnderecoJaCadastradoException(String mensagem) {\n        super(mensagem);\n    }\n}\n"]}
{"filename": "src/main/java/com/fiap/grupo9/appconsumoeletro/exceptions/LimiteRepositorioException.java", "chunked_list": ["package com.fiap.grupo9.appconsumoeletro.exceptions;\n\npublic class LimiteRepositorioException extends DominioException {\n    public LimiteRepositorioException(String message) {\n        super(message);\n    }\n}\n"]}
{"filename": "src/main/java/com/fiap/grupo9/appconsumoeletro/exceptions/EnderecoNaoEncontradoException.java", "chunked_list": ["package com.fiap.grupo9.appconsumoeletro.exceptions;\n\npublic class EnderecoNaoEncontradoException extends DominioException{\n    public EnderecoNaoEncontradoException(String mensagem){\n        super(mensagem);\n    }\n}\n"]}
{"filename": "src/main/java/com/fiap/grupo9/appconsumoeletro/repositorio/EnderecoRepository.java", "chunked_list": ["package com.fiap.grupo9.appconsumoeletro.repositorio;\n\nimport com.fiap.grupo9.appconsumoeletro.dominio.Endereco;\nimport com.fiap.grupo9.appconsumoeletro.exceptions.EnderecoJaCadastradoException;\nimport com.fiap.grupo9.appconsumoeletro.exceptions.EnderecoNaoEncontradoException;\nimport com.fiap.grupo9.appconsumoeletro.exceptions.LimiteRepositorioException;\nimport org.springframework.stereotype.Component;\n\nimport java.util.List;\nimport java.util.Optional;", "import java.util.List;\nimport java.util.Optional;\nimport java.util.UUID;\nimport java.util.concurrent.ConcurrentHashMap;\nimport java.util.concurrent.ConcurrentMap;\nimport java.util.stream.Collectors;\n\n@Component\npublic class EnderecoRepository {\n    private final ConcurrentMap<UUID, Endereco> enderecoMap = new ConcurrentHashMap<>();\n\n    public List<Endereco> getEnderecoList() {\n        return List.copyOf(enderecoMap.values());\n    }\n\n    public List<Endereco> getEnderecosPeloCEP(String CEP) {\n        return enderecoMap.values().stream()\n                .filter(endereco -> endereco.getCep().equalsIgnoreCase(CEP))\n                .collect(Collectors.toList());\n    }\n", "public class EnderecoRepository {\n    private final ConcurrentMap<UUID, Endereco> enderecoMap = new ConcurrentHashMap<>();\n\n    public List<Endereco> getEnderecoList() {\n        return List.copyOf(enderecoMap.values());\n    }\n\n    public List<Endereco> getEnderecosPeloCEP(String CEP) {\n        return enderecoMap.values().stream()\n                .filter(endereco -> endereco.getCep().equalsIgnoreCase(CEP))\n                .collect(Collectors.toList());\n    }\n", "    public Endereco salvarEndereco(Endereco endereco) throws EnderecoJaCadastradoException {\n        if (enderecoMap.containsValue(endereco)) {\n            throw new EnderecoJaCadastradoException(String.format(\"Endereco com CEP %s j\u00e1 cadastrado!\", endereco.getCep()));\n        }\n\n        if (enderecoMap.size() > 100) {\n            throw new LimiteRepositorioException(String.format(\"Limite de %s atingido!\", enderecoMap.size()));\n        }\n\n        endereco.setUuid(UUID.randomUUID());\n        enderecoMap.put(endereco.getUuid(), endereco);\n\n        return endereco;\n    }\n", "    public void atualizarEndereco(UUID uuid, Endereco endereco) {\n        if(!enderecoMap.containsKey(uuid)) {\n            throw new EnderecoNaoEncontradoException(String.format(\"Endere\u00e7o com uuid:%s n\u00e3o encontrado.\", uuid));\n        }\n        Endereco enderecoSalvo = enderecoMap.get(uuid);\n        enderecoSalvo.setNumero(endereco.getNumero());\n        enderecoSalvo.setComplemento(endereco.getComplemento());\n        enderecoMap.put(uuid, enderecoSalvo);\n    }\n\n    public void removerEndereco(UUID uuid) {", "    public void removerEndereco(UUID uuid) {\n        if(!enderecoMap.containsKey(uuid)){\n            throw new EnderecoNaoEncontradoException(String.format(\"Endere\u00e7o com uuid:%s n\u00e3o encontrado.\", uuid));\n        }\n        enderecoMap.remove(uuid);\n    }\n\n    public Optional<Endereco> buscarEnderecoPorUUID(UUID uuid) {\n        return Optional.ofNullable(enderecoMap.get(uuid));\n    }\n}\n"]}
{"filename": "src/main/java/com/fiap/grupo9/appconsumoeletro/repositorio/EletrodomesticoRepository.java", "chunked_list": ["package com.fiap.grupo9.appconsumoeletro.repositorio;\n\nimport com.fiap.grupo9.appconsumoeletro.dominio.Eletrodomestico;\nimport com.fiap.grupo9.appconsumoeletro.dominio.Endereco;\nimport com.fiap.grupo9.appconsumoeletro.exceptions.EnderecoJaCadastradoException;\nimport com.fiap.grupo9.appconsumoeletro.exceptions.LimiteRepositorioException;\nimport org.springframework.stereotype.Component;\n\nimport java.util.ArrayList;\nimport java.util.List;", "import java.util.ArrayList;\nimport java.util.List;\nimport java.util.stream.Collectors;\n\n@Component\npublic class EletrodomesticoRepository {\n    private List<Eletrodomestico> eletrodomesticos = new ArrayList<>();\n\n    public List<Eletrodomestico> getEletrodomesticos(){\n        return this.eletrodomesticos;\n    }\n\n    //register new eletro\n\n}\n"]}
{"filename": "src/main/java/com/fiap/grupo9/appconsumoeletro/controllers/PessoaController.java", "chunked_list": ["package com.fiap.grupo9.appconsumoeletro.controllers;\n\nimport com.fiap.grupo9.appconsumoeletro.controllers.form.PessoaForm;\nimport com.fiap.grupo9.appconsumoeletro.controllers.mapper.ModelMapper;\nimport com.fiap.grupo9.appconsumoeletro.dominio.Pessoa;\nimport io.swagger.v3.oas.annotations.Operation;\nimport io.swagger.v3.oas.annotations.media.Content;\nimport io.swagger.v3.oas.annotations.responses.ApiResponse;\nimport io.swagger.v3.oas.annotations.responses.ApiResponses;\nimport io.swagger.v3.oas.annotations.tags.Tag;", "import io.swagger.v3.oas.annotations.responses.ApiResponses;\nimport io.swagger.v3.oas.annotations.tags.Tag;\nimport jakarta.validation.*;\nimport lombok.RequiredArgsConstructor;\nimport org.springframework.http.HttpStatus;\nimport org.springframework.http.ResponseEntity;\nimport org.springframework.web.bind.annotation.PostMapping;\nimport org.springframework.web.bind.annotation.RequestBody;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RestController;", "import org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RestController;\n\nimport java.util.Map;\nimport java.util.Set;\nimport java.util.stream.Collectors;\n\n@RequiredArgsConstructor\n@Tag(name = \"Pessoa\", description = \"Gerenciar pessoas\")\n@RestController", "@Tag(name = \"Pessoa\", description = \"Gerenciar pessoas\")\n@RestController\n@RequestMapping(\"/pessoa\")\npublic class PessoaController {\n\n    private final Validator validator;\n    private final ModelMapper modelMapper;\n\n    @Operation(summary = \"Cadastrar nova pessoa\", description = \"Cadastrar nova pessoa\", tags = { \"Pessoa\" })\n    @ApiResponses(value = {\n            @ApiResponse(responseCode = \"200\", description = \"Sucesso\", content = @Content),\n            @ApiResponse(responseCode = \"400\", description = \"Dados inv\u00e1lidos\", content = @Content)\n    })\n    @PostMapping\n    public ResponseEntity<?> cadastrarPessoa(@Valid @RequestBody PessoaForm pessoaForm){\n        Map<Path, String> violacoes = validar(pessoaForm);\n", "        if(!violacoes.isEmpty())\n            return ResponseEntity.status(HttpStatus.BAD_REQUEST).body(violacoes);\n\n        var pessoa = modelMapper.getMapper().map(pessoaForm, Pessoa.class);\n\n        return ResponseEntity.ok().body(pessoa);\n    }\n\n    private <T> Map<Path, String> validar(T form) {\n        Set<ConstraintViolation<T>> violacoes = validator.validate(form);\n        return violacoes.stream().collect(Collectors.toMap(\n                ConstraintViolation::getPropertyPath, ConstraintViolation::getMessage\n        ));\n    }\n}\n"]}
{"filename": "src/main/java/com/fiap/grupo9/appconsumoeletro/controllers/EnderecoController.java", "chunked_list": ["package com.fiap.grupo9.appconsumoeletro.controllers;\n\nimport com.fiap.grupo9.appconsumoeletro.controllers.form.EnderecoForm;\nimport com.fiap.grupo9.appconsumoeletro.controllers.mapper.ModelMapper;\nimport com.fiap.grupo9.appconsumoeletro.dominio.Endereco;\nimport com.fiap.grupo9.appconsumoeletro.repositorio.EnderecoRepository;\nimport io.swagger.v3.oas.annotations.Operation;\nimport io.swagger.v3.oas.annotations.media.Content;\nimport io.swagger.v3.oas.annotations.responses.ApiResponse;\nimport io.swagger.v3.oas.annotations.responses.ApiResponses;", "import io.swagger.v3.oas.annotations.responses.ApiResponse;\nimport io.swagger.v3.oas.annotations.responses.ApiResponses;\nimport io.swagger.v3.oas.annotations.tags.Tag;\nimport jakarta.validation.ConstraintViolation;\nimport jakarta.validation.Valid;\nimport jakarta.validation.Validator;\nimport jakarta.validation.constraints.NotBlank;\nimport lombok.RequiredArgsConstructor;\nimport org.springframework.http.HttpStatus;\nimport org.springframework.http.ResponseEntity;", "import org.springframework.http.HttpStatus;\nimport org.springframework.http.ResponseEntity;\nimport org.springframework.web.bind.annotation.*;\n\nimport java.util.*;\nimport java.util.stream.Collectors;\n\n@RequiredArgsConstructor\n@Tag(name = \"Endere\u00e7o\", description = \"Gerenciar endere\u00e7os\")\n@RestController", "@Tag(name = \"Endere\u00e7o\", description = \"Gerenciar endere\u00e7os\")\n@RestController\n@RequestMapping(\"/endereco\")\npublic class EnderecoController {\n\n    private final Validator validator;\n    private final EnderecoRepository enderecoRepository;\n    private final ModelMapper modelMapper;\n\n    @Operation(summary = \"Cadastrar novo endere\u00e7o\", description = \"Cadastrar novo endere\u00e7o\", tags = { \"Endere\u00e7o\" })\n    @ApiResponses(value = {\n            @ApiResponse(responseCode = \"200\", description = \"Sucesso\", content = @Content),\n            @ApiResponse(responseCode = \"400\", description = \"Dados inv\u00e1lidos\", content = @Content)\n    })\n    @PostMapping\n    public ResponseEntity<?> cadastrarEndereco(@Valid @RequestBody EnderecoForm enderecoForm) {\n        List<String> errors = validar(enderecoForm);\n", "        if (!errors.isEmpty()) {\n            return ResponseEntity.badRequest().body(errors);\n        }\n\n        Endereco endereco = modelMapper.getMapper().map(enderecoForm, Endereco.class);\n        endereco = enderecoRepository.salvarEndereco(endereco);\n\n        return ResponseEntity.ok().body(endereco);\n    }\n\n    @Operation(summary = \"Encontrar endere\u00e7os por CEP\", description = \"Encontrar endere\u00e7os por CEP\", tags = { \"Endere\u00e7o\" })\n    @ApiResponses(value = {\n            @ApiResponse(responseCode = \"200\", description = \"Sucesso\", content = @Content),\n            @ApiResponse(responseCode = \"400\", description = \"Dados inv\u00e1lidos\", content = @Content)\n    })\n    @GetMapping(\"/{cep}\")\n    public ResponseEntity<?> encontrarEnderecosPorCEP(@Valid @NotBlank @PathVariable(\"cep\") String cep) {\n        List<Endereco> enderecoPelosCEP = enderecoRepository.getEnderecosPeloCEP(cep);\n        return ResponseEntity.ok().body(enderecoPelosCEP);\n    }\n\n    @Operation(summary = \"Listar endere\u00e7os\", description = \"Listar endere\u00e7os\", tags = { \"Endere\u00e7o\" })\n    @ApiResponses(value = {\n            @ApiResponse(responseCode = \"200\", description = \"Sucesso\", content = @Content),\n    })\n    @GetMapping\n    public ResponseEntity<List<Endereco>> enderecos() {\n        List<Endereco> listaEnderecos = enderecoRepository.getEnderecoList();\n        return ResponseEntity.ok().body(listaEnderecos);\n    }\n\n    @Operation(summary = \"Atualizar endere\u00e7o\", description = \"Atualizar endere\u00e7o\", tags = { \"Endere\u00e7o\" })\n    @ApiResponses(value = {\n            @ApiResponse(responseCode = \"200\", description = \"Sucesso\", content = @Content),\n    })\n    @PatchMapping(\"/{uuid}\")\n    public ResponseEntity<?> atualizarEndereco(@Valid @NotBlank @PathVariable(\"uuid\") UUID uuid,\n                                                                 @NotBlank @RequestParam String complemento,\n                                                                 @NotBlank @RequestParam String numero) {\n        EnderecoForm enderecoForm = new EnderecoForm();\n        enderecoForm.setComplemento(complemento);\n        enderecoForm.setNumero(numero);\n        Endereco endereco = modelMapper.getMapper().map(enderecoForm, Endereco.class);\n        enderecoRepository.atualizarEndereco(uuid, endereco);\n\n        Map<String, String> response = new HashMap<>();\n        response.put(\"message\", \"Endere\u00e7o atualizado com sucesso\");\n\n        return ResponseEntity.ok().body(response);\n    }\n\n    @Operation(summary = \"Remover endere\u00e7o\", description = \"Remover endere\u00e7o\", tags = { \"Endere\u00e7o\" })\n    @ApiResponses(value = {\n            @ApiResponse(responseCode = \"200\", description = \"Sucesso\", content = @Content),\n    })\n    @DeleteMapping(\"/{uuid}\")\n    public ResponseEntity<?> removerEndereco(@Valid @NotBlank @PathVariable(\"uuid\") UUID uuid) {\n        enderecoRepository.removerEndereco(uuid);\n\n        Map<String, String> response = new HashMap<>();\n        response.put(\"message\", \"Endere\u00e7o removido com sucesso\");\n\n        return ResponseEntity.ok().body(response);\n    }\n\n    @Operation(summary = \"Buscar endere\u00e7o por UUID\", description = \"Buscar endere\u00e7o por UUID\", tags = { \"Endere\u00e7o\" })\n    @ApiResponses(value = {\n            @ApiResponse(responseCode = \"200\", description = \"Sucesso\", content = @Content),\n            @ApiResponse(responseCode = \"404\", description = \"Endere\u00e7o n\u00e3o encontrado\", content = @Content)\n    })\n    @GetMapping(\"/{uuid}\")\n    public ResponseEntity<?> buscarEnderecoPorUUID(@Valid @PathVariable(\"uuid\") UUID uuid) {\n        Optional<Endereco> enderecoOptional = enderecoRepository.buscarEnderecoPorUUID(uuid);\n", "        if (enderecoOptional.isPresent()) {\n            Endereco endereco = enderecoOptional.get();\n            return ResponseEntity.ok().body(endereco);\n        } else {\n            return ResponseEntity.notFound().build();\n        }\n    }\n\n    private <T> List<String> validar(T form) {\n        Set<ConstraintViolation<T>> violations = validator.validate(form);\n        return violations.stream()\n                .map(violation -> violation.getPropertyPath() + \": \" + violation.getMessage())\n                .collect(Collectors.toList());\n    }\n}\n"]}
{"filename": "src/main/java/com/fiap/grupo9/appconsumoeletro/controllers/ApiExceptionHandler.java", "chunked_list": ["package com.fiap.grupo9.appconsumoeletro.controllers;\n\nimport com.fiap.grupo9.appconsumoeletro.exceptions.DominioException;\nimport com.fiap.grupo9.appconsumoeletro.exceptions.EnderecoJaCadastradoException;\nimport com.fiap.grupo9.appconsumoeletro.exceptions.EnderecoNaoEncontradoException;\nimport com.fiap.grupo9.appconsumoeletro.exceptions.LimiteRepositorioException;\nimport org.springframework.http.HttpStatus;\nimport org.springframework.http.ResponseEntity;\nimport org.springframework.validation.FieldError;\nimport org.springframework.web.bind.MethodArgumentNotValidException;", "import org.springframework.validation.FieldError;\nimport org.springframework.web.bind.MethodArgumentNotValidException;\nimport org.springframework.web.bind.annotation.ControllerAdvice;\nimport org.springframework.web.bind.annotation.ExceptionHandler;\nimport org.springframework.web.bind.annotation.ResponseStatus;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\n@ControllerAdvice\npublic class ApiExceptionHandler {\n    @ExceptionHandler(DominioException.class)\n    @ResponseStatus(HttpStatus.BAD_REQUEST)\n    ResponseEntity<?> handleEnderecoExceptions(Exception e){\n        Map<String, String> errors = new HashMap<>();\n        errors.put(\"Erro\", e.getMessage());\n        return ResponseEntity.badRequest().body(errors);\n    }\n\n    @ExceptionHandler\n    @ResponseStatus(HttpStatus.BAD_REQUEST)\n    ResponseEntity<?> handle(MethodArgumentNotValidException e) {\n        Map<String, String> errors = new HashMap<>();\n        e.getBindingResult().getAllErrors().forEach((error) -> {\n            String fieldName = ((FieldError) error).getField();\n            String errorMessage = error.getDefaultMessage();\n            errors.put(fieldName, errorMessage);\n        });\n\n        return ResponseEntity.badRequest().body(errors);\n    }\n}\n", "\n@ControllerAdvice\npublic class ApiExceptionHandler {\n    @ExceptionHandler(DominioException.class)\n    @ResponseStatus(HttpStatus.BAD_REQUEST)\n    ResponseEntity<?> handleEnderecoExceptions(Exception e){\n        Map<String, String> errors = new HashMap<>();\n        errors.put(\"Erro\", e.getMessage());\n        return ResponseEntity.badRequest().body(errors);\n    }\n\n    @ExceptionHandler\n    @ResponseStatus(HttpStatus.BAD_REQUEST)\n    ResponseEntity<?> handle(MethodArgumentNotValidException e) {\n        Map<String, String> errors = new HashMap<>();\n        e.getBindingResult().getAllErrors().forEach((error) -> {\n            String fieldName = ((FieldError) error).getField();\n            String errorMessage = error.getDefaultMessage();\n            errors.put(fieldName, errorMessage);\n        });\n\n        return ResponseEntity.badRequest().body(errors);\n    }\n}\n"]}
{"filename": "src/main/java/com/fiap/grupo9/appconsumoeletro/controllers/EletrodomesticoController.java", "chunked_list": ["package com.fiap.grupo9.appconsumoeletro.controllers;\n\nimport com.fiap.grupo9.appconsumoeletro.controllers.form.EletrodomesticoForm;\nimport com.fiap.grupo9.appconsumoeletro.controllers.mapper.ModelMapper;\nimport com.fiap.grupo9.appconsumoeletro.dominio.Eletrodomestico;\nimport io.swagger.v3.oas.annotations.Operation;\nimport io.swagger.v3.oas.annotations.media.Content;\nimport io.swagger.v3.oas.annotations.responses.ApiResponse;\nimport io.swagger.v3.oas.annotations.responses.ApiResponses;\nimport io.swagger.v3.oas.annotations.tags.Tag;", "import io.swagger.v3.oas.annotations.responses.ApiResponses;\nimport io.swagger.v3.oas.annotations.tags.Tag;\nimport jakarta.validation.*;\nimport lombok.RequiredArgsConstructor;\nimport org.springframework.http.HttpStatus;\nimport org.springframework.http.ResponseEntity;\nimport org.springframework.web.bind.annotation.PostMapping;\nimport org.springframework.web.bind.annotation.RequestBody;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RestController;", "import org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RestController;\n\nimport java.util.Map;\nimport java.util.Set;\nimport java.util.stream.Collectors;\n\n@RequiredArgsConstructor\n@Tag(name = \"Eletrodomestico\", description = \"Gerenciar eletrodomesticos\")\n@RestController", "@Tag(name = \"Eletrodomestico\", description = \"Gerenciar eletrodomesticos\")\n@RestController\n@RequestMapping(\"/eletrodomestico\")\npublic class EletrodomesticoController {\n\n    private final Validator validator;\n    private final ModelMapper modelMapper;\n\n    @Operation(summary = \"Cadastrar novo eletrodomestico\", description = \"Cadastrar novo eletrodomestico\", tags = { \"Pessoa\" })\n    @ApiResponses(value = {\n            @ApiResponse(responseCode = \"200\", description = \"Sucesso\", content = @Content),\n            @ApiResponse(responseCode = \"400\", description = \"Dados inv\u00e1lidos\", content = @Content)\n    })\n    @PostMapping\n    public ResponseEntity<?> cadastrarEletronico(@Valid @RequestBody EletrodomesticoForm eletrodomesticoForm){\n        Map<Path, String> violacoes = validar(eletrodomesticoForm);\n", "        if(!violacoes.isEmpty())\n            return ResponseEntity.status(HttpStatus.BAD_REQUEST).body(violacoes);\n\n        var eletrodomestico = modelMapper.getMapper().map(eletrodomesticoForm, Eletrodomestico.class);\n\n        return ResponseEntity.ok().body(eletrodomestico);\n    }\n\n    private <T> Map<Path, String> validar(T form) {\n        Set<ConstraintViolation<T>> violacoes = validator.validate(form);\n        return violacoes.stream().collect(Collectors.toMap(\n                ConstraintViolation::getPropertyPath, ConstraintViolation::getMessage\n        ));\n    }\n\n}\n"]}
{"filename": "src/main/java/com/fiap/grupo9/appconsumoeletro/controllers/form/EletrodomesticoForm.java", "chunked_list": ["package com.fiap.grupo9.appconsumoeletro.controllers.form;\n\nimport lombok.Getter;\nimport lombok.Setter;\n\n@Getter\n@Setter\npublic class EletrodomesticoForm {\n    \n}\n"]}
{"filename": "src/main/java/com/fiap/grupo9/appconsumoeletro/controllers/form/PessoaForm.java", "chunked_list": ["package com.fiap.grupo9.appconsumoeletro.controllers.form;\n\nimport com.fasterxml.jackson.annotation.JsonProperty;\nimport jakarta.validation.constraints.NotBlank;\nimport jakarta.validation.constraints.Pattern;\nimport lombok.Getter;\nimport lombok.Setter;\n\n@Getter\n@Setter\npublic class PessoaForm {\n\n}\n", "@Getter\n@Setter\npublic class PessoaForm {\n\n}\n"]}
{"filename": "src/main/java/com/fiap/grupo9/appconsumoeletro/controllers/form/EnderecoForm.java", "chunked_list": ["package com.fiap.grupo9.appconsumoeletro.controllers.form;\n\nimport com.fasterxml.jackson.annotation.JsonProperty;\nimport jakarta.validation.constraints.NotBlank;\nimport jakarta.validation.constraints.Pattern;\nimport lombok.Getter;\nimport lombok.Setter;\n\n@Getter\n@Setter\npublic class EnderecoForm {\n    @JsonProperty\n    @NotBlank\n    @Pattern(regexp = \"\\\\d{8}\", message = \"CEP inv\u00e1lido\")\n    private String cep;\n    @JsonProperty\n    @NotBlank\n    private String end;\n    @JsonProperty\n    private String numero;\n    @JsonProperty\n    @NotBlank\n    private String bairro;\n    @JsonProperty\n    @NotBlank\n    private String cidade;\n    @JsonProperty\n    @NotBlank\n    private String uf;\n    @JsonProperty\n    private String complemento;\n}\n", "@Getter\n@Setter\npublic class EnderecoForm {\n    @JsonProperty\n    @NotBlank\n    @Pattern(regexp = \"\\\\d{8}\", message = \"CEP inv\u00e1lido\")\n    private String cep;\n    @JsonProperty\n    @NotBlank\n    private String end;\n    @JsonProperty\n    private String numero;\n    @JsonProperty\n    @NotBlank\n    private String bairro;\n    @JsonProperty\n    @NotBlank\n    private String cidade;\n    @JsonProperty\n    @NotBlank\n    private String uf;\n    @JsonProperty\n    private String complemento;\n}\n"]}
{"filename": "src/main/java/com/fiap/grupo9/appconsumoeletro/controllers/mapper/ModelMapper.java", "chunked_list": ["package com.fiap.grupo9.appconsumoeletro.controllers.mapper;\n\nimport org.springframework.stereotype.Component;\n\n@Component\npublic class ModelMapper {\n    private org.modelmapper.ModelMapper modelMapper = new org.modelmapper.ModelMapper();\n\n    public ModelMapper(){\n\n    }\n    public org.modelmapper.ModelMapper getMapper(){\n        return modelMapper;\n    }\n}\n"]}
