{"filename": "src/app/src/test/java/com/example/duckling_movies/ExampleUnitTest.java", "chunked_list": ["package com.example.duckling_movies;\n\nimport org.junit.Test;\n\nimport static org.junit.Assert.*;\n\n/**\n * Example local unit test, which will execute on the development machine (host).\n *\n * @see <a href=\"http://d.android.com/tools/testing\">Testing documentation</a>", " *\n * @see <a href=\"http://d.android.com/tools/testing\">Testing documentation</a>\n */\npublic class ExampleUnitTest {\n    @Test\n    public void addition_isCorrect() {\n        assertEquals(4, 2 + 2);\n    }\n}"]}
{"filename": "src/app/src/main/java/com/example/duckling_movies/Login.java", "chunked_list": ["package com.example.duckling_movies;\n\nimport androidx.annotation.NonNull;\nimport androidx.appcompat.app.AppCompatActivity;\n\nimport android.text.TextUtils;\nimport android.view.View;\nimport android.content.Intent;\nimport android.os.Bundle;\nimport android.view.View;", "import android.os.Bundle;\nimport android.view.View;\nimport android.widget.Button;\nimport android.widget.TextView;\nimport android.widget.Toast;\n\nimport com.google.android.material.textfield.TextInputEditText;\nimport com.google.firebase.database.DataSnapshot;\nimport com.google.firebase.database.DatabaseError;\nimport com.google.firebase.database.DatabaseReference;", "import com.google.firebase.database.DatabaseError;\nimport com.google.firebase.database.DatabaseReference;\nimport com.google.firebase.database.FirebaseDatabase;\nimport com.google.firebase.database.Query;\nimport com.google.firebase.database.ValueEventListener;\n\npublic class Login extends AppCompatActivity {\n    Button btn_login;\n    TextInputEditText email, senha;\n    DatabaseReference usuarioRef = FirebaseDatabase.getInstance().getReference().child(\"usuario\");\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_login);\n        email = findViewById(R.id.email);\n        senha = findViewById(R.id.senha);\n        btn_login = findViewById(R.id.btn_login);\n\n        btn_login.setOnClickListener(new View.OnClickListener() {\n            @Override", "            public void onClick(View v) {\n                // Chamar a fun\u00e7\u00e3o EnviaDadosUsuario() dentro do onClick()\n                ValidaLogin();\n            }\n        });\n    }\n\n    public void RedirecionaLogin(){\n        Intent intent = new Intent(getApplicationContext(), Anime_feed.class);\n        startActivity(intent);\n    }\n", "    public void ValidaLogin(){\n        String Email = email.getText().toString();\n        String Senha = senha.getText().toString();\n        if (TextUtils.isEmpty(Email)) {\n            email.setError(\"Por favor, digite o e-mail\");\n            email.requestFocus();\n            return;\n        }\n\n        if (TextUtils.isEmpty(Senha)) {\n            senha.setError(\"Por favor, digite a senha\");\n            senha.requestFocus();\n            return;\n        }\n\n        Query query = usuarioRef.orderByChild(\"email\").equalTo(Email);\n        query.addListenerForSingleValueEvent(new ValueEventListener() {\n            @Override", "        if (TextUtils.isEmpty(Senha)) {\n            senha.setError(\"Por favor, digite a senha\");\n            senha.requestFocus();\n            return;\n        }\n\n        Query query = usuarioRef.orderByChild(\"email\").equalTo(Email);\n        query.addListenerForSingleValueEvent(new ValueEventListener() {\n            @Override\n            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\n                if (dataSnapshot.exists()) {\n                    // Iterar sobre os usu\u00e1rios com o email fornecido e verificar a senha\n                    boolean senhaCorreta = false;", "            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\n                if (dataSnapshot.exists()) {\n                    // Iterar sobre os usu\u00e1rios com o email fornecido e verificar a senha\n                    boolean senhaCorreta = false;\n                    for (DataSnapshot snapshot : dataSnapshot.getChildren()) {\n                        Usuario usuario = snapshot.getValue(Usuario.class);\n                        if (usuario.getPassword().equals(Senha)) {\n                            // Senha correta, fazer o login\n                            Toast.makeText(Login.this, \"Login realizado com sucesso\", Toast.LENGTH_SHORT).show();\n                            RedirecionaLogin();\n                            GlobalVariables.RA_atual = usuario.getMatricula();\n                            senhaCorreta = true;\n                            break;\n                        }\n                    }", "                    if (!senhaCorreta) {\n                        // Senha incorreta, mostrar mensagem de erro\n                        Toast.makeText(Login.this, \"Senha incorreta\", Toast.LENGTH_SHORT).show();\n                    }\n                } else {\n                    // Usu\u00e1rio com o email fornecido n\u00e3o encontrado, mostrar mensagem de erro\n                    Toast.makeText(Login.this, \"Usu\u00e1rio n\u00e3o encontrado\", Toast.LENGTH_SHORT).show();\n                }\n            }\n\n            @Override", "            public void onCancelled(@NonNull DatabaseError databaseError) {\n                // Ocorreu um erro ao consultar o banco de dados Firebase, mostrar mensagem de erro\n                Toast.makeText(Login.this, \"Erro ao consultar o banco de dados Firebase\", Toast.LENGTH_SHORT).show();\n            }\n\n        });\n    }\n}"]}
{"filename": "src/app/src/main/java/com/example/duckling_movies/SecondFragment.java", "chunked_list": ["package com.example.duckling_movies;\n\nimport android.os.Bundle;\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.view.ViewGroup;\n\nimport androidx.annotation.NonNull;\nimport androidx.fragment.app.Fragment;\nimport androidx.navigation.fragment.NavHostFragment;", "import androidx.fragment.app.Fragment;\nimport androidx.navigation.fragment.NavHostFragment;\n\nimport com.example.duckling_movies.databinding.FragmentSecondBinding;\n\npublic class SecondFragment extends Fragment {\n\n    private FragmentSecondBinding binding;\n\n    @Override\n    public View onCreateView(\n            LayoutInflater inflater, ViewGroup container,\n            Bundle savedInstanceState\n    ) {\n\n        binding = FragmentSecondBinding.inflate(inflater, container, false);\n        return binding.getRoot();\n\n    }\n", "    public View onCreateView(\n            LayoutInflater inflater, ViewGroup container,\n            Bundle savedInstanceState\n    ) {\n\n        binding = FragmentSecondBinding.inflate(inflater, container, false);\n        return binding.getRoot();\n\n    }\n\n    public void onViewCreated(@NonNull View view, Bundle savedInstanceState) {\n        super.onViewCreated(view, savedInstanceState);\n\n        binding.buttonSecond.setOnClickListener(new View.OnClickListener() {\n            @Override", "    public void onViewCreated(@NonNull View view, Bundle savedInstanceState) {\n        super.onViewCreated(view, savedInstanceState);\n\n        binding.buttonSecond.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view) {\n                NavHostFragment.findNavController(SecondFragment.this)\n                        .navigate(R.id.action_SecondFragment_to_FirstFragment);\n            }\n        });\n    }\n\n    @Override", "    public void onDestroyView() {\n        super.onDestroyView();\n        binding = null;\n    }\n\n}"]}
{"filename": "src/app/src/main/java/com/example/duckling_movies/AnimeManage.java", "chunked_list": ["package com.example.duckling_movies;\n\nimport androidx.appcompat.app.AppCompatActivity;\n\nimport android.content.Intent;\nimport android.os.Bundle;\nimport android.view.View;\nimport android.widget.Button;\nimport android.widget.ListView;\n\npublic class AnimeManage extends AppCompatActivity {\n    Button btn_voltar, btn_cadastrar_novo_anime;\n    ListView lv_animes_manage;\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_anime_manage);\n        btn_voltar = findViewById(R.id.btn_voltar);\n        btn_cadastrar_novo_anime = findViewById(R.id.btn_cadastrar_novo_anime);\n        lv_animes_manage = findViewById(R.id.list_view_animes_manage);\n\n        preenche_animes_manage();\n        btn_cadastrar_novo_anime.setOnClickListener(new View.OnClickListener() {\n            @Override", "import android.widget.ListView;\n\npublic class AnimeManage extends AppCompatActivity {\n    Button btn_voltar, btn_cadastrar_novo_anime;\n    ListView lv_animes_manage;\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_anime_manage);\n        btn_voltar = findViewById(R.id.btn_voltar);\n        btn_cadastrar_novo_anime = findViewById(R.id.btn_cadastrar_novo_anime);\n        lv_animes_manage = findViewById(R.id.list_view_animes_manage);\n\n        preenche_animes_manage();\n        btn_cadastrar_novo_anime.setOnClickListener(new View.OnClickListener() {\n            @Override", "            public void onClick(View v) {\n                // inicie a activity desejada aqui\n                Intent intent = new Intent(getApplicationContext(), PostAnimes.class);\n                startActivity(intent);\n            }\n        });\n\n        btn_voltar.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                // inicie a activity desejada aqui\n                Intent intent = new Intent(getApplicationContext(), Anime_feed.class);\n                startActivity(intent);\n            }\n        });\n\n\n    }\n", "            public void onClick(View v) {\n                // inicie a activity desejada aqui\n                Intent intent = new Intent(getApplicationContext(), Anime_feed.class);\n                startActivity(intent);\n            }\n        });\n\n\n    }\n\n    public void preenche_animes_manage(){\n        \n    }\n}\n\n", "    public void preenche_animes_manage(){\n        \n    }\n}\n\n"]}
{"filename": "src/app/src/main/java/com/example/duckling_movies/MainActivity.java", "chunked_list": ["package com.example.duckling_movies;\n\nimport androidx.appcompat.app.AppCompatActivity;\n\nimport android.os.Bundle;\nimport android.view.View;\nimport android.widget.Button;\nimport android.widget.TextView;\n\nimport com.google.android.material.textfield.TextInputEditText;", "\nimport com.google.android.material.textfield.TextInputEditText;\nimport com.google.firebase.FirebaseApp;\n\npublic class MainActivity extends AppCompatActivity {\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n\n    }\n\n}"]}
{"filename": "src/app/src/main/java/com/example/duckling_movies/FirstFragment.java", "chunked_list": ["package com.example.duckling_movies;\n\nimport android.os.Bundle;\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.view.ViewGroup;\n\nimport androidx.annotation.NonNull;\nimport androidx.fragment.app.Fragment;\nimport androidx.navigation.fragment.NavHostFragment;", "import androidx.fragment.app.Fragment;\nimport androidx.navigation.fragment.NavHostFragment;\n\nimport com.example.duckling_movies.databinding.FragmentFirstBinding;\n\npublic class FirstFragment extends Fragment {\n\n    private FragmentFirstBinding binding;\n\n    @Override\n    public View onCreateView(\n            LayoutInflater inflater, ViewGroup container,\n            Bundle savedInstanceState\n    ) {\n\n        binding = FragmentFirstBinding.inflate(inflater, container, false);\n        return binding.getRoot();\n\n    }\n", "    public View onCreateView(\n            LayoutInflater inflater, ViewGroup container,\n            Bundle savedInstanceState\n    ) {\n\n        binding = FragmentFirstBinding.inflate(inflater, container, false);\n        return binding.getRoot();\n\n    }\n\n    public void onViewCreated(@NonNull View view, Bundle savedInstanceState) {\n        super.onViewCreated(view, savedInstanceState);\n\n        binding.buttonFirst.setOnClickListener(new View.OnClickListener() {\n            @Override", "    public void onViewCreated(@NonNull View view, Bundle savedInstanceState) {\n        super.onViewCreated(view, savedInstanceState);\n\n        binding.buttonFirst.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view) {\n                NavHostFragment.findNavController(FirstFragment.this)\n                        .navigate(R.id.action_FirstFragment_to_SecondFragment);\n            }\n        });\n    }\n\n    @Override", "    public void onDestroyView() {\n        super.onDestroyView();\n        binding = null;\n    }\n\n}"]}
{"filename": "src/app/src/main/java/com/example/duckling_movies/Anime_feed.java", "chunked_list": ["package com.example.duckling_movies;\n\nimport androidx.appcompat.app.AppCompatActivity;\n\nimport android.content.Intent;\nimport android.os.Bundle;\nimport android.util.Log;\nimport android.view.View;\nimport android.widget.ArrayAdapter;\nimport android.widget.Button;", "import android.widget.ArrayAdapter;\nimport android.widget.Button;\nimport android.widget.ListView;\n\nimport com.google.firebase.database.DataSnapshot;\nimport com.google.firebase.database.DatabaseError;\nimport com.google.firebase.database.DatabaseReference;\nimport com.google.firebase.database.FirebaseDatabase;\nimport com.google.firebase.database.ValueEventListener;\n", "import com.google.firebase.database.ValueEventListener;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class Anime_feed extends AppCompatActivity {\n    Button btn_voltar, btn_gerenciar_animes;\n\n    DatabaseReference animeRef = FirebaseDatabase.getInstance().getReference().child(\"anime\");\n    ListView lv_animes_feed;\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_anime_feed);\n        btn_voltar = findViewById(R.id.btn_voltar);\n        btn_gerenciar_animes = findViewById(R.id.btn_gerenciar_animes);\n        lv_animes_feed = findViewById(R.id.list_view_animes_feed);\n\n        List<String> animeList = new ArrayList<>();\n\n        animeRef.addValueEventListener(new ValueEventListener() {\n            @Override", "            public void onDataChange(DataSnapshot dataSnapshot) {\n                // Limpa a lista de animes antes de adicionar os dados atualizados\n                animeList.clear();\n\n                // Itera sobre todos os filhos do n\u00f3 \"anime\"\n                for (DataSnapshot animeSnapshot : dataSnapshot.getChildren()) {\n                    // Cria um objeto Anime com os dados do snapshot\n                    Anime anime = animeSnapshot.getValue(Anime.class);\n                    // Adiciona o objeto Anime \u00e0 lista de animes\n                    animeList.add(anime.getName() + \"Ano: \" + anime.getYear());\n                }\n                // Aqui voc\u00ea pode fazer qualquer coisa que precisa ser feita ap\u00f3s atualizar a lista\n                // Por exemplo, atualizar a exibi\u00e7\u00e3o da lista em um RecyclerView ou ListView\n            }\n\n            @Override", "            public void onCancelled(DatabaseError databaseError) {\n                // Lida com erros de leitura do banco de dados\n                Log.e(\"TAG\", \"Erro ao ler dados do Firebase\", databaseError.toException());\n            }\n        });\n\n\n        ArrayAdapter<String> adapter = new ArrayAdapter<>(this, android.R.layout.simple_list_item_1, animeList);\n        lv_animes_feed.setAdapter(adapter);\n\n        btn_gerenciar_animes.setOnClickListener(new View.OnClickListener() {\n            @Override", "            public void onClick(View v) {\n                // inicie a activity desejada aqui\n                Intent intent = new Intent(getApplicationContext(), AnimeManage.class);\n                startActivity(intent);\n            }\n        });\n\n        btn_voltar.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                // Chamar a fun\u00e7\u00e3o EnviaDadosUsuario() dentro do onClick()\n                GlobalVariables.RA_atual = null;\n                Intent intent = new Intent(getApplicationContext(), Register.class);\n                startActivity(intent);\n            }\n        });\n    }\n}", "            public void onClick(View v) {\n                // Chamar a fun\u00e7\u00e3o EnviaDadosUsuario() dentro do onClick()\n                GlobalVariables.RA_atual = null;\n                Intent intent = new Intent(getApplicationContext(), Register.class);\n                startActivity(intent);\n            }\n        });\n    }\n}"]}
{"filename": "src/app/src/main/java/com/example/duckling_movies/Register.java", "chunked_list": ["package com.example.duckling_movies;\n\nimport androidx.annotation.NonNull;\nimport androidx.appcompat.app.AppCompatActivity;\n\nimport android.content.Intent;\nimport android.os.Bundle;\nimport android.text.TextUtils;\nimport android.view.View;\nimport android.widget.Button;", "import android.view.View;\nimport android.widget.Button;\nimport android.widget.TextView;\nimport android.widget.Toast;\n\nimport com.google.android.gms.tasks.OnCompleteListener;\nimport com.google.android.gms.tasks.Task;\nimport com.google.android.material.textfield.TextInputEditText;\nimport com.google.firebase.database.DataSnapshot;\nimport com.google.firebase.database.DatabaseError;", "import com.google.firebase.database.DataSnapshot;\nimport com.google.firebase.database.DatabaseError;\nimport com.google.firebase.database.DatabaseReference;\nimport com.google.firebase.database.FirebaseDatabase;\nimport com.google.firebase.database.Query;\nimport com.google.firebase.database.ValueEventListener;\n\npublic class Register extends AppCompatActivity {\n    Button btnEnviarRegistro;\n    TextInputEditText matricula, nome, senha, email;\n    DatabaseReference usuarioRef = FirebaseDatabase.getInstance().getReference().child(\"usuario\");\n    TextView clickHere;\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_register);\n        btnEnviarRegistro = findViewById(R.id.btn_register);\n        matricula = findViewById(R.id.matricula);\n        nome = findViewById(R.id.nome);\n        senha = findViewById(R.id.senha);\n        email = findViewById(R.id.email);\n        clickHere = findViewById(R.id.clickhere);\n        clickHere.setOnClickListener(new View.OnClickListener() {\n            @Override", "            public void onClick(View v) {\n                // inicie a activity desejada aqui\n                Intent intent = new Intent(getApplicationContext(), Login.class);\n                startActivity(intent);\n            }\n        });\n\n        btnEnviarRegistro.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                // Chamar a fun\u00e7\u00e3o EnviaDadosUsuario() dentro do onClick()\n                EnviaDadosUsuario();\n            }\n        });\n    }\n\n    // Definir a fun\u00e7\u00e3o EnviaDadosUsuario() fora do m\u00e9todo onClick", "            public void onClick(View v) {\n                // Chamar a fun\u00e7\u00e3o EnviaDadosUsuario() dentro do onClick()\n                EnviaDadosUsuario();\n            }\n        });\n    }\n\n    // Definir a fun\u00e7\u00e3o EnviaDadosUsuario() fora do m\u00e9todo onClick\n    public void EnviaDadosUsuario() {\n\n        // Obter os dados de entrada do usu\u00e1rio\n        String Nome = nome.getText().toString();\n        String Email = email.getText().toString();\n        String Senha = senha.getText().toString();\n        String Matricula = matricula.getText().toString();\n        // Verificar se os campos de entrada n\u00e3o est\u00e3o vazios", "    public void EnviaDadosUsuario() {\n\n        // Obter os dados de entrada do usu\u00e1rio\n        String Nome = nome.getText().toString();\n        String Email = email.getText().toString();\n        String Senha = senha.getText().toString();\n        String Matricula = matricula.getText().toString();\n        // Verificar se os campos de entrada n\u00e3o est\u00e3o vazios\n        if (TextUtils.isEmpty(Nome)) {\n            nome.setError(\"Por favor, digite o nome!\");\n            nome.requestFocus();\n        }\n        else{\n\n        }", "        if (TextUtils.isEmpty(Nome)) {\n            nome.setError(\"Por favor, digite o nome!\");\n            nome.requestFocus();\n        }\n        else{\n\n        }\n        if (TextUtils.isEmpty(Matricula)) {\n            matricula.setError(\"Por favor, digite o n\u00famero da sua matr\u00edcula!\");\n            matricula.requestFocus();\n        }\n", "        if (TextUtils.isEmpty(Email)) {\n            email.setError(\"Por favor, digite o e-mai!l\");\n            email.requestFocus();\n        }\n\n        if (TextUtils.isEmpty(Senha)) {\n            senha.setError(\"Por favor, digite a senha!\");\n            senha.requestFocus();\n        }\n        if (TextUtils.isEmpty(Matricula)) {\n            matricula.setError(\"Por favor, digite a matricula!\");\n            matricula.requestFocus();\n        }\n\n        // Criar um objeto UserModel com os dados de entrada do usu\u00e1rio\n        Usuario user = new Usuario(Nome, Email, Senha, Matricula);\n\n        Query query = usuarioRef.orderByChild(\"matricula\").equalTo(Matricula);\n        query.addListenerForSingleValueEvent(new ValueEventListener() {\n            @Override", "        if (TextUtils.isEmpty(Matricula)) {\n            matricula.setError(\"Por favor, digite a matricula!\");\n            matricula.requestFocus();\n        }\n\n        // Criar um objeto UserModel com os dados de entrada do usu\u00e1rio\n        Usuario user = new Usuario(Nome, Email, Senha, Matricula);\n\n        Query query = usuarioRef.orderByChild(\"matricula\").equalTo(Matricula);\n        query.addListenerForSingleValueEvent(new ValueEventListener() {\n            @Override", "            public void onDataChange(@NonNull DataSnapshot snapshot) {\n                // Se j\u00e1 existe um usu\u00e1rio com a mesma matr\u00edcula, mostrar um toast de erro\n                if (snapshot.exists()) {\n                    Toast.makeText(Register.this, \"J\u00e1 existe um usu\u00e1rio com a mesma matr\u00edcula\", Toast.LENGTH_SHORT).show();\n                    return; // n\u00e3o sei se precisa do return\n                }\n\n                // Verificar se j\u00e1 existe um usu\u00e1rio com o mesmo nome\n                Query query = usuarioRef.orderByChild(\"nome\").equalTo(Nome);\n                query.addListenerForSingleValueEvent(new ValueEventListener() {\n                    @Override", "                    public void onDataChange(@NonNull DataSnapshot snapshot) {\n                        // Se j\u00e1 existe um usu\u00e1rio com o mesmo nome, mostrar um toast de erro\n                        if (snapshot.exists()) {\n                            Toast.makeText(Register.this, \"J\u00e1 existe um usu\u00e1rio com o mesmo nome\", Toast.LENGTH_SHORT).show();\n                            return;\n                        }\n\n                        // Verificar se j\u00e1 existe um usu\u00e1rio com o mesmo email\n                        Query query = usuarioRef.orderByChild(\"email\").equalTo(Email);\n                        query.addListenerForSingleValueEvent(new ValueEventListener() {\n                            @Override", "                            public void onDataChange(@NonNull DataSnapshot snapshot) {\n                                // Se j\u00e1 existe um usu\u00e1rio com o mesmo email, mostrar um toast de erro\n                                if (snapshot.exists()) {\n                                    Toast.makeText(Register.this, \"J\u00e1 existe um usu\u00e1rio com o mesmo email\", Toast.LENGTH_SHORT).show();\n                                    return;\n                                }\n\n                                // Se os dados do usu\u00e1rio ainda n\u00e3o existem no banco de dados, adicion\u00e1-los\n                                usuarioRef.push().setValue(user).addOnCompleteListener(new OnCompleteListener<Void>() {\n                                    @Override\n                                    public void onComplete(@NonNull Task<Void> task) {", "                                    public void onComplete(@NonNull Task<Void> task) {\n                                        if (task.isSuccessful()) {\n                                            Toast.makeText(Register.this, \"Dados do usu\u00e1rio salvos com sucesso\", Toast.LENGTH_SHORT).show();\n                                        } else {\n                                            Toast.makeText(Register.this, \"Erro ao salvar os dados do usu\u00e1rio\", Toast.LENGTH_SHORT).show();\n                                        }\n                                    }\n                                });\n                            }\n\n                            @Override", "                            public void onCancelled(@NonNull DatabaseError error) {\n                                Toast.makeText(Register.this, \"Erro ao verificar se o email j\u00e1 existe\", Toast.LENGTH_SHORT).show();\n                            }\n                        });\n                    }\n\n                    @Override\n                    public void onCancelled(@NonNull DatabaseError error) {\n                        Toast.makeText(Register.this, \"Erro ao verificar se o nome j\u00e1 existe\", Toast.LENGTH_SHORT).show();\n                    }\n                });\n            }\n\n            @Override", "            public void onCancelled(@NonNull DatabaseError error) {\n                Toast.makeText(Register.this, \"Erro ao verificar se a matr\u00edcula j\u00e1 existe\", Toast.LENGTH_SHORT).show();\n            }\n        });\n\n    }\n\n\n\n\n}\n\n"]}
{"filename": "src/app/src/main/java/com/example/duckling_movies/GlobalVariables.java", "chunked_list": ["package com.example.duckling_movies;\n\npublic class GlobalVariables {\n    public static String RA_atual;\n}"]}
{"filename": "src/app/src/main/java/com/example/duckling_movies/PostAnimes.java", "chunked_list": ["package com.example.duckling_movies;\n\nimport androidx.annotation.NonNull;\nimport androidx.appcompat.app.AppCompatActivity;\n\nimport android.content.Intent;\nimport android.os.Bundle;\nimport android.text.TextUtils;\nimport android.view.View;\nimport android.widget.Button;", "import android.view.View;\nimport android.widget.Button;\nimport android.widget.Toast;\n\nimport com.google.firebase.FirebaseApp;\nimport com.google.firebase.database.DatabaseReference;\nimport com.google.firebase.database.FirebaseDatabase;\nimport com.google.android.gms.tasks.OnCompleteListener;\nimport com.google.android.gms.tasks.Task;\nimport com.google.android.material.textfield.TextInputEditText;", "import com.google.android.gms.tasks.Task;\nimport com.google.android.material.textfield.TextInputEditText;\nimport com.google.firebase.database.DataSnapshot;\nimport com.google.firebase.database.DatabaseError;\nimport com.google.firebase.database.DatabaseReference;\nimport com.google.firebase.database.FirebaseDatabase;\nimport com.google.firebase.database.Query;\nimport com.google.firebase.database.ValueEventListener;\n\npublic class PostAnimes extends AppCompatActivity {\n    Button btn_cadastrar, btn_voltar;\n\n    TextInputEditText name, year;\n\n    DatabaseReference animeRef = FirebaseDatabase.getInstance().getReference().child(\"anime\");\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_post_animes);\n        FirebaseApp.initializeApp(this);\n\n        btn_cadastrar = findViewById(R.id.btn_cadastrar);\n        btn_voltar = findViewById(R.id.btn_voltar);\n        name = findViewById(R.id.nome_anime);\n\n        year = findViewById(R.id.ano_anime);\n\n        btn_cadastrar.setOnClickListener(new View.OnClickListener() {\n            @Override", "\npublic class PostAnimes extends AppCompatActivity {\n    Button btn_cadastrar, btn_voltar;\n\n    TextInputEditText name, year;\n\n    DatabaseReference animeRef = FirebaseDatabase.getInstance().getReference().child(\"anime\");\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_post_animes);\n        FirebaseApp.initializeApp(this);\n\n        btn_cadastrar = findViewById(R.id.btn_cadastrar);\n        btn_voltar = findViewById(R.id.btn_voltar);\n        name = findViewById(R.id.nome_anime);\n\n        year = findViewById(R.id.ano_anime);\n\n        btn_cadastrar.setOnClickListener(new View.OnClickListener() {\n            @Override", "            public void onClick(View v) {\n                insere_anime();\n            }\n        });\n\n        btn_voltar.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                // inicie a activity desejada aqui\n                Intent intent = new Intent(getApplicationContext(), AnimeManage.class);\n                startActivity(intent);\n            }\n        });\n\n    }", "    public void insere_anime() {\n        // Obter os dados de entrada do usu\u00e1rio\n        String Nome = name.getText().toString();\n        String ano = year.getText().toString();\n\n        // Verificar se os campos de entrada n\u00e3o est\u00e3o vazios\n        if (TextUtils.isEmpty(Nome)) {\n            name.setError(\"Por favor, digite o nome!\");\n            name.requestFocus();\n        }\n", "        if (TextUtils.isEmpty(ano)) {\n            year.setError(\"Por favor, digite o ano do seu anime!\");\n            year.requestFocus();\n        }\n\n\n\n        // Criar um objeto UserModel com os dados de entrada do usu\u00e1rio\n        Anime anime = new Anime(name.getText().toString(), Integer.parseInt(year.getText().toString()) , GlobalVariables.RA_atual);\n\n        Query query_nome = animeRef.orderByChild(\"nome\").equalTo(anime.getName());\n        Query query_ano = animeRef.orderByChild(\"ano\").equalTo(anime.getYear());\n        query_nome.addListenerForSingleValueEvent(new ValueEventListener() {\n            @Override", "            public void onDataChange(@NonNull DataSnapshot snapshot) {\n                // Se j\u00e1 existe um anime com o mesmo nome, mostrar um toast de erro\n                if (snapshot.exists()) {\n                    query_ano.addListenerForSingleValueEvent(new ValueEventListener() {\n                        @Override\n                        public void onDataChange(@NonNull DataSnapshot snapshot) {\n                            if (snapshot.exists()) {\n                                Toast.makeText(PostAnimes.this, \"J\u00e1 existe um anime com mesmo nome e mesmo ano\", Toast.LENGTH_SHORT).show();\n                                return;\n                            }\n                        }\n                        @Override", "                        public void onCancelled(@NonNull DatabaseError error) {\n                            Toast.makeText(PostAnimes.this, \"Erro ao verificar se o ano j\u00e1 existe ao mesmo tempo\", Toast.LENGTH_SHORT).show();\n                        }\n                    });\n                }\n\n                // Se os dados do usu\u00e1rio ainda n\u00e3o existem no banco de dados, adicion\u00e1-los\n                animeRef.push().setValue(anime).addOnCompleteListener(new OnCompleteListener<Void>() {\n                    @Override\n                    public void onComplete(@NonNull Task<Void> task) {\n                        if (task.isSuccessful()) {\n                            Toast.makeText(PostAnimes.this, \"Dados do anime salvos com sucesso\", Toast.LENGTH_SHORT).show();\n                        } else {\n                            Toast.makeText(PostAnimes.this, \"Erro ao salvar os dados do anime\", Toast.LENGTH_SHORT).show();\n                        }\n                    }\n                });\n            }\n\n            @Override", "                    public void onComplete(@NonNull Task<Void> task) {\n                        if (task.isSuccessful()) {\n                            Toast.makeText(PostAnimes.this, \"Dados do anime salvos com sucesso\", Toast.LENGTH_SHORT).show();\n                        } else {\n                            Toast.makeText(PostAnimes.this, \"Erro ao salvar os dados do anime\", Toast.LENGTH_SHORT).show();\n                        }\n                    }\n                });\n            }\n\n            @Override", "            public void onCancelled(@NonNull DatabaseError error) {\n                Toast.makeText(PostAnimes.this, \"Erro ao verificar se o nome j\u00e1 existe ao mesmo tempo\", Toast.LENGTH_SHORT).show();\n            }\n        });\n    }\n\n}\n"]}
{"filename": "src/app/src/main/java/com/example/duckling_movies/Anime.java", "chunked_list": ["package com.example.duckling_movies;\n\nimport java.util.ArrayList;\n\npublic class Anime {\n    private String name;\n\n    private int year;\n\n    private int curtida_qnt;\n\n    private ArrayList<String> pessoas_curtiram;\n    private String RA_resp;\n\n    public Anime() {\n        // Construtor sem argumentos necess\u00e1rio para o Firebase Realtime Database\n    }\n    public Anime(String name, int year, String RA_resp) {\n        this.name = name;\n        this.year = year;\n        this.RA_resp = RA_resp;\n        this.curtida_qnt = 0;\n    }\n\n    public Anime(String name, int year, String RA_resp, int curtida_qnt,  ArrayList<String> pessoas_curtiram) {\n        this.name = name;\n        this.year = year;\n        this.RA_resp = RA_resp;\n        this.curtida_qnt = curtida_qnt;\n        this.pessoas_curtiram = pessoas_curtiram;\n    }\n\n", "    public int getYear(){\n        return year;\n    }\n\n    public void setYear(int year) {\n        this.year = year;\n    }\n\n    public String getName() {\n        return name;\n    }\n", "    public String getName() {\n        return name;\n    }\n\n    public void setName(String name) {\n        this.name = name;\n    }\n\n    public String getRA_resp() {\n        return RA_resp;\n    }\n", "    public String getRA_resp() {\n        return RA_resp;\n    }\n\n    public void setRA_resp(String RA_resp) {\n        this.RA_resp = RA_resp;\n    }\n\n    public int getCurtida_qnt(){\n        return curtida_qnt;\n    }\n", "    public int getCurtida_qnt(){\n        return curtida_qnt;\n    }\n\n    public void setCurtida_qnt(int curtida_qnt) {\n        this.curtida_qnt = curtida_qnt;\n    }\n\n    public ArrayList<String> getPessoas_curtiram(){\n        return pessoas_curtiram;\n    }\n", "    public void setPessoas_curtiram ( ArrayList<String> pessoas_curtiram) {\n        this.pessoas_curtiram = pessoas_curtiram;\n    }\n\n\n}"]}
{"filename": "src/app/src/main/java/com/example/duckling_movies/Usuario.java", "chunked_list": ["package com.example.duckling_movies;\n\nimport com.google.android.material.textfield.TextInputEditText;\n\npublic class Usuario {\n    private String name;\n    private String email;\n    private String password;\n    private String matricula;\n\n    public Usuario() {\n        // Construtor sem argumentos necess\u00e1rio para o Firebase Realtime Database\n    }\n    public Usuario(String name, String email, String password, String matricula) {\n        this.name = name;\n        this.email = email;\n        this.password = password;\n        this.matricula = matricula;\n    }\n\n", "    public String getMatricula(){\n        return matricula;\n    }\n    public void setMatricula(String matricula) {\n        this.name = matricula;\n    }\n    public String getName() {\n        return name;\n    }\n\n    public void setName(String name) {\n        this.name = name;\n    }\n", "    public void setName(String name) {\n        this.name = name;\n    }\n\n    public String getEmail() {\n        return email;\n    }\n\n    public void setEmail(String email) {\n        this.email = email;\n    }\n", "    public void setEmail(String email) {\n        this.email = email;\n    }\n\n    public String getPassword() {\n        return password;\n    }\n\n    public void setPassword(String password) {\n        this.password = password;\n    }\n}", "    public void setPassword(String password) {\n        this.password = password;\n    }\n}"]}
{"filename": "src/app/src/androidTest/java/com/example/duckling_movies/ExampleInstrumentedTest.java", "chunked_list": ["package com.example.duckling_movies;\n\nimport android.content.Context;\n\nimport androidx.test.platform.app.InstrumentationRegistry;\nimport androidx.test.ext.junit.runners.AndroidJUnit4;\n\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\n", "import org.junit.runner.RunWith;\n\nimport static org.junit.Assert.*;\n\n/**\n * Instrumented test, which will execute on an Android device.\n *\n * @see <a href=\"http://d.android.com/tools/testing\">Testing documentation</a>\n */\n@RunWith(AndroidJUnit4.class)\npublic class ExampleInstrumentedTest {\n    @Test", " */\n@RunWith(AndroidJUnit4.class)\npublic class ExampleInstrumentedTest {\n    @Test\n    public void useAppContext() {\n        // Context of the app under test.\n        Context appContext = InstrumentationRegistry.getInstrumentation().getTargetContext();\n        assertEquals(\"com.example.duckling_movies\", appContext.getPackageName());\n    }\n}"]}
