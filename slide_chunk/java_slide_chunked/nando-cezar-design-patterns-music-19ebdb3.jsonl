{"filename": "br/edu/ifba/inf011/Aplicacao.java", "chunked_list": ["package br.edu.ifba.inf011;\n\nimport java.io.IOException;\nimport java.util.Random;\n\nimport br.edu.ifba.inf011.model.iterator.Player;\nimport br.edu.ifba.inf011.model.iterator.PlayerMode;\nimport br.edu.ifba.inf011.model.composite.Playlist;\nimport br.edu.ifba.inf011.model.composite.PlaylistItem;\nimport br.edu.ifba.inf011.model.iterator.PlaylistIterator;", "import br.edu.ifba.inf011.model.composite.PlaylistItem;\nimport br.edu.ifba.inf011.model.iterator.PlaylistIterator;\nimport br.edu.ifba.inf011.model.decorator.MusicaBase;\nimport br.edu.ifba.inf011.model.observer.PlayerListener;\nimport br.edu.ifba.inf011.model.resources.ResourceLoader;\n\n/* Concrete Observer: Observer pattern */\npublic class Aplicacao implements PlayerListener {\n\n\tprivate final Player player;\n\n\tpublic Aplicacao() {\n\t\tthis.player = new Player();\n\t\tthis.player.addListeners(this);\n\t}\n", "\tpublic static void main(String[] args) throws IOException, InterruptedException {\n\t\tAplicacao app = new Aplicacao();\n//\t\tapp.musica();\n\t\tapp.player();\n\t}\n\n\tprivate void musica() throws IOException {\n\n\t\tvar resource = ResourceLoader.instance();\n\t\tMusicaBase musicaComNotaLetraOriginal = resource.createMusicaComNotaLetra(\"AndreaDorea\");\n\t\tMusicaBase musicaComNotaLetraOriginalTraduzida = resource.createMusicaComNotaLetraOriginalTraduzida(\n\t\t\t\t\"GodSaveTheQueen\", \"pt\");\n\t\tMusicaBase musicaSomenteComNota = resource.createMusicaSomenteComNota(\"GodSaveTheQueen\");\n\n\t\tPlaylist playlist1 = new Playlist(\"Minha playlist 1\");\n\t\tplaylist1.insert(musicaSomenteComNota);\n\t\tplaylist1.insert(musicaComNotaLetraOriginalTraduzida);\n\n\t\tPlaylist playlist2 = new Playlist(\"Minha playlist 2\");\n\t\tplaylist2.insert(musicaComNotaLetraOriginal);\n\n\t\tplaylist1.insert(playlist2);\n\n\t\tSystem.out.println(playlist1.execute());\n\t}\n\n\tprivate void player() throws IOException, InterruptedException {\n\n\t\tvar resource = ResourceLoader.instance();\n\t\tMusicaBase musicaComNotaLetraOriginal = resource.createMusicaComNotaLetra(\"AndreaDorea\");\n\t\tMusicaBase musicaComNotaLetraOriginalTraduzida = resource.createMusicaComNotaLetraOriginalTraduzida(\n\t\t\t\t\"GodSaveTheQueen\", \"pt\");\n\t\tMusicaBase musicaSomenteComNota = resource.createMusicaSomenteComNota(\"GodSaveTheQueen\");\n\n\t\tPlaylist playlist1 = new Playlist(\"Minha playlist 1\");\n\t\tplaylist1.insert(musicaSomenteComNota);\n\t\tplaylist1.insert(musicaComNotaLetraOriginalTraduzida);\n\n\t\tPlaylist playlist2 = new Playlist(\"Minha playlist 2\");\n\t\tplaylist2.insert(musicaComNotaLetraOriginal);\n\n\t\tplaylist1.insert(playlist2);\n\n\t\tplayer.addItem(playlist1);\n\t\tplayer.addItem(playlist2);\n\t\tplayer.addItem(musicaSomenteComNota);\n\t\tplayer.addItem(musicaComNotaLetraOriginal);\n\n\t\tPlaylistIterator iterator = player.createIterator();\n", "\t\twhile (iterator.temProximo()) {\n\n\t\t\tPlaylistItem playlistItem = iterator.proximo();\n\t\t\tString content = playlistItem.execute();\n\n\t\t\tSystem.out.println(content);\n\n\t\t\tThread.sleep(1000);\n\t\t\tint numero = new Random().nextInt(2,8);\n\n\t\t\tif (numero % 5 == 0){\n\t\t\t\tplayer.setMode(PlayerMode.RepeatAll);\n\t\t\t\titerator = player.createIterator();", "\t\t\tif (numero % 5 == 0){\n\t\t\t\tplayer.setMode(PlayerMode.RepeatAll);\n\t\t\t\titerator = player.createIterator();\n\t\t\t}else if (numero % 7 == 0){\n\t\t\t\tplayer.setMode(PlayerMode.RandomMode);\n\t\t\t\titerator = player.createIterator();\n\t\t\t}\n\t\t}\n\t}\n\n\t@Override", "\tpublic void onChangeMode() {\n\t\tSystem.out.printf(\"\\n::::::::::::\\nModo: %s, est\u00e1 ativado!\\n\", player.getMode());\n\t}\n}\n"]}
{"filename": "br/edu/ifba/inf011/model/observer/PlayerListener.java", "chunked_list": ["package br.edu.ifba.inf011.model.observer;\n\n/* Observer: Observer pattern */\n@FunctionalInterface\npublic interface PlayerListener {\n    void onChangeMode();\n}\n"]}
{"filename": "br/edu/ifba/inf011/model/decorator/MusicaNome.java", "chunked_list": ["package br.edu.ifba.inf011.model.decorator;\n\n\n/* Concrete Component: Decorator pattern */\n/* Leaf: Composite pattern */\npublic class MusicaNome implements Musica {\n\n\tprivate final String nome;\n\tprivate Integer linha;\n\n\tpublic MusicaNome(String nome) {\n\t\tthis.nome = nome;\n\t\tthis.reset();\n\t}\n\n\t@Override", "\tpublic String getNome() {\n\t\treturn this.nome;\n\t}\n\n\t@Override\n\tpublic void reset() {\n\t\tthis.linha = 0;\n\t}\n\n\t@Override\n\tpublic Boolean finish() {\n\t\treturn this.linha > 0;\n\t}\n\n\t@Override", "\tpublic Boolean finish() {\n\t\treturn this.linha > 0;\n\t}\n\n\t@Override\n\tpublic String play() {\n\t\tif (!this.finish()) {\n\t\t\tthis.linha++;\n\t\t\treturn \"\\n---------: \\t\\t\" + this.getNome() + \"\\n\";\n\t\t}\n\t\treturn this.execute();\n\t}\n\n\t@Override", "\tpublic String execute() {\n\t\treturn \"\";\n\t}\n\n}\n"]}
{"filename": "br/edu/ifba/inf011/model/decorator/MusicaLetraOriginal.java", "chunked_list": ["package br.edu.ifba.inf011.model.decorator;\n\nimport java.io.IOException;\nimport java.util.List;\n\n/* Concrete Decorator: Decorator pattern */\n/* Leaf: Composite pattern */\npublic class MusicaLetraOriginal extends MusicaBase {\n\n\tprivate List<String> letraOriginal;\n\n\tpublic MusicaLetraOriginal(Musica componente) throws IOException {\n\t\tsuper(componente);\n\t\tthis.reset();\n\t\tthis.setLetraOriginal();\n\t}\n", "\tpublic void setLetraOriginal() throws IOException {\n\t\tthis.letraOriginal = resourceLoader.loadLetra(getNome());\n\t}\n\n\tpublic Boolean finish() {\n\t\treturn this.linha >= this.letraOriginal.size();\n\t}\n\n\tpublic String play() {\n\t\treturn this.component.play() + \"\\n\" + this.letraOriginal.get(this.linha++);\n\t}\n\n\n}\n", "\tpublic String play() {\n\t\treturn this.component.play() + \"\\n\" + this.letraOriginal.get(this.linha++);\n\t}\n\n\n}\n"]}
{"filename": "br/edu/ifba/inf011/model/decorator/MusicaLetraTraduzida.java", "chunked_list": ["package br.edu.ifba.inf011.model.decorator;\n\nimport java.io.IOException;\nimport java.util.List;\n\n/* Concrete Decorator: Decorator pattern */\n/* Leaf: Composite pattern */\npublic class MusicaLetraTraduzida extends MusicaBase {\n\n\tprivate List<String> traducao;\n\n\tprivate final String extensao;\n\n\tpublic MusicaLetraTraduzida(Musica componente, String extensao) throws IOException {\n\t\tsuper(componente);\n\t\tthis.extensao = extensao;\n\t\tthis.reset();\n\t\tthis.setTraducao();\n\t}\n", "\tpublic void setTraducao() throws IOException {\n\t\tthis.traducao = resourceLoader.loadTraducao(getNome(), extensao);\n\t}\n\n\tpublic Boolean finish() {\n\t\treturn this.linha >= this.traducao.size();\n\t}\n\n\tpublic String play() {\n\t\treturn this.component.play() + \"\\n\" + this.traducao.get(this.linha++);\n\t}\n\n}\n", "\tpublic String play() {\n\t\treturn this.component.play() + \"\\n\" + this.traducao.get(this.linha++);\n\t}\n\n}\n"]}
{"filename": "br/edu/ifba/inf011/model/decorator/MusicaBase.java", "chunked_list": ["package br.edu.ifba.inf011.model.decorator;\n\nimport br.edu.ifba.inf011.model.resources.ResourceLoader;\n\n/* Decorator: Decorator pattern */\npublic abstract class MusicaBase implements Musica {\n\n\tprotected Musica component;\n\tprotected ResourceLoader resourceLoader;\n\tprotected int linha;\n\n\tpublic MusicaBase(Musica component) {\n\t\tthis.component = component;\n\t\tthis.resourceLoader = ResourceLoader.instance();\n\t}\n\n\t@Override", "\tpublic String getNome() {\n\t\treturn component.getNome();\n\t}\n\n\t@Override\n\tpublic String execute() {\n\t\treset();\n\t\tStringBuilder builder = new StringBuilder();\n\t\twhile (!finish()) {\n\t\t\tbuilder.append(play());\n\t\t}\n\t\treturn builder.toString();\n\t}\n\n\t@Override", "\t\twhile (!finish()) {\n\t\t\tbuilder.append(play());\n\t\t}\n\t\treturn builder.toString();\n\t}\n\n\t@Override\n\tpublic void reset() {\n\t\tthis.linha = 0;\n\t\tcomponent.reset();\n\t}\n}\n"]}
{"filename": "br/edu/ifba/inf011/model/decorator/Musica.java", "chunked_list": ["package br.edu.ifba.inf011.model.decorator;\n\nimport br.edu.ifba.inf011.model.composite.PlaylistItem;\n\n/* Component: Decorator pattern */\npublic interface Musica extends PlaylistItem {\n\n\tvoid reset();\n\n\tBoolean finish();\n\n\tString play();\n}\n"]}
{"filename": "br/edu/ifba/inf011/model/decorator/MusicaNotas.java", "chunked_list": ["package br.edu.ifba.inf011.model.decorator;\n\nimport java.io.IOException;\nimport java.util.List;\n\n/* Concrete Decorator: Decorator pattern */\n/* Leaf: Composite pattern */\npublic class MusicaNotas extends MusicaBase {\n\n\tprivate List<String> notas;\n\n\tpublic MusicaNotas(Musica componente) throws IOException {\n\t\tsuper(componente);\n\t\tthis.reset();\n\t\tthis.setNotas();\n\t}\n", "\tpublic void setNotas() throws IOException {\n\t\tthis.notas = resourceLoader.loadNotas(getNome());\n\t}\n\n\tpublic Boolean finish() {\n\t\treturn this.linha >= this.notas.size();\n\t}\n\n\tpublic String play() {\n\t\treturn component.play() + \"\\n\" + this.notas.get(this.linha++);\n\t}\n\n}\n", "\tpublic String play() {\n\t\treturn component.play() + \"\\n\" + this.notas.get(this.linha++);\n\t}\n\n}\n"]}
{"filename": "br/edu/ifba/inf011/model/composite/PlaylistItem.java", "chunked_list": ["package br.edu.ifba.inf011.model.composite;\n\n/* Component: Composite pattern */\npublic interface PlaylistItem {\n\tString getNome();\n\tString execute();\n}\n"]}
{"filename": "br/edu/ifba/inf011/model/composite/Playlist.java", "chunked_list": ["package br.edu.ifba.inf011.model.composite;\n\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.Random;\n\n/* Composite: Composite pattern */\npublic class Playlist implements PlaylistItem {\n\n\tprivate final String nome;\n\tprivate final List<PlaylistItem> items;\n\n\tpublic Playlist(String nome) {\n\t\tthis.nome = nome;\n\t\tthis.items = new ArrayList<>();\n\t}\n", "\tpublic void insert(PlaylistItem item) {\n\t\tthis.items.add(item);\n\t}\n\n\tpublic void remove(PlaylistItem item) {\n\t\tthis.items.remove(item);\n\t}\n\n\tpublic List<PlaylistItem> getChildren() {\n\t\treturn this.items;\n\t}\n\n\t@Override", "\tpublic String getNome() {\n\t\treturn this.nome;\n\t}\n\n\tpublic PlaylistItem randomize() {\n\t\tint random = new Random().nextInt(items.size());\n\t\tPlaylistItem playlistItem = items.get(random);\n\t\tif (playlistItem instanceof Playlist) {\n\t\t\treturn ((Playlist) playlistItem).randomize();\n\t\t}\n\t\treturn playlistItem;\n\t}\n\n\t@Override", "\tpublic String execute() {\n\t\tStringBuffer str = new StringBuffer();\n\t\tfor (PlaylistItem item : items) {\n\t\t\tstr.append(item.execute());\n\t\t}\n\t\treturn str.toString();\n\t}\n\n}\n"]}
{"filename": "br/edu/ifba/inf011/model/iterator/PlayerIterable.java", "chunked_list": ["package br.edu.ifba.inf011.model.iterator;\n\nimport br.edu.ifba.inf011.model.composite.PlaylistItem;\n\n/* Aggregate: Iterator pattern */\npublic interface PlayerIterable {\n\tvoid addItem(PlaylistItem item);\n\tvoid removeItem(PlaylistItem item);\n\tPlaylistIterator createIterator();\n}\n"]}
{"filename": "br/edu/ifba/inf011/model/iterator/RandomModeIterator.java", "chunked_list": ["package br.edu.ifba.inf011.model.iterator;\n\nimport java.util.List;\nimport java.util.Random;\n\nimport br.edu.ifba.inf011.model.composite.Playlist;\nimport br.edu.ifba.inf011.model.composite.PlaylistItem;\nimport br.edu.ifba.inf011.model.iterator.PlaylistIterator;\n\n/* Concrete Iterator: Iterator pattern */\npublic class RandomModeIterator implements PlaylistIterator {\n\n\tprivate final Random random;\n\tprivate final List<PlaylistItem> items;\n\n\tpublic RandomModeIterator(List<PlaylistItem> items) {\n\t\tthis.items = items;\n\t\tthis.random = new Random();\n\t}\n\n\t@Override", "\n/* Concrete Iterator: Iterator pattern */\npublic class RandomModeIterator implements PlaylistIterator {\n\n\tprivate final Random random;\n\tprivate final List<PlaylistItem> items;\n\n\tpublic RandomModeIterator(List<PlaylistItem> items) {\n\t\tthis.items = items;\n\t\tthis.random = new Random();\n\t}\n\n\t@Override", "\tpublic boolean temProximo() {\n\t\treturn true;\n\t}\n\n\t@Override\n\tpublic PlaylistItem proximo() {\n\t\tPlaylistItem playlistItem = items.get(nextRandom());\n\t\tif (playlistItem instanceof Playlist) {\n\t\t\treturn ((Playlist) playlistItem).randomize();\n\t\t}\n\t\treturn playlistItem;\n\t}\n\tprivate int nextRandom() {\n\t\treturn random.nextInt(this.items.size());\n\t}\n}\n"]}
{"filename": "br/edu/ifba/inf011/model/iterator/PlayerMode.java", "chunked_list": ["package br.edu.ifba.inf011.model.iterator;\n\nimport java.util.List;\n\nimport br.edu.ifba.inf011.model.composite.PlaylistItem;\n\npublic enum PlayerMode {\n\t\n\tPlayerAll {\n\t\t@Override\n\t\tpublic PlaylistIterator createIterator(List<PlaylistItem> items) {\n\t\t\treturn new PlayerAllIterator(items);\n\t\t}\n\t}, RepeatAll {\n\t\t@Override", "\t\tpublic PlaylistIterator createIterator(List<PlaylistItem> items) {\n\t\t\treturn new PlayerAllIterator(items);\n\t\t}\n\t}, RepeatAll {\n\t\t@Override\n\t\tpublic PlaylistIterator createIterator(List<PlaylistItem> items) {\n\t\t\treturn new RepeatAllIterator(items);\n\t\t}\n\t}, RandomMode {\n\t\t@Override\n\t\tpublic PlaylistIterator createIterator(List<PlaylistItem> items) {\n\t\t\treturn new RandomModeIterator(items);\n\t\t}\n\t};\n", "\t\tpublic PlaylistIterator createIterator(List<PlaylistItem> items) {\n\t\t\treturn new RandomModeIterator(items);\n\t\t}\n\t};\n\n\tpublic abstract PlaylistIterator createIterator(List<PlaylistItem> items);\n}\n"]}
{"filename": "br/edu/ifba/inf011/model/iterator/PlayerAllIterator.java", "chunked_list": ["package br.edu.ifba.inf011.model.iterator;\n\nimport java.util.List;\n\nimport br.edu.ifba.inf011.model.composite.PlaylistItem;\nimport br.edu.ifba.inf011.model.iterator.PlaylistIterator;\n\n/* Concrete Iterator: Iterator pattern */\npublic class PlayerAllIterator implements PlaylistIterator {\n    private final List<PlaylistItem> items;\n    private Integer index;\n\n    public PlayerAllIterator(List<PlaylistItem> items) {\n        this.items = items;\n        this.reset();\n    }\n\n    @Override", "public class PlayerAllIterator implements PlaylistIterator {\n    private final List<PlaylistItem> items;\n    private Integer index;\n\n    public PlayerAllIterator(List<PlaylistItem> items) {\n        this.items = items;\n        this.reset();\n    }\n\n    @Override\n    public boolean temProximo() {\n        return this.index < this.items.size();\n    }\n\n    @Override", "    public boolean temProximo() {\n        return this.index < this.items.size();\n    }\n\n    @Override\n    public PlaylistItem proximo() {\n        if(this.temProximo()) return items.get(index++);\n        return null;\n    }\n\n    public void reset() {\n        this.index = 0;\n    }\n}\n", "    public void reset() {\n        this.index = 0;\n    }\n}\n"]}
{"filename": "br/edu/ifba/inf011/model/iterator/RepeatAllIterator.java", "chunked_list": ["package br.edu.ifba.inf011.model.iterator;\n\nimport java.util.List;\n\nimport br.edu.ifba.inf011.model.composite.PlaylistItem;\nimport br.edu.ifba.inf011.model.iterator.PlaylistIterator;\n\n/* Concrete Iterator: Iterator pattern */\npublic class RepeatAllIterator implements PlaylistIterator {\n\n\tprivate final List<PlaylistItem> items;\n\tprivate Integer index;\n\n\tpublic RepeatAllIterator(List<PlaylistItem> items) {\n\t\tthis.items = items;\n\t\tthis.reset();\n\t}\n\n\t@Override", "public class RepeatAllIterator implements PlaylistIterator {\n\n\tprivate final List<PlaylistItem> items;\n\tprivate Integer index;\n\n\tpublic RepeatAllIterator(List<PlaylistItem> items) {\n\t\tthis.items = items;\n\t\tthis.reset();\n\t}\n\n\t@Override", "\tpublic boolean temProximo() {\n\t\treturn true;\n\t}\n\n\t@Override\n\tpublic PlaylistItem proximo() {\n\t\tif (index >= items.size()) this.reset();\n\t\treturn items.get(index++);\n\t}\n\n\tpublic void reset() {\n\t\tthis.index = 0;\n\t}\n}\n", "\tpublic void reset() {\n\t\tthis.index = 0;\n\t}\n}\n"]}
{"filename": "br/edu/ifba/inf011/model/iterator/PlaylistIterator.java", "chunked_list": ["package br.edu.ifba.inf011.model.iterator;\n\nimport br.edu.ifba.inf011.model.composite.PlaylistItem;\n\n/* Iterator: Iterator pattern */\npublic interface PlaylistIterator {\n    boolean temProximo();\n    PlaylistItem proximo();\n}\n"]}
{"filename": "br/edu/ifba/inf011/model/iterator/Player.java", "chunked_list": ["package br.edu.ifba.inf011.model.iterator;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport br.edu.ifba.inf011.model.composite.PlaylistItem;\nimport br.edu.ifba.inf011.model.observer.PlayerListener;\n\n\n/* Concrete Aggregate: Iterator pattern */", "\n/* Concrete Aggregate: Iterator pattern */\n/* Subject: Observer pattern */\npublic class Player implements PlayerIterable {\n\n\tprivate final List<PlaylistItem> items;\n\tprivate final List<PlayerListener> listeners;\n\tprivate PlayerMode mode;\n\n\tpublic Player() {\n\t\tthis.items = new ArrayList<>();\n\t\tthis.listeners = new ArrayList<>();\n\t\tthis.mode = PlayerMode.PlayerAll;\n\t}\n\n\t@Override", "\tpublic void addItem(PlaylistItem item) {\n\t\tthis.items.add(item);\n\t}\n\n\t@Override\n\tpublic void removeItem(PlaylistItem item) {\n\t\tthis.items.remove(item);\n\t}\n\n\t@Override\n\tpublic PlaylistIterator createIterator() {\n\t\treturn this.mode.createIterator(items);\n\t}\n", "\tpublic PlaylistIterator createIterator() {\n\t\treturn this.mode.createIterator(items);\n\t}\n\n\tpublic void setMode(PlayerMode mode) {\n\t\tthis.mode = mode;\n\t\tnotificar();\n\t}\n\n\tpublic PlayerMode getMode(){\n\t\treturn this.mode;\n\t}\n", "\tpublic PlayerMode getMode(){\n\t\treturn this.mode;\n\t}\n\n\tpublic void addListeners(PlayerListener listener) {\n\t\tthis.listeners.add(listener);\n\t}\n\n\tpublic void removeListener(PlayerListener listener) {\n\t\tthis.listeners.remove(listener);\n\t}\n", "\tpublic void removeListener(PlayerListener listener) {\n\t\tthis.listeners.remove(listener);\n\t}\n\n\tpublic void notificar() {\n\t\tfor (PlayerListener listener : listeners) {\n\t\t\tlistener.onChangeMode();\n\t\t}\n\t}\n\n}\n"]}
{"filename": "br/edu/ifba/inf011/model/resources/ResourceLoader.java", "chunked_list": ["package br.edu.ifba.inf011.model.resources;\n\nimport java.io.IOException;\nimport java.nio.charset.StandardCharsets;\nimport java.nio.file.Files;\nimport java.nio.file.Path;\nimport java.nio.file.Paths;\nimport java.util.ArrayList;\nimport java.util.List;\n", "import java.util.List;\n\nimport br.edu.ifba.inf011.model.decorator.Musica;\nimport br.edu.ifba.inf011.model.decorator.MusicaNome;\nimport br.edu.ifba.inf011.model.decorator.MusicaBase;\nimport br.edu.ifba.inf011.model.decorator.MusicaLetraOriginal;\nimport br.edu.ifba.inf011.model.decorator.MusicaLetraTraduzida;\nimport br.edu.ifba.inf011.model.decorator.MusicaNotas;\n\npublic class ResourceLoader {\n\n\tprivate static final String DIR_NAME =\n\t\t\tSystem.getProperty(\"user.dir\") + \"\\\\br\\\\edu\\\\ifba\\\\inf011\\\\model\\\\resources\\\\data\\\\\";\n\n\tprivate static ResourceLoader loader = null;\n", "\npublic class ResourceLoader {\n\n\tprivate static final String DIR_NAME =\n\t\t\tSystem.getProperty(\"user.dir\") + \"\\\\br\\\\edu\\\\ifba\\\\inf011\\\\model\\\\resources\\\\data\\\\\";\n\n\tprivate static ResourceLoader loader = null;\n\n\tpublic static ResourceLoader instance() {\n\t\tif (ResourceLoader.loader == null) {\n\t\t\tResourceLoader.loader = new ResourceLoader();\n\t\t}\n\t\treturn ResourceLoader.loader;\n\n\t}\n", "\tpublic static ResourceLoader instance() {\n\t\tif (ResourceLoader.loader == null) {\n\t\t\tResourceLoader.loader = new ResourceLoader();\n\t\t}\n\t\treturn ResourceLoader.loader;\n\n\t}\n\n\tpublic MusicaBase createMusicaSomenteComNota(String nome) throws IOException {\n\t\tMusica musica = new MusicaNome(nome);\n\t\tMusicaNotas musicaSomenteComNota = new MusicaNotas(musica);\n\t\treturn musicaSomenteComNota;\n\t}\n", "\tpublic MusicaBase createMusicaSomenteComNota(String nome) throws IOException {\n\t\tMusica musica = new MusicaNome(nome);\n\t\tMusicaNotas musicaSomenteComNota = new MusicaNotas(musica);\n\t\treturn musicaSomenteComNota;\n\t}\n\n\tpublic MusicaBase createMusicaComNotaLetra(String nome) throws IOException {\n\t\tMusica musica = new MusicaNome(nome);\n\t\tMusicaNotas musicaComNotaLetra = new MusicaNotas(musica);\n\t\tMusicaLetraOriginal musicaLetraOriginal = new MusicaLetraOriginal(musicaComNotaLetra);\n\t\treturn musicaLetraOriginal;\n\t}\n", "\tpublic MusicaBase createMusicaComNotaLetraOriginalTraduzida(String nome, String extensao)\n\t\t\tthrows IOException {\n\t\tMusica musica = new MusicaNome(nome);\n\t\tMusicaNotas musicaComNotaLetraOriginalTraduzida = new MusicaNotas(musica);\n\t\tMusicaLetraOriginal musicaLetraOriginal = new MusicaLetraOriginal(\n\t\t\t\tmusicaComNotaLetraOriginalTraduzida);\n\n\t\treturn new MusicaLetraTraduzida(musicaLetraOriginal, \"pt\");\n\t}\n\n\tpublic List<String> loadNotas(String nome) throws IOException {\n\t\treturn this.loadResource(nome, \"notas\");\n\t}\n\n\tpublic List<String> loadLetra(String nome) throws IOException {\n\t\treturn this.loadResource(nome, \"letra\");\n\t}\n\n\tpublic List<String> loadTraducao(String nome, String extensao) throws IOException {\n\t\treturn this.loadResource(nome, extensao);\n\t}\n\n\tpublic List<String> loadResource(String nome, String extensao) throws IOException {\n\t\tList<String> resource = new ArrayList<>();\n\t\tPath path = Paths.get(ResourceLoader.DIR_NAME + nome + \".\" + extensao);\n\t\tFiles\n\t\t\t\t.lines(path, StandardCharsets.ISO_8859_1)\n\t\t\t\t.forEach(resource::add);\n\t\treturn resource;\n\t}\n\n}\n"]}
