{"filename": "TestingLibrary.java", "chunked_list": ["// Tester Program for JaGame Library\n\nimport jagame.JaGame;\nimport jagame.Draw;\nimport jagame.Key;\nimport jagame.Mouse;\nimport java.awt.Color;\nimport java.awt.event.KeyEvent;\n\npublic class TestingLibrary {\n    public static void main(String[] args) {\n        final int SCREEN_X = 600;\n        final int SCREEN_Y = 600;\n        final int RECT_WIDTH = 50;\n        final int RECT_HEIGHT = 50;\n\n        // Main Window Set Up\n        JaGame window = new JaGame(\"Chicken Butt\", SCREEN_X, SCREEN_Y);\n        window.setBackground(Color.BLACK);\n\n        // Keyboard Set Up\n        Key key = window.getKey();\n\n        // Mouse Set Up\n        Mouse mouse = window.getMouse();\n        int mouseX;\n        int mouseY;\n\n        // Rectangle Set Up\n        int rectX = (SCREEN_X / 2) - 25;\n        int rectY = 100;\n        Color color;\n\n        // Main Game Loop", "\npublic class TestingLibrary {\n    public static void main(String[] args) {\n        final int SCREEN_X = 600;\n        final int SCREEN_Y = 600;\n        final int RECT_WIDTH = 50;\n        final int RECT_HEIGHT = 50;\n\n        // Main Window Set Up\n        JaGame window = new JaGame(\"Chicken Butt\", SCREEN_X, SCREEN_Y);\n        window.setBackground(Color.BLACK);\n\n        // Keyboard Set Up\n        Key key = window.getKey();\n\n        // Mouse Set Up\n        Mouse mouse = window.getMouse();\n        int mouseX;\n        int mouseY;\n\n        // Rectangle Set Up\n        int rectX = (SCREEN_X / 2) - 25;\n        int rectY = 100;\n        Color color;\n\n        // Main Game Loop", "        while (true) {\n            mouseX = mouse.getPos()[0];\n            mouseY = mouse.getPos()[1];\n\n            // Drawing Text\n            Draw.text(window.getSurface(), Color.RED, SCREEN_X / 2 - 75, 60, \"Samir\", null);\n\n            // Circle Color Based on Mouse Status (Click & Drag vs. Click vs. No Click)\n            if (mouse.getDragging()) {\n                color = Color.GREEN;\n            } else if (mouse.getPressed()[1]) {\n                color = Color.BLUE;\n            } else {\n                color = Color.RED;\n            }\n\n            // Mouse in Window Check", "            if (mouse.getDragging()) {\n                color = Color.GREEN;\n            } else if (mouse.getPressed()[1]) {\n                color = Color.BLUE;\n            } else {\n                color = Color.RED;\n            }\n\n            // Mouse in Window Check\n            if (mouse.getInWindow()) {\n                Draw.image(window.getSurface(), (SCREEN_X / 2) - 150, (SCREEN_Y / 2) - 225, 300, 400, \"crossyroaddinosaur.png\");\n            }\n\n            // Drawing Circle\n            Draw.circle(window.getSurface(), color, mouseX - 10, mouseY - 10, 20);\n\n            // WASD Movement", "            if (mouse.getInWindow()) {\n                Draw.image(window.getSurface(), (SCREEN_X / 2) - 150, (SCREEN_Y / 2) - 225, 300, 400, \"crossyroaddinosaur.png\");\n            }\n\n            // Drawing Circle\n            Draw.circle(window.getSurface(), color, mouseX - 10, mouseY - 10, 20);\n\n            // WASD Movement\n            if (key.isPressed(KeyEvent.VK_W)) {\n                rectY -= 10;\n            }", "            if (key.isPressed(KeyEvent.VK_W)) {\n                rectY -= 10;\n            }\n            if (key.isPressed(KeyEvent.VK_S)) {\n                rectY += 10;\n            }\n            if (key.isPressed(KeyEvent.VK_D)) {\n                rectX += 10;\n            }\n            if (key.isPressed(KeyEvent.VK_A)) {\n                rectX -= 10;\n            }\n\n            // Window Collisions", "            if (key.isPressed(KeyEvent.VK_A)) {\n                rectX -= 10;\n            }\n\n            // Window Collisions\n            if (rectX <= 0) {\n                rectX = SCREEN_X - RECT_WIDTH - 1;\n            }\n            if (rectX >= SCREEN_X - RECT_WIDTH) {\n                rectX = 0;\n            }", "            if (rectX >= SCREEN_X - RECT_WIDTH) {\n                rectX = 0;\n            }\n            if (rectY <= 0) {\n                rectY = SCREEN_Y - RECT_HEIGHT - 1;\n            }\n            if (rectY >= SCREEN_Y - RECT_HEIGHT) {\n                rectY = 0;\n            }\n\n            // Drawing Rectangle\n            Draw.rect(window.getSurface(), Color.PINK, rectX, rectY, RECT_WIDTH, RECT_HEIGHT);\n\n            // Window Update\n            window.update(10);\n        }\n    }\n}\n"]}
{"filename": "jagame/Ellipse.java", "chunked_list": ["/* Ellipse class\n * @description: Ellipse shape class.\n * @authors: Amun Ahmad & Jethro Lin\n * @version: 6/16/2023\n */\n\npackage jagame;\n\nimport java.awt.Color;\n\npublic class Ellipse extends Shape {\n    private int leftX;\n    private int topY;\n    private int width;\n    private int height;\n    private Color color;\n\n    public Ellipse(Color color, int leftX, int topY, int width, int height) {\n        this.leftX = leftX;\n        this.topY = topY;\n        this.width = width;\n        this.height = height;\n        this.color = color;\n    }\n\n    /* GETTERS */\n\n    @Override", "import java.awt.Color;\n\npublic class Ellipse extends Shape {\n    private int leftX;\n    private int topY;\n    private int width;\n    private int height;\n    private Color color;\n\n    public Ellipse(Color color, int leftX, int topY, int width, int height) {\n        this.leftX = leftX;\n        this.topY = topY;\n        this.width = width;\n        this.height = height;\n        this.color = color;\n    }\n\n    /* GETTERS */\n\n    @Override", "    public int getX() {\n        return this.leftX;\n    }\n\n    @Override\n    public int getY() {\n        return this.topY;\n    }\n\n    public int getWidth() {\n        return this.width;\n    }\n", "    public int getWidth() {\n        return this.width;\n    }\n\n    public int getHeight() {\n        return this.height;\n    }\n\n    public Color getColor() {\n        return this.color;\n    }\n}\n", "    public Color getColor() {\n        return this.color;\n    }\n}\n"]}
{"filename": "jagame/GraphicsPanel.java", "chunked_list": ["/* GraphicsPanel class\n * @description: Graphics canvas for main windows.\n * @authors: Amun Ahmad & Jethro Lin\n * @version: 6/16/2023\n */\n\npackage jagame;\n\nimport java.awt.Color;\nimport java.awt.Graphics;", "import java.awt.Color;\nimport java.awt.Graphics;\nimport java.awt.image.BufferedImage;\nimport java.util.Queue;\nimport java.util.LinkedList;\nimport javax.swing.JPanel;\n\npublic class GraphicsPanel extends JPanel {\n    private Queue<Shape> drawQueue = new LinkedList<Shape>();\n\n    public GraphicsPanel(Display display, Color color, int x, int y, int width, int height) {\n        display.getFrame().add(this);\n        setFocusable(true);\n        requestFocusInWindow();\n    }\n\n    /* METHODS */\n", "    public void paintComponent(Graphics g) {\n        super.paintComponent(g);\n        while (this.drawQueue.peek() != null) {\n            Shape object = this.drawQueue.remove();\n            int x = object.getX();\n            int y = object.getY();\n\n            if (object instanceof Rect) {\n                int width = ((Rect) object).getWidth();\n                int height = ((Rect) object).getHeight();\n\n                g.setColor(((Rect) object).getColor());\n                g.fillRect(x, y, width, height);", "            } else if (object instanceof Ellipse) {\n                int width = ((Ellipse) object).getWidth();\n                int height = ((Ellipse) object).getHeight();\n\n                g.setColor(((Ellipse) object).getColor());\n                g.fillOval(x, y, width, height);\n            } else if (object instanceof Arc) {\n                int width = ((Arc) object).getWidth();\n                int height = ((Arc) object).getHeight();\n                int startAngle = ((Arc) object).getStartAngle();\n                int stopAngle = ((Arc) object).getStopAngle();\n\n                g.setColor(((Arc) object).getColor());\n                g.drawArc(x, y, width, height, startAngle, stopAngle);", "            } else if (object instanceof Line) {\n                int endX = ((Line) object).getEndX();\n                int endY = ((Line) object).getEndY();\n\n                g.setColor(((Line) object).getColor());\n                g.drawLine(x, endX, y, endY);\n            } else if (object instanceof Image) {\n                BufferedImage image = ((Image) object).getImage();\n                int width = ((Image) object).getWidth();\n                int height = ((Image) object).getHeight();\n\n                g.drawImage(image, x, y, width, height, null);", "            } else if (object instanceof Text) {\n                String string = ((Text) object).getString();\n\n                g.setFont(((Text) object).getFont());\n                g.setColor(((Text) object).getColor());\n                g.drawString(string, x, y);\n            }\n        }\n    }\n\n    /* GETTERS */\n\n    public Queue<Shape> getDrawQueue() {\n        return drawQueue;\n    }\n}\n"]}
{"filename": "jagame/Mouse.java", "chunked_list": ["/* Mouse class\n * @description: Allows programmers to monitor mouse status and activity.\n * @authors: Amun Ahmad & Jethro Lin\n * @version: 6/9/2023\n */\n\npackage jagame;\n\nimport java.awt.MouseInfo;\nimport java.awt.event.MouseEvent;", "import java.awt.MouseInfo;\nimport java.awt.event.MouseEvent;\nimport java.awt.event.MouseListener;\nimport java.awt.event.MouseMotionListener;\n\npublic class Mouse implements MouseListener, MouseMotionListener {\n    private final int X = 0;\n    private final int Y = 1;\n    private int[] mousePos;\n    private boolean[] mouseButtons;\n    private boolean isDragging;\n    private boolean inFrame;\n\n    public Mouse(GraphicsPanel surface) {\n        this.mousePos = new int[2];\n        this.mouseButtons = new boolean[MouseInfo.getNumberOfButtons()];\n\n        surface.addMouseListener(this);\n        surface.addMouseMotionListener(this);\n    }\n\n    /* METHODS */\n", "    public void mouseDragged(MouseEvent e) {\n        this.mousePos[X] = e.getX();\n        this.mousePos[Y] = e.getY();\n        this.mouseButtons[e.getButton()] = true;\n        this.isDragging = true;\n    }\n\n    public void mouseMoved(MouseEvent e) {\n        this.mousePos[X] = e.getX();\n        this.mousePos[Y] = e.getY();\n    }\n", "    public void mouseClicked(MouseEvent e) {}\n\n    public void mousePressed(MouseEvent e) {\n        this.mouseButtons[e.getButton()] = true;\n    }\n\n    public void mouseReleased(MouseEvent e) {\n        this.mouseButtons[e.getButton()] = false;\n        this.isDragging = false;\n    }\n", "    public void mouseEntered(MouseEvent e) { \n        this.inFrame = true;\n    }\n\n    public void mouseExited(MouseEvent e) {\n        this.inFrame = false;\n    }\n\n    /* GETTERS */\n\n    public int[] getPos() {\n        return this.mousePos;\n    }\n\n    public boolean[] getPressed() {\n        return this.mouseButtons;\n    }\n", "    public boolean getDragging() {\n        return this.isDragging;\n    }\n\n    public boolean getInWindow() {\n        return this.inFrame;\n    }\n\n    /* SETTERS */\n\n    public void setPos(int x, int y, MouseEvent e) {\n        int xOffset = mousePos[X] - e.getX();\n        int yOffset = mousePos[Y] - e.getY();\n        e.translatePoint(xOffset, yOffset);\n    }\n}\n", "    public void setPos(int x, int y, MouseEvent e) {\n        int xOffset = mousePos[X] - e.getX();\n        int yOffset = mousePos[Y] - e.getY();\n        e.translatePoint(xOffset, yOffset);\n    }\n}\n"]}
{"filename": "jagame/K_.java", "chunked_list": ["/* K_ class\n * @description: Dependency for Key class.\n * @authors: Amun Ahmad & Jethro Lin\n * @version: 6/12/2023\n */\n\npackage jagame;\n\nimport java.awt.event.KeyEvent;\n\npublic class K_ {\n    private static final int[] CONSTANT_FIELD_VALUES = { KeyEvent.VK_0, KeyEvent.VK_1, KeyEvent.VK_2,\n                                                         KeyEvent.VK_3, KeyEvent.VK_4, KeyEvent.VK_5,\n                                                         KeyEvent.VK_6, KeyEvent.VK_7, KeyEvent.VK_8,\n                                                         KeyEvent.VK_9, KeyEvent.VK_A, KeyEvent.VK_ACCEPT,\n                                                         KeyEvent.VK_ADD, KeyEvent.VK_AGAIN, KeyEvent.VK_ALL_CANDIDATES,\n                                                         KeyEvent.VK_ALPHANUMERIC, KeyEvent.VK_ALT, KeyEvent.VK_ALT_GRAPH,\n                                                         KeyEvent.VK_AMPERSAND, KeyEvent.VK_ASTERISK, KeyEvent.VK_AT,\n                                                         KeyEvent.VK_B, KeyEvent.VK_BACK_QUOTE, KeyEvent.VK_BACK_SLASH,\n                                                         KeyEvent.VK_BACK_SPACE, KeyEvent.VK_BEGIN, KeyEvent.VK_BRACELEFT,\n                                                         KeyEvent.VK_BRACERIGHT, KeyEvent.VK_C, KeyEvent.VK_CANCEL,\n                                                         KeyEvent.VK_CAPS_LOCK, KeyEvent.VK_CIRCUMFLEX, KeyEvent.VK_CLEAR,\n                                                         KeyEvent.VK_CLOSE_BRACKET, KeyEvent.VK_CODE_INPUT, KeyEvent.VK_COLON,\n                                                         KeyEvent.VK_COMMA, KeyEvent.VK_COMPOSE, KeyEvent.VK_CONTEXT_MENU,\n                                                         KeyEvent.VK_CONTROL, KeyEvent.VK_CONVERT, KeyEvent.VK_COPY,\n                                                         KeyEvent.VK_CUT, KeyEvent.VK_D, KeyEvent.VK_DEAD_ABOVEDOT,\n                                                         KeyEvent.VK_DEAD_ABOVERING, KeyEvent.VK_DEAD_ACUTE, KeyEvent.VK_DEAD_BREVE,\n                                                         KeyEvent.VK_DEAD_CARON, KeyEvent.VK_DEAD_CEDILLA, KeyEvent.VK_DEAD_CIRCUMFLEX,\n                                                         KeyEvent.VK_DEAD_DIAERESIS, KeyEvent.VK_DEAD_DOUBLEACUTE, KeyEvent.VK_DEAD_GRAVE,\n                                                         KeyEvent.VK_DEAD_IOTA, KeyEvent.VK_DEAD_MACRON, KeyEvent.VK_DEAD_OGONEK,\n                                                         KeyEvent.VK_DEAD_SEMIVOICED_SOUND, KeyEvent.VK_DEAD_TILDE, KeyEvent.VK_DEAD_VOICED_SOUND,\n                                                         KeyEvent.VK_DECIMAL, KeyEvent.VK_DELETE, KeyEvent.VK_DIVIDE, KeyEvent.VK_DOLLAR,\n                                                         KeyEvent.VK_DOWN, KeyEvent.VK_E, KeyEvent.VK_END, KeyEvent.VK_ENTER, KeyEvent.VK_EQUALS,\n                                                         KeyEvent.VK_ESCAPE, KeyEvent.VK_EURO_SIGN, KeyEvent.VK_EXCLAMATION_MARK, KeyEvent.VK_F,\n                                                         KeyEvent.VK_F1, KeyEvent.VK_F10, KeyEvent.VK_F11, KeyEvent.VK_F12, KeyEvent.VK_F13,\n                                                         KeyEvent.VK_F14, KeyEvent.VK_F15, KeyEvent.VK_F16, KeyEvent.VK_F17, KeyEvent.VK_F18,\n                                                         KeyEvent.VK_F19, KeyEvent.VK_F2, KeyEvent.VK_F20, KeyEvent.VK_F21, KeyEvent.VK_F22,\n                                                         KeyEvent.VK_F23, KeyEvent.VK_F24, KeyEvent.VK_F3, KeyEvent.VK_F4, KeyEvent.VK_F5,\n                                                         KeyEvent.VK_F6, KeyEvent.VK_F7, KeyEvent.VK_F8, KeyEvent.VK_F9, KeyEvent.VK_FINAL,\n                                                         KeyEvent.VK_FIND, KeyEvent.VK_FULL_WIDTH, KeyEvent.VK_G, KeyEvent.VK_GREATER, KeyEvent.VK_G,\n                                                         KeyEvent.VK_HALF_WIDTH, KeyEvent.VK_HELP, KeyEvent.VK_HIRAGANA, KeyEvent.VK_HOME, KeyEvent.VK_I,\n                                                         KeyEvent.VK_INPUT_METHOD_ON_OFF, KeyEvent.VK_INSERT, KeyEvent.VK_INVERTED_EXCLAMATION_MARK,\n                                                         KeyEvent.VK_J, KeyEvent.VK_JAPANESE_HIRAGANA, KeyEvent.VK_JAPANESE_KATAKANA, KeyEvent.VK_JAPANESE_ROMAN,\n                                                         KeyEvent.VK_K, KeyEvent.VK_KANA, KeyEvent.VK_KANA_LOCK, KeyEvent.VK_KANJI, KeyEvent.VK_KATAKANA,\n                                                         KeyEvent.VK_KP_DOWN, KeyEvent.VK_KP_LEFT, KeyEvent.VK_KP_RIGHT, KeyEvent.VK_KP_UP, KeyEvent.VK_L,\n                                                         KeyEvent.VK_LEFT, KeyEvent.VK_LEFT_PARENTHESIS, KeyEvent.VK_LESS, KeyEvent.VK_M, KeyEvent.VK_META,\n                                                         KeyEvent.VK_MINUS, KeyEvent.VK_MODECHANGE, KeyEvent.VK_MULTIPLY, KeyEvent.VK_N, KeyEvent.VK_NONCONVERT,\n                                                         KeyEvent.VK_NUM_LOCK, KeyEvent.VK_NUMBER_SIGN, KeyEvent.VK_NUMPAD0, KeyEvent.VK_NUMPAD1, KeyEvent.VK_NUMPAD2,\n                                                         KeyEvent.VK_NUMPAD3, KeyEvent.VK_NUMPAD4, KeyEvent.VK_NUMPAD5, KeyEvent.VK_NUMPAD6, KeyEvent.VK_NUMPAD7,\n                                                         KeyEvent.VK_NUMPAD8, KeyEvent.VK_NUMPAD9, KeyEvent.VK_O, KeyEvent.VK_OPEN_BRACKET, KeyEvent.VK_P, KeyEvent.VK_PAGE_DOWN,\n                                                         KeyEvent.VK_PAGE_UP, KeyEvent.VK_PASTE, KeyEvent.VK_PAUSE, KeyEvent.VK_PERIOD, KeyEvent.VK_PLUS,\n                                                         KeyEvent.VK_PREVIOUS_CANDIDATE, KeyEvent.VK_PRINTSCREEN, KeyEvent.VK_PROPS, KeyEvent.VK_Q, KeyEvent.VK_QUOTE,\n                                                         KeyEvent.VK_QUOTEDBL, KeyEvent.VK_R, KeyEvent.VK_RIGHT, KeyEvent.VK_RIGHT_PARENTHESIS, KeyEvent.VK_ROMAN_CHARACTERS,\n                                                         KeyEvent.VK_S, KeyEvent.VK_SCROLL_LOCK, KeyEvent.VK_SEMICOLON, KeyEvent.VK_SEPARATER, KeyEvent.VK_SEPARATOR,\n                                                         KeyEvent.VK_SHIFT, KeyEvent.VK_SLASH, KeyEvent.VK_SPACE, KeyEvent.VK_STOP, KeyEvent.VK_SUBTRACT, KeyEvent.VK_T,\n                                                         KeyEvent.VK_TAB, KeyEvent.VK_U, KeyEvent.VK_UNDEFINED, KeyEvent.VK_UNDERSCORE, KeyEvent.VK_UNDO, KeyEvent.VK_UP,\n                                                         KeyEvent.VK_V, KeyEvent.VK_W, KeyEvent.VK_WINDOWS, KeyEvent.VK_X, KeyEvent.VK_Y, KeyEvent.VK_Z };\n\n    /* METHODS */\n", "import java.awt.event.KeyEvent;\n\npublic class K_ {\n    private static final int[] CONSTANT_FIELD_VALUES = { KeyEvent.VK_0, KeyEvent.VK_1, KeyEvent.VK_2,\n                                                         KeyEvent.VK_3, KeyEvent.VK_4, KeyEvent.VK_5,\n                                                         KeyEvent.VK_6, KeyEvent.VK_7, KeyEvent.VK_8,\n                                                         KeyEvent.VK_9, KeyEvent.VK_A, KeyEvent.VK_ACCEPT,\n                                                         KeyEvent.VK_ADD, KeyEvent.VK_AGAIN, KeyEvent.VK_ALL_CANDIDATES,\n                                                         KeyEvent.VK_ALPHANUMERIC, KeyEvent.VK_ALT, KeyEvent.VK_ALT_GRAPH,\n                                                         KeyEvent.VK_AMPERSAND, KeyEvent.VK_ASTERISK, KeyEvent.VK_AT,\n                                                         KeyEvent.VK_B, KeyEvent.VK_BACK_QUOTE, KeyEvent.VK_BACK_SLASH,\n                                                         KeyEvent.VK_BACK_SPACE, KeyEvent.VK_BEGIN, KeyEvent.VK_BRACELEFT,\n                                                         KeyEvent.VK_BRACERIGHT, KeyEvent.VK_C, KeyEvent.VK_CANCEL,\n                                                         KeyEvent.VK_CAPS_LOCK, KeyEvent.VK_CIRCUMFLEX, KeyEvent.VK_CLEAR,\n                                                         KeyEvent.VK_CLOSE_BRACKET, KeyEvent.VK_CODE_INPUT, KeyEvent.VK_COLON,\n                                                         KeyEvent.VK_COMMA, KeyEvent.VK_COMPOSE, KeyEvent.VK_CONTEXT_MENU,\n                                                         KeyEvent.VK_CONTROL, KeyEvent.VK_CONVERT, KeyEvent.VK_COPY,\n                                                         KeyEvent.VK_CUT, KeyEvent.VK_D, KeyEvent.VK_DEAD_ABOVEDOT,\n                                                         KeyEvent.VK_DEAD_ABOVERING, KeyEvent.VK_DEAD_ACUTE, KeyEvent.VK_DEAD_BREVE,\n                                                         KeyEvent.VK_DEAD_CARON, KeyEvent.VK_DEAD_CEDILLA, KeyEvent.VK_DEAD_CIRCUMFLEX,\n                                                         KeyEvent.VK_DEAD_DIAERESIS, KeyEvent.VK_DEAD_DOUBLEACUTE, KeyEvent.VK_DEAD_GRAVE,\n                                                         KeyEvent.VK_DEAD_IOTA, KeyEvent.VK_DEAD_MACRON, KeyEvent.VK_DEAD_OGONEK,\n                                                         KeyEvent.VK_DEAD_SEMIVOICED_SOUND, KeyEvent.VK_DEAD_TILDE, KeyEvent.VK_DEAD_VOICED_SOUND,\n                                                         KeyEvent.VK_DECIMAL, KeyEvent.VK_DELETE, KeyEvent.VK_DIVIDE, KeyEvent.VK_DOLLAR,\n                                                         KeyEvent.VK_DOWN, KeyEvent.VK_E, KeyEvent.VK_END, KeyEvent.VK_ENTER, KeyEvent.VK_EQUALS,\n                                                         KeyEvent.VK_ESCAPE, KeyEvent.VK_EURO_SIGN, KeyEvent.VK_EXCLAMATION_MARK, KeyEvent.VK_F,\n                                                         KeyEvent.VK_F1, KeyEvent.VK_F10, KeyEvent.VK_F11, KeyEvent.VK_F12, KeyEvent.VK_F13,\n                                                         KeyEvent.VK_F14, KeyEvent.VK_F15, KeyEvent.VK_F16, KeyEvent.VK_F17, KeyEvent.VK_F18,\n                                                         KeyEvent.VK_F19, KeyEvent.VK_F2, KeyEvent.VK_F20, KeyEvent.VK_F21, KeyEvent.VK_F22,\n                                                         KeyEvent.VK_F23, KeyEvent.VK_F24, KeyEvent.VK_F3, KeyEvent.VK_F4, KeyEvent.VK_F5,\n                                                         KeyEvent.VK_F6, KeyEvent.VK_F7, KeyEvent.VK_F8, KeyEvent.VK_F9, KeyEvent.VK_FINAL,\n                                                         KeyEvent.VK_FIND, KeyEvent.VK_FULL_WIDTH, KeyEvent.VK_G, KeyEvent.VK_GREATER, KeyEvent.VK_G,\n                                                         KeyEvent.VK_HALF_WIDTH, KeyEvent.VK_HELP, KeyEvent.VK_HIRAGANA, KeyEvent.VK_HOME, KeyEvent.VK_I,\n                                                         KeyEvent.VK_INPUT_METHOD_ON_OFF, KeyEvent.VK_INSERT, KeyEvent.VK_INVERTED_EXCLAMATION_MARK,\n                                                         KeyEvent.VK_J, KeyEvent.VK_JAPANESE_HIRAGANA, KeyEvent.VK_JAPANESE_KATAKANA, KeyEvent.VK_JAPANESE_ROMAN,\n                                                         KeyEvent.VK_K, KeyEvent.VK_KANA, KeyEvent.VK_KANA_LOCK, KeyEvent.VK_KANJI, KeyEvent.VK_KATAKANA,\n                                                         KeyEvent.VK_KP_DOWN, KeyEvent.VK_KP_LEFT, KeyEvent.VK_KP_RIGHT, KeyEvent.VK_KP_UP, KeyEvent.VK_L,\n                                                         KeyEvent.VK_LEFT, KeyEvent.VK_LEFT_PARENTHESIS, KeyEvent.VK_LESS, KeyEvent.VK_M, KeyEvent.VK_META,\n                                                         KeyEvent.VK_MINUS, KeyEvent.VK_MODECHANGE, KeyEvent.VK_MULTIPLY, KeyEvent.VK_N, KeyEvent.VK_NONCONVERT,\n                                                         KeyEvent.VK_NUM_LOCK, KeyEvent.VK_NUMBER_SIGN, KeyEvent.VK_NUMPAD0, KeyEvent.VK_NUMPAD1, KeyEvent.VK_NUMPAD2,\n                                                         KeyEvent.VK_NUMPAD3, KeyEvent.VK_NUMPAD4, KeyEvent.VK_NUMPAD5, KeyEvent.VK_NUMPAD6, KeyEvent.VK_NUMPAD7,\n                                                         KeyEvent.VK_NUMPAD8, KeyEvent.VK_NUMPAD9, KeyEvent.VK_O, KeyEvent.VK_OPEN_BRACKET, KeyEvent.VK_P, KeyEvent.VK_PAGE_DOWN,\n                                                         KeyEvent.VK_PAGE_UP, KeyEvent.VK_PASTE, KeyEvent.VK_PAUSE, KeyEvent.VK_PERIOD, KeyEvent.VK_PLUS,\n                                                         KeyEvent.VK_PREVIOUS_CANDIDATE, KeyEvent.VK_PRINTSCREEN, KeyEvent.VK_PROPS, KeyEvent.VK_Q, KeyEvent.VK_QUOTE,\n                                                         KeyEvent.VK_QUOTEDBL, KeyEvent.VK_R, KeyEvent.VK_RIGHT, KeyEvent.VK_RIGHT_PARENTHESIS, KeyEvent.VK_ROMAN_CHARACTERS,\n                                                         KeyEvent.VK_S, KeyEvent.VK_SCROLL_LOCK, KeyEvent.VK_SEMICOLON, KeyEvent.VK_SEPARATER, KeyEvent.VK_SEPARATOR,\n                                                         KeyEvent.VK_SHIFT, KeyEvent.VK_SLASH, KeyEvent.VK_SPACE, KeyEvent.VK_STOP, KeyEvent.VK_SUBTRACT, KeyEvent.VK_T,\n                                                         KeyEvent.VK_TAB, KeyEvent.VK_U, KeyEvent.VK_UNDEFINED, KeyEvent.VK_UNDERSCORE, KeyEvent.VK_UNDO, KeyEvent.VK_UP,\n                                                         KeyEvent.VK_V, KeyEvent.VK_W, KeyEvent.VK_WINDOWS, KeyEvent.VK_X, KeyEvent.VK_Y, KeyEvent.VK_Z };\n\n    /* METHODS */\n", "    public static void init(Key keyObject) {\n        if (!keyObject.getKeyMap().isEmpty()) {\n            keyObject.getKeyMap().clear();\n        }\n\n        for (int i = 0; i < CONSTANT_FIELD_VALUES.length; i++) {\n            keyObject.getKeyMap().put(CONSTANT_FIELD_VALUES[i], false);\n        }\n    }\n\n    /* GETTERS */\n", "    public static int getFieldValue(int i) {\n        return CONSTANT_FIELD_VALUES[i];\n    }\n}\n"]}
{"filename": "jagame/Image.java", "chunked_list": ["/* Image class\n * @description: Image object class.\n * @authors: Amun Ahmad & Jethro Lin\n * @version: 6/9/2023\n */\n\npackage jagame;\n\nimport java.io.File;\nimport javax.imageio.ImageIO;", "import java.io.File;\nimport javax.imageio.ImageIO;\nimport java.awt.image.BufferedImage;\nimport java.io.IOException;\n\npublic class Image extends Shape {\n    private BufferedImage picture;\n    private int leftX;\n    private int topY;\n    private int width;\n    private int height;\n\n    public Image(int leftX, int topY, int width, int height, String fileName) {\n        this.leftX = leftX;\n        this.topY = topY;\n", "        try {\n            this.picture = ImageIO.read(new File(fileName));\n        } catch (IOException error) {\n            System.out.println(\"File not found. Error Message: \\n\" + error);\n        }\n\n        this.width = width;\n        this.height = height;\n    }\n\n    public Image(int leftX, int topY, String fileName) {\n        this.leftX = leftX;\n        this.topY = topY;\n", "        try {\n            this.picture = ImageIO.read(new File(fileName));\n            this.width = this.picture.getWidth();\n            this.height = this.picture.getHeight();\n        } catch (IOException error) {\n            System.out.println(\"File not found. Error Message: \\n\" + error);\n        }\n    }\n\n    /* GETTERS */\n", "    public BufferedImage getImage() {\n        return this.picture;\n    }\n\n    @Override\n    public int getX() {\n        return this.leftX;\n    }\n\n    @Override\n    public int getY() {\n        return this.topY;\n    }\n", "    public int getY() {\n        return this.topY;\n    }\n\n    public int getWidth() {\n        return this.width;\n    }\n\n    public int getHeight() {\n        return this.height;\n    }\n}\n", "    public int getHeight() {\n        return this.height;\n    }\n}\n"]}
{"filename": "jagame/JaGame.java", "chunked_list": ["/* JaGame class\n * @description: Beginner-friendly module for initializing graphical display.\n * @authors: Amun Ahmad & Jethro Lin\n * @version: 6/9/2023\n */\n\npackage jagame;\n\nimport java.awt.Color;\n\npublic class JaGame {\n    private Display mainWindow;\n    private GraphicsPanel mainSurface;\n    private Key key;\n    private Mouse mouse;\n\n    public JaGame(String title, int width, int height) {\n        this.mainWindow = new Display(title, width, height);\n        this.mainSurface = new GraphicsPanel(this.mainWindow, Color.BLACK, 0, 0, width, height);\n        this.key = new Key();\n        this.mainSurface.addKeyListener(this.key);\n        this.mouse = new Mouse(this.mainSurface);\n    }\n\n    /* METHODS */\n", "import java.awt.Color;\n\npublic class JaGame {\n    private Display mainWindow;\n    private GraphicsPanel mainSurface;\n    private Key key;\n    private Mouse mouse;\n\n    public JaGame(String title, int width, int height) {\n        this.mainWindow = new Display(title, width, height);\n        this.mainSurface = new GraphicsPanel(this.mainWindow, Color.BLACK, 0, 0, width, height);\n        this.key = new Key();\n        this.mainSurface.addKeyListener(this.key);\n        this.mouse = new Mouse(this.mainSurface);\n    }\n\n    /* METHODS */\n", "    public void update(int sleepTime) {\n        this.mainSurface.repaint();\n        try { Thread.sleep(sleepTime); } catch (Exception e) {}\n    }\n\n    /* GETTERS */\n\n    public GraphicsPanel getSurface() {\n        return this.mainSurface;\n    }\n", "    public Key getKey() {\n        return this.key;\n    }\n\n    public Mouse getMouse() {\n        return this.mouse;\n    }\n\n    /* SETTERS */\n\n    public void setBackground(Color newColor) {\n        this.mainSurface.setBackground(newColor);\n    }\n}\n", "    public void setBackground(Color newColor) {\n        this.mainSurface.setBackground(newColor);\n    }\n}\n"]}
{"filename": "jagame/Display.java", "chunked_list": ["/* Display class\n * @description: Main window for applications.\n * @authors: Amun Ahmad & Jethro Lin\n * @version: 6/9/2023\n */\n\npackage jagame;\n\nimport javax.swing.JFrame;\n\npublic class Display {\n    private JFrame window;\n\n    public Display(String title, int width, int height) {\n        this.window = new JFrame(title);\n        this.window.setSize(width, height);\n        this.window.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n        this.window.setVisible(true);\n    }\n\n    /* METHODS */\n", "import javax.swing.JFrame;\n\npublic class Display {\n    private JFrame window;\n\n    public Display(String title, int width, int height) {\n        this.window = new JFrame(title);\n        this.window.setSize(width, height);\n        this.window.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n        this.window.setVisible(true);\n    }\n\n    /* METHODS */\n", "    public void quit() {\n        this.window = null;\n    }\n\n    public void update() {\n        this.window.repaint();\n    }\n\n    /* GETTERS */\n\n    public JFrame getFrame() {\n        return this.window;\n    }\n}\n", "    public JFrame getFrame() {\n        return this.window;\n    }\n}\n"]}
{"filename": "jagame/Rect.java", "chunked_list": ["/* Rect class\n * @description: Rectangle shape class.\n * @authors: Amun Ahmad & Jethro Lin\n * @version: 6/16/2023\n */\n\npackage jagame;\n\nimport java.awt.Color;\n\npublic class Rect extends Shape {\n    private int leftX;\n    private int topY;\n    private int width;\n    private int height;\n    private Color color;\n\n    public Rect(Color color, int leftX, int topY, int width, int height) {\n        this.leftX = leftX;\n        this.topY = topY;\n        this.width = width;\n        this.height = height;\n        this.color = color;\n    }\n\n    /* GETTERS */\n", "import java.awt.Color;\n\npublic class Rect extends Shape {\n    private int leftX;\n    private int topY;\n    private int width;\n    private int height;\n    private Color color;\n\n    public Rect(Color color, int leftX, int topY, int width, int height) {\n        this.leftX = leftX;\n        this.topY = topY;\n        this.width = width;\n        this.height = height;\n        this.color = color;\n    }\n\n    /* GETTERS */\n", "    public Color getColor() {\n        return this.color;\n    }\n\n    @Override\n    public int getX() {\n        return this.leftX;\n    }\n\n    @Override\n    public int getY() {\n        return this.topY;\n    }\n", "    public int getY() {\n        return this.topY;\n    }\n\n    public int getWidth() {\n        return this.width;\n    }\n\n    public int getHeight() {\n        return this.height;\n    }\n}\n", "    public int getHeight() {\n        return this.height;\n    }\n}\n"]}
{"filename": "jagame/Draw.java", "chunked_list": ["/* Draw class\n * @description: Class for adding shapes and text.\n * @authors: Amun Ahmad & Jethro Lin\n * @version: 6/9/2023\n */\n\npackage jagame;\n\nimport java.awt.Font;\nimport java.awt.Color;", "import java.awt.Font;\nimport java.awt.Color;\n\npublic class Draw {\n    private static final Font DEFAULT_FONT = new Font(\"Times New Roman\", Font.BOLD, 50);\n\n    /* METHODS */\n\n    public static void rect(GraphicsPanel window, Color color, int leftX, int topY, int width, int height) {\n        window.getDrawQueue().add(new Rect(color, leftX, topY, width, height));\n    }\n", "    public static void rect(GraphicsPanel window, Color color, int leftX, int topY, int width, int height) {\n        window.getDrawQueue().add(new Rect(color, leftX, topY, width, height));\n    }\n\n    public static void circle(GraphicsPanel window, Color color, int leftX, int topY, int width) {\n        window.getDrawQueue().add(new Ellipse(color, leftX, topY, width, width));\n    }\n\n    public static void ellipse(GraphicsPanel window, Color color, int leftX, int topY, int width, int height) {\n        window.getDrawQueue().add(new Ellipse(color, leftX, topY, width, height));\n    }\n", "    public static void ellipse(GraphicsPanel window, Color color, int leftX, int topY, int width, int height) {\n        window.getDrawQueue().add(new Ellipse(color, leftX, topY, width, height));\n    }\n\n    public static void arc(GraphicsPanel window, Color color, int leftX, int topY, int width, int height, int startAngle, int stopAngle) {\n        window.getDrawQueue().add(new Arc(color, leftX, topY, width, height, startAngle, stopAngle));\n    }\n\n    public static void line(GraphicsPanel window, Color color, int startX, int startY, int endX, int endY) {\n        window.getDrawQueue().add(new Line(color, startX, startY, endX, endY));\n    }\n", "    public static void line(GraphicsPanel window, Color color, int startX, int startY, int endX, int endY) {\n        window.getDrawQueue().add(new Line(color, startX, startY, endX, endY));\n    }\n\n    public static void image(GraphicsPanel window, int leftX, int topY, int width, int height, String fileName) { //its own surface??\n        window.getDrawQueue().add(new Image(leftX, topY, width, height, fileName));\n    }\n\n    public static void image(GraphicsPanel window, int leftX, int topY, String fileName) {\n        window.getDrawQueue().add(new Image(leftX, topY, fileName));\n    }\n", "    public static void image(GraphicsPanel window, int leftX, int topY, String fileName) {\n        window.getDrawQueue().add(new Image(leftX, topY, fileName));\n    }\n\n    public static void text(GraphicsPanel window, Color color, int leftX, int topY, String text, Font font) {\n        if (font == null) {\n            font = DEFAULT_FONT;\n        }\n\n        window.getDrawQueue().add(new Text(color, leftX, topY, text, font));\n    }\n}\n"]}
{"filename": "jagame/Shape.java", "chunked_list": ["/* Shape class\n * @description: Main shape class.\n * @authors: Amun Ahmad\n * @version: 6/16/2023\n */\n\npackage jagame;\n\nabstract class Shape {  \n    abstract int getX();", "abstract class Shape {  \n    abstract int getX();\n    abstract int getY();\n}\n"]}
{"filename": "jagame/Text.java", "chunked_list": ["/* Text class\n * @description: Text object class.\n * @authors: Amun Ahmad & Jethro Lin\n * @version: 6/16/2023\n */\n\npackage jagame;\n\nimport java.awt.Color;\nimport java.awt.Font;", "import java.awt.Color;\nimport java.awt.Font;\n\npublic class Text extends Shape {\n    private int leftX;\n    private int topY;\n    private String text;\n    private Color color;\n    private Font font;\n\n    public Text(Color color, int leftX, int topY, String text, Font font) {\n        this.leftX = leftX;\n        this.topY = topY;\n        this.text = text;\n        this.color = color;\n        this.font = font;\n    }\n\n    /* GETTERS */\n", "    public Color getColor() {\n        return this.color;\n    }\n\n    public Font getFont() {\n        return this.font;\n    }\n\n    @Override\n    public int getX() {\n        return this.leftX;\n    }\n\n    @Override", "    public int getX() {\n        return this.leftX;\n    }\n\n    @Override\n    public int getY() {\n        return this.topY;\n    }\n\n    public String getString() {\n        return this.text;\n    }\n}\n", "    public String getString() {\n        return this.text;\n    }\n}\n"]}
{"filename": "jagame/Key.java", "chunked_list": ["/* Key class\n * @description: Allows programmers to monitor keyboard status and activity.\n * @authors: Amun Ahmad & Jethro Lin\n * @version: 6/9/2023\n */\n\npackage jagame;\n\nimport java.awt.event.KeyEvent;\nimport java.awt.event.KeyListener;", "import java.awt.event.KeyEvent;\nimport java.awt.event.KeyListener;\nimport java.util.HashMap;\n\npublic class Key implements KeyListener {\n    private HashMap<Integer, Boolean> keyMap;\n\n    public Key() {\n        this.keyMap = new HashMap<Integer, Boolean>();\n        K_.init(this);\n    }\n\n    /* METHODS */\n", "    public void keyPressed(KeyEvent e) {\n        int key = e.getKeyCode();\n        this.keyMap.replace(key, true);\n    }\n\n    public void keyReleased(KeyEvent e) {\n        int key = e.getKeyCode();\n        this.keyMap.replace(key, false);\n    }\n\n    public void keyTyped(KeyEvent e) {}\n", "    public void keyTyped(KeyEvent e) {}\n\n    public boolean isPressed(int key) {\n        if (this.keyMap.get(key) == null) {\n            return false;\n        } else {\n            return this.keyMap.get(key);\n        }\n    }\n\n    /* GETTERS */\n\n    public HashMap<Integer, Boolean> getKeyMap() {\n        return this.keyMap;\n    }\n}\n"]}
{"filename": "jagame/Line.java", "chunked_list": ["/* Line class\n * @description: Line object class.\n * @authors: Amun Ahmad & Jethro Lin\n * @version: 6/16/2023\n */\n\npackage jagame;\n\nimport java.awt.Color;\n\npublic class Line extends Shape {\n    private int x1;\n    private int y1;\n    private int x2;\n    private int y2;\n    private Color color;\n\n    public Line(Color color, int x1, int y1, int x2, int y2) {\n        this.x1 = x1;\n        this.y1 = y1;\n        this.x2 = x2;\n        this.y2 = y2;\n        this.color = color;\n    }\n\n    /* GETTERS */\n\n    @Override", "import java.awt.Color;\n\npublic class Line extends Shape {\n    private int x1;\n    private int y1;\n    private int x2;\n    private int y2;\n    private Color color;\n\n    public Line(Color color, int x1, int y1, int x2, int y2) {\n        this.x1 = x1;\n        this.y1 = y1;\n        this.x2 = x2;\n        this.y2 = y2;\n        this.color = color;\n    }\n\n    /* GETTERS */\n\n    @Override", "    public int getX() {\n        return this.x1;\n    }\n\n    @Override\n    public int getY() {\n        return this.y1;\n    }\n\n    public int getEndX() {\n        return this.x2;\n    }\n", "    public int getEndX() {\n        return this.x2;\n    }\n\n    public int getEndY() {\n        return this.y2;\n    }\n\n    public Color getColor() {\n        return this.color;\n    }\n}\n", "    public Color getColor() {\n        return this.color;\n    }\n}\n"]}
{"filename": "jagame/Arc.java", "chunked_list": ["/* Arc class\n * @description: Arc shape object.\n * @authors: Amun Ahmad & Jethro Lin\n * @version: 6/16/2023\n */\n\npackage jagame;\n\nimport java.awt.Color;\n\npublic class Arc extends Shape {\n    private int leftX;\n    private int topY;\n    private int width;\n    private int height;\n    private int startAngle;\n    private int stopAngle;\n    private Color color;\n\n    public Arc(Color color, int leftX, int topY, int width, int height, int startAngle, int stopAngle) {\n        this.leftX = leftX;\n        this.topY = topY;\n        this.width = width;\n        this.height = height;\n        this.startAngle = startAngle;\n        this.stopAngle = stopAngle;\n        this.color = color;\n    }\n\n    /* GETTERS */\n\n    @Override", "import java.awt.Color;\n\npublic class Arc extends Shape {\n    private int leftX;\n    private int topY;\n    private int width;\n    private int height;\n    private int startAngle;\n    private int stopAngle;\n    private Color color;\n\n    public Arc(Color color, int leftX, int topY, int width, int height, int startAngle, int stopAngle) {\n        this.leftX = leftX;\n        this.topY = topY;\n        this.width = width;\n        this.height = height;\n        this.startAngle = startAngle;\n        this.stopAngle = stopAngle;\n        this.color = color;\n    }\n\n    /* GETTERS */\n\n    @Override", "    public int getX() {\n        return this.leftX;\n    }\n\n    @Override\n    public int getY() {\n        return this.topY;\n    }\n\n    public int getWidth() {\n        return this.width;\n    }\n", "    public int getWidth() {\n        return this.width;\n    }\n\n    public int getHeight() {\n        return this.height;\n    }\n\n    public int getStartAngle() {\n        return this.startAngle;\n    }\n", "    public int getStartAngle() {\n        return this.startAngle;\n    }\n\n    public int getStopAngle() {\n        return this.stopAngle;\n    }\n\n    public Color getColor() {\n        return this.color;\n    }\n}\n", "    public Color getColor() {\n        return this.color;\n    }\n}\n"]}
