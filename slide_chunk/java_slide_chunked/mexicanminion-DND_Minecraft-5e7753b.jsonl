{"filename": "src/main/java/net/mexicanminion/dndminecraft/DNDMinecraftClient.java", "chunked_list": ["package net.mexicanminion.dndminecraft;\n\nimport net.fabricmc.fabric.api.client.keybinding.v1.KeyBindingHelper;\nimport net.mexicanminion.dndminecraft.gui.CreateCharacterScreen;\nimport net.mexicanminion.dndminecraft.util.ScreenRegistries;\nimport net.minecraft.client.MinecraftClient;\nimport org.lwjgl.glfw.GLFW;\nimport org.quiltmc.loader.api.ModContainer;\nimport org.quiltmc.qsl.base.api.entrypoint.client.ClientModInitializer;\nimport net.minecraft.client.option.KeyBind;", "import org.quiltmc.qsl.base.api.entrypoint.client.ClientModInitializer;\nimport net.minecraft.client.option.KeyBind;\nimport org.quiltmc.qsl.lifecycle.api.client.event.ClientTickEvents;\n\n\n\npublic class DNDMinecraftClient implements ClientModInitializer{\n\n\tprivate static final KeyBind BEGIN = new KeyBind(\"key.owo-ui-academy.begin\", GLFW.GLFW_KEY_H, \"key.categories.misc\");\n\n\t@Override", "\tpublic void onInitializeClient(ModContainer mod) {\n\t\t// TODO Auto-generated method stub\n\t\tDNDMinecraft.LOGGER.info(\"Javier M\", mod.metadata().name());\n\t\tScreenRegistries.registerScreens();\n\n\t\tKeyBindingHelper.registerKeyBinding(BEGIN);\n\t\tClientTickEvents.END.register(client -> {\n\t\t\twhile (BEGIN.wasPressed()) {\n\t\t\t\tclient.setScreen(new CreateCharacterScreen());\n\t\t\t}\n\t\t});\n\n\t}\n}\n"]}
{"filename": "src/main/java/net/mexicanminion/dndminecraft/DNDMinecraft.java", "chunked_list": ["package net.mexicanminion.dndminecraft;\n\nimport net.mexicanminion.dndminecraft.util.ModRegistries;\nimport org.quiltmc.loader.api.ModContainer;\nimport org.quiltmc.qsl.base.api.entrypoint.ModInitializer;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\npublic class DNDMinecraft implements ModInitializer {\n\n\tpublic static final String MOD_ID = \"dndminecraft\";", "public class DNDMinecraft implements ModInitializer {\n\n\tpublic static final String MOD_ID = \"dndminecraft\";\n\tpublic static final Logger LOGGER = LoggerFactory.getLogger(MOD_ID);\n\n\t@Override\n\tpublic void onInitialize(ModContainer mod) {\n\t\tLOGGER.info(\"Hello Quilt world from {}!\", mod.metadata().name());\n\t\tModRegistries.registerModStuff();\n\n\t}\n}\n"]}
{"filename": "src/main/java/net/mexicanminion/dndminecraft/movement/MovementSpeed.java", "chunked_list": ["package net.mexicanminion.dndminecraft.movement;\n\nimport net.minecraft.entity.player.PlayerEntity;\nimport net.minecraft.text.Text;\nimport net.minecraft.util.math.BlockPos;\n\npublic class MovementSpeed {\n\n\tint mainXPoint;\n\tint mainZPoint;\n\tint currentXPoint;\n\tint currentZPoint;\n\tint oldXPoint;\n\tint oldZPoint;\n\tint speed;\n\tprivate boolean resetMovementFlag = true;\n\tPlayerEntity player;\n\n\tpublic MovementSpeed(int speed, PlayerEntity player) {\n\t\tthis.speed = speed;\n\t\tthis.player = player;\n\t}\n", "\tpublic void setMain(BlockPos playerPos) {\n\t\tthis.mainXPoint = playerPos.getX();\n\t\tthis.mainZPoint = playerPos.getZ();\n\t\tcurrentXPoint = mainXPoint;\n\t\tcurrentZPoint = mainZPoint;\n\t\toldXPoint = mainXPoint;\n\t\toldZPoint = mainZPoint;\n\t\tif(resetMovementFlag) {\n\t\t\tresetMovementFlag = false;\n\t\t}\n\t}\n", "\tpublic void updatePos(PlayerEntity player) {\n\t\tint liveX = player.getBlockX();\n\t\tint liveZ = player.getBlockZ();\n\t\tif (liveX != currentXPoint || liveZ != currentZPoint) {\n\t\t\toldXPoint = currentXPoint;\n\t\t\toldZPoint = currentZPoint;\n\t\t\tcurrentXPoint = liveX;\n\t\t\tcurrentZPoint = liveZ;\n\t\t}\n\t}\n", "\tpublic int getMovement() {\n\t\tint movement;\n\t\tint x = Math.abs(currentXPoint - mainXPoint);\n\t\tint z = Math.abs(currentZPoint - mainZPoint);\n\n\t\tmovement = x + z;\n\t\treturn movement;\n\t}\n\n\tpublic void checkMovement() {\n\t\tupdatePos(player);\n\t\tplayer.sendMessage(Text.literal(\"Movement: \" + getMovement()), false);", "\tpublic void checkMovement() {\n\t\tupdatePos(player);\n\t\tplayer.sendMessage(Text.literal(\"Movement: \" + getMovement()), false);\n\t\tif (getMovement() > speed)\n\t\t\tplayer.teleport(oldXPoint + 0.5, player.getY(), oldZPoint + 0.5);\n\t\tresetMovementFlag = true;\n\t}\n\n\tpublic void resetMovement() {\n\t\tif(resetMovementFlag)\n\t\t\tsetMain(player.getBlockPos());\n\t\tplayer.teleport(oldXPoint + 0.5, player.getBlockY(), oldZPoint + 0.5);\n\t}\n", "\tpublic void resetMovement() {\n\t\tif(resetMovementFlag)\n\t\t\tsetMain(player.getBlockPos());\n\t\tplayer.teleport(oldXPoint + 0.5, player.getBlockY(), oldZPoint + 0.5);\n\t}\n\n\tpublic void setSpeed(int speed) {\n\t\tthis.speed = speed;\n\t}\n\n}\n"]}
{"filename": "src/main/java/net/mexicanminion/dndminecraft/command/NextTurn.java", "chunked_list": ["package net.mexicanminion.dndminecraft.command;\n\nimport com.mojang.brigadier.CommandDispatcher;\nimport com.mojang.brigadier.context.CommandContext;\nimport com.mojang.brigadier.exceptions.CommandSyntaxException;\nimport net.mexicanminion.dndminecraft.managers.GameTrackerManager;\nimport net.minecraft.command.CommandBuildContext;\nimport net.minecraft.server.command.CommandManager;\nimport net.minecraft.server.command.ServerCommandSource;\nimport net.minecraft.text.Text;", "import net.minecraft.server.command.ServerCommandSource;\nimport net.minecraft.text.Text;\n\n\npublic class NextTurn {\n\n\tpublic static void register(CommandDispatcher<ServerCommandSource> dispatcher, CommandBuildContext commandBuildContext, CommandManager.RegistrationEnvironment registrationEnvironment) {\n\t\tdispatcher.register(CommandManager.literal(\"nextturn\")\n\t\t\t\t.executes(context -> run(context)));\n\t}\n\n\tprivate static int run(CommandContext<ServerCommandSource> context) throws CommandSyntaxException {\n\n\t\tGameTrackerManager.nextTurn();\n\t\tcontext.getSource().sendFeedback(Text.literal(\"Turn: \" + GameTrackerManager.getCurrTurn()), true);\n\n\t\treturn 1;\n\t}\n}\n"]}
{"filename": "src/main/java/net/mexicanminion/dndminecraft/command/StartGame.java", "chunked_list": ["package net.mexicanminion.dndminecraft.command;\n\nimport com.mojang.brigadier.CommandDispatcher;\nimport com.mojang.brigadier.context.CommandContext;\nimport com.mojang.brigadier.exceptions.CommandSyntaxException;\nimport net.mexicanminion.dndminecraft.managers.GameTrackerManager;\nimport net.minecraft.command.CommandBuildContext;\nimport net.minecraft.server.command.CommandManager;\nimport net.minecraft.server.command.ServerCommandSource;\nimport net.minecraft.text.Text;", "import net.minecraft.server.command.ServerCommandSource;\nimport net.minecraft.text.Text;\n\n\npublic class StartGame {\n\n\tpublic static void register(CommandDispatcher<ServerCommandSource> dispatcher, CommandBuildContext commandBuildContext, CommandManager.RegistrationEnvironment registrationEnvironment) {\n\t\tdispatcher.register(CommandManager.literal(\"startgame\")\n\t\t\t\t.executes(context -> run(context, context.getSource())));\n\t}\n\n\tprivate static int run(CommandContext<ServerCommandSource> contextScreen, ServerCommandSource context) throws CommandSyntaxException {\n\n\t\tGameTrackerManager.startGame(context.getServer());\n\n\t\treturn 1;\n\t}\n}\n"]}
{"filename": "src/main/java/net/mexicanminion/dndminecraft/command/RollDiceCommand.java", "chunked_list": ["package net.mexicanminion.dndminecraft.command;\n\nimport static net.minecraft.server.command.CommandManager.*;\n\nimport com.mojang.brigadier.CommandDispatcher;\nimport com.mojang.brigadier.context.CommandContext;\nimport com.mojang.brigadier.exceptions.CommandSyntaxException;\nimport net.mexicanminion.dndminecraft.util.DiceSystem;\nimport net.minecraft.command.CommandBuildContext;\nimport net.minecraft.server.MinecraftServer;", "import net.minecraft.command.CommandBuildContext;\nimport net.minecraft.server.MinecraftServer;\nimport net.minecraft.server.command.CommandManager;\nimport net.minecraft.server.command.ServerCommandSource;\nimport net.minecraft.text.Text;\nimport static net.minecraft.server.command.CommandManager.argument;\nimport static com.mojang.brigadier.arguments.IntegerArgumentType.integer;\nimport static com.mojang.brigadier.arguments.IntegerArgumentType.getInteger;\n\n\npublic class RollDiceCommand{\n\n\tstatic DiceSystem diceSystem = new DiceSystem();\n", "\n\npublic class RollDiceCommand{\n\n\tstatic DiceSystem diceSystem = new DiceSystem();\n\n\tpublic static void register(CommandDispatcher<ServerCommandSource> dispatcher, CommandBuildContext commandBuildContext, RegistrationEnvironment registrationEnvironment) {\n\t\tdispatcher.register(CommandManager.literal(\"rolldice\")\n\t\t\t\t.then(argument(\"amount\", integer(1, 100))\n\t\t\t\t\t\t.then(argument(\"dice\", integer(4, 100))\n\t\t\t\t\t\t\t\t.executes(context -> run(context, context.getSource(), getInteger(context, \"amount\"), getInteger(context, \"dice\"))))));\n\t}\n\n\tprivate static int run(CommandContext<ServerCommandSource> contextScreen, ServerCommandSource context, int amount, int dice) throws CommandSyntaxException {\n\n\t\tint temp = diceSystem.rollDice(amount, dice);\n\n\t\tcontextScreen.getSource().sendFeedback(Text.literal(\"You rolled \" + amount + \" D\" + dice + \"'s that totaled \"+ temp), true);\n\n\t\treturn 1;\n\t}\n}\n"]}
{"filename": "src/main/java/net/mexicanminion/dndminecraft/command/AddPlayer.java", "chunked_list": ["package net.mexicanminion.dndminecraft.command;\n\nimport com.mojang.brigadier.CommandDispatcher;\nimport com.mojang.brigadier.context.CommandContext;\nimport com.mojang.brigadier.exceptions.CommandSyntaxException;\nimport net.mexicanminion.dndminecraft.managers.GameTrackerManager;\nimport net.minecraft.command.CommandBuildContext;\nimport net.minecraft.server.command.CommandManager;\nimport net.minecraft.server.command.ServerCommandSource;\nimport net.minecraft.text.Text;", "import net.minecraft.server.command.ServerCommandSource;\nimport net.minecraft.text.Text;\n\nimport static com.mojang.brigadier.arguments.IntegerArgumentType.getInteger;\nimport static com.mojang.brigadier.arguments.IntegerArgumentType.integer;\nimport static net.minecraft.server.command.CommandManager.argument;\n\npublic class AddPlayer {\n\n\tpublic static void register(CommandDispatcher<ServerCommandSource> dispatcher, CommandBuildContext commandBuildContext, CommandManager.RegistrationEnvironment registrationEnvironment) {\n\t\tdispatcher.register(CommandManager.literal(\"addplayer\")\n\t\t\t\t.then(argument(\"speed\", integer())\n\t\t\t\t\t\t.executes(context -> run(context, getInteger(context, \"speed\")))));\n\t}\n\n\tprivate static int run(CommandContext<ServerCommandSource> context, int speed) throws CommandSyntaxException {\n\n\t\tGameTrackerManager.addPlayerToGame(context.getSource().getPlayer(), speed);\n\t\tcontext.getSource().sendFeedback(Text.literal(\"You have been added \"), true);\n\n\t\treturn 1;\n\t}\n\n}\n", "\tpublic static void register(CommandDispatcher<ServerCommandSource> dispatcher, CommandBuildContext commandBuildContext, CommandManager.RegistrationEnvironment registrationEnvironment) {\n\t\tdispatcher.register(CommandManager.literal(\"addplayer\")\n\t\t\t\t.then(argument(\"speed\", integer())\n\t\t\t\t\t\t.executes(context -> run(context, getInteger(context, \"speed\")))));\n\t}\n\n\tprivate static int run(CommandContext<ServerCommandSource> context, int speed) throws CommandSyntaxException {\n\n\t\tGameTrackerManager.addPlayerToGame(context.getSource().getPlayer(), speed);\n\t\tcontext.getSource().sendFeedback(Text.literal(\"You have been added \"), true);\n\n\t\treturn 1;\n\t}\n\n}\n"]}
{"filename": "src/main/java/net/mexicanminion/dndminecraft/command/OpenCCS.java", "chunked_list": ["package net.mexicanminion.dndminecraft.command;\n\nimport com.mojang.brigadier.CommandDispatcher;\nimport com.mojang.brigadier.context.CommandContext;\nimport com.mojang.brigadier.exceptions.CommandSyntaxException;\nimport net.mexicanminion.dndminecraft.gui.CreateCharacterScreen;\nimport net.minecraft.client.MinecraftClient;\nimport net.minecraft.command.CommandBuildContext;\nimport net.minecraft.server.command.CommandManager;\nimport net.minecraft.server.command.ServerCommandSource;", "import net.minecraft.server.command.CommandManager;\nimport net.minecraft.server.command.ServerCommandSource;\n\n\n\npublic class OpenCCS {\n\n\n\tpublic static void register(CommandDispatcher<ServerCommandSource> dispatcher, CommandBuildContext commandBuildContext, CommandManager.RegistrationEnvironment registrationEnvironment) {\n\t\tdispatcher.register(CommandManager.literal(\"createcharacter\")\n\t\t\t\t.executes(context -> run(context)));\n\t}\n\n\tprivate static int run(CommandContext<ServerCommandSource> context) throws CommandSyntaxException {\n\n\t\t//delay by 1 tick to prevent the game from crashing\n\t\tMinecraftClient.getInstance().execute(() -> MinecraftClient.getInstance().setScreen(new CreateCharacterScreen()));\n\n\t\t//MinecraftClient.getInstance().setScreen(new CreateCharacterScreen());\n\n\t\treturn 1;\n\t}\n}\n", "\tpublic static void register(CommandDispatcher<ServerCommandSource> dispatcher, CommandBuildContext commandBuildContext, CommandManager.RegistrationEnvironment registrationEnvironment) {\n\t\tdispatcher.register(CommandManager.literal(\"createcharacter\")\n\t\t\t\t.executes(context -> run(context)));\n\t}\n\n\tprivate static int run(CommandContext<ServerCommandSource> context) throws CommandSyntaxException {\n\n\t\t//delay by 1 tick to prevent the game from crashing\n\t\tMinecraftClient.getInstance().execute(() -> MinecraftClient.getInstance().setScreen(new CreateCharacterScreen()));\n\n\t\t//MinecraftClient.getInstance().setScreen(new CreateCharacterScreen());\n\n\t\treturn 1;\n\t}\n}\n"]}
{"filename": "src/main/java/net/mexicanminion/dndminecraft/util/ModRegistries.java", "chunked_list": ["package net.mexicanminion.dndminecraft.util;\n\nimport net.mexicanminion.dndminecraft.command.AddPlayer;\nimport net.mexicanminion.dndminecraft.command.NextTurn;\nimport net.mexicanminion.dndminecraft.command.RollDiceCommand;\nimport net.mexicanminion.dndminecraft.command.StartGame;\nimport net.mexicanminion.dndminecraft.managers.GameTrackerManager;\nimport org.quiltmc.qsl.command.api.CommandRegistrationCallback;\nimport org.quiltmc.qsl.lifecycle.api.event.ServerTickEvents;\n", "import org.quiltmc.qsl.lifecycle.api.event.ServerTickEvents;\n\n\npublic class ModRegistries {\n\n\tpublic static void registerModStuff() {\n\t\tregisterCommands();\n\t\tregisterEvents();\n\t}\n\n\tprivate static void registerCommands(){\n\n\t\tCommandRegistrationCallback.EVENT.register(RollDiceCommand::register);\n\t\tCommandRegistrationCallback.EVENT.register(StartGame::register);\n\t\tCommandRegistrationCallback.EVENT.register(AddPlayer::register);\n\t\tCommandRegistrationCallback.EVENT.register(NextTurn::register);\n\n\t}\n\n\tprivate static void registerEvents(){\n\t\tServerTickEvents.END.register(GameTrackerManager::updatePlayersMovement);\n\t}\n}\n"]}
{"filename": "src/main/java/net/mexicanminion/dndminecraft/util/ScreenRegistries.java", "chunked_list": ["package net.mexicanminion.dndminecraft.util;\n\nimport net.mexicanminion.dndminecraft.command.*;\nimport org.quiltmc.qsl.command.api.CommandRegistrationCallback;\n\npublic class ScreenRegistries {\n\n\tpublic static void registerScreens() {\n\t\tregisterCommands();\n\t}\n\n\tprivate static void registerCommands(){\n\n\t\tCommandRegistrationCallback.EVENT.register(OpenCCS::register);\n\n\t}\n}\n"]}
{"filename": "src/main/java/net/mexicanminion/dndminecraft/util/DiceSystem.java", "chunked_list": ["package net.mexicanminion.dndminecraft.util;\n\npublic class DiceSystem {\n\n\tint result;\n\tint amount;\n\tint dice;\n\n\tpublic DiceSystem() {\n\t\tresult = 0;\n\t\tamount = 0;\n\t\tdice = 0;\n\t}\n", "\tpublic int rollDie(int dice) {\n\t\tint result = (int) (Math.random() * dice) + 1;\n\t\treturn result;\n\t}\n\n\tprivate boolean checkDice(int dice) {\n\t\treturn dice == 4 || dice == 6 || dice == 8 || dice == 10 || dice == 12 || dice == 20 || dice == 100;\n\t}\n\n\tpublic int rollDice(int amount, int dice) {\n\t\tresult = 0;", "\tpublic int rollDice(int amount, int dice) {\n\t\tresult = 0;\n\t\tif (!checkDice(dice)) {\n\t\t\tthrow new RuntimeException(\"Invalid dice value\");\n\t\t}\n\n\t\tfor (int i = 0; i < amount; i++) {\n\t\t\tresult += rollDie(dice);\n\t\t}\n\t\treturn result;\n\t}\n\n}\n"]}
{"filename": "src/main/java/net/mexicanminion/dndminecraft/gui/CreateCharacterScreen.java", "chunked_list": ["package net.mexicanminion.dndminecraft.gui;\n\nimport io.wispforest.owo.ui.base.BaseOwoScreen;\nimport io.wispforest.owo.ui.base.BaseUIModelScreen;\nimport io.wispforest.owo.ui.component.ButtonComponent;\nimport io.wispforest.owo.ui.component.Components;\nimport io.wispforest.owo.ui.container.Containers;\nimport io.wispforest.owo.ui.container.FlowLayout;\nimport io.wispforest.owo.ui.core.*;\nimport net.minecraft.client.MinecraftClient;", "import io.wispforest.owo.ui.core.*;\nimport net.minecraft.client.MinecraftClient;\nimport net.minecraft.text.Text;\nimport net.minecraft.util.Identifier;\nimport org.jetbrains.annotations.NotNull;\n\npublic class CreateCharacterScreen extends BaseUIModelScreen<FlowLayout> {\n\n\n\tpublic CreateCharacterScreen() {\n\t\tsuper(FlowLayout.class, DataSource.file(\"create-character-screen.xml\"));\n\t\t//super(FlowLayout.class, DataSource.asset(new Identifier(\"dndminecraft\", \"create-character-screen.xml\")));\n\t}\n\n\t@Override\n\tprotected void build(FlowLayout rootComponent) {\n\t\t/*rootComponent.surface(Surface.VANILLA_TRANSLUCENT)\n\t\t\t\t.horizontalAlignment(HorizontalAlignment.CENTER)\n\t\t\t\t.verticalAlignment(VerticalAlignment.CENTER);\n\n\t\trootComponent.child(\n\t\t\t\tContainers.verticalFlow(Sizing.content(), Sizing.content())\n\t\t\t\t\t\t.child(Components.button(Text.literal(\"A Button\"), (ButtonComponent button) -> {System.out.println(\"click\"); }))\n\t\t\t\t\t\t.margins(Insets.of(10))\n\t\t\t\t\t\t.padding(Insets.of(10))\n\t\t\t\t\t\t.surface(Surface.DARK_PANEL)\n\t\t\t\t\t\t.verticalAlignment(VerticalAlignment.TOP)\n\t\t\t\t\t\t.horizontalAlignment(HorizontalAlignment.CENTER)\n\t\t);\n\n\t\t */\n\n\t}\n}\n\n\n"]}
{"filename": "src/main/java/net/mexicanminion/dndminecraft/managers/GameTrackerManager.java", "chunked_list": ["package net.mexicanminion.dndminecraft.managers;\n\nimport net.mexicanminion.dndminecraft.movement.MovementSpeed;\nimport net.minecraft.server.MinecraftServer;\nimport net.minecraft.server.network.ServerPlayerEntity;\nimport net.minecraft.text.Text;\nimport org.quiltmc.qsl.networking.api.PlayerLookup;\n\n\nimport java.util.HashMap;", "\nimport java.util.HashMap;\n\n\npublic class GameTrackerManager {\n\n\tpublic static HashMap<ServerPlayerEntity, Integer> playersTurn = new HashMap<ServerPlayerEntity, Integer>();\n\tpublic static HashMap<ServerPlayerEntity, MovementSpeed> playerMove = new HashMap<ServerPlayerEntity, MovementSpeed>();\n\tstatic int currTurn = 1;\n\tstatic int playerCount = 0;\n\tpublic static boolean gameStarted = false;\n", "\tpublic static boolean gameStarted = false;\n\n\tpublic static void updatePlayersMovement(MinecraftServer server){\n\t\tif (!gameStarted) {\n\t\t\treturn;\n\t\t}\n\t\tfor (ServerPlayerEntity player : playersTurn.keySet()) {\n\t\t\tif(getPlayerTurn(player) == currTurn) {\n\t\t\t\tgetPlayerMovementSpeed(player).checkMovement();\n\t\t\t}else {\n\t\t\t\tgetPlayerMovementSpeed(player).resetMovement();\n\t\t\t}\n\t\t}\n\t}\n", "\tpublic static void startGame(MinecraftServer server) {\n\t\tif (playerCount == 0) {\n\t\t\tfor (ServerPlayerEntity player : server.getPlayerManager().getPlayerList()) {\n\t\t\t\tplayer.sendMessage(Text.literal(\"No players in game, could not start\"), false);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\tgameStarted = true;\n\t\tsetmainPlayerPosServerWide(server);\n\t}\n", "\tpublic static void addPlayerToGame(ServerPlayerEntity player, int turn, int speed) {\n\t\tplayersTurn.put(player, turn);\n\t\tplayerMove.put(player, new MovementSpeed(speed, player));\n\t}\n\n\tpublic static void addPlayerToGame(ServerPlayerEntity player,int speed) {\n\t\tif(!playersTurn.containsKey(player)) {\n\t\t\tplayerCount++;\n\t\t\taddPlayerToGame(player, playerCount, speed);\n\t\t\tplayer.sendMessage(Text.literal(\"You have been added to the game\"), false);\n\t\t}\n\t}\n", "\tpublic static void setPlayerSpeed(ServerPlayerEntity player, int speed) {\n\t\tplayerMove.get(player).setSpeed(speed);\n\t}\n\n\tpublic static int getPlayerTurn(ServerPlayerEntity player) {\n\t\treturn playersTurn.get(player);\n\t}\n\n\tpublic static void setPlayerTurn(ServerPlayerEntity player, int turn) {\n\t\tplayersTurn.put(player, turn);\n\t}\n", "\tpublic static void setPlayerTurn(ServerPlayerEntity player, int turn) {\n\t\tplayersTurn.put(player, turn);\n\t}\n\n\tpublic static void removePlayerFromGame(ServerPlayerEntity player) {\n\t\tplayersTurn.remove(player);\n\t\tplayerMove.remove(player);\n\t\tplayerCount--;\n\t}\n\n\tpublic static boolean isPlayerInGame(ServerPlayerEntity player) {\n\t\treturn playersTurn.containsKey(player);\n\t}\n", "\tpublic static boolean isPlayerInGame(ServerPlayerEntity player) {\n\t\treturn playersTurn.containsKey(player);\n\t}\n\n\tpublic static MovementSpeed getPlayerMovementSpeed(ServerPlayerEntity player) {\n\t\treturn playerMove.get(player);\n\t}\n\n\tpublic static void setPlayerMovementSpeed(ServerPlayerEntity player, MovementSpeed movementSpeed) {\n\t\tplayerMove.put(player, movementSpeed);\n\t}\n", "\tpublic static void setPlayerMovementSpeed(ServerPlayerEntity player, MovementSpeed movementSpeed) {\n\t\tplayerMove.put(player, movementSpeed);\n\t}\n\n\tpublic static void setmainPlayerpos(ServerPlayerEntity player) {\n\t\tplayerMove.get(player).setMain(player.getBlockPos());\n\t}\n\n\tpublic static void setmainPlayerPosServerWide(MinecraftServer server) {\n\t\tfor (ServerPlayerEntity player : PlayerLookup.all(server)) {\n\t\t\tsetmainPlayerpos(player);\n\t\t\tgetPlayerMovementSpeed(player).resetMovement();\n\t\t}\n\t}\n", "\tpublic static void setmainPlayerPosServerWide(MinecraftServer server) {\n\t\tfor (ServerPlayerEntity player : PlayerLookup.all(server)) {\n\t\t\tsetmainPlayerpos(player);\n\t\t\tgetPlayerMovementSpeed(player).resetMovement();\n\t\t}\n\t}\n\n\tpublic static void nextTurn() {\n\t\tcurrTurn++;\n\t\tif (currTurn > playerCount) {\n\t\t\tcurrTurn = 1;\n\t\t}\n\t}\n", "\t\tif (currTurn > playerCount) {\n\t\t\tcurrTurn = 1;\n\t\t}\n\t}\n\n\tpublic static int getCurrTurn() {\n\t\treturn currTurn;\n\t}\n\n\tpublic static void endGame(MinecraftServer server) {\n\t\tfor (ServerPlayerEntity player : server.getPlayerManager().getPlayerList()) {\n\t\t\tplayer.sendMessage(Text.literal(\"Game has ended\"), false);\n\t\t}\n\t\tgameStarted = false;\n\t}\n\n}\n", "\tpublic static void endGame(MinecraftServer server) {\n\t\tfor (ServerPlayerEntity player : server.getPlayerManager().getPlayerList()) {\n\t\t\tplayer.sendMessage(Text.literal(\"Game has ended\"), false);\n\t\t}\n\t\tgameStarted = false;\n\t}\n\n}\n"]}
{"filename": "src/main/java/net/mexicanminion/dndminecraft/mixin/TitleScreenMixin.java", "chunked_list": ["package net.mexicanminion.dndminecraft.mixin;\n\nimport net.mexicanminion.dndminecraft.DNDMinecraft;\nimport net.minecraft.client.gui.screen.TitleScreen;\nimport org.spongepowered.asm.mixin.Mixin;\nimport org.spongepowered.asm.mixin.injection.At;\nimport org.spongepowered.asm.mixin.injection.Inject;\nimport org.spongepowered.asm.mixin.injection.callback.CallbackInfo;\n\n@Mixin(TitleScreen.class)\npublic class TitleScreenMixin {\n\t@Inject(method = \"init\", at = @At(\"TAIL\"))", "\n@Mixin(TitleScreen.class)\npublic class TitleScreenMixin {\n\t@Inject(method = \"init\", at = @At(\"TAIL\"))\n\tpublic void exampleMod$onInit(CallbackInfo ci) {\n\t\tDNDMinecraft.LOGGER.info(\"This line is printed by an example mod mixin!\");\n\t}\n}\n"]}
{"filename": "src/main/java/net/mexicanminion/dndminecraft/character/PlayerChar.java", "chunked_list": ["package net.mexicanminion.dndminecraft.character;\n\nimport net.mexicanminion.dndminecraft.character.race.Gnome;\nimport net.mexicanminion.dndminecraft.character.race.RaceType;\n\npublic class PlayerChar {\n\n\tCharStats stats;\n\tRaceType type;\n\n\tpublic PlayerChar(int strength, int dexterity, int constitution, int intelligence, int wisdom, int charisma, int level, int race, String name, int subRace) {\n\t\tstats = new CharStats(strength, dexterity, constitution, intelligence, wisdom, charisma, level);", "\t\tif (race == 1){\n\t\t\ttype = new Gnome(name, subRace);\n\t\t}\n\t}\n\n\tpublic int getAC(){\n\t\treturn 10 + stats.getModifier(stats.getDexterity());\n\t}\n\n\tpublic int getInitiative(){\n\t\treturn stats.getModifier(stats.getDexterity());\n\t}\n", "\tpublic int getInitiative(){\n\t\treturn stats.getModifier(stats.getDexterity());\n\t}\n\n\tpublic int getAblityScoreModifier(String stat){\n\t\tswitch (stat){\n\t\t\tcase \"strength\":\n\t\t\t\tif (type.getAbilityScoreIncrease(type.getSubRace()).containsKey(\"strength\")){\n\t\t\t\t\treturn stats.getModifier(stats.getStrength()) + (int) type.getAbilityScoreIncrease(type.getSubRace()).get(\"strength\");\n\t\t\t\t}\n\t\t\t\treturn stats.getModifier(stats.getStrength());\n\t\t\tcase \"dexterity\":", "\t\t\t\tif (type.getAbilityScoreIncrease(type.getSubRace()).containsKey(\"dexterity\")){\n\t\t\t\t\treturn stats.getModifier(stats.getDexterity()) + (int) type.getAbilityScoreIncrease(type.getSubRace()).get(\"dexterity\");\n\t\t\t\t}\n\t\t\t\treturn stats.getModifier(stats.getDexterity());\n\t\t\tcase \"constitution\":\n\t\t\t\tif (type.getAbilityScoreIncrease(type.getSubRace()).containsKey(\"constitution\")){\n\t\t\t\t\treturn stats.getModifier(stats.getConstitution()) + (int) type.getAbilityScoreIncrease(type.getSubRace()).get(\"constitution\");\n\t\t\t\t}\n\t\t\t\treturn stats.getModifier(stats.getConstitution());\n\t\t\tcase \"intelligence\":\n\t\t\t\tif (type.getAbilityScoreIncrease(type.getSubRace()).containsKey(\"intelligence\")){\n\t\t\t\t\treturn stats.getModifier(stats.getIntelligence()) + (int) type.getAbilityScoreIncrease(type.getSubRace()).get(\"intelligence\");\n\t\t\t\t}\n\t\t\t\treturn stats.getModifier(stats.getIntelligence());\n\t\t\tcase \"wisdom\":", "\t\t\t\tif (type.getAbilityScoreIncrease(type.getSubRace()).containsKey(\"intelligence\")){\n\t\t\t\t\treturn stats.getModifier(stats.getIntelligence()) + (int) type.getAbilityScoreIncrease(type.getSubRace()).get(\"intelligence\");\n\t\t\t\t}\n\t\t\t\treturn stats.getModifier(stats.getIntelligence());\n\t\t\tcase \"wisdom\":\n\t\t\t\tif (type.getAbilityScoreIncrease(type.getSubRace()).containsKey(\"wisdom\")){\n\t\t\t\t\treturn stats.getModifier(stats.getWisdom()) + (int) type.getAbilityScoreIncrease(type.getSubRace()).get(\"wisdom\");\n\t\t\t\t}\n\t\t\t\treturn stats.getModifier(stats.getWisdom());\n\t\t\tcase \"charisma\":\n\t\t\t\tif (type.getAbilityScoreIncrease(type.getSubRace()).containsKey(\"charisma\")){\n\t\t\t\t\treturn stats.getModifier(stats.getCharisma()) + (int) type.getAbilityScoreIncrease(type.getSubRace()).get(\"charisma\");\n\t\t\t\t}\n\t\t\t\treturn stats.getModifier(stats.getCharisma());\n\t\t\tdefault:\n\t\t\t\treturn 0;\n\t\t}\n\t}\n", "\t\t\t\tif (type.getAbilityScoreIncrease(type.getSubRace()).containsKey(\"charisma\")){\n\t\t\t\t\treturn stats.getModifier(stats.getCharisma()) + (int) type.getAbilityScoreIncrease(type.getSubRace()).get(\"charisma\");\n\t\t\t\t}\n\t\t\t\treturn stats.getModifier(stats.getCharisma());\n\t\t\tdefault:\n\t\t\t\treturn 0;\n\t\t}\n\t}\n\n\tpublic int getStrength() {\n\t\tif (type.getAbilityScoreIncrease(type.getSubRace()).containsKey(\"strength\")){\n\t\t\treturn stats.getModifier(stats.getStrength()) + (int) type.getAbilityScoreIncrease(type.getSubRace()).get(\"strength\");\n\t\t}\n\t\treturn stats.getModifier(stats.getStrength());\n\n\t}\n", "\tpublic int getStrength() {\n\t\tif (type.getAbilityScoreIncrease(type.getSubRace()).containsKey(\"strength\")){\n\t\t\treturn stats.getModifier(stats.getStrength()) + (int) type.getAbilityScoreIncrease(type.getSubRace()).get(\"strength\");\n\t\t}\n\t\treturn stats.getModifier(stats.getStrength());\n\n\t}\n\n\tpublic int getDexterity() {\n\t\tif (type.getAbilityScoreIncrease(type.getSubRace()).containsKey(\"dexterity\")){\n\t\t\treturn stats.getModifier(stats.getDexterity()) + (int) type.getAbilityScoreIncrease(type.getSubRace()).get(\"dexterity\");\n\t\t}\n\t\treturn stats.getModifier(stats.getDexterity());\n\t}\n", "\tpublic int getDexterity() {\n\t\tif (type.getAbilityScoreIncrease(type.getSubRace()).containsKey(\"dexterity\")){\n\t\t\treturn stats.getModifier(stats.getDexterity()) + (int) type.getAbilityScoreIncrease(type.getSubRace()).get(\"dexterity\");\n\t\t}\n\t\treturn stats.getModifier(stats.getDexterity());\n\t}\n\n\tpublic int getConstitution() {\n\t\tif (type.getAbilityScoreIncrease(type.getSubRace()).containsKey(\"constitution\")){\n\t\t\treturn stats.getModifier(stats.getConstitution()) + (int) type.getAbilityScoreIncrease(type.getSubRace()).get(\"constitution\");\n\t\t}\n\t\treturn stats.getModifier(stats.getConstitution());\n\t}\n", "\t\tif (type.getAbilityScoreIncrease(type.getSubRace()).containsKey(\"constitution\")){\n\t\t\treturn stats.getModifier(stats.getConstitution()) + (int) type.getAbilityScoreIncrease(type.getSubRace()).get(\"constitution\");\n\t\t}\n\t\treturn stats.getModifier(stats.getConstitution());\n\t}\n\n\tpublic int getIntelligence() {\n\t\tif (type.getAbilityScoreIncrease(type.getSubRace()).containsKey(\"intelligence\")){\n\t\t\treturn stats.getModifier(stats.getIntelligence()) + (int) type.getAbilityScoreIncrease(type.getSubRace()).get(\"intelligence\");\n\t\t}\n\t\treturn stats.getModifier(stats.getIntelligence());\n\t}\n", "\tpublic int getWisdom() {\n\t\tif (type.getAbilityScoreIncrease(type.getSubRace()).containsKey(\"wisdom\")){\n\t\t\treturn stats.getModifier(stats.getWisdom()) + (int) type.getAbilityScoreIncrease(type.getSubRace()).get(\"wisdom\");\n\t\t}\n\t\treturn stats.getModifier(stats.getWisdom());\n\t}\n\n\tpublic int getCharisma() {\n\t\tif (type.getAbilityScoreIncrease(type.getSubRace()).containsKey(\"charisma\")){\n\t\t\treturn stats.getModifier(stats.getCharisma()) + (int) type.getAbilityScoreIncrease(type.getSubRace()).get(\"charisma\");\n\t\t}\n\t\treturn stats.getModifier(stats.getCharisma());\n\t}\n", "\t\tif (type.getAbilityScoreIncrease(type.getSubRace()).containsKey(\"charisma\")){\n\t\t\treturn stats.getModifier(stats.getCharisma()) + (int) type.getAbilityScoreIncrease(type.getSubRace()).get(\"charisma\");\n\t\t}\n\t\treturn stats.getModifier(stats.getCharisma());\n\t}\n\n\tpublic int getSavingThrow(String stat){\n\n\t\tswitch (stat.toLowerCase()){\n\t\t\tcase \"strength\":\n\t\t\t\treturn stats.getSavingThrow(stats.getStrength(), true);\n\t\t\tcase \"dexterity\":\n\t\t\t\treturn stats.getSavingThrow(stats.getDexterity(), false);\n\t\t\tcase \"constitution\":\n\t\t\t\treturn stats.getSavingThrow(stats.getConstitution(), false);\n\t\t\tcase \"intelligence\":\n\t\t\t\treturn stats.getSavingThrow(stats.getIntelligence(), true);\n\t\t\tcase \"wisdom\":\n\t\t\t\treturn stats.getSavingThrow(stats.getWisdom(), true);\n\t\t\tcase \"charisma\":\n\t\t\t\treturn stats.getSavingThrow(stats.getCharisma(), false);\n\t\t\tdefault:\n\t\t\t\treturn -1;\n\t\t}\n\t}\n", "\tpublic void setStrength(int strength) {\n\t\tstats.setStrength(strength);\n\t}\n\tpublic void setDexterity(int dexterity) {\n\t\tstats.setDexterity(dexterity);\n\t}\n\n\tpublic void setConstitution(int constitution) {\n\t\tstats.setConstitution(constitution);\n\t}\n", "\tpublic void setIntelligence(int intelligence) {\n\t\tstats.setIntelligence(intelligence);\n\t}\n\n\tpublic void setWisdom(int wisdom) {\n\t\tstats.setWisdom(wisdom);\n\t}\n\n\tpublic void setCharisma(int charisma) {\n\t\tstats.setCharisma(charisma);\n\t}\n", "\tpublic void setCharisma(int charisma) {\n\t\tstats.setCharisma(charisma);\n\t}\n\n\tpublic String getName(){\n\t\treturn type.getName();\n\t}\n\n\tpublic int getSubRace(){\n\t\treturn type.getSubRace();\n\t}\n", "\tpublic int getSubRace(){\n\t\treturn type.getSubRace();\n\t}\n\n\tpublic int getSize(){\n\t\treturn type.getSize();\n\t}\n\n\tpublic int getSpeed(){\n\t\treturn type.getSpeed();\n\t}\n", "\tpublic int getSpeed(){\n\t\treturn type.getSpeed();\n\t}\n\n\tpublic int getDarkvision(){\n\t\treturn type.getDarkvision();\n\t}\n\n}\n"]}
{"filename": "src/main/java/net/mexicanminion/dndminecraft/character/CharStats.java", "chunked_list": ["package net.mexicanminion.dndminecraft.character;\n\npublic class CharStats {\n\n\tprivate int strength;\n\tprivate int dexterity;\n\tprivate int constitution;\n\tprivate int intelligence;\n\tprivate int wisdom;\n\tprivate int charisma;\n\n\tprivate int level;\n\n\tpublic CharStats(int strength, int dexterity, int constitution, int intelligence, int wisdom, int charisma, int level) {\n\t\tthis.strength = strength;\n\t\tthis.dexterity = dexterity;\n\t\tthis.constitution = constitution;\n\t\tthis.intelligence = intelligence;\n\t\tthis.wisdom = wisdom;\n\t\tthis.charisma = charisma;\n\t\tthis.level = level;\n\t}\n", "\tpublic int getModifier(int stat){\n\t\treturn (int) Math.floor((stat - 10) / 2);\n\t}\n\n\tpublic int getSavingThrow(int stat, boolean proficient){\n\t\tif (proficient){\n\t\t\treturn getModifier(stat) + getProficiencyBonus(level);\n\t\t}\n\t\treturn getModifier(stat);\n\t}\n", "\tpublic int getProficiencyBonus(int lvl){\n\t\t//floor(lvl-1)+2\n\t\t//https://roll20.net/compendium/dnd5e/Character%20Advancement#content\n\t\treturn (int) (Math.floor(lvl-1)+2);\n\t}\n\n\tpublic int getStrength() {\n\t\treturn strength;\n\t}\n\tpublic void setStrength(int strength) {\n\t\tthis.strength = strength;\n\t}", "\tpublic void setStrength(int strength) {\n\t\tthis.strength = strength;\n\t}\n\tpublic int getDexterity() {\n\t\treturn dexterity;\n\t}\n\tpublic void setDexterity(int dexterity) {\n\t\tthis.dexterity = dexterity;\n\t}\n\tpublic int getConstitution() {\n\t\treturn constitution;\n\t}", "\tpublic int getConstitution() {\n\t\treturn constitution;\n\t}\n\tpublic void setConstitution(int constitution) {\n\t\tthis.constitution = constitution;\n\t}\n\tpublic int getIntelligence() {\n\t\treturn intelligence;\n\t}\n\tpublic void setIntelligence(int intelligence) {\n\t\tthis.intelligence = intelligence;\n\t}", "\tpublic void setIntelligence(int intelligence) {\n\t\tthis.intelligence = intelligence;\n\t}\n\tpublic int getWisdom() {\n\t\treturn wisdom;\n\t}\n\tpublic void setWisdom(int wisdom) {\n\t\tthis.wisdom = wisdom;\n\t}\n\tpublic int getCharisma() {\n\t\treturn charisma;\n\t}", "\tpublic int getCharisma() {\n\t\treturn charisma;\n\t}\n\tpublic void setCharisma(int charisma) {\n\t\tthis.charisma = charisma;\n\t}\n\n}\n"]}
{"filename": "src/main/java/net/mexicanminion/dndminecraft/character/race/RaceType.java", "chunked_list": ["package net.mexicanminion.dndminecraft.character.race;\n\nimport java.util.HashMap;\n\npublic interface RaceType {\n\tString getName();\n\tint getSubRace();\n\tHashMap getAbilityScoreIncrease(int subRace);\n\tint getSize();\n\tint getSpeed();\n\tint getDarkvision();\n}\n"]}
{"filename": "src/main/java/net/mexicanminion/dndminecraft/character/race/Gnome.java", "chunked_list": ["package net.mexicanminion.dndminecraft.character.race;\n\nimport java.util.HashMap;\n\npublic class Gnome implements RaceType{\n\n\tString name;\n\tint subRace;\n\tString traits;\n\tString subRaceTraits;\n\tHashMap<String, Integer> abilityScoreIncrease = new HashMap<>();\n\n\tpublic Gnome(String name, int subRace) {\n\t\tthis.name = name;\n\t\tthis.subRace = subRace;\n\t\tabilityScoreIncrease.put(\"intelligence\", 2);\n\t}\n\n\t@Override", "\tpublic String getName() {\n\t\treturn name;\n\t}\n\n\t@Override\n\tpublic int getSubRace() {\n\t\treturn subRace;\n\t}\n\n\t@Override\n\tpublic HashMap getAbilityScoreIncrease(int subRace) {", "\tpublic HashMap getAbilityScoreIncrease(int subRace) {\n\t\tif (subRace == 2)\n\t\t\tabilityScoreIncrease.put(\"constitution\", 1);\n\t\treturn abilityScoreIncrease;\n\t}\n\n\t@Override\n\tpublic int getSize() {\n\t\t//size small\n\t\treturn 1;\n\t}\n\n\t@Override", "\tpublic int getSpeed() {\n\t\t//walking speed 25 feet\n\t\treturn 25;\n\t}\n\n\t@Override\n\tpublic int getDarkvision() {\n\t\t//darkvision 60 feet\n\t\treturn 60;\n\t}\n}\n"]}
