{"filename": "src/test/java/com/gld/model/GodLifeDiaryApplicationTests.java", "chunked_list": ["package com.gld.model;\n\nimport org.junit.jupiter.api.Test;\nimport org.springframework.boot.test.context.SpringBootTest;\n\n@SpringBootTest\nclass GodLifeDiaryApplicationTests {\n\n\t@Test\n\tvoid contextLoads() {", "\t@Test\n\tvoid contextLoads() {\n\t}\n\n}\n"]}
{"filename": "src/main/java/com/gld/model/GodLifeDiaryApplication.java", "chunked_list": ["package com.gld.model;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.stereotype.Controller;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.servlet.config.annotation.WebMvcConfigurer;\n\nimport com.gld.model.interceptor.WebMvcConfig;", "\nimport com.gld.model.interceptor.WebMvcConfig;\n\nimport springfox.documentation.swagger2.annotations.EnableSwagger2;\n\n@Controller\n@EnableSwagger2\n@SpringBootApplication\npublic class GodLifeDiaryApplication {\n\n\tpublic static void main(String[] args) {\n\t\tSpringApplication.run(GodLifeDiaryApplication.class, args);\n\t}\n\t\n\t@RequestMapping(\"/\")", "public class GodLifeDiaryApplication {\n\n\tpublic static void main(String[] args) {\n\t\tSpringApplication.run(GodLifeDiaryApplication.class, args);\n\t}\n\t\n\t@RequestMapping(\"/\")\n\tpublic String root() {\n\t\treturn \"index\";\n\t}\n\t@Bean", "    public WebMvcConfigurer webMvcConfigurer() {\n        return (WebMvcConfigurer) new WebMvcConfig();\n    }\n\n}\n"]}
{"filename": "src/main/java/com/gld/model/repository/RegisteredMemberRepository.java", "chunked_list": ["package com.gld.model.repository;\n\nimport java.util.List;\n\nimport org.springframework.data.jpa.repository.JpaRepository;\n\nimport com.gld.model.dto.RegisteredMemberDto;\nimport com.gld.model.dto.RegisteredMemberDtoPK;\n\npublic interface RegisteredMemberRepository extends JpaRepository<RegisteredMemberDto, RegisteredMemberDtoPK> {\n\tList<RegisteredMemberDto> findAll();\n\n}\n", "\npublic interface RegisteredMemberRepository extends JpaRepository<RegisteredMemberDto, RegisteredMemberDtoPK> {\n\tList<RegisteredMemberDto> findAll();\n\n}\n"]}
{"filename": "src/main/java/com/gld/model/repository/CommentRepository.java", "chunked_list": ["package com.gld.model.repository;\n\nimport java.time.LocalDate;\nimport java.util.List;\n\nimport org.springframework.data.jpa.repository.JpaRepository;\nimport org.springframework.stereotype.Repository;\n\nimport com.gld.model.dto.ChallengeDto;\nimport com.gld.model.dto.CommentDto;", "import com.gld.model.dto.ChallengeDto;\nimport com.gld.model.dto.CommentDto;\nimport com.gld.model.dto.CommentId;\nimport com.gld.model.dto.RegisteredMemberDto;\n\n@Repository\npublic interface CommentRepository extends JpaRepository<CommentDto,CommentId>{\n\tCommentDto findOneBySeqAndIdAndCommentDate(Long seq, Integer id, LocalDate commentDate);\n\tList<CommentDto> findBySeqAndCommentDate(Long seq, LocalDate commentDate);\n\tList<CommentDto> findAll();\n}"]}
{"filename": "src/main/java/com/gld/model/repository/UserRepository.java", "chunked_list": ["package com.gld.model.repository;\n\n\nimport org.springframework.data.jpa.repository.JpaRepository;\nimport org.springframework.stereotype.Repository;\n\nimport com.gld.model.dto.UserDto;\n\n\n@Repository\npublic interface UserRepository extends JpaRepository<UserDto, Long> {\n\n\tUserDto findByUserId(String userId);\n\t\n}\n\n", "\n@Repository\npublic interface UserRepository extends JpaRepository<UserDto, Long> {\n\n\tUserDto findByUserId(String userId);\n\t\n}\n\n"]}
{"filename": "src/main/java/com/gld/model/repository/ChallengeRepository.java", "chunked_list": ["package com.gld.model.repository;\n\nimport java.util.List;\n\nimport org.springframework.data.jpa.repository.JpaRepository;\nimport org.springframework.stereotype.Repository;\n\nimport com.gld.model.dto.ChallengeDto;\nimport com.gld.model.dto.UserDto;\n", "import com.gld.model.dto.UserDto;\n\n@Repository\npublic interface ChallengeRepository extends JpaRepository<ChallengeDto, Long> {\n\tList<ChallengeDto> findAll();\n\n\tChallengeDto findByChallengeName(String challengeName);\n\n\tList<ChallengeDto> findByChallengeCategory(String challengeCategory);\n\n\tChallengeDto findBySeq(Long seq);\n\n}"]}
{"filename": "src/main/java/com/gld/model/biz/RegisteredBiz.java", "chunked_list": ["package com.gld.model.biz;\n\nimport java.util.List;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\n\nimport com.gld.model.dto.RegisteredMemberDto;\nimport com.gld.model.mapper.RegisteredMemberMapper;\nimport com.gld.model.repository.RegisteredMemberRepository;", "import com.gld.model.mapper.RegisteredMemberMapper;\nimport com.gld.model.repository.RegisteredMemberRepository;\n\n@Service\npublic class RegisteredBiz {\n\t@Autowired\n\tprivate RegisteredMemberMapper mapper;\n\t\n\tpublic int coutBySeq(String seq) {\n\t\treturn mapper.countBySeq(seq);\n\t}\n\t", "\tpublic int coutBySeq(String seq) {\n\t\treturn mapper.countBySeq(seq);\n\t}\n\t\n\tpublic int insert(String challengeSeq, Long id) {\n\t\t// TODO Auto-generated method stub\n\t\tint res = mapper.insertRegister(challengeSeq, id);\n\t\tSystem.out.println(\"biz insert res: \" + res);\n\t\treturn res;\n\t}\n", "\tpublic void challengeStart(String challengeSeq) {\n\t\t// TODO Auto-generated method stub\n\t\tmapper.challengeStart(challengeSeq);\n\t}\n\t\n\t\n\t\n\t//jpa\n\t@Autowired\n\tprivate RegisteredMemberRepository rmRepository;\n\t\n\tpublic List<RegisteredMemberDto> selectAll() {\n\n\t\treturn rmRepository.findAll();\n    }", "\tpublic int delete(String challengeSeq, Long id) {\n\t\treturn mapper.deleteRegister(challengeSeq, id);\n\t}\n\t\n}\n"]}
{"filename": "src/main/java/com/gld/model/biz/ChallengeBiz.java", "chunked_list": ["package com.gld.model.biz;\n\nimport java.util.List;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\nimport org.springframework.transaction.annotation.Transactional;\n\nimport com.gld.model.dto.ChallengeDto;\nimport com.gld.model.repository.ChallengeRepository;", "import com.gld.model.dto.ChallengeDto;\nimport com.gld.model.repository.ChallengeRepository;\n\n@Service\n@Transactional\npublic class ChallengeBiz {\n\n\n\t@Autowired\n\tprivate ChallengeRepository challengeRepository;\n", "\tpublic void insert(ChallengeDto dto) {\n\n\t\tchallengeRepository.save(dto);\n\t}\n\n\tpublic List<ChallengeDto> selectAll() {\n\n\t\treturn challengeRepository.findAll();\n\t}\n\n\tpublic ChallengeDto selectOne(String ChallengeName) {\n\t\treturn challengeRepository.findByChallengeName(ChallengeName);\n\t}\n\n\tpublic List<ChallengeDto> findbyCate(String ChallengeCategory) {\n\t\treturn challengeRepository.findByChallengeCategory(ChallengeCategory);\n\t}\n\t", "\tpublic ChallengeDto selectOne(String ChallengeName) {\n\t\treturn challengeRepository.findByChallengeName(ChallengeName);\n\t}\n\n\tpublic List<ChallengeDto> findbyCate(String ChallengeCategory) {\n\t\treturn challengeRepository.findByChallengeCategory(ChallengeCategory);\n\t}\n\t\n\tpublic ChallengeDto selectOneBySeq(String seq) {\n\t\treturn challengeRepository.findBySeq(Long.parseLong(seq));\n\t}\n}", "\tpublic ChallengeDto selectOneBySeq(String seq) {\n\t\treturn challengeRepository.findBySeq(Long.parseLong(seq));\n\t}\n}"]}
{"filename": "src/main/java/com/gld/model/biz/KakaoLoginBiz.java", "chunked_list": ["package com.gld.model.biz;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\n\nimport com.gld.model.dto.UserDto;\nimport com.gld.model.mapper.KakaoLoginMapper;\n\n@Service\npublic class KakaoLoginBiz {\n\t\n\t@Autowired\n\tprivate KakaoLoginMapper kakao;\n", "@Service\npublic class KakaoLoginBiz {\n\t\n\t@Autowired\n\tprivate KakaoLoginMapper kakao;\n\n\tpublic int insert(UserDto dto) {\n\t\treturn kakao.insertUser(dto);\n\t}\n\n}\n"]}
{"filename": "src/main/java/com/gld/model/biz/CommentBiz.java", "chunked_list": ["package com.gld.model.biz;\n\nimport java.time.LocalDate;\nimport java.util.List;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\n\nimport com.gld.model.dto.ChallengeDto;\nimport com.gld.model.dto.CommentDto;", "import com.gld.model.dto.ChallengeDto;\nimport com.gld.model.dto.CommentDto;\nimport com.gld.model.dto.RegisteredMemberDto;\nimport com.gld.model.repository.CommentRepository;\nimport com.gld.model.repository.RegisteredMemberRepository;\n\n@Service\npublic class CommentBiz {\n\t@Autowired\n\tprivate CommentRepository commentRepository;\n\t", "\tpublic CommentDto selectComment(Long seq, Integer id, LocalDate commentDate) {\n\t\treturn commentRepository.findOneBySeqAndIdAndCommentDate(seq, id, commentDate);\n\t}\n\t\n\tpublic List<CommentDto> selectComments(Long seq, LocalDate commentDate) {\n\t\treturn commentRepository.findBySeqAndCommentDate(seq, commentDate);\n\t}\n\t\n\t\t\n\tpublic List<CommentDto> selectAll() {\n\n\t\t\treturn commentRepository.findAll();\n\t}", "\tpublic void insert(CommentDto dto) {\n\n\t\tcommentRepository.save(dto);\n\t}\n}"]}
{"filename": "src/main/java/com/gld/model/biz/LoginBiz.java", "chunked_list": ["package com.gld.model.biz;\n\nimport javax.transaction.Transactional;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\n\nimport com.gld.model.dto.UserDto;\nimport com.gld.model.mapper.UserMapper;\nimport com.gld.model.repository.UserRepository;", "import com.gld.model.mapper.UserMapper;\nimport com.gld.model.repository.UserRepository;\n\n@Service\n@Transactional\npublic class LoginBiz {\n\n\t@Autowired\n\tprivate UserRepository userRepository;\n\t\n\t@Autowired\n\tprivate UserMapper usermapper;\n\t", "\tpublic UserDto findByUserId(String userId) {\n\n\t\tUserDto user = userRepository.findByUserId(userId);\n\n\t\treturn user;\n\t}\n\n\tpublic void insert(UserDto dto) {\n\n\t\tuserRepository.save(dto);\n\t}\n", "\tpublic int changePw(UserDto user, String userPw) {\n\t\treturn usermapper.updatePw(user.getId(), userPw);\n\t}\n\t\n}\n\n"]}
{"filename": "src/main/java/com/gld/model/swagger/SwaggerConfig.java", "chunked_list": ["package com.gld.model.swagger;\n\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\n\nimport springfox.documentation.builders.PathSelectors;\nimport springfox.documentation.builders.RequestHandlerSelectors;\nimport springfox.documentation.spi.DocumentationType;\nimport springfox.documentation.spring.web.plugins.Docket;\n// Swagger \uc124\uc815\uc744 \uc704\ud55c \ud074\ub798\uc2a4", "import springfox.documentation.spring.web.plugins.Docket;\n// Swagger \uc124\uc815\uc744 \uc704\ud55c \ud074\ub798\uc2a4\n@Configuration\npublic class SwaggerConfig {\n\t@Bean\n\tpublic Docket api() {\n\t\treturn new Docket(DocumentationType.SWAGGER_2).select().apis(RequestHandlerSelectors.any())\n\t\t\t\t.paths(PathSelectors.any()).build();\n\t}\n}\n"]}
{"filename": "src/main/java/com/gld/model/interceptor/LoginInterceptor.java", "chunked_list": ["package com.gld.model.interceptor;\n\nimport java.io.IOException;\n\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport org.springframework.web.servlet.HandlerInterceptor;\nimport org.springframework.web.servlet.ModelAndView;\n\npublic class LoginInterceptor implements HandlerInterceptor{\n\t//Controller \uc2e4\ud589 \uc694\uccad \uc804\uc5d0 \uc218\ud589\ub418\ub294 \uba54\uc18c\ub4dc\n\t//return false\uc77c \uacbd\uc6b0 controller \uc2e4\ud589 x\n\t@Override", "\npublic class LoginInterceptor implements HandlerInterceptor{\n\t//Controller \uc2e4\ud589 \uc694\uccad \uc804\uc5d0 \uc218\ud589\ub418\ub294 \uba54\uc18c\ub4dc\n\t//return false\uc77c \uacbd\uc6b0 controller \uc2e4\ud589 x\n\t@Override\n\tpublic boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) throws IOException {\n\t\tSystem.out.println(request.getRequestURI());\n\t\tif(request.getSession().getAttribute(\"user\")==null) {\n\t\t\tresponse.sendRedirect(request.getContextPath() + \"/login/login\");\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t\t\n\t}\n\t\n\t//view\ub2e8\uc73c\ub85c forward \ub418\uae30\uc804\uc5d0 \uc218\ud589 \n\t@Override", "\tpublic void postHandle(HttpServletRequest request, HttpServletResponse response, Object handler, ModelAndView modelAndView) {\n\n\t}\n\t\n\t//view\uae4c\uc9c0 \ucc98\ub9ac \ub05d\ub09c \ud6c4 \uc218\ud589 \n\t\t@Override\n\t\tpublic void afterCompletion(HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex){\n\n\t}\n}\n"]}
{"filename": "src/main/java/com/gld/model/interceptor/WebMvcConfig.java", "chunked_list": ["package com.gld.model.interceptor;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.web.servlet.config.annotation.InterceptorRegistry;\nimport org.springframework.web.servlet.config.annotation.WebMvcConfigurer;\n\n@Configuration\npublic class WebMvcConfig implements WebMvcConfigurer {\n\t\n\t\t@Bean", "@Configuration\npublic class WebMvcConfig implements WebMvcConfigurer {\n\t\n\t\t@Bean\n\t\tpublic LoginInterceptor loginInterceptor() {\n\t\t        return new LoginInterceptor();\n\t\t}\n\n\t    @Override\n\t    public void addInterceptors(InterceptorRegistry registry) {\n\t        registry.addInterceptor(loginInterceptor())\n\t                .addPathPatterns(\"/**\")  \n\t                .excludePathPatterns(\"/challenge/main*\",\"/login/**\",\"/css/**\", \"/js/**\", \"/images/**\",\"/\",\"/resources/**\",\"/index/**\", \"/kakaoAuth/**\", \"/error\"); \n\t    }\n\t\n}\n", "\t    public void addInterceptors(InterceptorRegistry registry) {\n\t        registry.addInterceptor(loginInterceptor())\n\t                .addPathPatterns(\"/**\")  \n\t                .excludePathPatterns(\"/challenge/main*\",\"/login/**\",\"/css/**\", \"/js/**\", \"/images/**\",\"/\",\"/resources/**\",\"/index/**\", \"/kakaoAuth/**\", \"/error\"); \n\t    }\n\t\n}\n"]}
{"filename": "src/main/java/com/gld/model/controller/IndexController.java", "chunked_list": ["package com.gld.model.controller;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Controller;\nimport org.springframework.ui.Model;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.PostMapping;\nimport org.springframework.web.bind.annotation.RequestBody;\nimport org.springframework.web.bind.annotation.RequestMapping;\n", "import org.springframework.web.bind.annotation.RequestMapping;\n\nimport com.gld.model.biz.LoginBiz;\nimport com.gld.model.dto.UserDto;\n\n@Controller\n@RequestMapping(\"/index\")\npublic class IndexController {\n\n\t@Autowired\n\tLoginBiz loginBiz;\n\t/*\n\t@GetMapping(\"/main\")", "\tpublic String moveToMain() {\n\t\tSystem.out.println(\"go to main\");\n\t\treturn \"main\";\n\t}*/\n\n\t@GetMapping(\"/index\")\n\tpublic String goToIndex() {\n\t\treturn \"index\";\n\t}\n\n\n\t@GetMapping(\"/kakao_login\")", "\tpublic String kakaloLoging() {\n\t\treturn \"kakao_login\";\n\t}\n}\n"]}
{"filename": "src/main/java/com/gld/model/controller/ChallengeController.java", "chunked_list": ["package com.gld.model.controller;\n\nimport java.time.LocalDate;\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.format.annotation.DateTimeFormat;", "import org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.format.annotation.DateTimeFormat;\nimport org.springframework.stereotype.Controller;\nimport org.springframework.ui.Model;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.PostMapping;\nimport org.springframework.web.bind.annotation.RequestBody;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RequestMethod;\nimport org.springframework.web.bind.annotation.RequestParam;", "import org.springframework.web.bind.annotation.RequestMethod;\nimport org.springframework.web.bind.annotation.RequestParam;\nimport org.springframework.web.bind.annotation.ResponseBody;\n\nimport com.fasterxml.jackson.core.JsonProcessingException;\nimport com.fasterxml.jackson.core.type.TypeReference;\nimport com.fasterxml.jackson.databind.JsonMappingException;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport com.gld.model.biz.ChallengeBiz;\nimport com.gld.model.biz.CommentBiz;", "import com.gld.model.biz.ChallengeBiz;\nimport com.gld.model.biz.CommentBiz;\nimport com.gld.model.biz.LoginBiz;\nimport com.gld.model.biz.RegisteredBiz;\nimport com.gld.model.dto.ChallengeDto;\nimport com.gld.model.dto.CommentDto;\nimport com.gld.model.dto.CommentId;\nimport com.gld.model.dto.RegisteredMemberDto;\nimport com.gld.model.dto.UserDto;\n", "import com.gld.model.dto.UserDto;\n\n@Controller\n@RequestMapping(\"/challenge\")\npublic class ChallengeController {\n\n\t@Autowired\n\tprivate LoginBiz loginBiz;\n\n\t@Autowired\n\tprivate ChallengeBiz challengeBiz;\n\n\t@Autowired\n\tprivate RegisteredBiz registeredBiz;\n\t\n\t@Autowired\n\tprivate CommentBiz commentBiz;\n\n\t@GetMapping(\"/main\")", "\tpublic String getAllChallenges(Model model) {\n\t\t// \ubaa8\ub4e0 Challenge \uc5d4\ud2f0\ud2f0 \uc870\ud68c\n\t\tList<ChallengeDto> challenges = challengeBiz.selectAll();\n\t\t// \uc870\ud68c\ub41c \uc5d4\ud2f0\ud2f0\ub4e4\uc744 \ubaa8\ub378\uc5d0 \ub2f4\uc544\uc11c \ubdf0\ub85c \uc804\ub2ec\n\t\tmodel.addAttribute(\"challenges\", challenges);\n\t\tmodel.addAttribute(\"cate\", \"\uc804\uccb4\"); //\uc5b4\ub5a4 \uce74\ud14c\uace0\ub9ac\uc778\uc9c0 \ub744\uc6b0\ub824\uace0\n\n\t\t//REGISTERED_MEMBER \uc804\uccb4 \ubcf4\ub0b4\uae30\n\t\tList<RegisteredMemberDto> rmTotal = registeredBiz.selectAll();\n\t\tmodel.addAttribute(\"rmTotal\", rmTotal);\n\t\treturn \"main\";\n\t}\n\n\t   @GetMapping(\"/main_study\")", "\t   public String getStudyChallenges(Model model) {\n\t      String category = \"\uacf5\ubd80\";\n\t      List<ChallengeDto> challenges = challengeBiz.findbyCate(category);\n\t      model.addAttribute(\"challenges\", challenges);\n\t      model.addAttribute(\"cate\", category);\n\t      //REGISTERED_MEMBER \uc804\uccb4 \ubcf4\ub0b4\uae30\n\t      List<RegisteredMemberDto> rmTotal = registeredBiz.selectAll();\n\t      model.addAttribute(\"rmTotal\", rmTotal);\n\t      return \"main\";\n\t   } \n\n\t   @GetMapping(\"/main_habit\")", "\t   public String getHabitChallenges(Model model) {\n\t      String category = \"\uc2b5\uad00\";\n\t      List<ChallengeDto> challenges = challengeBiz.findbyCate(category);\n\t      model.addAttribute(\"challenges\", challenges);\n\t      model.addAttribute(\"cate\", category);\n\t      //REGISTERED_MEMBER \uc804\uccb4 \ubcf4\ub0b4\uae30\n\t      List<RegisteredMemberDto> rmTotal = registeredBiz.selectAll();\n\t      model.addAttribute(\"rmTotal\", rmTotal);\n\t      return \"main\";\n\t   }\n\n\t   @GetMapping(\"/main_hobby\")", "\t   public String getHobbyChallenges(Model model) {\n\t      String category = \"\ucde8\ubbf8\";\n\t      List<ChallengeDto> challenges = challengeBiz.findbyCate(category);\n\t      model.addAttribute(\"challenges\", challenges);\n\t      model.addAttribute(\"cate\", category);\n\t      //REGISTERED_MEMBER \uc804\uccb4 \ubcf4\ub0b4\uae30\n\t      List<RegisteredMemberDto> rmTotal = registeredBiz.selectAll();\n\t      model.addAttribute(\"rmTotal\", rmTotal);\n\t      return \"main\";\n\t   }\n\n\t   @GetMapping(\"/main_workout\")", "\t   public String getWorkoutChallenges(Model model) {\n\t      String category = \"\uc6b4\ub3d9\";\n\t      List<ChallengeDto> challenges = challengeBiz.findbyCate(category);\n\t      model.addAttribute(\"challenges\", challenges);\n\t      model.addAttribute(\"cate\", category);\n\t      //REGISTERED_MEMBER \uc804\uccb4 \ubcf4\ub0b4\uae30\n\t      List<RegisteredMemberDto> rmTotal = registeredBiz.selectAll();\n\t      model.addAttribute(\"rmTotal\", rmTotal);\n\t      return \"main\";\n\t   }\n\n\t@GetMapping(\"/detail\")", "\tpublic String moveToDetail(Model model, String challengeName) {\n\t\tChallengeDto challenge = challengeBiz.selectOne(challengeName);\n\n\t\tmodel.addAttribute(\"challenge\", challenge);\n\n\t\treturn \"challengedetail\";\n\t}\n\n\t@GetMapping(\"/detail_frommain\")\n\tpublic String moveToDetailFromMain(Model model, String challengeName) {\n\t\tChallengeDto challenge = challengeBiz.selectOne(challengeName);\n\n\t\tmodel.addAttribute(\"challenge\", challenge);\n\n\t\treturn \"challengedetail_frommain\";\n\t}\n\t\n\t@GetMapping(\"/insert\")", "\tpublic String moveToDetailFromMain(Model model, String challengeName) {\n\t\tChallengeDto challenge = challengeBiz.selectOne(challengeName);\n\n\t\tmodel.addAttribute(\"challenge\", challenge);\n\n\t\treturn \"challengedetail_frommain\";\n\t}\n\t\n\t@GetMapping(\"/insert\")\n\tpublic String insert() {\n\t\treturn \"challengeinsert\";\n\t}\n\n\t@PostMapping(\"/challengeinsert\")", "\tpublic String insert() {\n\t\treturn \"challengeinsert\";\n\t}\n\n\t@PostMapping(\"/challengeinsert\")\n\tpublic String challengeInsert(ChallengeDto dto) {\n\t\tchallengeBiz.insert(dto);\n\t\treturn \"challengeinsert_res\";\n\t}\n\t\n\t@PostMapping(\"/commentinsert\")\n\t@ResponseBody\n\tpublic Map<String,String> commentInsert(@RequestBody CommentDto dto) {\n\t\tSystem.out.println(dto.getSeq()+\" \" +dto.getId()+\" \"+dto.getCommentDate()+\" \"+dto.getComment()+\" \"+dto.getIsDone());\n\t\tcommentBiz.insert(dto);\n\t\tMap<String,String> map=new HashMap<>();\n\t\tmap.put(\"msg\", \"\ub4f1\ub85d\ub418\uc5c8\uc2b5\ub2c8\ub2e4.\");\n\t\t\n\t\treturn map;\n\t}\n\t\n\t @PostMapping(\"/ajaxComment\")\n\t @ResponseBody\n\t public Map<String, Object> commentDate(@RequestBody CommentId commentid) {\n\t\t \n\t\t   System.out.println(commentid.getSeq()+\" \" +commentid.getId()+\" \"+commentid.getCommentDate());\n\t\t   Map<String, Object> res = new HashMap<>();\n\t\t   \n\t\t   \n\t\t  CommentDto comment = commentBiz.selectComment(commentid.getSeq(), commentid.getId(), commentid.getCommentDate());\n\t\t  List<CommentDto> list = commentBiz.selectComments(commentid.getSeq(), commentid.getCommentDate());\n\t\t  \n\t\t  int i=0;\n\t\t   List<String> users = new ArrayList<>();", "\t\t   for(CommentDto rmDto : list) {\n\t\t\t   users.add(rmDto.getUserDto().getUserId());\n\t\t\t   System.out.println(users.get(i));\n\t\t\t   i++;\n\t\t   }\n\t\t   \n\t\t   Map<String, CommentDto> map = new HashMap<>();\n\t\t   \n\t\t   if(comment != null) {\n\t\t\t   map.put(\"comment\", comment);\n\t\t   }else {\n\t\t\t   map.put(\"comment\", null);\n\t\t   }\n\t\t   res.put(\"comment\", map);\n\t\t   ", "\t\t   if(comment != null) {\n\t\t\t   map.put(\"comment\", comment);\n\t\t   }else {\n\t\t\t   map.put(\"comment\", null);\n\t\t   }\n\t\t   res.put(\"comment\", map);\n\t\t   \n\t\t   if(list.size() != 0) {\n\t\t\t   res.put(\"list\", list);\n\t\t   }else {\n\t\t\t   res.put(\"list\", null);\n\t\t   }", "\t\t   if(users.size() != 0) {\n\t\t\t   res.put(\"users\", users);\n\t\t   }else {\n\t\t\t   res.put(\"users\", null);\n\t\t   }\n\t\t   \n\t\t   \n\t\t   System.out.println(res);\n\t\t   return res;\n\t   }\n\n\t// \ucc38\uc5ec\ud558\uae30 \ubc84\ud2bc \ub20c\ub800\uc744\ub54c \ub85c\uc9c1\n\t@RequestMapping(value = \"/joinuser\", method = RequestMethod.POST)\n\tpublic @ResponseBody String joinUser(@RequestBody String json) {\n\t\tObjectMapper mapper = new ObjectMapper();", "\t\ttry {\n\t\t\t// JSON \ubb38\uc790\uc5f4\uc744 Java \uac1d\uccb4\ub85c \ubcc0\ud658\n\t\t\tMap<String, Object> map = mapper.readValue(json, new TypeReference<Map<String, Object>>() {\n\t\t\t});\n\n\t\t\t// Java \uac1d\uccb4\uc5d0\uc11c \uac12\uc744 \ucd94\ucd9c\ud558\uc5ec \ubcc0\uc218\uc5d0 \ud560\ub2f9\n\t\t\tString challengeSeq = map.get(\"challengeSeq\").toString();\n\t\t\tString userId = map.get(\"userId\").toString();\n\n\t\t\t// \ud544\uc694\ud55c DTO, \uccbc\ub9b0\uc9c0\ubcc4 \uc0ac\ub78c \uc900\ube44\n\t\t\tChallengeDto currentChallenge = challengeBiz.selectOneBySeq(challengeSeq);\n\t\t\tUserDto currentUser = loginBiz.findByUserId(userId);\n\t\t\tint currentMember = registeredBiz.coutBySeq(challengeSeq);\n\t\t\t\n\t\t\tSystem.out.println(\"\ud544\uc694\ud55c \uc815\ubcf4 \ub85c\ub529 \uc644\ub8cc\\n\" + currentChallenge + \"\\n\" + currentUser + \"\\n\" + currentMember);\n\n\t\t\t// \ube44\uad50 \ud6c4 \ub514\ube44\uc5d0 \ub123\uae30", "\t\t\tif (currentChallenge.getChallengeEnabled().equals(\"Y\")\n\t\t\t\t\t&& currentMember < currentChallenge.getChallengeMaxMember()) {\n\t\t\t\tint res = registeredBiz.insert(challengeSeq, currentUser.getId());\n\t\t\t\tSystem.out.println(\"controller insert res: \" + res);\n\t\t\t\t\n\t\t\t\t// \ub514\ube44 \ubc18\uc601 \ud6c4 \ub9e5\uc2a4\ub9f4\ubc84\uc640 \ucee4\ub79c\ud2b8 \ub9f4\ubc84 \ube44\uad50\ud558\uae30\n\t\t\t\tint member = registeredBiz.coutBySeq(challengeSeq);\n\t\t\t\t// \ube44\uad50 \ud6c4 \ub458\uc774 \uac19\uc73c\uba74 \uccbc\ub9b0\uc9c0 \uc2dc\uc791\n\t\t\t\tif(currentChallenge.getChallengeMaxMember() <= member) {\n\t\t\t\t\tSystem.out.println(\"\ub118\uc544\uac14\ub2e4. \\n\" + member + \"\\n\" + currentChallenge.getChallengeMaxMember());\n\t\t\t\t\tregisteredBiz.challengeStart(challengeSeq);\n\t\t\t\t}\n\t\t\t\t", "\t\t\t\tif(currentChallenge.getChallengeMaxMember() <= member) {\n\t\t\t\t\tSystem.out.println(\"\ub118\uc544\uac14\ub2e4. \\n\" + member + \"\\n\" + currentChallenge.getChallengeMaxMember());\n\t\t\t\t\tregisteredBiz.challengeStart(challengeSeq);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (res > 0) {\n\t\t\t\t\treturn currentChallenge.getChallengeName() + \"\uc5d0 \ucc38\uc5ec\ud558\uc600\uc2b5\ub2c8\ub2e4. \";\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t\treturn \"\uc774\ubbf8 \ucc38\uc5ec \uc911\uc778 \ucc4c\ub9b0\uc9c0\uc785\ub2c8\ub2e4.\";// \ud074\ub77c\uc774\uc5b8\ud2b8\ub85c \ubc18\ud658\ud560 \ub370\uc774\ud130\n\t\t}\n\t\treturn \"error \ubc1c\uc0dd\";\n\t}\n\t\t\n\t// \ud3ec\uae30\ud558\uae30 delete \n\t@RequestMapping(value = \"/deleteregist\", method = RequestMethod.POST)\n\tpublic @ResponseBody Map<String, Boolean> deleteregist(@RequestBody String json) {\n\t\tObjectMapper mapper = new ObjectMapper();\n\t\tMap<String, Boolean> res = new HashMap<String, Boolean>();\n\t\t", "\t\ttry {\n\t\t\t// JSON \ubb38\uc790\uc5f4\uc744 Java \uac1d\uccb4\ub85c \ubcc0\ud658\n\t\t\tMap<String, Object> map = mapper.readValue(json, new TypeReference<Map<String, Object>>() {\n\t\t\t});\n\t\t\t\n\t\t\t// Java \uac1d\uccb4\uc5d0\uc11c \uac12\uc744 \ucd94\ucd9c\ud558\uc5ec \ubcc0\uc218\uc5d0 \ud560\ub2f9\n\t\t\tString challengeSeq = map.get(\"challengeSeq\").toString();\n\t\t\tString userId = map.get(\"userId\").toString();\n\t\t\t// \ud544\uc694\ud55c DTO, \uccbc\ub9b0\uc9c0\ubcc4 \uc0ac\ub78c \uc900\ube44\n\t\t\tChallengeDto currentChallenge = challengeBiz.selectOneBySeq(challengeSeq);\n\t\t\tUserDto currentUser = loginBiz.findByUserId(userId);\n\t\t\t\n\t\t\tSystem.out.println(\"\ud544\uc694\ud55c \uc815\ubcf4 \ub85c\ub529 \uc644\ub8cc\");\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t// \ub514\ube44\uc5d0 \uc9c0\uc6b0\uae30 ", "\t\t\tif (currentChallenge.getChallengeEnabled().equals(\"Y\")) {\n\t\t\t\tint delRes = registeredBiz.delete(challengeSeq, Long.parseLong(userId));\n\t\t\t\tSystem.out.println(\"controller del res: \" + delRes);\n\t\t\t\tif(delRes > 0) {\n\t\t\t\t\tres.put(\"res\", true);\n\t\t\t\t\treturn res;\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t\tres.put(\"res\", false);\n\t\t\treturn res;\n\t\t}\n\t\t\n\t\tres.put(\"res\", false);\n\t\treturn res;\t}\n\t\t\n\t\t\n\t\t\n}\n\n"]}
{"filename": "src/main/java/com/gld/model/controller/LoginController.java", "chunked_list": ["package com.gld.model.controller;\n\n\nimport javax.servlet.http.HttpSession;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Controller;\nimport org.springframework.ui.Model;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.PostMapping;", "import org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.PostMapping;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.servlet.mvc.support.RedirectAttributes;\n\nimport com.gld.model.biz.LoginBiz;\nimport com.gld.model.dto.UserDto;\nimport com.gld.model.repository.UserRepository;\n\n", "\n\n\n@Controller\n@RequestMapping(\"/login\")\npublic class LoginController {\n\n\t@Autowired\n\tprivate LoginBiz loginBiz;\n\n\t@GetMapping(\"/login\")", "\tpublic String moveToLogin() {\n\t\tSystem.out.println(\"go to loginform\");\n\t\treturn \"loginform\";\n\t}\n\n\t@GetMapping(\"/join\")\n\tpublic String moveToJoin() {\n\t\tSystem.out.println(\"go to joinform\");\n\t\treturn \"joinform\";\n\t}\n\n\t@GetMapping(\"/find\")", "\tpublic String moveToFind() {\n\t\tSystem.out.println(\"go to findform\");\n\t\treturn \"findform\";\n\t}\n\n\n\t@PostMapping(\"/logincheck\")\n\tpublic String login(String userId, String userPw, HttpSession session,Model model) {\n\t\tUserDto user = loginBiz.findByUserId(userId);\n\n\t\tif (user != null && user.getUserPw().equals(userPw)) {\n\t\t\tsession.setAttribute(\"user\", user);\n\t\t\treturn \"redirect:/challenge/main\";\n\t\t} else {\n\t\t\tmodel.addAttribute(\"error\", \"\uc544\uc774\ub514 \ub610\ub294 \ube44\ubc00\ubc88\ud638\uac00 \uc77c\uce58\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.\");\n\t\t\treturn \"loginform\";\n\t\t}\n\t}\n\n\t@PostMapping(\"/joincheck\")", "\t\tif (user != null && user.getUserPw().equals(userPw)) {\n\t\t\tsession.setAttribute(\"user\", user);\n\t\t\treturn \"redirect:/challenge/main\";\n\t\t} else {\n\t\t\tmodel.addAttribute(\"error\", \"\uc544\uc774\ub514 \ub610\ub294 \ube44\ubc00\ubc88\ud638\uac00 \uc77c\uce58\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.\");\n\t\t\treturn \"loginform\";\n\t\t}\n\t}\n\n\t@PostMapping(\"/joincheck\")\n\tpublic String join(UserDto dto, RedirectAttributes redirectAttributes) {\n\t\tloginBiz.insert(dto);\n\t\tredirectAttributes.addFlashAttribute(\"message\",\"\ud68c\uc6d0\uac00\uc785\uc774 \uc644\ub8cc\ub418\uc5c8\uc2b5\ub2c8\ub2e4. \ub85c\uadf8\uc778 \ud574\uc8fc\uc138\uc694.\");\n\t\treturn \"redirect:/login/login\";\n\t}\n\n\t@GetMapping(\"/logout\")", "\tpublic String join(UserDto dto, RedirectAttributes redirectAttributes) {\n\t\tloginBiz.insert(dto);\n\t\tredirectAttributes.addFlashAttribute(\"message\",\"\ud68c\uc6d0\uac00\uc785\uc774 \uc644\ub8cc\ub418\uc5c8\uc2b5\ub2c8\ub2e4. \ub85c\uadf8\uc778 \ud574\uc8fc\uc138\uc694.\");\n\t\treturn \"redirect:/login/login\";\n\t}\n\n\t@GetMapping(\"/logout\")\n\tpublic String logout(HttpSession session) {\n\t\tsession.removeAttribute(\"user\");\n\t\treturn \"redirect:/\";\n\t}\n}\n"]}
{"filename": "src/main/java/com/gld/model/controller/MypageController.java", "chunked_list": ["package com.gld.model.controller;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport javax.servlet.http.HttpSession;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Controller;\nimport org.springframework.ui.Model;", "import org.springframework.stereotype.Controller;\nimport org.springframework.ui.Model;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.PostMapping;\nimport org.springframework.web.bind.annotation.RequestMapping;\n\nimport com.gld.model.biz.ChallengeBiz;\nimport com.gld.model.biz.LoginBiz;\nimport com.gld.model.biz.RegisteredBiz;\nimport com.gld.model.dto.ChallengeDto;", "import com.gld.model.biz.RegisteredBiz;\nimport com.gld.model.dto.ChallengeDto;\nimport com.gld.model.dto.RegisteredMemberDto;\nimport com.gld.model.dto.UserDto;\n\n@Controller\n@RequestMapping(\"/mypage\")\npublic class MypageController {\n\n\t@Autowired\n\tprivate LoginBiz loginBiz;\n\t@Autowired\n\tprivate ChallengeBiz challengeBiz;\n\t@Autowired\n\tprivate RegisteredBiz registeredBiz;\n\n\n\t@GetMapping(\"/mypage\")", "\tpublic String moveToMypage(HttpSession session, Model model) {\n\t\tUserDto userDto = (UserDto)session.getAttribute(\"user\");\n\n\t\tList<RegisteredMemberDto> rms = userDto.getList(); //1. \ud574\ub2f9 user\uc758 REGISTERED_MEMBER\uc5d0 SEQ\uac12\ub4e4\uc744 List\ub85c \uac00\uc838\uc634\n\t\tList<ChallengeDto> chals = new ArrayList<>(); //2. 1\uc5d0\uc11c \uac00\uc838\uc628 \uc22b\uc790\ub97c, G_CHALLENGE\ub791 join\ud574\uc11c \ucc4c\ub9b0\uc9c0 \uac1d\uccb4 List\ub85c \uac00\uc838\uc634\n\t\tfor(RegisteredMemberDto rmDto : rms) {\n\t\t\tchals.add(rmDto.getChallengeDto());\n\t\t}\n\n\t\tmodel.addAttribute(\"user\", userDto);\n\t\tmodel.addAttribute(\"rms\", rms); //\ub0b4\uac00 \ucc38\uc5ec \uc911\uc778/\ucc38\uc5ec\ud55c \ucc4c\ub9b0\uc9c0 \uce74\uc6b4\ud2b8\n\t\tmodel.addAttribute(\"challenges\", chals);\n\n\t\t//REGISTERED_MEMBER \uc804\uccb4 \ubcf4\ub0b4\uae30 (\ucc4c\ub9b0\uc9c0 \ubcc4 \ucc38\uc5ec \uc778\uc6d0 \uce74\uc6b4\ud2b8\ud558\ub824\uace0)\n\t\tList<RegisteredMemberDto> rmTotal = registeredBiz.selectAll();\n\t\tmodel.addAttribute(\"rmTotal\", rmTotal);\n\t\treturn \"mypage\";\n\t}\n\t\n\t@GetMapping(\"/gotopwchange\")", "\tpublic String gotoPwChange() {\n\t\treturn \"changepersonalinfo\";\n\t}\n\t\n\t@PostMapping(\"/changepw\")\n\tpublic String changePw(HttpSession session, String userPw) {\n\t\tUserDto user = (UserDto) session.getAttribute(\"user\");\n\t\t\n\t\tint res = loginBiz.changePw(user, userPw);\n\t\t\n\t\tsession.removeAttribute(\"user\");\n\t\treturn \"loginform\";\n\t}\n\n}"]}
{"filename": "src/main/java/com/gld/model/controller/KakaoLoginController.java", "chunked_list": ["package com.gld.model.controller;\n\nimport java.text.ParseException;\nimport java.text.SimpleDateFormat;\nimport java.util.HashMap;\nimport java.util.Map;\n\nimport javax.servlet.http.HttpSession;\n\nimport org.springframework.beans.factory.annotation.Autowired;", "\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Controller;\nimport org.springframework.ui.Model;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.PostMapping;\nimport org.springframework.web.bind.annotation.RequestBody;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.ResponseBody;\n", "import org.springframework.web.bind.annotation.ResponseBody;\n\nimport com.gld.model.biz.KakaoLoginBiz;\nimport com.gld.model.biz.LoginBiz;\nimport com.gld.model.dto.UserDto;\n\n@Controller\n@RequestMapping(\"/kakaoAuth\")\npublic class KakaoLoginController {\n\n\t@Autowired\n\tprivate LoginBiz loginBiz;\n\t\n\t@Autowired\n\tprivate KakaoLoginBiz kakaoLogin;\n\n\t@ResponseBody\n\t@PostMapping(\"/authSender\")\n\tpublic Map<String, String> kakaoAuth(@RequestBody UserDto dto, HttpSession session) {\n\t\tSystem.out.println(\"authSeder \uc9c4\uc785\");\n\t\tMap<String, String> result = new HashMap<>();\n\t\tUserDto user = loginBiz.findByUserId(dto.getUserId());\n\t\tSystem.out.println(\"kakaoAuth\\n\" + dto + \"\\n\" + user);", "public class KakaoLoginController {\n\n\t@Autowired\n\tprivate LoginBiz loginBiz;\n\t\n\t@Autowired\n\tprivate KakaoLoginBiz kakaoLogin;\n\n\t@ResponseBody\n\t@PostMapping(\"/authSender\")\n\tpublic Map<String, String> kakaoAuth(@RequestBody UserDto dto, HttpSession session) {\n\t\tSystem.out.println(\"authSeder \uc9c4\uc785\");\n\t\tMap<String, String> result = new HashMap<>();\n\t\tUserDto user = loginBiz.findByUserId(dto.getUserId());\n\t\tSystem.out.println(\"kakaoAuth\\n\" + dto + \"\\n\" + user);", "\t\tif (user != null) {\n\t\t\t// \uc788\ub294 \uacc4\uc815\uc77c \uc2dc, \ubc14\ub85c \ub85c\uadf8\n\t\t\tresult.put(\"result\", \"true\");\n\t\t} else {\n\t\t\t// \uc5c6\ub294 \uacc4\uc815\uc77c \uc2dc, \ud68c\uc6d0\uac00\uc785 \ud398\uc774\uc9c0\ub85c \uc774\ub3d9\n\t\t\tresult.put(\"result\", \"false\");\n\t\t\tresult.put(\"userId\", dto.getUserId());\n\t\t\tresult.put(\"userName\", dto.getUserName());\n\t\t}\n\t\treturn result;\n\t}\n\n\t@GetMapping(\"/kakaoJoin\")", "\tpublic String kakaoJoin(String userId, String userName, Model model) {\n\t\tSystem.out.println(\"kakaoJoin\uc9c4\uc785\");\n\t\tSystem.out.println(userId + \"\\n\" + userName);\n\t\tmodel.addAttribute(\"userId\", userId);\n\t\tmodel.addAttribute(\"userName\", userName);\n\t\treturn \"kakaoJoin\";\n\t}\n\n\t@PostMapping(\"/join\")\n\tpublic String join(String userId, String userPw, String userName, String userBirth, String userPhone) {\n\t\tSystem.out.println(\"join \uc9c4\uc785\");\n\t\tUserDto dto = new UserDto();\n\t\tdto.setUserId(userId);\n\t\tdto.setUserPw(userPw);\n\t\tdto.setUserName(userName);\n\t\tSimpleDateFormat sdp = new SimpleDateFormat(\"yyyy-MM-dd\");", "\tpublic String join(String userId, String userPw, String userName, String userBirth, String userPhone) {\n\t\tSystem.out.println(\"join \uc9c4\uc785\");\n\t\tUserDto dto = new UserDto();\n\t\tdto.setUserId(userId);\n\t\tdto.setUserPw(userPw);\n\t\tdto.setUserName(userName);\n\t\tSimpleDateFormat sdp = new SimpleDateFormat(\"yyyy-MM-dd\");\n\t\ttry {\n\t\t\tdto.setUserBirth(sdp.parse(userBirth));\n\t\t} catch (ParseException e) {\n\t\t\t// TODO Auto-generated catch block\n\t\t\te.printStackTrace();\n\t\t}\n\t\tdto.setUserPhone(userPhone);\n\t\tdto.setOnOffNoty(\"Y\");\n\t\tdto.setUserLoginType(\"K\");", "\t\tif(kakaoLogin.insert(dto) > 0) {\n\t\t\treturn \"redirect:/login/login\";\n\t\t}else {\n\t\t\treturn \"redirect:/kakaoAuth/join\";\n\t\t}\n\t}\n\n}\n"]}
{"filename": "src/main/java/com/gld/model/mapper/KakaoLoginMapper.java", "chunked_list": ["package com.gld.model.mapper;\n\nimport org.apache.ibatis.annotations.Insert;\nimport org.apache.ibatis.annotations.Mapper;\n\nimport com.gld.model.dto.UserDto;\n\n@Mapper\npublic interface KakaoLoginMapper {\n\n\t@Insert(\" INSERT INTO G_USER VALUES(NULL, #{userId}, #{userPw}, #{userName}, 0, #{onOffNoty}, #{userLoginType}, #{userPhone}, #{userBirth}) \")\n\tint insertUser(UserDto dto);\n\n}\n", "public interface KakaoLoginMapper {\n\n\t@Insert(\" INSERT INTO G_USER VALUES(NULL, #{userId}, #{userPw}, #{userName}, 0, #{onOffNoty}, #{userLoginType}, #{userPhone}, #{userBirth}) \")\n\tint insertUser(UserDto dto);\n\n}\n"]}
{"filename": "src/main/java/com/gld/model/mapper/UserMapper.java", "chunked_list": ["package com.gld.model.mapper;\n\nimport org.apache.ibatis.annotations.Mapper;\nimport org.apache.ibatis.annotations.Update;\n\n@Mapper\npublic interface UserMapper {\n\n\t@Update(\"UPDATE G_USER SET USER_PW = #{userPw} WHERE ID = #{id}; \")\n\tint updatePw(Long id, String userPw);\n}\n"]}
{"filename": "src/main/java/com/gld/model/mapper/RegisteredMemberMapper.java", "chunked_list": ["package com.gld.model.mapper;\n\nimport org.apache.ibatis.annotations.Delete;\nimport org.apache.ibatis.annotations.Insert;\nimport org.apache.ibatis.annotations.Mapper;\nimport org.apache.ibatis.annotations.Select;\nimport org.apache.ibatis.annotations.Update;\n\n@Mapper\npublic interface RegisteredMemberMapper {\n\t\n\t// REGISTER_MEMBER \ud14c\uc774\ube14\uc758 \ud574\ub2f9 \uccbc\ub9b0\uc9c0\uc758 \uc778\uc6d0\uc774 \uba87\uba85\uc778\uc9c0 \ub9ac\ud134\ud558\ub294 \ub9e4\ud37c\n\t@Select(\" SELECT COUNT(*) as cnt FROM REGISTERED_MEMBER WHERE SEQ = #{seq}; \")\n\tint countBySeq(String seq);\n\t\n\t// REGISTER_MEMBER \ud14c\uc774\ube14\uc5d0 \uc720\uc800 ID, SEQ \uc758 \ud29c\ud50c\uc744 \uc800\uc7a5\ud558\ub294 \ub9e4\ud37c\n\t@Insert(\" INSERT INTO REGISTERED_MEMBER (ID, SEQ) VALUES (#{id}, #{challengeSeq}); \")\n\tint insertRegister(String challengeSeq, Long id);\n\n\t// CHALLENGE \uc758 MAX \ub9f4\ubc84\uac00 \ucc3c\uc744 \ub584, \ucc4c\ub9b0\uc9c0\ub97c \uc2dc\uc791\ud558\ub294 \ub9e4\ud37c\n\t@Update(\" UPDATE G_CHALLENGE SET CHALLENGE_ENABLED = 'N', CHALLENGE_STARTED_DATE = NOW() WHERE SEQ = #{challengeSeq }; \")\n\tvoid challengeStart(String challengeSeq);\n\t\n\t@Delete(\" DELETE FROM REGISTERED_MEMBER WHERE  ID=#{id} AND SEQ= #{challengeSeq}; \")\n\tint deleteRegister(String challengeSeq, Long id);\n\t\n}\n", "@Mapper\npublic interface RegisteredMemberMapper {\n\t\n\t// REGISTER_MEMBER \ud14c\uc774\ube14\uc758 \ud574\ub2f9 \uccbc\ub9b0\uc9c0\uc758 \uc778\uc6d0\uc774 \uba87\uba85\uc778\uc9c0 \ub9ac\ud134\ud558\ub294 \ub9e4\ud37c\n\t@Select(\" SELECT COUNT(*) as cnt FROM REGISTERED_MEMBER WHERE SEQ = #{seq}; \")\n\tint countBySeq(String seq);\n\t\n\t// REGISTER_MEMBER \ud14c\uc774\ube14\uc5d0 \uc720\uc800 ID, SEQ \uc758 \ud29c\ud50c\uc744 \uc800\uc7a5\ud558\ub294 \ub9e4\ud37c\n\t@Insert(\" INSERT INTO REGISTERED_MEMBER (ID, SEQ) VALUES (#{id}, #{challengeSeq}); \")\n\tint insertRegister(String challengeSeq, Long id);\n\n\t// CHALLENGE \uc758 MAX \ub9f4\ubc84\uac00 \ucc3c\uc744 \ub584, \ucc4c\ub9b0\uc9c0\ub97c \uc2dc\uc791\ud558\ub294 \ub9e4\ud37c\n\t@Update(\" UPDATE G_CHALLENGE SET CHALLENGE_ENABLED = 'N', CHALLENGE_STARTED_DATE = NOW() WHERE SEQ = #{challengeSeq }; \")\n\tvoid challengeStart(String challengeSeq);\n\t\n\t@Delete(\" DELETE FROM REGISTERED_MEMBER WHERE  ID=#{id} AND SEQ= #{challengeSeq}; \")\n\tint deleteRegister(String challengeSeq, Long id);\n\t\n}\n"]}
{"filename": "src/main/java/com/gld/model/dto/RegisteredMemberDtoPK.java", "chunked_list": ["package com.gld.model.dto;\n\nimport java.io.Serializable;\n\npublic class RegisteredMemberDtoPK implements Serializable {\n\tprivate Long Id;\n\tprivate Long seq;\n\n}\n"]}
{"filename": "src/main/java/com/gld/model/dto/RegisteredMemberDto.java", "chunked_list": ["package com.gld.model.dto;\n\nimport javax.persistence.Column;\nimport javax.persistence.Entity;\nimport javax.persistence.GeneratedValue;\nimport javax.persistence.GenerationType;\nimport javax.persistence.Id;\nimport javax.persistence.IdClass;\nimport javax.persistence.JoinColumn;\nimport javax.persistence.ManyToOne;", "import javax.persistence.JoinColumn;\nimport javax.persistence.ManyToOne;\nimport javax.persistence.Table;\n\n@Entity\n@Table(name = \"REGISTERED_MEMBER\")\n@IdClass(RegisteredMemberDtoPK.class)\npublic class RegisteredMemberDto {\n\t@Id\n\t@Column(name = \"ID\")\n\t@GeneratedValue(strategy = GenerationType.IDENTITY)\n\tprivate Long Id;\n\n\t@Id\n\t@Column(name = \"SEQ\", nullable = false)\n\t@GeneratedValue(strategy = GenerationType.IDENTITY)\n\tprivate Long seq;\n\n\t// table join (G_USER \uc77c\ub300\ub2e4 REGISTERED_MEMBER)\n\t@ManyToOne\n\t@JoinColumn(name = \"ID\", insertable = false, updatable = false)\n\tprivate UserDto userDto;\n\n\t// table join (G_CHALLENGE \uc77c\ub300\ub2e4 REGISTERED_MEMBER)\n\t@ManyToOne\n\t@JoinColumn(name = \"SEQ\", insertable = false, updatable = false)\n\tprivate ChallengeDto challengeDto;\n\n\t// table join \uad00\ub828\n\tpublic RegisteredMemberDto() {\n\t\tsuper();\n\t}\n\n\tpublic RegisteredMemberDto(Long id, Long seq) {\n\t\tsuper();\n\t\tId = id;\n\t\tthis.seq = seq;\n\t}\n", "\tpublic Long getId() {\n\t\treturn Id;\n\t}\n\n\tpublic void setId(Long id) {\n\t\tId = id;\n\t}\n\n\tpublic Long getSeq() {\n\t\treturn seq;\n\t}\n", "\tpublic Long getSeq() {\n\t\treturn seq;\n\t}\n\n\tpublic void setSeq(Long seq) {\n\t\tthis.seq = seq;\n\t}\n\n\tpublic UserDto getUserDto() {\n\t\treturn userDto;\n\t}\n", "\tpublic UserDto getUserDto() {\n\t\treturn userDto;\n\t}\n\n\tpublic void setUserDto(UserDto userDto) {\n\t\tthis.userDto = userDto;\n\t}\n\n\tpublic ChallengeDto getChallengeDto() {\n\t\treturn challengeDto;\n\t}\n", "\tpublic ChallengeDto getChallengeDto() {\n\t\treturn challengeDto;\n\t}\n\n\tpublic void setChallengeDto(ChallengeDto challengeDto) {\n\t\tthis.challengeDto = challengeDto;\n\t}\n\n}\n"]}
{"filename": "src/main/java/com/gld/model/dto/ChallengeDto.java", "chunked_list": ["package com.gld.model.dto;\n\nimport java.util.ArrayList;\nimport java.util.Date;\nimport java.util.List;\n\nimport javax.persistence.Column;\nimport javax.persistence.Entity;\nimport javax.persistence.GeneratedValue;\nimport javax.persistence.GenerationType;", "import javax.persistence.GeneratedValue;\nimport javax.persistence.GenerationType;\nimport javax.persistence.Id;\nimport javax.persistence.OneToMany;\nimport javax.persistence.PostLoad;\nimport javax.persistence.PrePersist;\nimport javax.persistence.Table;\nimport javax.persistence.Transient;\n\nimport org.hibernate.annotations.DynamicInsert;", "\nimport org.hibernate.annotations.DynamicInsert;\nimport org.springframework.data.domain.Persistable;\n\n@Entity\n@Table(name = \"G_CHALLENGE\")\n@DynamicInsert\npublic class ChallengeDto implements Persistable<Long> {\n\n\t@Id\n\t@Column(name = \"SEQ\",nullable = false)\n\t@GeneratedValue(strategy = GenerationType.IDENTITY)\n\tprivate Long seq;\n\n\t//table join (G_CHALLENGE \uc77c\ub300\ub2e4 REGISTERED_MEMBER)\n\t@OneToMany(mappedBy = \"challengeDto\")\n\tprivate List<RegisteredMemberDto> list = new ArrayList<>();\n\n\t@Column(name = \"CHALLENGE_NAME\", nullable = false)\n\tprivate String challengeName;\n\n\t@Column(name = \"CHALLENGE_INFO\", nullable = false)\n\tprivate String challengeInfo;\n\n\t@Column(name = \"CHALLENGE_MAXMEMBER\", nullable = false)\n\tprivate int challengeMaxMember;\n\n\t@Column(name = \"CHALLENGE_DURATION\", nullable = false)\n\tprivate int challengeDuration;\n\n\t@Column(name = \"CHALLENGE_ENABLED\")\n\tprivate String challengeEnabled;\n\n\t@Column(name = \"CHALLENGE_CATEGORY\", nullable = false)\n\tprivate String challengeCategory;\n\n\t@Column(name = \"CHALLENGE_HASHTAG\")\n\tprivate String challengeHashtag;\n\n\t@Column(name = \"CHALLENGE_STARTED_DATE\")\n\tprivate Date challengeStartedDate;\n\n\tpublic ChallengeDto() {\n\t\tsuper();\n\t}\n\n\tpublic ChallengeDto(Long seq, String challengeName, String challengeInfo, int challengeMaxMember,\n\t\t\tint challengeDuration, String challengeEnabled, String challengeCategory, String challengeHashtag,\n\t\t\tDate challengeStartedDate, boolean isNew) {\n\n\t\tsuper();\n\t\tthis.seq = seq;\n\t\tthis.challengeName = challengeName;\n\t\tthis.challengeInfo = challengeInfo;\n\t\tthis.challengeMaxMember = challengeMaxMember;\n\t\tthis.challengeDuration = challengeDuration;\n\t\tthis.challengeEnabled = challengeEnabled;\n\t\tthis.challengeCategory = challengeCategory;\n\t\tthis.challengeHashtag = challengeHashtag;\n\t\tthis.challengeStartedDate = challengeStartedDate;\n\t\tthis.isNew = isNew;\n\t}\n  ", "\tpublic Long getSeq() {\n\t\treturn seq;\n\t}\n\n\tpublic void setSeq(Long seq) {\n\t\tthis.seq = seq;\n\t}\n\n\tpublic String getChallengeName() {\n\t\treturn challengeName;\n\t}\n", "\tpublic String getChallengeName() {\n\t\treturn challengeName;\n\t}\n\n\tpublic void setChallengeName(String challengeName) {\n\t\tthis.challengeName = challengeName;\n\t}\n\n\tpublic String getChallengeInfo() {\n\t\treturn challengeInfo;\n\t}\n", "\tpublic String getChallengeInfo() {\n\t\treturn challengeInfo;\n\t}\n\n\tpublic void setChallengeInfo(String challengeInfo) {\n\t\tthis.challengeInfo = challengeInfo;\n\t}\n\n\tpublic int getChallengeMaxMember() {\n\t\treturn challengeMaxMember;\n\t}\n", "\tpublic int getChallengeMaxMember() {\n\t\treturn challengeMaxMember;\n\t}\n\n\tpublic void setChallengeMaxMember(int challengeMaxMember) {\n\t\tthis.challengeMaxMember = challengeMaxMember;\n\t}\n\n\tpublic int getChallengeDuration() {\n\t\treturn challengeDuration;\n\t}\n", "\tpublic int getChallengeDuration() {\n\t\treturn challengeDuration;\n\t}\n\n\tpublic void setChallengeDuration(int challengeDuration) {\n\t\tthis.challengeDuration = challengeDuration;\n\t}\n\n\tpublic String getChallengeEnabled() {\n\t\treturn challengeEnabled;\n\t}\n", "\tpublic String getChallengeEnabled() {\n\t\treturn challengeEnabled;\n\t}\n\n\tpublic void setChallengeEnabled(String challengeEnabled) {\n\t\tthis.challengeEnabled = challengeEnabled;\n\t}\n\n\tpublic String getChallengeCategory() {\n\t\treturn challengeCategory;\n\t}\n", "\tpublic String getChallengeCategory() {\n\t\treturn challengeCategory;\n\t}\n\n\tpublic void setChallengeCategory(String challengeCategory) {\n\t\tthis.challengeCategory = challengeCategory;\n\t}\n\n\tpublic String getChallengeHashtag() {\n\t\treturn challengeHashtag;\n\t}\n", "\tpublic String getChallengeHashtag() {\n\t\treturn challengeHashtag;\n\t}\n\n\tpublic void setChallengeHashtag(String challengeHashtag) {\n\t\tthis.challengeHashtag = challengeHashtag;\n\t}\n\n\tpublic Date getChallengeStartedDate() {\n\t\treturn challengeStartedDate;\n\t}\n", "\tpublic Date getChallengeStartedDate() {\n\t\treturn challengeStartedDate;\n\t}\n\n\tpublic void setChallengeStartedDate(Date challengeStartedDate) {\n\t\tthis.challengeStartedDate = challengeStartedDate;\n\t}\n  \n\t//challenge insert\ud560 \ub54c \uc4f4 \uae30\ub2a5\ub4e4..\n\n\t@Override", "\tpublic Long getId() {\n\t\treturn this.seq;\n\t}\n\n\t@Transient\n\tprivate boolean isNew = true;\n\n\t@Override\n\tpublic boolean isNew() {\n\t\treturn isNew;\n\t}\n\n\t@PrePersist\n\t@PostLoad\n\tvoid markNotNew() {\n\t\tthis.isNew = false;\n\t}\n\n\t@Override", "\tpublic boolean isNew() {\n\t\treturn isNew;\n\t}\n\n\t@PrePersist\n\t@PostLoad\n\tvoid markNotNew() {\n\t\tthis.isNew = false;\n\t}\n\n\t@Override", "\tpublic String toString() {\n\t\treturn \"ChallengeDto [seq=\" + seq + \", challengeName=\" + challengeName + \", challengeInfo=\" + challengeInfo\n\t\t\t\t+ \", challengeMaxMember=\" + challengeMaxMember + \", challengeDuration=\" + challengeDuration\n\t\t\t\t+ \", challengeEnabled=\" + challengeEnabled + \", challengeCategory=\" + challengeCategory\n\t\t\t\t+ \", challengeHashtag=\" + challengeHashtag + \", challengeStartedDate=\" + challengeStartedDate\n\t\t\t\t+ \", isNew=\" + isNew + \"]\";\n\t}\n\n\t//table join \uad00\ub828\n\tpublic List<RegisteredMemberDto> getList() {\n\t\treturn list;\n\t}", "\tpublic void setList(List<RegisteredMemberDto> list) {\n\t\tthis.list = list;\n\t}\n\n}"]}
{"filename": "src/main/java/com/gld/model/dto/CommentDto.java", "chunked_list": ["package com.gld.model.dto;\n\nimport java.time.LocalDate;\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport javax.persistence.Column;\nimport javax.persistence.Entity;\nimport javax.persistence.FetchType;\nimport javax.persistence.GeneratedValue;", "import javax.persistence.FetchType;\nimport javax.persistence.GeneratedValue;\nimport javax.persistence.GenerationType;\nimport javax.persistence.Id;\nimport javax.persistence.IdClass;\nimport javax.persistence.JoinColumn;\nimport javax.persistence.ManyToOne;\nimport javax.persistence.OneToMany;\n\nimport com.fasterxml.jackson.annotation.JsonIgnore;", "\nimport com.fasterxml.jackson.annotation.JsonIgnore;\n\n@Entity(name=\"G_COMMENT\")\n@IdClass(CommentId.class)\npublic class CommentDto {\n\t@Id\n\t@Column(name=\"SEQ\")\n\t@GeneratedValue(strategy = GenerationType.IDENTITY)\n\tprivate Long seq;\n\t\n\t@Id\n\t@Column(name=\"ID\")\n\tprivate Integer id;\n\t\n\t@Id\n\t@Column(name=\"COMMENT_DATE\")\n\tprivate LocalDate commentDate;\n\t\n\t@Column(name=\"COMMENT\")\n\tprivate String comment;\n\t\n\t@Column(name=\"ISDONE\")\n\tprivate String isDone;\n\t\n\t// table join (G_USER \uc77c\ub300\ub2e4 G_COMMENT)\n\t@JsonIgnore\n\t@ManyToOne\n\t@JoinColumn(name = \"ID\", insertable = false, updatable = false)\n\tprivate UserDto userDto;\n\t\n\tpublic CommentDto() {\n\t\tsuper();\n\t\t// TODO Auto-generated constructor stub\n\t}\n\t", "\tpublic UserDto getUserDto() {\n\t\treturn userDto;\n\t}\n\n\tpublic void setUserDto(UserDto userDto) {\n\t\tthis.userDto = userDto;\n\t}\n\n\tpublic CommentDto(Long seq, Integer id, LocalDate commentDate, String comment, String isDone) {\n\t\tsuper();\n\t\tthis.seq = seq;\n\t\tthis.id = id;\n\t\tthis.commentDate = commentDate;\n\t\tthis.comment = comment;\n\t\tthis.isDone = isDone;\n\t}\n", "\tpublic Long getSeq() {\n\t\treturn seq;\n\t}\n\n\tpublic void setSeq(Long seq) {\n\t\tthis.seq = seq;\n\t}\n\n\tpublic Integer getId() {\n\t\treturn id;\n\t}\n", "\tpublic Integer getId() {\n\t\treturn id;\n\t}\n\n\tpublic void setId(Integer id) {\n\t\tthis.id = id;\n\t}\n\n\tpublic LocalDate getCommentDate() {\n\t\treturn commentDate;\n\t}\n", "\tpublic LocalDate getCommentDate() {\n\t\treturn commentDate;\n\t}\n\n\tpublic void setCommentDate(LocalDate commentDate) {\n\t\tthis.commentDate = commentDate;\n\t}\n\n\tpublic String getComment() {\n\t\treturn comment;\n\t}\n", "\tpublic String getComment() {\n\t\treturn comment;\n\t}\n\n\tpublic void setComment(String comment) {\n\t\tthis.comment = comment;\n\t}\n\n\tpublic String getIsDone() {\n\t\treturn isDone;\n\t}\n", "\tpublic String getIsDone() {\n\t\treturn isDone;\n\t}\n\n\tpublic void setIsDone(String isDone) {\n\t\tthis.isDone = isDone;\n\t}\n\n\t@Override\n\tpublic String toString() {\n\t\treturn \"CommentDto [seq=\" + seq + \", id=\" + id + \", commentDate=\" + commentDate + \", comment=\" + comment\n\t\t\t\t+ \", isDone=\" + isDone + \", userDto=\" + userDto + \"]\";\n\t}\n\n//\tpublic List<UserDto> getList() {\n//\t\treturn list;\n//\t}\n//", "\tpublic String toString() {\n\t\treturn \"CommentDto [seq=\" + seq + \", id=\" + id + \", commentDate=\" + commentDate + \", comment=\" + comment\n\t\t\t\t+ \", isDone=\" + isDone + \", userDto=\" + userDto + \"]\";\n\t}\n\n//\tpublic List<UserDto> getList() {\n//\t\treturn list;\n//\t}\n//\n//\tpublic void setList(List<UserDto> list) {\n//\t\tthis.list = list;\n//\t}\n\t\n\t\n\t\n}", "//\tpublic void setList(List<UserDto> list) {\n//\t\tthis.list = list;\n//\t}\n\t\n\t\n\t\n}"]}
{"filename": "src/main/java/com/gld/model/dto/UserDto.java", "chunked_list": ["package com.gld.model.dto;\n\nimport java.util.ArrayList;\nimport java.util.Date;\nimport java.util.List;\n\nimport javax.persistence.Column;\nimport javax.persistence.Entity;\nimport javax.persistence.FetchType;\nimport javax.persistence.GeneratedValue;", "import javax.persistence.FetchType;\nimport javax.persistence.GeneratedValue;\nimport javax.persistence.GenerationType;\nimport javax.persistence.Id;\nimport javax.persistence.JoinColumn;\nimport javax.persistence.ManyToOne;\nimport javax.persistence.OneToMany;\nimport javax.persistence.Table;\n\nimport org.springframework.beans.factory.annotation.Autowired;", "\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.format.annotation.DateTimeFormat;\n\nimport com.fasterxml.jackson.annotation.JsonIgnore;\nimport com.gld.model.repository.RegisteredMemberRepository;\n\n@Entity\n@Table(name = \"G_USER\")\npublic class UserDto {\n\n\t@Id\n\t@Column(name = \"ID\",nullable = false, unique = true)\n    private Long id;\n\n\t// table join (G_USER \uc77c\ub300\ub2e4 REGISTERED_MEMBER)\n\t\n\t@OneToMany(mappedBy = \"userDto\", fetch = FetchType.LAZY)\n\tprivate List<RegisteredMemberDto> list = new ArrayList<>();\n\t\n\t//table join \n\t\n\t@OneToMany(mappedBy = \"userDto\")\n\tprivate List<CommentDto> list2 = new ArrayList<>();\n\t\n\t@ManyToOne\n\t@JoinColumn(name = \"ID\", insertable = false, updatable = false)\n\tprivate UserDto commentDto;\n\n\t@Column(name = \"USER_ID\", nullable = false, unique = true)\n\tprivate String userId;\n\n\t@Column(name = \"USER_PW\", nullable = false)\n\tprivate String userPw;\n\n\t@Column(name = \"USER_NAME\", nullable = false)\n\tprivate String userName;\n\n\t@Column(name = \"COMPLETED_CHALLENGE\", nullable = false)\n\tprivate int completedChallenge;\n\n\t@Column(name = \"ONOFF_NOTY\", nullable = false)\n\tprivate String onOffNoty;\n\n\t@Column(name = \"USER_LOGINTYPE\", nullable = false)\n\tprivate String userLoginType;\n\n\t@Column(name = \"USER_PHONE\", nullable = false)\n\tprivate String userPhone;\n\n\t@Column(name = \"USER_BIRTH\", nullable = false)\n\t@DateTimeFormat(pattern = \"yyyy-MM-dd\")\n\tprivate Date userBirth;\n\n\tpublic UserDto() {\n\t\tsuper();\n\t}\n\n\tpublic UserDto(Long id, String userId, String userPw, String userName, int completedChallenge, String onOffNoty,\n\t\t\tString userLoginType, String userPhone, Date userBirth) {\n\t\tsuper();\n\t\tthis.id = id;\n\t\tthis.userId = userId;\n\t\tthis.userPw = userPw;\n\t\tthis.userName = userName;\n\t\tthis.completedChallenge = completedChallenge;\n\t\tthis.onOffNoty = onOffNoty;\n\t\tthis.userLoginType = userLoginType;\n\t\tthis.userPhone = userPhone;\n\t\tthis.userBirth = userBirth;\n\t}\n", "@Table(name = \"G_USER\")\npublic class UserDto {\n\n\t@Id\n\t@Column(name = \"ID\",nullable = false, unique = true)\n    private Long id;\n\n\t// table join (G_USER \uc77c\ub300\ub2e4 REGISTERED_MEMBER)\n\t\n\t@OneToMany(mappedBy = \"userDto\", fetch = FetchType.LAZY)\n\tprivate List<RegisteredMemberDto> list = new ArrayList<>();\n\t\n\t//table join \n\t\n\t@OneToMany(mappedBy = \"userDto\")\n\tprivate List<CommentDto> list2 = new ArrayList<>();\n\t\n\t@ManyToOne\n\t@JoinColumn(name = \"ID\", insertable = false, updatable = false)\n\tprivate UserDto commentDto;\n\n\t@Column(name = \"USER_ID\", nullable = false, unique = true)\n\tprivate String userId;\n\n\t@Column(name = \"USER_PW\", nullable = false)\n\tprivate String userPw;\n\n\t@Column(name = \"USER_NAME\", nullable = false)\n\tprivate String userName;\n\n\t@Column(name = \"COMPLETED_CHALLENGE\", nullable = false)\n\tprivate int completedChallenge;\n\n\t@Column(name = \"ONOFF_NOTY\", nullable = false)\n\tprivate String onOffNoty;\n\n\t@Column(name = \"USER_LOGINTYPE\", nullable = false)\n\tprivate String userLoginType;\n\n\t@Column(name = \"USER_PHONE\", nullable = false)\n\tprivate String userPhone;\n\n\t@Column(name = \"USER_BIRTH\", nullable = false)\n\t@DateTimeFormat(pattern = \"yyyy-MM-dd\")\n\tprivate Date userBirth;\n\n\tpublic UserDto() {\n\t\tsuper();\n\t}\n\n\tpublic UserDto(Long id, String userId, String userPw, String userName, int completedChallenge, String onOffNoty,\n\t\t\tString userLoginType, String userPhone, Date userBirth) {\n\t\tsuper();\n\t\tthis.id = id;\n\t\tthis.userId = userId;\n\t\tthis.userPw = userPw;\n\t\tthis.userName = userName;\n\t\tthis.completedChallenge = completedChallenge;\n\t\tthis.onOffNoty = onOffNoty;\n\t\tthis.userLoginType = userLoginType;\n\t\tthis.userPhone = userPhone;\n\t\tthis.userBirth = userBirth;\n\t}\n", "\tpublic Long getId() {\n\t\treturn id;\n\t}\n\n\tpublic void setId(Long id) {\n\t\tthis.id = id;\n\t}\n\n\tpublic String getUserId() {\n\t\treturn userId;\n\t}\n", "\tpublic String getUserId() {\n\t\treturn userId;\n\t}\n\n\tpublic void setUserId(String userId) {\n\t\tthis.userId = userId;\n\t}\n\n\tpublic String getUserPw() {\n\t\treturn userPw;\n\t}\n", "\tpublic String getUserPw() {\n\t\treturn userPw;\n\t}\n\n\tpublic void setUserPw(String userPw) {\n\t\tthis.userPw = userPw;\n\t}\n\n\tpublic String getUserName() {\n\t\treturn userName;\n\t}\n", "\tpublic String getUserName() {\n\t\treturn userName;\n\t}\n\n\tpublic void setUserName(String userName) {\n\t\tthis.userName = userName;\n\t}\n\n\tpublic int getCompletedChallenge() {\n\t\treturn completedChallenge;\n\t}\n", "\tpublic int getCompletedChallenge() {\n\t\treturn completedChallenge;\n\t}\n\n\tpublic void setCompletedChallenge(int completedChallenge) {\n\t\tthis.completedChallenge = completedChallenge;\n\t}\n\n\tpublic String getOnOffNoty() {\n\t\treturn onOffNoty;\n\t}\n", "\tpublic String getOnOffNoty() {\n\t\treturn onOffNoty;\n\t}\n\n\tpublic void setOnOffNoty(String onOffNoty) {\n\t\tthis.onOffNoty = onOffNoty;\n\t}\n\n\tpublic String getUserLoginType() {\n\t\treturn userLoginType;\n\t}\n", "\tpublic String getUserLoginType() {\n\t\treturn userLoginType;\n\t}\n\n\tpublic void setUserLoginType(String userLoginType) {\n\t\tthis.userLoginType = userLoginType;\n\t}\n\n\tpublic String getUserPhone() {\n\t\treturn userPhone;\n\t}\n", "\tpublic String getUserPhone() {\n\t\treturn userPhone;\n\t}\n\n\tpublic void setUserPhone(String userPhone) {\n\t\tthis.userPhone = userPhone;\n\t}\n\n\tpublic Date getUserBirth() {\n\t\treturn userBirth;\n\t}\n", "\tpublic Date getUserBirth() {\n\t\treturn userBirth;\n\t}\n\n\tpublic void setUserBirth(Date userBirth) {\n\t\tthis.userBirth = userBirth;\n\t}\n\n\n\t/////////////////////\n\t// join table \uad00\ub828\n\tpublic List<RegisteredMemberDto> getList() {\n\t\treturn list;\n\t}\n", "\tpublic void setList(List<RegisteredMemberDto> list) {\n\t\tthis.list = list;\n\t}\n\n\t@Override\n\tpublic String toString() {\n\t\treturn \"UserDto [userId=\"\n\t\t\t\t+ userId + \", userPw=\" + userPw + \", userName=\" + userName + \", completedChallenge=\"\n\t\t\t\t+ completedChallenge + \", onOffNoty=\" + onOffNoty + \", userLoginType=\" + userLoginType + \", userPhone=\"\n\t\t\t\t+ userPhone + \", userBirth=\" + userBirth + \"]\";\n\t}\n\n\t\n\t\n\n}"]}
{"filename": "src/main/java/com/gld/model/dto/CommentId.java", "chunked_list": ["package com.gld.model.dto;\n\nimport java.io.Serializable;\nimport java.time.LocalDate;\n\nimport javax.persistence.Column;\n\npublic class CommentId implements Serializable{\n\t@Column(name=\"SEQ\")\n\tprivate Long seq;\n\t@Column(name=\"ID\")\n\tprivate Integer id;\n\t@Column(name=\"COMMENT_DATE\")\n\tprivate LocalDate commentDate;\n\tpublic CommentId() {\n\t\tsuper();\n\t\t// TODO Auto-generated constructor stub\n\t}\n\tpublic CommentId(Long seq, Integer id, LocalDate commentDate) {\n\t\tsuper();\n\t\tthis.seq = seq;\n\t\tthis.id = id;\n\t\tthis.commentDate = commentDate;\n\t}", "\tpublic Long getSeq() {\n\t\treturn seq;\n\t}\n\tpublic void setSeq(Long seq) {\n\t\tthis.seq = seq;\n\t}\n\tpublic Integer getId() {\n\t\treturn id;\n\t}\n\tpublic void setId(Integer id) {\n\t\tthis.id = id;\n\t}", "\tpublic void setId(Integer id) {\n\t\tthis.id = id;\n\t}\n\tpublic LocalDate getCommentDate() {\n\t\treturn commentDate;\n\t}\n\tpublic void setCommentDate(LocalDate commentDate) {\n\t\tthis.commentDate = commentDate;\n\t}\n\t\n\t\n}"]}
