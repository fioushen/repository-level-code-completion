{"filename": "src/test/java/dev/cru/context/RepoConfigSchemaGeneratorTest.java", "chunked_list": ["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0", " *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */", " * under the License.\n */\n\npackage dev.cru.context;\n\nimport com.fasterxml.jackson.databind.JsonNode;\nimport com.github.victools.jsonschema.generator.*;\nimport dev.cru.conf.RepoConfig;\nimport org.junit.jupiter.api.Test;\n", "import org.junit.jupiter.api.Test;\n\nclass RepoConfigSchemaGeneratorTest {\n\n\t@Test\n\tvoid name() {\n\t\tSchemaGeneratorConfigBuilder configBuilder = new SchemaGeneratorConfigBuilder(\n\t\t\tSchemaVersion.DRAFT_2020_12,\n\t\t\tOptionPreset.PLAIN_JSON\n\t\t);", "\t\t\tOptionPreset.PLAIN_JSON\n\t\t);\n\t\tSchemaGeneratorConfig config = configBuilder.build();\n\t\tSchemaGenerator generator = new SchemaGenerator(config);\n\t\tJsonNode jsonSchema = generator.generateSchema(RepoConfig.class);\n\n\t\tSystem.out.println(jsonSchema.toPrettyString());\n\t}\n}\n", "}\n"]}
{"filename": "src/test/java/dev/cru/context/PrintDemoConfigTest.java", "chunked_list": ["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0", " *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */", " * under the License.\n */\n\npackage dev.cru.context;\n\nimport com.fasterxml.jackson.core.JsonProcessingException;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport com.fasterxml.jackson.dataformat.yaml.YAMLFactory;\nimport dev.cru.conf.RepoConfig;\nimport java.util.List;", "import dev.cru.conf.RepoConfig;\nimport java.util.List;\nimport org.junit.jupiter.api.Test;\n\npublic class PrintDemoConfigTest {\n\n\t@Test\n\tvoid name() throws JsonProcessingException {\n\t\tRepoConfig config = new RepoConfig(\n\t\t\tnew RepoConfig.K8s(\n\t\t\t\tList.of(\n\t\t\t\t\tnew RepoConfig.K8sLocation(\n\t\t\t\t\t\t\"kustomize/overlays/prod/patch-resources.yaml\",\n\t\t\t\t\t\t\"prod-clsuter\",\n\t\t\t\t\t\t\"prod-namespace\",\n\t\t\t\t\t\tnull,\n\t\t\t\t\t\tnull\n\t\t\t\t\t),\n\t\t\t\t\tnew RepoConfig.K8sLocation(\n\t\t\t\t\t\t\"kustomize/overlays/non-prod/patch-resources.yaml\",\n\t\t\t\t\t\t\"prod-clsuter\",\n\t\t\t\t\t\t\"non-prod-cluster\",\n\t\t\t\t\t\tnull,\n\t\t\t\t\t\tnull\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t),\n\t\t\tnull\n\t\t);\n\n\t\tSystem.out.println(new ObjectMapper(new YAMLFactory()).writerWithDefaultPrettyPrinter().writeValueAsString(config));\n\t}\n}\n"]}
{"filename": "src/test/java/dev/cru/context/K8sNeedleExtractorTest.java", "chunked_list": ["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0", " *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */", " * under the License.\n */\n\npackage dev.cru.context;\n\nimport static org.assertj.core.api.Assertions.assertThat;\n\nimport dev.cru.context.k8s.K8sNeedleExtractor;\nimport dev.cru.context.k8s.K8sResourceType;\nimport java.io.IOException;", "import dev.cru.context.k8s.K8sResourceType;\nimport java.io.IOException;\nimport java.nio.file.Path;\nimport java.util.Set;\nimport org.junit.jupiter.api.Test;\n\nclass K8sNeedleExtractorTest {\n\n\t@Test\n\tvoid name() throws IOException {", "\t@Test\n\tvoid name() throws IOException {\n\t\tK8sTestLocation k8sTestLocation = new K8sTestLocation(\n\t\t\tPath.of(\"src\", \"test\", \"resources\", \"K8s\", \"patch-resources.yaml\")\n\t\t);\n\t\tSet<K8sNeedleExtractor.Match> matches = new K8sNeedleExtractor().extractLinesFrom(k8sTestLocation);\n\n\t\tassertThat(matches)\n\t\t\t.contains(\n\t\t\t\tnew K8sNeedleExtractor.Match(\"container_one\", \"Cluster1\", \"670m\", K8sResourceType.Cpu),", "\t\t\t.contains(\n\t\t\t\tnew K8sNeedleExtractor.Match(\"container_one\", \"Cluster1\", \"670m\", K8sResourceType.Cpu),\n\t\t\t\tnew K8sNeedleExtractor.Match(\"container_one\", \"Cluster1\", \"1021Mi\", K8sResourceType.Memory),\n\t\t\t\tnew K8sNeedleExtractor.Match(\"container_two\", \"Cluster1\", \"298m\", K8sResourceType.Cpu),\n\t\t\t\tnew K8sNeedleExtractor.Match(\"container_two\", \"Cluster1\", \"40Mi\", K8sResourceType.Memory)\n\t\t\t);\n\t}\n}\n", ""]}
{"filename": "src/test/java/dev/cru/context/K8sTestLocation.java", "chunked_list": ["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0", " *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */", " * under the License.\n */\n\npackage dev.cru.context;\n\nimport java.io.IOException;\nimport java.net.URI;\nimport java.nio.file.Files;\nimport java.nio.file.Path;\n\npublic class K8sTestLocation implements Location {\n\n\tprivate final String location;\n\n\tprivate final String fileContent;\n\n\tpublic K8sTestLocation(Path location) throws IOException {\n\t\tthis.location = location.toString();\n\n\t\tfileContent = Files.readString(location);\n\t}\n\n\t@Override", "import java.nio.file.Path;\n\npublic class K8sTestLocation implements Location {\n\n\tprivate final String location;\n\n\tprivate final String fileContent;\n\n\tpublic K8sTestLocation(Path location) throws IOException {\n\t\tthis.location = location.toString();\n\n\t\tfileContent = Files.readString(location);\n\t}\n\n\t@Override", "\tpublic String path() {\n\t\treturn location;\n\t}\n\n\t@Override\n\tpublic String fileContent() {\n\t\treturn fileContent;\n\t}\n\n\t@Override\n\tpublic boolean isVirtual() {\n\t\treturn false;\n\t}\n}\n", "\tpublic boolean isVirtual() {\n\t\treturn false;\n\t}\n}\n"]}
{"filename": "src/main/java/dev/cru/package-info.java", "chunked_list": ["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0", " *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */", " * under the License.\n */\n\npackage dev.cru;\n"]}
{"filename": "src/main/java/dev/cru/context/Location.java", "chunked_list": ["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0", " *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */", " * under the License.\n */\n\npackage dev.cru.context;\n\npublic interface Location {\n\tString path();\n\n\tString fileContent();\n\n\tboolean isVirtual();\n}\n"]}
{"filename": "src/main/java/dev/cru/context/CruService.java", "chunked_list": ["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0", " *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */", " * under the License.\n */\n\npackage dev.cru.context;\n\nimport dev.cru.conf.Repository;\nimport dev.cru.repository.gitlab.GitLabMockRepositoryApi;\nimport java.util.List;\n\npublic class CruService {\n\n\tprivate final GitLabMockRepositoryApi gitLabRepositoryApi = new GitLabMockRepositoryApi();\n\n\tpublic List<String> applyGitLab() {", "\npublic class CruService {\n\n\tprivate final GitLabMockRepositoryApi gitLabRepositoryApi = new GitLabMockRepositoryApi();\n\n\tpublic List<String> applyGitLab() {\n\t\tfor (Repository repository : gitLabRepositoryApi.findRepositories()) {\n\t\t\tapplyFor(repository);\n\t\t}\n\n\t\treturn List.of();\n\t}\n\n\tpublic List<String> applyFor(Repository repository) {", "\t\tfor (Location location : gitLabRepositoryApi.readLocationsFrom(repository)) {}\n\n\t\treturn List.of();\n\t}\n}\n"]}
{"filename": "src/main/java/dev/cru/context/k8s/ResourceParser.java", "chunked_list": ["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0", " *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */", " * under the License.\n */\n\npackage dev.cru.context.k8s;\n\npublic final class ResourceParser {\n\n\t// TODO Layman Solution for first approach, replace with comparable data later.\n\n\tpublic static double parseMemory(String input) {\n\t\treturn Double.parseDouble(input.replace(\"Mi\", \"\"));\n\t}\n", "\tpublic static double parseMemory(String input) {\n\t\treturn Double.parseDouble(input.replace(\"Mi\", \"\"));\n\t}\n\n\tpublic static double parseCpu(String input) {\n\t\treturn Double.parseDouble(input.replace(\"m\", \"\"));\n\t}\n}\n"]}
{"filename": "src/main/java/dev/cru/context/k8s/K8sResourceUpdater.java", "chunked_list": ["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0", " *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */", " * under the License.\n */\n\npackage dev.cru.context.k8s;\n\nimport dev.cru.conf.Environment;\n\npublic class K8sResourceUpdater {\n\n\tprivate final K8sNeedleExtractor needleExtractor = new K8sNeedleExtractor();\n\n\tprivate final Environment environment = new Environment();\n}\n"]}
{"filename": "src/main/java/dev/cru/context/k8s/K8sNeedleExtractor.java", "chunked_list": ["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0", " *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */", " * under the License.\n */\n\npackage dev.cru.context.k8s;\n\nimport dev.cru.context.Location;\nimport java.util.HashSet;\nimport java.util.Set;\nimport java.util.regex.Matcher;\nimport java.util.regex.Pattern;", "import java.util.regex.Matcher;\nimport java.util.regex.Pattern;\n\npublic class K8sNeedleExtractor {\n\n\tprivate final Pattern cpuPattern = Pattern.compile(\n\t\t\"cru: container=(?<container>.*) cluster=(?<cluster>.*)\\\\n\\\\s*cpu: (?<cpu>\\\\S*)\"\n\t);\n\tprivate final Pattern memoryPattern = Pattern.compile(\n\t\t\"cru: container=(?<container>.*) cluster=(?<cluster>.*)\\\\n\\\\s*memory: (?<memory>\\\\S*)\"\n\t);\n\n\tpublic Set<Match> extractLinesFrom(Location location) {\n\t\tSet<Match> result = new HashSet<>();\n", "\t\tfor (Matcher cpuMatcher = cpuPattern.matcher(location.fileContent()); cpuMatcher.find();) {\n\t\t\tresult.add(\n\t\t\t\tnew Match(\n\t\t\t\t\tcpuMatcher.group(\"container\"),\n\t\t\t\t\tcpuMatcher.group(\"cluster\"),\n\t\t\t\t\tcpuMatcher.group(\"cpu\"),\n\t\t\t\t\tK8sResourceType.Cpu\n\t\t\t\t)\n\t\t\t);\n\t\t}\n", "\t\tfor (Matcher memoryMatcher = memoryPattern.matcher(location.fileContent()); memoryMatcher.find();) {\n\t\t\tresult.add(\n\t\t\t\tnew Match(\n\t\t\t\t\tmemoryMatcher.group(\"container\"),\n\t\t\t\t\tmemoryMatcher.group(\"cluster\"),\n\t\t\t\t\tmemoryMatcher.group(\"memory\"),\n\t\t\t\t\tK8sResourceType.Memory\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\t\treturn result;\n\t}\n", "\tpublic record Match(String container, String namespace, String value, K8sResourceType resourceType) {}\n}\n"]}
{"filename": "src/main/java/dev/cru/context/k8s/K8sResourceType.java", "chunked_list": ["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0", " *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */", " * under the License.\n */\n\npackage dev.cru.context.k8s;\n\npublic enum K8sResourceType {\n\tCpu,\n\tMemory,\n}\n"]}
{"filename": "src/main/java/dev/cru/context/k8s/K8sRecommendation.java", "chunked_list": ["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0", " *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */", " * under the License.\n */\n\npackage dev.cru.context.k8s;\n\npublic record K8sRecommendation(String container, String cluster, String value, K8sResourceType resourceType) {}\n"]}
{"filename": "src/main/java/dev/cru/repository/RepositoryApi.java", "chunked_list": ["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0", " *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */", " * under the License.\n */\n\npackage dev.cru.repository;\n\nimport dev.cru.conf.Repository;\nimport dev.cru.context.Location;\n\npublic interface RepositoryApi {\n\tIterable<Repository> findRepositories();\n\n\tIterable<Location> readLocationsFrom(Repository repository);\n}\n", "public interface RepositoryApi {\n\tIterable<Repository> findRepositories();\n\n\tIterable<Location> readLocationsFrom(Repository repository);\n}\n"]}
{"filename": "src/main/java/dev/cru/repository/package-info.java", "chunked_list": ["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0", " *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */", " * under the License.\n */\n\n/**\n * Repository Support for different provider.\n */\npackage dev.cru.repository;\n"]}
{"filename": "src/main/java/dev/cru/repository/gitlab/GitLabMockRepositoryApi.java", "chunked_list": ["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0", " *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */", " * under the License.\n */\n\npackage dev.cru.repository.gitlab;\n\nimport dev.cru.conf.RepoConfig;\nimport dev.cru.conf.Repository;\nimport dev.cru.context.Location;\nimport dev.cru.repository.RepositoryApi;\nimport java.util.List;", "import dev.cru.repository.RepositoryApi;\nimport java.util.List;\n\npublic class GitLabMockRepositoryApi implements RepositoryApi {\n\n\t@Override\n\tpublic Iterable<Repository> findRepositories() {\n\t\treturn List.of(\n\t\t\tnew Repository(\n\t\t\t\t\"12345\",\n\t\t\t\tnew RepoConfig(\n\t\t\t\t\tnew RepoConfig.K8s(\n\t\t\t\t\t\tList.of(\n\t\t\t\t\t\t\tnew RepoConfig.K8sLocation(\n\t\t\t\t\t\t\t\t\"kustomize/overlays/prod/patch-resources.yaml\",\n\t\t\t\t\t\t\t\t\"prod-clsuter\",\n\t\t\t\t\t\t\t\t\"prod-namespace\",\n\t\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\t\tnull\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tnew RepoConfig.K8sLocation(\n\t\t\t\t\t\t\t\t\"kustomize/overlays/non-prod/patch-resources.yaml\",\n\t\t\t\t\t\t\t\t\"prod-clsuter\",\n\t\t\t\t\t\t\t\t\"non-prod-cluster\",\n\t\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\t\tnull\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t),\n\t\t\t\t\tnull\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\t}\n\n\t@Override\n\tpublic Iterable<Location> readLocationsFrom(Repository repository) {\n\t\treturn null;\n\t}\n}\n"]}
{"filename": "src/main/java/dev/cru/repository/gitlab/package-info.java", "chunked_list": ["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0", " *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */", " * under the License.\n */\n\npackage dev.cru.repository.gitlab;\n"]}
{"filename": "src/main/java/dev/cru/repository/github/package-info.java", "chunked_list": ["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0", " *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */", " * under the License.\n */\n\npackage dev.cru.repository.github;\n"]}
{"filename": "src/main/java/dev/cru/cloud/package-info.java", "chunked_list": ["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0", " *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */", " * under the License.\n */\n\npackage dev.cru.cloud;\n"]}
{"filename": "src/main/java/dev/cru/cloud/aws/package-info.java", "chunked_list": ["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0", " *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */", " * under the License.\n */\n\npackage dev.cru.cloud.aws;\n"]}
{"filename": "src/main/java/dev/cru/git/GitClient.java", "chunked_list": ["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0", " *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */", " * under the License.\n */\n\npackage dev.cru.git;\n\nimport java.nio.file.Path;\nimport org.eclipse.jgit.api.CloneCommand;\nimport org.eclipse.jgit.api.Git;\nimport org.eclipse.jgit.api.errors.GitAPIException;\n\npublic class GitClient {\n\n\tprivate final Git instance;\n\n\tpublic GitClient(String uri, Path temporaryFolder) {\n\t\tCloneCommand cloneCommand = Git.cloneRepository().setURI(uri).setDirectory(temporaryFolder.toFile()).setDepth(1);\n\n\t\ttry (Git git = cloneCommand.call()) {\n\t\t\tthis.instance = git;\n\t\t} catch (GitAPIException e) {\n\t\t\tthrow new RuntimeException(e);\n\t\t}\n\t}\n}\n", "import org.eclipse.jgit.api.errors.GitAPIException;\n\npublic class GitClient {\n\n\tprivate final Git instance;\n\n\tpublic GitClient(String uri, Path temporaryFolder) {\n\t\tCloneCommand cloneCommand = Git.cloneRepository().setURI(uri).setDirectory(temporaryFolder.toFile()).setDepth(1);\n\n\t\ttry (Git git = cloneCommand.call()) {\n\t\t\tthis.instance = git;\n\t\t} catch (GitAPIException e) {\n\t\t\tthrow new RuntimeException(e);\n\t\t}\n\t}\n}\n"]}
{"filename": "src/main/java/dev/cru/k8s/package-info.java", "chunked_list": ["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0", " *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */", " * under the License.\n */\n\npackage dev.cru.k8s;\n"]}
{"filename": "src/main/java/dev/cru/k8s/kubecost/package-info.java", "chunked_list": ["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0", " *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */", " * under the License.\n */\n\npackage dev.cru.k8s.kubecost;\n"]}
{"filename": "src/main/java/dev/cru/conf/Environment.java", "chunked_list": ["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0", " *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */", " * under the License.\n */\n\npackage dev.cru.conf;\n\npublic final class Environment {\n\n\tprivate static final String GITLAB_USE = \"GITLAB_USE\";\n\n\tprivate boolean gitlabUse = false;\n\n\tprivate static final String GITLAB_URL = \"GITLAB_URL\";\n\n\tprivate String gitlabUrl = \"https://gitlab.com\";\n\n\tprivate static final String GITLAB_TOKEN = \"GITLAB_TOKEN\";\n\n\tprivate String gitlabToken = \"\";\n\n\tprivate static final String USE_GITHUB = \"USE_GITLAB\";\n\n\tprivate boolean useGithub = false;\n\n\tpublic Environment() {\n\t\tgitlabUse = Boolean.parseBoolean(System.getenv(GITLAB_USE));\n\t\tgitlabUrl = System.getenv(GITLAB_URL);\n\t\tgitlabToken = System.getenv(GITLAB_TOKEN);\n\n\t\tuseGithub = Boolean.parseBoolean(System.getenv(USE_GITHUB));\n\t}\n", "\tpublic boolean isGitlabUse() {\n\t\treturn gitlabUse;\n\t}\n\n\tpublic String getGitlabUrl() {\n\t\treturn gitlabUrl;\n\t}\n\n\tpublic String getGitlabToken() {\n\t\treturn gitlabToken;\n\t}\n", "\tpublic String getGitlabToken() {\n\t\treturn gitlabToken;\n\t}\n\n\tpublic boolean isUseGithub() {\n\t\treturn useGithub;\n\t}\n}\n"]}
{"filename": "src/main/java/dev/cru/conf/Repository.java", "chunked_list": ["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0", " *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */", " * under the License.\n */\n\npackage dev.cru.conf;\n\npublic record Repository(String identifier, RepoConfig config) {}\n"]}
{"filename": "src/main/java/dev/cru/conf/RepoConfig.java", "chunked_list": ["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0", " *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */", " * under the License.\n */\n\npackage dev.cru.conf;\n\nimport java.util.List;\n\npublic record RepoConfig(K8s k8s, Aws aws) {\n\tpublic record K8s(List<K8sLocation> location) {}\n\n\tpublic record Aws(String account, List<AwsLocation> location) {}\n", "\tpublic record K8s(List<K8sLocation> location) {}\n\n\tpublic record Aws(String account, List<AwsLocation> location) {}\n\n\tpublic record K8sLocation(\n\t\tString path,\n\t\tString cluster,\n\t\tString namespace,\n\t\tString cpuDifference,\n\t\tString memDifference\n\t) {}\n", "\tpublic record AwsLocation(String path, String identifier) {}\n}\n"]}
