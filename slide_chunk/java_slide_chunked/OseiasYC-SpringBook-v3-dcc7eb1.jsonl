{"filename": "booking-service/src/test/java/com/uu/bookingservice/BookingServiceApplicationTests.java", "chunked_list": ["package com.uu.bookingservice;\n\nimport org.junit.jupiter.api.Test;\nimport org.springframework.boot.test.context.SpringBootTest;\n\n@SpringBootTest\nclass BookingServiceApplicationTests {\n\n\t@Test\n\tvoid contextLoads() {", "\t@Test\n\tvoid contextLoads() {\n\t}\n\n}\n"]}
{"filename": "booking-service/src/main/java/com/uu/bookingservice/BookingServiceApplication.java", "chunked_list": ["package com.uu.bookingservice;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.cloud.openfeign.EnableFeignClients;\n\n@SpringBootApplication\n@EnableFeignClients\npublic class BookingServiceApplication {\n\n\tpublic static void main(String[] args) {\n\t\tSpringApplication.run(BookingServiceApplication.class, args);\n\t}\n}\n", "public class BookingServiceApplication {\n\n\tpublic static void main(String[] args) {\n\t\tSpringApplication.run(BookingServiceApplication.class, args);\n\t}\n}\n"]}
{"filename": "booking-service/src/main/java/com/uu/bookingservice/interfaces/LabClient.java", "chunked_list": ["package com.uu.bookingservice.interfaces;\n\nimport java.util.Map;\n\nimport org.springframework.cloud.openfeign.FeignClient;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.PathVariable;\n\n@FeignClient(name = \"lab-service\", url = \"http://localhost:8082\")\npublic interface LabClient {\n    \n    @GetMapping(\"/lab/{id}\")\n    Map<String, Object> find(@PathVariable Long id);\n}\n", "@FeignClient(name = \"lab-service\", url = \"http://localhost:8082\")\npublic interface LabClient {\n    \n    @GetMapping(\"/lab/{id}\")\n    Map<String, Object> find(@PathVariable Long id);\n}\n"]}
{"filename": "booking-service/src/main/java/com/uu/bookingservice/interfaces/BookingRepository.java", "chunked_list": ["package com.uu.bookingservice.interfaces;\n\nimport java.time.LocalDateTime;\nimport java.util.List;\n\nimport org.springframework.data.jpa.repository.JpaRepository;\nimport org.springframework.data.jpa.repository.Modifying;\nimport org.springframework.data.jpa.repository.Query;\nimport org.springframework.data.repository.query.Param;\nimport org.springframework.stereotype.Repository;", "import org.springframework.data.repository.query.Param;\nimport org.springframework.stereotype.Repository;\n\nimport com.uu.bookingservice.models.Booking;\n\n@Repository\npublic interface BookingRepository extends JpaRepository<Booking, Long> {\n\n    @Query(value = \"SELECT * FROM booking WHERE approved = false\", nativeQuery = true)\n    List<Booking> findPending();\n\n    @Query(value = \"SELECT * FROM booking WHERE approved = true\", nativeQuery = true)\n    List<Booking> findApproved();\n\n    @Query(value = \"SELECT * FROM booking WHERE professor_id = ?1\", nativeQuery = true)\n    List<Booking> findByProfessor(Long id);\n\n    @Query(value = \"SELECT COUNT(*) FROM booking b WHERE b.lab_id = ?1 AND ((b.time_init <= ?2 AND b.time_final >= ?2) OR (b.time_init <= ?3 AND b.time_final >= ?3)) AND b.approved = true\", nativeQuery = true)\n    int isBusy(Long lab, LocalDateTime timeInit, LocalDateTime timeFinal);\n\n    @Query(value = \"SELECT * FROM booking WHERE lab_id = ?1\", nativeQuery = true)\n    List<Booking> findBookingsByLabId(Long id);\n\n    @Modifying\n    @Query(value = \"UPDATE booking SET professor_id = :#{#booking.professorId}, subject_id = :#{#booking.subjectId}, lab_id = :#{#booking.labId}, time_init = :#{#booking.timeInit}, time_final = :#{#booking.timeFinal}\", nativeQuery = true)\n    void update(@Param(\"booking\") Booking booking);\n\n    @Modifying\n    @Query(value = \"UPDATE booking SET approved = true WHERE id = ?1\", nativeQuery = true)\n    void approve(Long id);\n\n    @Modifying\n    @Query(value = \"DELETE FROM booking WHERE time_final < ?1\", nativeQuery = true)\n    void deleteByTimeFinalBefore(LocalDateTime now);\n}\n"]}
{"filename": "booking-service/src/main/java/com/uu/bookingservice/interfaces/ProfessorClient.java", "chunked_list": ["package com.uu.bookingservice.interfaces;\n\nimport java.util.Map;\n\nimport org.springframework.cloud.openfeign.FeignClient;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.PathVariable;\n\n@FeignClient(name = \"professor-service\", url = \"http://localhost:8081\")\npublic interface ProfessorClient {\n\n    @GetMapping(\"/professor/{id}\")\n    Map<String, Object> find(@PathVariable Long id);\n\n    @GetMapping(\"/subject/{id}\")\n    Map<String, Object> findSubject(@PathVariable Long id);\n}\n", "@FeignClient(name = \"professor-service\", url = \"http://localhost:8081\")\npublic interface ProfessorClient {\n\n    @GetMapping(\"/professor/{id}\")\n    Map<String, Object> find(@PathVariable Long id);\n\n    @GetMapping(\"/subject/{id}\")\n    Map<String, Object> findSubject(@PathVariable Long id);\n}\n"]}
{"filename": "booking-service/src/main/java/com/uu/bookingservice/models/Booking.java", "chunked_list": ["package com.uu.bookingservice.models;\n\nimport java.time.LocalDateTime;\n\nimport org.hibernate.annotations.CreationTimestamp;\n\nimport com.fasterxml.jackson.annotation.JsonProperty;\n\nimport jakarta.persistence.Entity;\nimport jakarta.persistence.GeneratedValue;", "import jakarta.persistence.Entity;\nimport jakarta.persistence.GeneratedValue;\nimport jakarta.persistence.GenerationType;\nimport jakarta.persistence.Id;\nimport lombok.Data;\n\n@Entity\n@Data\npublic class Booking {\n    @Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    private Long id;\n\n    @JsonProperty(access = JsonProperty.Access.WRITE_ONLY)\n    private Long professorId;\n\n    @JsonProperty(access = JsonProperty.Access.WRITE_ONLY)\n    private Long labId;\n\n    @JsonProperty(access = JsonProperty.Access.WRITE_ONLY)\n    private Long subjectId;\n\n    @JsonProperty(access = JsonProperty.Access.READ_ONLY)\n    private boolean approved;\n\n    private LocalDateTime timeInit;\n\n    private LocalDateTime timeFinal;\n\n    @CreationTimestamp\n    private LocalDateTime timeRequest;\n}\n", "public class Booking {\n    @Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    private Long id;\n\n    @JsonProperty(access = JsonProperty.Access.WRITE_ONLY)\n    private Long professorId;\n\n    @JsonProperty(access = JsonProperty.Access.WRITE_ONLY)\n    private Long labId;\n\n    @JsonProperty(access = JsonProperty.Access.WRITE_ONLY)\n    private Long subjectId;\n\n    @JsonProperty(access = JsonProperty.Access.READ_ONLY)\n    private boolean approved;\n\n    private LocalDateTime timeInit;\n\n    private LocalDateTime timeFinal;\n\n    @CreationTimestamp\n    private LocalDateTime timeRequest;\n}\n"]}
{"filename": "booking-service/src/main/java/com/uu/bookingservice/services/BookingService.java", "chunked_list": ["package com.uu.bookingservice.services;\n\nimport java.time.LocalDateTime;\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.Optional;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.http.HttpStatus;", "import org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.http.HttpStatus;\nimport org.springframework.http.ResponseEntity;\nimport org.springframework.scheduling.annotation.Async;\nimport org.springframework.scheduling.annotation.EnableScheduling;\nimport org.springframework.scheduling.annotation.Scheduled;\nimport org.springframework.stereotype.Service;\n\nimport com.uu.bookingservice.dto.BookingDTO;\nimport com.uu.bookingservice.interfaces.BookingRepository;", "import com.uu.bookingservice.dto.BookingDTO;\nimport com.uu.bookingservice.interfaces.BookingRepository;\nimport com.uu.bookingservice.interfaces.LabClient;\nimport com.uu.bookingservice.interfaces.ProfessorClient;\nimport com.uu.bookingservice.models.Booking;\n\nimport jakarta.transaction.Transactional;\n\n@Service\n@EnableScheduling", "@Service\n@EnableScheduling\n@Transactional\npublic class BookingService {\n\n    @Autowired\n    BookingRepository bookingRepository;\n\n    @Autowired\n    ProfessorClient professorClient;\n\n    @Autowired\n    LabClient labClient;\n\n    @Autowired\n    LogService logService;\n\n    public ResponseEntity<String> save(Booking booking) {", "        if (booking.getTimeFinal().isBefore(booking.getTimeInit()) || booking.getTimeInit().isBefore(LocalDateTime.now())) {\n            return ResponseEntity.status(HttpStatus.CONFLICT).body(\"Time conflicting. Check the inputs.\");\n        }\n    \n        bookingRepository.save(booking);\n        logService.Pending(bookingRepository.findById(booking.getId()).get());\n        return ResponseEntity.ok(\"Sent to approve.\");\n    }\n    \n\n    public void delete(Long id) {\n        Optional<Booking> optionalBooking = bookingRepository.findById(id);", "    public void delete(Long id) {\n        Optional<Booking> optionalBooking = bookingRepository.findById(id);\n        if (optionalBooking.isPresent()) {\n            Booking booking = optionalBooking.get();\n            bookingRepository.deleteById(id);\n\n            if (booking.isApproved()) {\n                logService.deletedApproved(booking);\n            } else {\n                logService.deletedPending(booking);\n            }\n        }\n    }\n    \n", "    public void update(Booking booking) {\n        bookingRepository.update(booking);\n        if (booking.isApproved()) {\n            logService.updatedApproved(bookingRepository.findById(booking.getId()).get());\n        } else {\n            logService.updatedPending(bookingRepository.findById(booking.getId()).get());\n        }\n    }\n\n    public ResponseEntity<String> approve(Long id) {\n        Optional<Booking> booking = bookingRepository.findById(id);\n        Booking b = booking.get();\n", "        if (isBusy(booking)) {\n            return ResponseEntity.status(HttpStatus.CONFLICT).body(\"This lab is busy between \" +\n                    b.getTimeInit() + \" and \" + b.getTimeFinal() + \".\");\n        }\n\n        bookingRepository.approve(id);\n        logService.Approved(booking.get());\n        return ResponseEntity.ok(\"Approved.\");\n    }\n\n    @Async\n    @Scheduled(fixedDelay = 60000)\n    void deleteByTimeFinalBefore() {\n        bookingRepository.deleteByTimeFinalBefore(LocalDateTime.now());\n    }\n\n    public List<BookingDTO> findByProfessor(Long id) {\n        List<Booking> bookings = bookingRepository.findByProfessor(id);\n        return createBookingDTO(bookings);\n    }\n\n    public List<BookingDTO> findPending() {\n        List<Booking> bookings = bookingRepository.findPending();\n        return createBookingDTO(bookings);\n    }\n\n    public List<BookingDTO> findApproved() {\n        List<Booking> bookings = bookingRepository.findApproved();\n        return createBookingDTO(bookings);\n    }\n\n    public List<BookingDTO> findAll() {\n        List<Booking> bookings = bookingRepository.findAll();\n        return createBookingDTO(bookings);\n    }\n\n    public List<BookingDTO> findById(Long id) {\n        List<Booking> bookings = new ArrayList<>();\n        bookings.add(bookingRepository.findById(id).get());\n        return createBookingDTO(bookings);\n    }\n", "    public boolean isBusy(Optional<Booking> booking) {\n        return booking.map(b -> {\n            int count = bookingRepository.isBusy(b.getLabId(), b.getTimeInit(), b.getTimeFinal());\n            return count > 0;\n        }).orElse(false);\n    }\n\n    private List<BookingDTO> createBookingDTO(List<Booking> bookings) {\n        List<BookingDTO> bookingsDTO = new ArrayList<>();\n\n        for (Booking booking : bookings) {\n            Map<String, Object> professor = professorClient.find(booking.getProfessorId());\n            Map<String, Object> lab = labClient.find(booking.getLabId());\n            Map<String, Object> subject = professorClient.findSubject(booking.getSubjectId());\n\n            professor.remove(\"subjects\");\n\n            BookingDTO bookingDTO = new BookingDTO(booking, professor, lab, subject);\n            bookingsDTO.add(bookingDTO);\n        }\n\n        return bookingsDTO;\n    }\n}\n", "        for (Booking booking : bookings) {\n            Map<String, Object> professor = professorClient.find(booking.getProfessorId());\n            Map<String, Object> lab = labClient.find(booking.getLabId());\n            Map<String, Object> subject = professorClient.findSubject(booking.getSubjectId());\n\n            professor.remove(\"subjects\");\n\n            BookingDTO bookingDTO = new BookingDTO(booking, professor, lab, subject);\n            bookingsDTO.add(bookingDTO);\n        }\n\n        return bookingsDTO;\n    }\n}\n"]}
{"filename": "booking-service/src/main/java/com/uu/bookingservice/services/LogService.java", "chunked_list": ["package com.uu.bookingservice.services;\n\nimport org.apache.logging.log4j.LogManager;\nimport org.apache.logging.log4j.Logger;\nimport org.springframework.stereotype.Service;\n\nimport com.uu.bookingservice.models.Booking;\n\n@Service\npublic class LogService {\n    \n    private static final Logger log = LogManager.getLogger(LogService.class);\n", "@Service\npublic class LogService {\n    \n    private static final Logger log = LogManager.getLogger(LogService.class);\n\n    public void deletedPending(Booking booking) {\n        log.info(\"Pending deleted: {}\", booking.toString());\n    }\n\n    public void deletedApproved(Booking booking) {\n        log.info(\"Approved deleted: {}\", booking.toString());\n    }\n    ", "    public void deletedApproved(Booking booking) {\n        log.info(\"Approved deleted: {}\", booking.toString());\n    }\n    \n    public void Pending(Booking booking) {\n        log.info(\"Pending added: {}\", booking.toString());\n    }\n\n    public void Approved(Booking booking) {\n        log.info(\"Approved added: {}\", booking.toString());\n    }\n", "    public void Approved(Booking booking) {\n        log.info(\"Approved added: {}\", booking.toString());\n    }\n\n    public void updatedPending(Booking booking) {\n        log.info(\"Pending updated: {}\", booking.toString());\n    }\n\n    public void updatedApproved(Booking booking) {\n        log.info(\"Approved updated: {}\", booking.toString());\n    }\n}\n", "    public void updatedApproved(Booking booking) {\n        log.info(\"Approved updated: {}\", booking.toString());\n    }\n}\n"]}
{"filename": "booking-service/src/main/java/com/uu/bookingservice/controllers/BookingController.java", "chunked_list": ["package com.uu.bookingservice.controllers;\n\nimport java.util.List;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.http.ResponseEntity;\nimport org.springframework.web.bind.annotation.DeleteMapping;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.PathVariable;\nimport org.springframework.web.bind.annotation.PostMapping;", "import org.springframework.web.bind.annotation.PathVariable;\nimport org.springframework.web.bind.annotation.PostMapping;\nimport org.springframework.web.bind.annotation.PutMapping;\nimport org.springframework.web.bind.annotation.RequestBody;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RestController;\n\nimport com.uu.bookingservice.dto.BookingDTO;\nimport com.uu.bookingservice.models.Booking;\nimport com.uu.bookingservice.services.BookingService;", "import com.uu.bookingservice.models.Booking;\nimport com.uu.bookingservice.services.BookingService;\n\n@RestController\n@RequestMapping(\"/booking\")\npublic class BookingController {\n\n    @Autowired\n    BookingService bookingService;\n    \n    @PostMapping(\"/save\")\n    public ResponseEntity<String> save(@RequestBody Booking booking){\n        return bookingService.save(booking);\n    }\n\n    @DeleteMapping(\"/delete/{id}\")", "    public void delete(@PathVariable Long id){\n        bookingService.delete(id);\n    }\n\n    @PutMapping(\"/update\")\n    public void update(@RequestBody Booking booking) {\n        bookingService.update(booking);\n    }\n\n    @PutMapping(\"/approve/{id}\")\n    public ResponseEntity<String> approve(@PathVariable Long id){\n        return bookingService.approve(id);\n    }\n\n    @GetMapping(\"/findAll\")\n    public List<BookingDTO> findAll() {\n        return bookingService.findAll();\n    }\n\n    @GetMapping(\"/{id}\")\n    public List<BookingDTO> findById(@PathVariable Long id) {\n        return bookingService.findById(id);\n    }\n\n    @GetMapping(\"/findPending\")\n    public List<BookingDTO> findPending() {\n        return bookingService.findPending();\n    }\n\n    @GetMapping(\"/findApproved\")\n    public List<BookingDTO> findApproved(){\n        return bookingService.findApproved();\n    }\n\n    @GetMapping(\"/findByProfessor/{id}\")\n    public List<BookingDTO> findByProfessor(@PathVariable Long id){\n        return bookingService.findByProfessor(id);\n    }\n}\n"]}
{"filename": "booking-service/src/main/java/com/uu/bookingservice/dto/BookingDTO.java", "chunked_list": ["package com.uu.bookingservice.dto;\n\nimport java.util.Map;\n\nimport com.uu.bookingservice.models.Booking;\n\npublic record BookingDTO(Booking booking, Map<String, Object> professor, Map<String, Object> lab, Map<String, Object> subject) {\n}\n"]}
{"filename": "professor-service/src/test/java/com/uu/professorservice/ProfessorServiceApplicationTests.java", "chunked_list": ["package com.uu.professorservice;\n\nimport org.junit.jupiter.api.Test;\nimport org.springframework.boot.test.context.SpringBootTest;\n\n@SpringBootTest\nclass ProfessorServiceApplicationTests {\n\n\t@Test\n\tvoid contextLoads() {", "\t@Test\n\tvoid contextLoads() {\n\t}\n\n}\n"]}
{"filename": "professor-service/src/main/java/com/uu/professorservice/ProfessorServiceApplication.java", "chunked_list": ["package com.uu.professorservice;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\n\n@SpringBootApplication\npublic class ProfessorServiceApplication {\n\n\tpublic static void main(String[] args) {\n\t\tSpringApplication.run(ProfessorServiceApplication.class, args);\n\t}\n\n}\n", "\tpublic static void main(String[] args) {\n\t\tSpringApplication.run(ProfessorServiceApplication.class, args);\n\t}\n\n}\n"]}
{"filename": "professor-service/src/main/java/com/uu/professorservice/interfaces/ProfessorRepository.java", "chunked_list": ["package com.uu.professorservice.interfaces;\n\nimport org.springframework.data.jpa.repository.JpaRepository;\nimport org.springframework.data.jpa.repository.Modifying;\nimport org.springframework.data.jpa.repository.Query;\nimport org.springframework.data.repository.query.Param;\nimport org.springframework.stereotype.Repository;\n\nimport com.uu.professorservice.models.Professor;\n", "import com.uu.professorservice.models.Professor;\n\n@Repository\npublic interface ProfessorRepository extends JpaRepository<Professor, Long> {\n\n    @Modifying\n    @Query(\"UPDATE Professor p SET p.name = :#{#professor.name} WHERE p.id = :#{#professor.id}\")\n    void update(@Param(\"professor\") Professor professor);\n\n    @Modifying\n    @Query(value = \"INSERT INTO professor_subject (professor_id, subject_id) VALUES (:professorId, :subjectId)\", nativeQuery = true)\n    void insertProfessorSubject(Long professorId, Long subjectId);\n\n    @Modifying\n    @Query(value = \"DELETE FROM professor_subject WHERE professor_id = :professorId AND subject_id = :subjectId\", nativeQuery = true)\n    void removeProfessorSubject(Long professorId, Long subjectId);\n}\n"]}
{"filename": "professor-service/src/main/java/com/uu/professorservice/interfaces/SubjectRepository.java", "chunked_list": ["package com.uu.professorservice.interfaces;\n\nimport java.util.List;\n\nimport org.springframework.data.jpa.repository.JpaRepository;\nimport org.springframework.data.jpa.repository.Modifying;\nimport org.springframework.data.jpa.repository.Query;\nimport org.springframework.data.repository.query.Param;\nimport org.springframework.stereotype.Repository;\n", "import org.springframework.stereotype.Repository;\n\nimport com.uu.professorservice.models.Subject;\n\n@Repository\npublic interface SubjectRepository extends JpaRepository<Subject, Long> {\n\n    @Query(value = \"SELECT subject.* FROM professor_subject JOIN subject ON professor_subject.subject_id = subject.id WHERE professor_subject.professor_id = ?1\", nativeQuery = true)\n    List<Subject> findSubjectsByProfessorId(Long id);\n\n    @Modifying\n    @Query(\"UPDATE Subject s SET s.name = :#{#subject.name} WHERE s.id = :#{#subject.id}\")\n    void update(@Param(\"subject\") Subject subject);\n\n    @Modifying\n    @Query(value = \"DELETE FROM professor_subject WHERE subject_id = ?1\", nativeQuery = true)\n    void deleteRelated(Long id);\n}\n"]}
{"filename": "professor-service/src/main/java/com/uu/professorservice/models/Subject.java", "chunked_list": ["package com.uu.professorservice.models;\n\nimport java.util.List;\n\nimport com.fasterxml.jackson.annotation.JsonIgnore;\n\nimport jakarta.persistence.Entity;\nimport jakarta.persistence.GeneratedValue;\nimport jakarta.persistence.GenerationType;\nimport jakarta.persistence.Id;", "import jakarta.persistence.GenerationType;\nimport jakarta.persistence.Id;\nimport jakarta.persistence.ManyToMany;\nimport lombok.Data;\n\n@Entity\n@Data\npublic class Subject {\n    @Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    private Long id;\n\n    private String name;\n\n    @JsonIgnore\n    @ManyToMany(mappedBy = \"subjects\")\n    private List<Professor> professors;\n}"]}
{"filename": "professor-service/src/main/java/com/uu/professorservice/models/Professor.java", "chunked_list": ["package com.uu.professorservice.models;\n\nimport java.util.List;\n\nimport jakarta.persistence.Entity;\nimport jakarta.persistence.GeneratedValue;\nimport jakarta.persistence.GenerationType;\nimport jakarta.persistence.Id;\nimport jakarta.persistence.JoinColumn;\nimport jakarta.persistence.JoinTable;", "import jakarta.persistence.JoinColumn;\nimport jakarta.persistence.JoinTable;\nimport jakarta.persistence.ManyToMany;\nimport lombok.Data;\n\n@Entity\n@Data\npublic class Professor {\n    @Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    private Long id;\n\n    private String name;\n\n    @ManyToMany\n    @JoinTable(name = \"professor_subject\", \n    joinColumns = @JoinColumn(name = \"professor_id\"), \n    inverseJoinColumns = @JoinColumn(name = \"subject_id\"))\n    private List<Subject> subjects;\n}\n"]}
{"filename": "professor-service/src/main/java/com/uu/professorservice/services/ProfessorService.java", "chunked_list": ["package com.uu.professorservice.services;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\n\nimport com.uu.professorservice.interfaces.ProfessorRepository;\nimport com.uu.professorservice.interfaces.SubjectRepository;", "import com.uu.professorservice.interfaces.ProfessorRepository;\nimport com.uu.professorservice.interfaces.SubjectRepository;\nimport com.uu.professorservice.models.Professor;\n\nimport jakarta.transaction.Transactional;\n\n@Service\n@Transactional\npublic class ProfessorService {\n\n    @Autowired\n    private ProfessorRepository professorRepository;\n\n    @Autowired \n    SubjectRepository subjectRepository;\n", "public class ProfessorService {\n\n    @Autowired\n    private ProfessorRepository professorRepository;\n\n    @Autowired \n    SubjectRepository subjectRepository;\n\n    public void save(Professor professor) {\n        professorRepository.save(professor);\n    }\n", "    public void save(Professor professor) {\n        professorRepository.save(professor);\n    }\n\n    public void update(Professor newProfessor){\n        Professor oldProfessor = professorRepository.findById(newProfessor.getId()).get();\n        List<Long> subjectsId = new ArrayList<>();\n\n        professorRepository.save(newProfessor);\n\n        for (int i = 0; i < newProfessor.getSubjects().size(); i++) {\n            subjectsId.add(subjectRepository.findById(newProfessor.getSubjects().get(i).getId()).get().getId());\n        }\n", "        for (int i = 0; i < newProfessor.getSubjects().size(); i++) {\n            subjectsId.add(subjectRepository.findById(newProfessor.getSubjects().get(i).getId()).get().getId());\n        }\n\n        for (int i = 0; i < oldProfessor.getSubjects().size(); i++) {\n            professorRepository.removeProfessorSubject(oldProfessor.getId(), oldProfessor.getSubjects().get(i).getId());;\n        }\n\n        for (Long id : subjectsId) {\n            professorRepository.insertProfessorSubject(newProfessor.getId(), id);\n        }\n    }\n", "        for (Long id : subjectsId) {\n            professorRepository.insertProfessorSubject(newProfessor.getId(), id);\n        }\n    }\n\n    public void deleteById(Long id){\n        professorRepository.deleteById(id);\n    }\n\n    public Professor findById(Long id){\n        return professorRepository.findById(id).get();\n    }\n\n    public List<Professor> findAll(){\n        return professorRepository.findAll();\n    }\n", "    public Professor findById(Long id){\n        return professorRepository.findById(id).get();\n    }\n\n    public List<Professor> findAll(){\n        return professorRepository.findAll();\n    }\n\n    public void removeProfessorSubject(Long professorId, Long subjectId) {\n        professorRepository.removeProfessorSubject(professorId, subjectId);\n    }\n", "    public void removeProfessorSubject(Long professorId, Long subjectId) {\n        professorRepository.removeProfessorSubject(professorId, subjectId);\n    }\n\n    public void insertProfessorSubject(Long professorId, Long subjectId) {\n        professorRepository.insertProfessorSubject(professorId, subjectId);\n    }\n}"]}
{"filename": "professor-service/src/main/java/com/uu/professorservice/services/SubjectService.java", "chunked_list": ["package com.uu.professorservice.services;\n\nimport java.util.List;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\n\nimport com.uu.professorservice.interfaces.SubjectRepository;\nimport com.uu.professorservice.models.Subject;\n", "import com.uu.professorservice.models.Subject;\n\nimport jakarta.transaction.Transactional;\n\n@Service\n@Transactional\npublic class SubjectService {\n    \n    @Autowired\n    SubjectRepository subjectRepository;\n", "    public void save(Subject subject){\n        subjectRepository.save(subject);\n    }\n\n    public void deleteById(Long id){\n        subjectRepository.deleteRelated(id);\n        subjectRepository.deleteById(id);\n    }\n\n    public List<Subject> findAll(){\n        return subjectRepository.findAll();\n    }\n", "    public Subject findById(Long id){\n        return subjectRepository.findById(id).get();\n    }\n\n    public List<Subject> findSubjectsByProfessorId(Long id) {\n        return subjectRepository.findSubjectsByProfessorId(id);\n    }\n\n    public void update(Subject subject) {\n        subjectRepository.update(subject);\n    }\n}\n", "    public void update(Subject subject) {\n        subjectRepository.update(subject);\n    }\n}\n"]}
{"filename": "professor-service/src/main/java/com/uu/professorservice/controllers/SubjectController.java", "chunked_list": ["package com.uu.professorservice.controllers;\n\nimport java.util.List;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.web.bind.annotation.DeleteMapping;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.PathVariable;\nimport org.springframework.web.bind.annotation.PostMapping;\nimport org.springframework.web.bind.annotation.PutMapping;", "import org.springframework.web.bind.annotation.PostMapping;\nimport org.springframework.web.bind.annotation.PutMapping;\nimport org.springframework.web.bind.annotation.RequestBody;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RestController;\n\nimport com.uu.professorservice.models.Subject;\nimport com.uu.professorservice.services.SubjectService;\n\n@RestController", "\n@RestController\n@RequestMapping(\"/subject\")\npublic class SubjectController {\n    \n    @Autowired\n    SubjectService subjectService;\n\n    @PostMapping(\"/save\")\n    public void save(@RequestBody Subject subject) {\n        subjectService.save(subject);\n    }\n\n    @PutMapping(\"/update\")", "    public void save(@RequestBody Subject subject) {\n        subjectService.save(subject);\n    }\n\n    @PutMapping(\"/update\")\n    public void update(@RequestBody Subject subject){\n        subjectService.update(subject);\n    }\n\n    @DeleteMapping(\"/delete/{id}\")\n    public void delete(@PathVariable long id){\n        subjectService.deleteById(id);\n    }\n\n    @GetMapping(\"/findAll\")\n    public List<Subject> findAll(){\n        return subjectService.findAll();\n    }\n\n    @GetMapping(\"/findSubjectsByProfessor/{id}\")\n    public List<Subject> findSubjectsByProfessorId(@PathVariable Long id){\n        return subjectService.findSubjectsByProfessorId(id);\n    }\n\n    @GetMapping(\"/{id}\")", "    public void delete(@PathVariable long id){\n        subjectService.deleteById(id);\n    }\n\n    @GetMapping(\"/findAll\")\n    public List<Subject> findAll(){\n        return subjectService.findAll();\n    }\n\n    @GetMapping(\"/findSubjectsByProfessor/{id}\")\n    public List<Subject> findSubjectsByProfessorId(@PathVariable Long id){\n        return subjectService.findSubjectsByProfessorId(id);\n    }\n\n    @GetMapping(\"/{id}\")", "    public Subject find(@PathVariable long id){\n        return subjectService.findById(id);\n    }\n}\n"]}
{"filename": "professor-service/src/main/java/com/uu/professorservice/controllers/ProfessorController.java", "chunked_list": ["package com.uu.professorservice.controllers;\n\nimport java.util.List;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.web.bind.annotation.DeleteMapping;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.PathVariable;\nimport org.springframework.web.bind.annotation.PostMapping;\nimport org.springframework.web.bind.annotation.PutMapping;", "import org.springframework.web.bind.annotation.PostMapping;\nimport org.springframework.web.bind.annotation.PutMapping;\nimport org.springframework.web.bind.annotation.RequestBody;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RestController;\n\nimport com.uu.professorservice.models.Professor;\nimport com.uu.professorservice.services.ProfessorService;\n\n@RestController", "\n@RestController\n@RequestMapping(\"/professor\")\npublic class ProfessorController {\n    \n    @Autowired\n    ProfessorService professorService;\n\n    @PostMapping(\"/save\")\n    public void save(@RequestBody Professor professor){\n        professorService.save(professor);\n    }\n\n    @PutMapping(\"/update\")", "    public void save(@RequestBody Professor professor){\n        professorService.save(professor);\n    }\n\n    @PutMapping(\"/update\")\n    public void update(@RequestBody Professor professor){\n        professorService.update(professor);\n    }\n\n    @PutMapping(\"/insert/{professor_id}/{subject_id}\")\n    public void insertProfessorSubject(@PathVariable(\"professor_id\") Long professorId, @PathVariable(\"subject_id\")Long subjectId){\n        professorService.insertProfessorSubject(professorId, subjectId);\n    }\n\n    @DeleteMapping(\"/delete/{id}\")", "    public void insertProfessorSubject(@PathVariable(\"professor_id\") Long professorId, @PathVariable(\"subject_id\")Long subjectId){\n        professorService.insertProfessorSubject(professorId, subjectId);\n    }\n\n    @DeleteMapping(\"/delete/{id}\")\n    public void delete(@PathVariable Long id){\n        professorService.deleteById(id);\n    }\n\n    @DeleteMapping(\"/delete/{professor_id}/{subject_id}\")\n    public void removeProfessorSubject(@PathVariable(\"professor_id\") Long professorId, @PathVariable(\"subject_id\")Long subjectId){\n        professorService.removeProfessorSubject(professorId, subjectId);\n    }\n\n    @GetMapping(\"/findAll\")\n    public List<Professor> findAll(){\n        return professorService.findAll();\n    }\n\n    @GetMapping(\"/{id}\")", "    public void removeProfessorSubject(@PathVariable(\"professor_id\") Long professorId, @PathVariable(\"subject_id\")Long subjectId){\n        professorService.removeProfessorSubject(professorId, subjectId);\n    }\n\n    @GetMapping(\"/findAll\")\n    public List<Professor> findAll(){\n        return professorService.findAll();\n    }\n\n    @GetMapping(\"/{id}\")\n    public Professor find(@PathVariable Long id){\n        return professorService.findById(id);\n    }\n}\n", "    public Professor find(@PathVariable Long id){\n        return professorService.findById(id);\n    }\n}\n"]}
{"filename": "lab-service/src/test/java/com/uu/labservice/LabServiceApplicationTests.java", "chunked_list": ["package com.uu.labservice;\n\nimport org.junit.jupiter.api.Test;\nimport org.springframework.boot.test.context.SpringBootTest;\n\n@SpringBootTest\nclass LabServiceApplicationTests {\n\n\t@Test\n\tvoid contextLoads() {", "\t@Test\n\tvoid contextLoads() {\n\t}\n\n}\n"]}
{"filename": "lab-service/src/main/java/com/uu/labservice/LabServiceApplication.java", "chunked_list": ["package com.uu.labservice;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\n\n@SpringBootApplication\npublic class LabServiceApplication {\n\n\tpublic static void main(String[] args) {\n\t\tSpringApplication.run(LabServiceApplication.class, args);\n\t}\n\n}\n", "\tpublic static void main(String[] args) {\n\t\tSpringApplication.run(LabServiceApplication.class, args);\n\t}\n\n}\n"]}
{"filename": "lab-service/src/main/java/com/uu/labservice/interfaces/LabRepository.java", "chunked_list": ["package com.uu.labservice.interfaces;\n\nimport org.springframework.data.jpa.repository.JpaRepository;\nimport org.springframework.data.jpa.repository.Modifying;\nimport org.springframework.data.jpa.repository.Query;\nimport org.springframework.data.repository.query.Param;\nimport org.springframework.stereotype.Repository;\n\nimport com.uu.labservice.models.Lab;\n", "import com.uu.labservice.models.Lab;\n\n@Repository\npublic interface LabRepository extends JpaRepository<Lab, Long> {\n\n    @Modifying\n    @Query(\"UPDATE Lab SET lami = :#{#lab.lami}, description = :#{#lab.description}, status = :#{#lab.status}, desktops = :#{#lab.desktops}, location = :#{#lab.location} WHERE id = :#{#lab.id}\")\n    void update(@Param(\"lab\") Lab lab);\n\n    @Modifying\n    @Query(\"UPDATE Lab SET status = :#{#status} WHERE id = :#{#labId}\")\n    void updateStatus(@Param(\"labId\") Long labId, @Param(\"status\") boolean status);\n\n}\n"]}
{"filename": "lab-service/src/main/java/com/uu/labservice/models/Lab.java", "chunked_list": ["package com.uu.labservice.models;\n\nimport jakarta.persistence.Entity;\nimport jakarta.persistence.GeneratedValue;\nimport jakarta.persistence.GenerationType;\nimport jakarta.persistence.Id;\nimport lombok.Data;\n\n@Entity\n@Data\npublic class Lab {\n    @Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    private Long id;\n\n    private String lami;\n\n    private String description;\n\n    private boolean status;\n\n    private int desktops;\n\n    private String location;\n}\n", "@Entity\n@Data\npublic class Lab {\n    @Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    private Long id;\n\n    private String lami;\n\n    private String description;\n\n    private boolean status;\n\n    private int desktops;\n\n    private String location;\n}\n"]}
{"filename": "lab-service/src/main/java/com/uu/labservice/services/LabService.java", "chunked_list": ["package com.uu.labservice.services;\n\nimport java.util.List;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\n\nimport com.uu.labservice.interfaces.LabRepository;\nimport com.uu.labservice.models.Lab;\n", "import com.uu.labservice.models.Lab;\n\nimport jakarta.transaction.Transactional;\n\n@Service\n@Transactional\npublic class LabService {\n    \n    @Autowired\n    LabRepository labRepository;\n", "    public void save(Lab lab){\n        labRepository.save(lab);\n    }\n\n    public void update(Lab lab){\n        labRepository.update(lab);\n    }\n\n    public void updateStatus(Long labId, boolean status){\n        labRepository.updateStatus(labId, status);\n    }\n", "    public void updateStatus(Long labId, boolean status){\n        labRepository.updateStatus(labId, status);\n    }\n\n    public void deleteById(Long id){\n        labRepository.deleteById(id);\n    }\n\n    public List<Lab> findAll(){\n        return labRepository.findAll();\n    }\n", "    public Lab findById(Long id){\n        return labRepository.findById(id).get();\n    }\n}\n"]}
{"filename": "lab-service/src/main/java/com/uu/labservice/controllers/LabController.java", "chunked_list": ["package com.uu.labservice.controllers;\n\nimport java.util.List;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.web.bind.annotation.DeleteMapping;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.PathVariable;\nimport org.springframework.web.bind.annotation.PostMapping;\nimport org.springframework.web.bind.annotation.PutMapping;", "import org.springframework.web.bind.annotation.PostMapping;\nimport org.springframework.web.bind.annotation.PutMapping;\nimport org.springframework.web.bind.annotation.RequestBody;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RestController;\n\nimport com.uu.labservice.models.Lab;\nimport com.uu.labservice.services.LabService;\n\n@RestController", "\n@RestController\n@RequestMapping(\"/lab\")\npublic class LabController {\n    \n    @Autowired\n    LabService labService;\n\n    @PostMapping(\"/save\")\n    public void save(@RequestBody Lab lab) {\n        labService.save(lab);\n    }\n\n    @PutMapping(\"/update\")", "    public void save(@RequestBody Lab lab) {\n        labService.save(lab);\n    }\n\n    @PutMapping(\"/update\")\n    public void update(@RequestBody Lab lab){\n        labService.update(lab);\n    }\n\n    @PutMapping(\"/updateStatus/{lab_id}/{status}\")\n    public void updateStatus(@PathVariable(\"lab_id\") Long labId, @PathVariable(\"status\") boolean status){\n        labService.updateStatus(labId, status);\n    }\n    \n    @DeleteMapping(\"/delete/{id}\")", "    public void updateStatus(@PathVariable(\"lab_id\") Long labId, @PathVariable(\"status\") boolean status){\n        labService.updateStatus(labId, status);\n    }\n    \n    @DeleteMapping(\"/delete/{id}\")\n    public void deleteById(@PathVariable Long id){\n        labService.deleteById(id);\n    }\n\n    @GetMapping(\"/findAll\")\n    public List<Lab> findAll(){\n        return labService.findAll();\n    }\n\n    @GetMapping(\"/{id}\")", "    public Lab find(@PathVariable Long id){\n        return labService.findById(id);\n    }\n}"]}
