{"filename": "shortvideo/src/test/java/com/tencent/liteav/shortvideodemo/ExampleUnitTest.java", "chunked_list": ["package com.tencent.liteav.shortvideodemo;\n\nimport org.junit.Test;\n\n\n/**\n * Example local unit test, which will execute on the development machine (host).\n *\n * @see <a href=\"http://d.android.com/tools/testing\">Testing documentation</a>\n */\npublic class ExampleUnitTest {\n    @Test", " * @see <a href=\"http://d.android.com/tools/testing\">Testing documentation</a>\n */\npublic class ExampleUnitTest {\n    @Test\n    public void addition_isCorrect() {\n        assertEquals(4, 2 + 2);\n    }\n}"]}
{"filename": "shortvideo/src/main/java/com/tencent/liteav/demo/player/demo/shortvideo/license/LiteAVSDKService.java", "chunked_list": ["package com.tencent.liteav.demo.player.demo.shortvideo.license;\n\nimport android.content.Context;\nimport com.tencent.rtmp.TXLiveBase;\nimport com.tencent.rtmp.TXLiveBaseListener;\nimport java.lang.reflect.InvocationTargetException;\nimport java.lang.reflect.Method;\n\npublic class LiteAVSDKService {\n\n    private static final String LICENCE_URL =\n            \"https://license.vod2.myqcloud.com/license/v2/1258247189_1/v_cube.license\";\n    private static final String LICENCE_KEY = \"bf190ae874599b2299ac1220e500601f\";\n\n    private static final String XMAGIC_AUTH_KEY = \"f5109b0ec0ba0027f809cb947d204c65\";\n    private static final String XMAGIC_AUTH_LICENCE_URL = \"https://license.vod2.myqcloud.com/license/v2/1252463788_1/v_cube.license\";\n    /**\n     * \u521d\u59cb\u5316\u817e\u8baf\u4e91\u76f8\u5173sdk\u3002\n     * SDK \u521d\u59cb\u5316\u8fc7\u7a0b\u4e2d\u53ef\u80fd\u4f1a\u8bfb\u53d6\u624b\u673a\u578b\u53f7\u7b49\u654f\u611f\u4fe1\u606f\uff0c\u9700\u8981\u5728\u7528\u6237\u540c\u610f\u9690\u79c1\u653f\u7b56\u540e\uff0c\u624d\u80fd\u83b7\u53d6\u3002\n     */", "public class LiteAVSDKService {\n\n    private static final String LICENCE_URL =\n            \"https://license.vod2.myqcloud.com/license/v2/1258247189_1/v_cube.license\";\n    private static final String LICENCE_KEY = \"bf190ae874599b2299ac1220e500601f\";\n\n    private static final String XMAGIC_AUTH_KEY = \"f5109b0ec0ba0027f809cb947d204c65\";\n    private static final String XMAGIC_AUTH_LICENCE_URL = \"https://license.vod2.myqcloud.com/license/v2/1252463788_1/v_cube.license\";\n    /**\n     * \u521d\u59cb\u5316\u817e\u8baf\u4e91\u76f8\u5173sdk\u3002\n     * SDK \u521d\u59cb\u5316\u8fc7\u7a0b\u4e2d\u53ef\u80fd\u4f1a\u8bfb\u53d6\u624b\u673a\u578b\u53f7\u7b49\u654f\u611f\u4fe1\u606f\uff0c\u9700\u8981\u5728\u7528\u6237\u540c\u610f\u9690\u79c1\u653f\u7b56\u540e\uff0c\u624d\u80fd\u83b7\u53d6\u3002\n     */", "    public static void init(Context appContext) {\n        TXLiveBase.getInstance().setLicence(appContext, LICENCE_URL, LICENCE_KEY);\n\n        TXLiveBase.setListener(new TXLiveBaseListener() {\n            @Override\n            public void onUpdateNetworkTime(int errCode, String errMsg) {\n                if (errCode != 0) {\n                    TXLiveBase.updateNetworkTime();\n                }\n            }\n        });\n        TXLiveBase.updateNetworkTime();\n    }\n}\n"]}
{"filename": "shortvideo/src/main/java/com/tencent/liteav/demo/player/demo/shortvideo/base/AbsBaseFragment.java", "chunked_list": ["package com.tencent.liteav.demo.player.demo.shortvideo.base;\n\nimport android.os.Bundle;\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.view.ViewGroup;\n\nimport androidx.annotation.LayoutRes;\nimport androidx.annotation.Nullable;\nimport androidx.fragment.app.Fragment;", "import androidx.annotation.Nullable;\nimport androidx.fragment.app.Fragment;\n\npublic abstract class AbsBaseFragment extends Fragment {\n\n    protected abstract @LayoutRes\n    int getLayoutResId();\n\n    protected abstract void initViews(@Nullable Bundle savedInstanceState);\n\n    protected abstract void initData();\n\n\n    @Nullable\n    @Override", "    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\n        View view = inflater.inflate(getLayoutResId(), container, false);\n        return view;\n    }\n\n    @Override\n    public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {\n        super.onViewCreated(view, savedInstanceState);\n        initViews(savedInstanceState);\n        initData();\n    }\n}\n"]}
{"filename": "shortvideo/src/main/java/com/tencent/liteav/demo/player/demo/shortvideo/base/AbsBaseActivity.java", "chunked_list": ["package com.tencent.liteav.demo.player.demo.shortvideo.base;\n\nimport android.os.Bundle;\n\nimport androidx.annotation.Nullable;\nimport androidx.appcompat.app.AppCompatActivity;\n\npublic abstract class AbsBaseActivity extends AppCompatActivity {\n\n    protected abstract void initLayout(@Nullable Bundle savedInstanceState);\n\n    protected abstract void initView();\n\n    protected abstract void initData();\n\n\n    @Override\n    protected void onCreate(@Nullable Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        initLayout(savedInstanceState);\n        initView();\n        initData();\n    }\n\n}\n"]}
{"filename": "shortvideo/src/main/java/com/tencent/liteav/demo/player/demo/shortvideo/core/ShortVideoModel.java", "chunked_list": ["package com.tencent.liteav.demo.player.demo.shortvideo.core;\n\nimport android.content.Context;\nimport android.os.Handler;\nimport android.os.Looper;\n\nimport com.tencent.liteav.demo.vodcommon.entity.ConfigBean;\nimport com.tencent.liteav.demo.vodcommon.entity.SuperVodListLoader;\nimport com.tencent.liteav.demo.vodcommon.entity.VideoListModel;\nimport com.tencent.liteav.demo.vodcommon.entity.VideoModel;", "import com.tencent.liteav.demo.vodcommon.entity.VideoListModel;\nimport com.tencent.liteav.demo.vodcommon.entity.VideoModel;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class ShortVideoModel {\n    private static final String TAG = \"ShortVideoDemo:ShortVideoModel\";\n    private static volatile ShortVideoModel mInstance;\n    private static final int APP_ID = 1500005830;\n    private static final String[] FILE_IDS = new String[]{\"387702294394366256\", \"387702294394228858\",\n            \"387702294394228636\", \"387702294394228527\", \"387702294167066523\",\n            \"387702294167066515\", \"387702294168748446\", \"387702294394227941\"};\n\n\n    SuperVodListLoader mListLoader;\n\n    private ArrayList<VideoModel> mSourceList;\n    private boolean mIsHttps = true;\n    private IOnDataLoadFullListener mOnDataLoadFullListener;\n\n    private ShortVideoModel(Context context) {\n        mListLoader = new SuperVodListLoader(context);\n        mSourceList = new ArrayList<>();\n    }\n", "    public static ShortVideoModel getInstance(Context context) {\n        if (mInstance == null) {\n            synchronized (ShortVideoModel.class) {\n                if (mInstance == null) {\n                    mInstance = new ShortVideoModel(context.getApplicationContext());\n                }\n            }\n        }\n        return mInstance;\n    }\n", "    public void release() {\n        mInstance = null;\n    }\n\n    public void loadDefaultVideo() {\n        mSourceList.clear();\n        VideoModel videoModel;\n        if (ConfigBean.getInstance().isIsUseDash()) {\n            loadDashData();\n        } else {\n            for (int i = 0; i < FILE_IDS.length; i++) {\n                videoModel = new VideoModel();\n                videoModel.appid = APP_ID;\n                videoModel.fileid = FILE_IDS[i];\n                mSourceList.add(videoModel);\n            }\n        }\n    }\n\n\n    private void loadDashData() {\n        VideoModel model = null;\n        model = new VideoModel();\n        model.videoURL = \"http://1500004424.vod2.myqcloud.com/4383a13evodtranscq1500004424/baff45348602268011141077324/adp.20.mpd\";\n        model.title = \"\u5355\u5206\u7247 && \u591a\u7801\u7387\";\n        mSourceList.add(model);\n\n        model = new VideoModel();\n        model.videoURL = \"https://dash.akamaized.net/akamai/test/caption_test/ElephantsDream/elephants_dream_480p_heaac5_1_https.mpd\";\n        model.title = \"with subtitle\";\n        mSourceList.add(model);\n\n        model = new VideoModel();\n        model.videoURL = \"http://1500004424.vod2.myqcloud.com/4383a13evodtranscq1500004424/baff45348602268011141077324/adp.22.mpd\";\n        model.title = \"\u591a\u5206\u7247 && \u591a\u7801\u7387\";\n        mSourceList.add(model);\n\n        model = new VideoModel();\n        model.videoURL = \"https://dash.akamaized.net/akamai/bbb_30fps/bbb_30fps.mpd\";\n        model.title = \"30fps\";\n        mSourceList.add(model);\n\n        model = new VideoModel();\n        model.videoURL = \"http://1500004424.vod2.myqcloud.com/4383a13evodtranscq1500004424/baff45348602268011141077324/adp.1163819.mpd\";\n        model.title = \"\u5355\u5206\u7247 && \u5355\u7801\u7387\";\n        mSourceList.add(model);\n\n        model = new VideoModel();\n        model.videoURL = \"https://dash.akamaized.net/dash264/TestCases/2c/qualcomm/1/MultiResMPEG2.mpd\";\n        model.title = \"time-based\";\n        mSourceList.add(model);\n\n        model = new VideoModel();\n        model.videoURL = \"http://1500004424.vod2.myqcloud.com/4383a13evodtranscq1500004424/baff45348602268011141077324/adp.1163820.mpd\";\n        model.title = \"\u591a\u5206\u7247 && \u5355\u7801\u7387\";\n        mSourceList.add(model);\n\n        model = new VideoModel();\n        model.videoURL = \"https://bitmovin-a.akamaihd.net/content/MI201109210084_1/mpds/f08e80da-bf1d-4e3d-8899-f0f6155f6efa.mpd\";\n        model.title = \"number-based\";\n        mSourceList.add(model);\n\n    }\n", "            for (int i = 0; i < FILE_IDS.length; i++) {\n                videoModel = new VideoModel();\n                videoModel.appid = APP_ID;\n                videoModel.fileid = FILE_IDS[i];\n                mSourceList.add(videoModel);\n            }\n        }\n    }\n\n\n    private void loadDashData() {\n        VideoModel model = null;\n        model = new VideoModel();\n        model.videoURL = \"http://1500004424.vod2.myqcloud.com/4383a13evodtranscq1500004424/baff45348602268011141077324/adp.20.mpd\";\n        model.title = \"\u5355\u5206\u7247 && \u591a\u7801\u7387\";\n        mSourceList.add(model);\n\n        model = new VideoModel();\n        model.videoURL = \"https://dash.akamaized.net/akamai/test/caption_test/ElephantsDream/elephants_dream_480p_heaac5_1_https.mpd\";\n        model.title = \"with subtitle\";\n        mSourceList.add(model);\n\n        model = new VideoModel();\n        model.videoURL = \"http://1500004424.vod2.myqcloud.com/4383a13evodtranscq1500004424/baff45348602268011141077324/adp.22.mpd\";\n        model.title = \"\u591a\u5206\u7247 && \u591a\u7801\u7387\";\n        mSourceList.add(model);\n\n        model = new VideoModel();\n        model.videoURL = \"https://dash.akamaized.net/akamai/bbb_30fps/bbb_30fps.mpd\";\n        model.title = \"30fps\";\n        mSourceList.add(model);\n\n        model = new VideoModel();\n        model.videoURL = \"http://1500004424.vod2.myqcloud.com/4383a13evodtranscq1500004424/baff45348602268011141077324/adp.1163819.mpd\";\n        model.title = \"\u5355\u5206\u7247 && \u5355\u7801\u7387\";\n        mSourceList.add(model);\n\n        model = new VideoModel();\n        model.videoURL = \"https://dash.akamaized.net/dash264/TestCases/2c/qualcomm/1/MultiResMPEG2.mpd\";\n        model.title = \"time-based\";\n        mSourceList.add(model);\n\n        model = new VideoModel();\n        model.videoURL = \"http://1500004424.vod2.myqcloud.com/4383a13evodtranscq1500004424/baff45348602268011141077324/adp.1163820.mpd\";\n        model.title = \"\u591a\u5206\u7247 && \u5355\u7801\u7387\";\n        mSourceList.add(model);\n\n        model = new VideoModel();\n        model.videoURL = \"https://bitmovin-a.akamaihd.net/content/MI201109210084_1/mpds/f08e80da-bf1d-4e3d-8899-f0f6155f6efa.mpd\";\n        model.title = \"number-based\";\n        mSourceList.add(model);\n\n    }\n", "    public void getVideoByFileId() {\n        if (ConfigBean.getInstance().isIsUseDash()) {\n\n            // \u6a21\u62df\u7f51\u7edc\u8017\u65f6\n            new Handler(Looper.getMainLooper()).postDelayed(new Runnable() {\n                @Override\n                public void run() {\n                    mOnDataLoadFullListener.onLoadedSuccess(mSourceList);\n                }\n            },1000);\n        } else {\n            mListLoader.getVideoListInfo(mSourceList, false, new SuperVodListLoader.OnVodListLoadListener() {\n                @Override", "                public void onSuccess(VideoListModel videoListModel) {\n                    mOnDataLoadFullListener.onLoadedSuccess(videoListModel.videoModelList);\n                }\n\n                @Override\n                public void onFail(int errCode) {\n                    mOnDataLoadFullListener.onLoadedFailed(errCode);\n                }\n            });\n        }\n    }\n", "    public void setOnDataLoadFullListener(IOnDataLoadFullListener listener) {\n        mOnDataLoadFullListener = listener;\n    }\n\n    public interface IOnDataLoadFullListener {\n        void onLoadedSuccess(List<VideoModel> videoBeanList);\n\n        void onLoadedFailed(int errcode);\n    }\n}"]}
{"filename": "shortvideo/src/main/java/com/tencent/liteav/demo/player/demo/shortvideo/core/TXVodPlayerWrapper.java", "chunked_list": ["package com.tencent.liteav.demo.player.demo.shortvideo.core;\n\nimport android.content.Context;\nimport android.os.Bundle;\nimport android.util.Log;\n\nimport com.tencent.liteav.demo.vodcommon.entity.ConfigBean;\nimport com.tencent.liteav.demo.vodcommon.entity.VideoModel;\nimport com.tencent.rtmp.ITXVodPlayListener;\nimport com.tencent.rtmp.TXLiveConstants;", "import com.tencent.rtmp.ITXVodPlayListener;\nimport com.tencent.rtmp.TXLiveConstants;\nimport com.tencent.rtmp.TXPlayerGlobalSetting;\nimport com.tencent.rtmp.TXVodConstants;\nimport com.tencent.rtmp.TXVodPlayConfig;\nimport com.tencent.rtmp.TXVodPlayer;\nimport com.tencent.rtmp.ui.TXCloudVideoView;\n\nimport java.io.File;\n", "import java.io.File;\n\nimport static com.tencent.rtmp.TXLiveConstants.PLAY_EVT_PLAY_BEGIN;\nimport static com.tencent.rtmp.TXLiveConstants.PLAY_EVT_PLAY_END;\nimport static com.tencent.rtmp.TXLiveConstants.PLAY_EVT_PLAY_PROGRESS;\nimport static com.tencent.rtmp.TXLiveConstants.PLAY_EVT_RCV_FIRST_I_FRAME;\nimport static com.tencent.rtmp.TXLiveConstants.PLAY_EVT_VOD_PLAY_PREPARED;\n\npublic class TXVodPlayerWrapper implements ITXVodPlayListener {\n    private static final String TAG = \"ShortVideoDemo:TXVodPlayerWrapper\";\n    private TXVodPlayer mVodPlayer;\n    private OnPlayEventChangedListener mOnPlayEventChangedListener;\n    private TxVodStatus mStatus;\n    private String mUrl;\n    private boolean mStartOnPrepare;\n    private TXVodPlayConfig mTXVodPlayConfig;\n\n    public TXVodPlayerWrapper(Context context) {\n        mVodPlayer = new TXVodPlayer(context);\n        mVodPlayer.setVodListener(this);", "public class TXVodPlayerWrapper implements ITXVodPlayListener {\n    private static final String TAG = \"ShortVideoDemo:TXVodPlayerWrapper\";\n    private TXVodPlayer mVodPlayer;\n    private OnPlayEventChangedListener mOnPlayEventChangedListener;\n    private TxVodStatus mStatus;\n    private String mUrl;\n    private boolean mStartOnPrepare;\n    private TXVodPlayConfig mTXVodPlayConfig;\n\n    public TXVodPlayerWrapper(Context context) {\n        mVodPlayer = new TXVodPlayer(context);\n        mVodPlayer.setVodListener(this);", "        if (ConfigBean.getInstance().isIsUseDash()) {\n            mVodPlayer.setRenderMode(TXVodConstants.RENDER_MODE_ADJUST_RESOLUTION);\n        } else {\n            mVodPlayer.setRenderMode(TXVodConstants.RENDER_MODE_FULL_FILL_SCREEN);\n        }\n        mTXVodPlayConfig = new TXVodPlayConfig();\n        mTXVodPlayConfig.setProgressInterval(1);\n        mTXVodPlayConfig.setSmoothSwitchBitrate(true);\n        mTXVodPlayConfig.setMaxBufferSize(5);\n        mTXVodPlayConfig.setPreferredResolution(1080 * 1920);\n        mTXVodPlayConfig.setMaxCacheItems(8);", "        if (TXPlayerGlobalSetting.getCacheFolderPath() == null\n                || TXPlayerGlobalSetting.getCacheFolderPath().equals(\"\")) {\n            File sdcardDir = context.getExternalFilesDir(null);\n            TXPlayerGlobalSetting.setCacheFolderPath(sdcardDir.getPath() + \"/txcache\");\n        }\n        mVodPlayer.setConfig(mTXVodPlayConfig);\n    }\n\n    @Override\n    public void onPlayEvent(TXVodPlayer txVodPlayer, int event, Bundle bundle) {\n        switch (event) {\n            case PLAY_EVT_VOD_PLAY_PREPARED:\n                playerStatusChanged(TxVodStatus.TX_VIDEO_PLAYER_STATUS_PREPARED);\n                Log.i(TAG, \"[onPlayEvent] , startOnPrepare\uff0c\" + mStartOnPrepare + \"\uff0cmVodPlayer \"\n                        + mVodPlayer.hashCode() + \" mUrl \" + mUrl);", "    public void onPlayEvent(TXVodPlayer txVodPlayer, int event, Bundle bundle) {\n        switch (event) {\n            case PLAY_EVT_VOD_PLAY_PREPARED:\n                playerStatusChanged(TxVodStatus.TX_VIDEO_PLAYER_STATUS_PREPARED);\n                Log.i(TAG, \"[onPlayEvent] , startOnPrepare\uff0c\" + mStartOnPrepare + \"\uff0cmVodPlayer \"\n                        + mVodPlayer.hashCode() + \" mUrl \" + mUrl);\n                if (mStartOnPrepare) {\n                    mVodPlayer.resume();\n                    mStartOnPrepare = false;\n                    playerStatusChanged(TxVodStatus.TX_VIDEO_PLAYER_STATUS_PLAYING);\n                }\n                break;\n            case PLAY_EVT_RCV_FIRST_I_FRAME:", "                if (mOnPlayEventChangedListener != null) {\n                    mOnPlayEventChangedListener.onRcvFirstFrame();\n                }\n                break;\n            case PLAY_EVT_PLAY_PROGRESS:\n                if (mOnPlayEventChangedListener != null) {\n                    mOnPlayEventChangedListener.onProgress(bundle);\n                }\n                break;\n            case PLAY_EVT_PLAY_END:\n                playerStatusChanged(TxVodStatus.TX_VIDEO_PLAYER_STATUS_ENDED);\n                break;\n            default:\n                break;\n        }\n    }\n\n    @Override", "    public void onNetStatus(TXVodPlayer txVodPlayer, Bundle bundle) {\n\n    }\n\n\n    public void pausePlay() {\n        mVodPlayer.pause();\n        playerStatusChanged(TxVodStatus.TX_VIDEO_PLAYER_STATUS_PAUSED);\n    }\n\n", "    public void resumePlay() {\n        Log.i(TAG, \"[resumePlay] , startOnPrepare\uff0c \" + mStartOnPrepare\n                + \" mVodPlayer \" + mVodPlayer.hashCode() + \" url \" + mUrl);\n        if (mStatus == TxVodStatus.TX_VIDEO_PLAYER_STATUS_STOPPED) {\n            mVodPlayer.setAutoPlay(true);\n            mVodPlayer.startVodPlay(mUrl);\n            playerStatusChanged(TxVodStatus.TX_VIDEO_PLAYER_STATUS_PLAYING);\n            return;\n        }\n        if (mStatus == TxVodStatus.TX_VIDEO_PLAYER_STATUS_PREPARED\n                || mStatus == TxVodStatus.TX_VIDEO_PLAYER_STATUS_PAUSED) {\n            mVodPlayer.resume();\n            playerStatusChanged(TxVodStatus.TX_VIDEO_PLAYER_STATUS_PLAYING);\n        } else {\n            mStartOnPrepare = true;\n        }\n    }\n\n", "        if (mStatus == TxVodStatus.TX_VIDEO_PLAYER_STATUS_PREPARED\n                || mStatus == TxVodStatus.TX_VIDEO_PLAYER_STATUS_PAUSED) {\n            mVodPlayer.resume();\n            playerStatusChanged(TxVodStatus.TX_VIDEO_PLAYER_STATUS_PLAYING);\n        } else {\n            mStartOnPrepare = true;\n        }\n    }\n\n\n    public void seekTo(int time) {\n        mVodPlayer.seek(time);\n    }\n\n", "    public void seekTo(int time) {\n        mVodPlayer.seek(time);\n    }\n\n\n    public boolean isPlaying() {\n        return mVodPlayer.isPlaying();\n    }\n\n\n    public void stopForPlaying() {", "    public void stopForPlaying() {\n        if (mStatus == TxVodStatus.TX_VIDEO_PLAYER_STATUS_PLAYING) {\n            mVodPlayer.stopPlay(true);\n            playerStatusChanged(TxVodStatus.TX_VIDEO_PLAYER_STATUS_STOPPED);\n        }\n    }\n\n    public void stopPlay() {\n        mVodPlayer.stopPlay(true);\n        playerStatusChanged(TxVodStatus.TX_VIDEO_PLAYER_STATUS_STOPPED);\n    }\n", "    public void setPlayerView(TXCloudVideoView txCloudVideoView) {\n        mVodPlayer.setPlayerView(txCloudVideoView);\n    }\n\n\n    public void preStartPlay(VideoModel bean) {\n        this.mUrl = bean.videoURL;\n        this.mStatus = TxVodStatus.TX_VIDEO_PLAYER_STATUS_UNLOAD;\n        mStartOnPrepare = false;\n        mVodPlayer.setLoop(true);\n        mVodPlayer.stopPlay(true);\n        Log.i(TAG, \"[preStartPlay] , startOnPrepare \uff0c\" + mStartOnPrepare + \"\uff0c mVodPlayer \" + mVodPlayer.hashCode());\n        mVodPlayer.setAutoPlay(false);\n        mVodPlayer.startVodPlay(bean.videoURL);\n    }\n\n    private void playerStatusChanged(TxVodStatus status) {\n        this.mStatus = status;\n        Log.i(TAG, \" [playerStatusChanged] mVodPlayer\" + mVodPlayer.hashCode() + \" mStatus \" + mStatus);\n    }\n", "    public void setVodChangeListener(OnPlayEventChangedListener listener) {\n        mOnPlayEventChangedListener = listener;\n    }\n\n    public enum TxVodStatus {\n        TX_VIDEO_PLAYER_STATUS_UNLOAD,      // \u672a\u52a0\u8f7d\n        TX_VIDEO_PLAYER_STATUS_PREPARED,    // \u51c6\u5907\u64ad\u653e\n        TX_VIDEO_PLAYER_STATUS_LOADING,     // \u52a0\u8f7d\u4e2d\n        TX_VIDEO_PLAYER_STATUS_PLAYING,     // \u64ad\u653e\u4e2d\n        TX_VIDEO_PLAYER_STATUS_PAUSED,      // \u6682\u505c\n        TX_VIDEO_PLAYER_STATUS_ENDED,       // \u64ad\u653e\u5b8c\u6210\n        TX_VIDEO_PLAYER_STATUS_STOPPED      // \u624b\u52a8\u505c\u6b62\u64ad\u653e\n    }\n", "    public interface OnPlayEventChangedListener {\n        void onProgress(Bundle bundle);\n\n        void onRcvFirstFrame();\n    }\n\n    public TXVodPlayer getVodPlayer() {\n        return mVodPlayer;\n    }\n\n    public String getUrl() {\n        return mUrl;\n    }\n}\n", "    public String getUrl() {\n        return mUrl;\n    }\n}\n"]}
{"filename": "shortvideo/src/main/java/com/tencent/liteav/demo/player/demo/shortvideo/core/PlayerManager.java", "chunked_list": ["package com.tencent.liteav.demo.player.demo.shortvideo.core;\n\nimport android.content.Context;\nimport android.util.Log;\n\nimport com.tencent.liteav.demo.vodcommon.entity.VideoModel;\n\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.List;", "import java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\npublic class PlayerManager {\n    private static final String TAG = \"ShortVideoDemo:PlayerManager\";\n    private final static int sMaxPlayerSize = 10;\n    private Map<VideoModel, TXVodPlayerWrapper> mUrlPlayerMap;\n\n    private VideoModel mLastPlayedVideoBean;\n    private Context mContext;\n    private volatile static PlayerManager mInstance;\n\n\n    private PlayerManager(Context context) {\n        mContext = context.getApplicationContext();\n        mUrlPlayerMap = new HashMap<>();\n    }\n", "    public static PlayerManager getInstance(Context context) {\n        if (mInstance == null) {\n            synchronized (PlayerManager.class) {\n                if (mInstance == null) {\n                    mInstance = new PlayerManager(context);\n                }\n            }\n        }\n        return mInstance;\n    }\n", "    public void updateManager(List<VideoModel> shortVideoBeanList) {\n        if (shortVideoBeanList == null || shortVideoBeanList.isEmpty()) {\n            return;\n        }\n        if (shortVideoBeanList.size() > sMaxPlayerSize) {\n            throw new IllegalArgumentException(\"shortVideoBeanList is larger than sMaxPlayerSize\");\n        }\n\n        List<VideoModel> lastBeanList = playedVideoModel();\n        Log.i(TAG, \" [updateManager]\" + \",urlList = \" + shortVideoBeanList.toString() + \",lastBeanList = \" + lastBeanList.toString());\n\n        //\u627e\u5230 lastUrlList\u4e2d\u4e0d\u5305\u542burlList\u7684 lastUrlList\u4e3a\u4e0a\u6b21\u4f20\u8fdb\u6765\u7684urlList urlList\u4e3a\u8fd9\u6b21\u4f20\u8fdb\u6765\u7684urlList\n        List<VideoModel> exprList = findDiffBeanList(shortVideoBeanList, lastBeanList);\n        //\u627e\u5230 urlList\u4e2d\u4e0d\u5305\u542blastUrlList\u7684\n        List<VideoModel> newList = findDiffBeanList(lastBeanList, shortVideoBeanList);", "        if (exprList != null) {\n            for (int i = 0; i < exprList.size(); i++) {\n                Log.i(TAG, \"[updateManager] exprUrl \" + exprList.get(i).videoURL);\n            }\n        }\n        if (newList != null) {\n            for (int i = 0; i < newList.size(); i++) {\n                Log.i(TAG, \"[updateManager] newUrl \" + newList.get(i).videoURL);\n            }\n        }\n        if (newList.size() > 0) {", "        if (newList.size() > 0) {\n            for (int i = 0; i < newList.size(); i++) {\n                TXVodPlayerWrapper tempPlayer = null;\n                if (exprList.size() > 0) {\n                    tempPlayer = mUrlPlayerMap.remove(exprList.remove(0));\n                }\n                if (tempPlayer == null) {\n                    tempPlayer = new TXVodPlayerWrapper(mContext);\n                }\n\n                tempPlayer.preStartPlay(newList.get(i));\n\n                mUrlPlayerMap.put(newList.get(i), tempPlayer);\n            }\n        }\n", "        if (exprList.size() > 0) {\n            for (int i = 0; i < exprList.size(); i++) {\n                TXVodPlayerWrapper exprPlayer = mUrlPlayerMap.get(exprList.get(i));\n                mUrlPlayerMap.remove(exprList.get(i));\n                exprPlayer.stopPlay();\n                exprPlayer = null;\n            }\n        }\n\n        if (shortVideoBeanList.contains(mLastPlayedVideoBean)) {\n            Log.i(TAG, \" [updateManager]\" + \",mLastPlayedBean = \" + mLastPlayedVideoBean.videoURL);", "        if (shortVideoBeanList.contains(mLastPlayedVideoBean)) {\n            Log.i(TAG, \" [updateManager]\" + \",mLastPlayedBean = \" + mLastPlayedVideoBean.videoURL);\n            if (mUrlPlayerMap.get(mLastPlayedVideoBean) != null) {\n                mUrlPlayerMap.get(mLastPlayedVideoBean).preStartPlay(mLastPlayedVideoBean);\n            }\n        }\n    }\n\n    public TXVodPlayerWrapper getPlayer(VideoModel bean) {\n        mLastPlayedVideoBean = bean;\n        return mUrlPlayerMap.get(bean);\n    }\n\n\n    private List<VideoModel> findDiffBeanList(List<VideoModel> playUrlList, List<VideoModel> lastPlayUrlList) {\n        List<VideoModel> exprList = new ArrayList<>();", "    public TXVodPlayerWrapper getPlayer(VideoModel bean) {\n        mLastPlayedVideoBean = bean;\n        return mUrlPlayerMap.get(bean);\n    }\n\n\n    private List<VideoModel> findDiffBeanList(List<VideoModel> playUrlList, List<VideoModel> lastPlayUrlList) {\n        List<VideoModel> exprList = new ArrayList<>();\n        for (int i = 0; i < lastPlayUrlList.size(); i++) {\n            if (!playUrlList.contains(lastPlayUrlList.get(i))) {\n                exprList.add(lastPlayUrlList.get(i));\n            }\n        }\n        return exprList;\n    }\n", "        for (int i = 0; i < lastPlayUrlList.size(); i++) {\n            if (!playUrlList.contains(lastPlayUrlList.get(i))) {\n                exprList.add(lastPlayUrlList.get(i));\n            }\n        }\n        return exprList;\n    }\n\n    public void releasePlayer() {\n        for (TXVodPlayerWrapper txVodPlayerWrapper : mUrlPlayerMap.values()) {\n            txVodPlayerWrapper.stopPlay();\n        }\n        mUrlPlayerMap.clear();\n        mInstance = null;\n    }\n\n    private List<VideoModel> playedVideoModel() {\n        List<VideoModel> urlList = new ArrayList<>();", "    public void releasePlayer() {\n        for (TXVodPlayerWrapper txVodPlayerWrapper : mUrlPlayerMap.values()) {\n            txVodPlayerWrapper.stopPlay();\n        }\n        mUrlPlayerMap.clear();\n        mInstance = null;\n    }\n\n    private List<VideoModel> playedVideoModel() {\n        List<VideoModel> urlList = new ArrayList<>();\n        for (VideoModel bean : mUrlPlayerMap.keySet()) {\n            urlList.add(bean);\n        }\n        return urlList;\n    }\n}\n", "        for (VideoModel bean : mUrlPlayerMap.keySet()) {\n            urlList.add(bean);\n        }\n        return urlList;\n    }\n}\n"]}
{"filename": "shortvideo/src/main/java/com/tencent/liteav/demo/player/demo/shortvideo/adapter/AbsViewHolder.java", "chunked_list": ["package com.tencent.liteav.demo.player.demo.shortvideo.adapter;\n\nimport android.view.View;\n\nimport androidx.recyclerview.widget.RecyclerView;\n\n\npublic abstract class AbsViewHolder extends RecyclerView.ViewHolder {\n    public AbsViewHolder(View itemView) {\n        super(itemView);\n    }\n}\n"]}
{"filename": "shortvideo/src/main/java/com/tencent/liteav/demo/player/demo/shortvideo/adapter/AbsPlayerRecyclerViewAdapter.java", "chunked_list": ["package com.tencent.liteav.demo.player.demo.shortvideo.adapter;\n\nimport android.content.Context;\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.view.ViewGroup;\n\nimport androidx.recyclerview.widget.RecyclerView;\n\nimport java.util.List;", "\nimport java.util.List;\n\npublic abstract class AbsPlayerRecyclerViewAdapter<T, K extends AbsViewHolder> extends RecyclerView.Adapter<K> {\n\n    private List<T> mList;\n    public Context mContext;\n\n    public AbsPlayerRecyclerViewAdapter(List<T> list) {\n        this.mList = list;\n    }\n\n    @Override", "    public K onCreateViewHolder(ViewGroup parent, int viewType) {\n        mContext = parent.getContext();\n        K holder = onCreateHolder(parent);\n        return holder;\n    }\n\n    @Override\n    public void onBindViewHolder(K holder, int position) {\n        onHolder(holder, mList.get(position), position);\n    }\n\n    @Override", "    public int getItemViewType(int position) {\n        return position;\n    }\n\n    @Override\n    public int getItemCount() {\n        return mList == null ? 0 : mList.size();\n    }\n\n\n    public abstract void onHolder(K holder, T bean, int position);\n", "    public abstract void onHolder(K holder, T bean, int position);\n\n    public abstract K onCreateHolder(ViewGroup parent);\n\n\n    public View getViewByRes(int res, ViewGroup parent) {\n        return LayoutInflater.from(mContext).inflate(res, parent, false);\n    }\n}\n"]}
{"filename": "shortvideo/src/main/java/com/tencent/liteav/demo/player/demo/shortvideo/adapter/ShortVideoPlayAdapter.java", "chunked_list": ["package com.tencent.liteav.demo.player.demo.shortvideo.adapter;\n\nimport android.content.Context;\nimport android.util.Log;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.widget.ImageView;\n\nimport androidx.annotation.NonNull;\n", "import androidx.annotation.NonNull;\n\nimport com.bumptech.glide.Glide;\nimport com.bumptech.glide.load.engine.DiskCacheStrategy;\nimport com.tencent.liteav.demo.player.demo.shortvideo.view.TXVideoBaseView;\nimport com.tencent.liteav.demo.vodcommon.entity.VideoModel;\n\nimport com.tencent.liteav.shortvideoplayerdemo.R;\nimport com.tencent.rtmp.ui.TXCloudVideoView;\n", "import com.tencent.rtmp.ui.TXCloudVideoView;\n\nimport java.util.List;\n\npublic class ShortVideoPlayAdapter extends AbsPlayerRecyclerViewAdapter<VideoModel,\n        ShortVideoPlayAdapter.VideoViewHolder> {\n\n    private static final String TAG = \"ShortVideoDemo:ShortVideoPlayAdapter\";\n\n    private Context  mContext;\n\n    public ShortVideoPlayAdapter(Context context,List<VideoModel> list) {\n        super(list);\n        mContext = context;\n    }\n\n    @Override", "    public void onHolder(VideoViewHolder holder, VideoModel bean, int position) {\n        if (bean != null && bean.placeholderImage != null) {\n            Glide.with(mContext).load(bean.placeholderImage)\n                    .skipMemoryCache(true)\n                    .diskCacheStrategy(DiskCacheStrategy.ALL).centerCrop()\n                    .into(holder.mImageViewCover);\n        }\n    }\n\n    @Override\n    public void onViewRecycled(@NonNull VideoViewHolder holder) {\n        super.onViewRecycled(holder);", "    public void onViewRecycled(@NonNull VideoViewHolder holder) {\n        super.onViewRecycled(holder);\n        Glide.with(mContext).clear(holder.mImageViewCover);\n    }\n\n    @Override\n    public VideoViewHolder onCreateHolder(ViewGroup viewGroup) {\n        return new VideoViewHolder(getViewByRes(R.layout.player_item_short_video_play, viewGroup));\n    }\n\n    @Override", "    public void onViewDetachedFromWindow(@NonNull ShortVideoPlayAdapter.VideoViewHolder holder) {\n        super.onViewDetachedFromWindow(holder);\n        Log.i(TAG,\"onViewDetachedFromWindow\");\n        TXVideoBaseView videoView = (TXVideoBaseView) holder.mRootView.findViewById(R.id.baseItemView);\n        videoView.stopForPlaying();\n    }\n\n    public class VideoViewHolder extends AbsViewHolder {\n        public View mRootView;\n        public ImageView mImageViewCover;\n        public TXCloudVideoView mVideoView;\n\n        public VideoViewHolder(View rootView) {\n            super(rootView);\n            this.mRootView = rootView;\n            this.mImageViewCover = rootView.findViewById(R.id.iv_cover);\n            this.mVideoView = rootView.findViewById(R.id.tcv_video_view);\n        }\n    }\n}\n", "        public View mRootView;\n        public ImageView mImageViewCover;\n        public TXCloudVideoView mVideoView;\n\n        public VideoViewHolder(View rootView) {\n            super(rootView);\n            this.mRootView = rootView;\n            this.mImageViewCover = rootView.findViewById(R.id.iv_cover);\n            this.mVideoView = rootView.findViewById(R.id.tcv_video_view);\n        }\n    }\n}\n"]}
{"filename": "shortvideo/src/main/java/com/tencent/liteav/demo/player/demo/shortvideo/view/ShortVideoActivity.java", "chunked_list": ["package com.tencent.liteav.demo.player.demo.shortvideo.view;\n\nimport android.os.Bundle;\n\nimport androidx.annotation.Nullable;\nimport androidx.fragment.app.FragmentManager;\nimport androidx.fragment.app.FragmentTransaction;\n\nimport com.blankj.utilcode.util.ToastUtils;\n", "import com.blankj.utilcode.util.ToastUtils;\n\nimport com.tencent.liteav.demo.player.demo.shortvideo.base.AbsBaseActivity;\nimport com.tencent.liteav.demo.player.demo.shortvideo.core.ShortVideoModel;\nimport com.tencent.liteav.demo.player.demo.shortvideo.license.LiteAVSDKService;\nimport com.tencent.liteav.demo.vodcommon.entity.VideoModel;\nimport com.tencent.liteav.shortvideoplayerdemo.R;\n\n\nimport java.util.List;", "\nimport java.util.List;\n\npublic class ShortVideoActivity extends AbsBaseActivity implements  ShortVideoModel.IOnDataLoadFullListener {\n\n    private static final String TAG = \"ShortVideoDemo:ShortVideoActivity\";\n\n    private ShortVideoPlayFragment mPlayFragment;\n\n    @Override\n    protected void initLayout(@Nullable Bundle savedInstanceState) {\n        setContentView(R.layout.player_activity_shortvideo);\n    }\n\n    @Override\n    protected void initView() {\n        LiteAVSDKService.init(getApplicationContext());\n        ShortVideoModel.getInstance(this).setOnDataLoadFullListener(this);\n        mPlayFragment = new ShortVideoPlayFragment();\n        FragmentManager manager = getSupportFragmentManager();\n        // \u5f00\u59cb\u4e8b\u52a1 \u5f97\u5230\u4e8b\u52a1\n        FragmentTransaction fragmentTransaction = manager.beginTransaction();\n        // \u66ff\u6362\u64cd\u4f5c\n        fragmentTransaction.replace(R.id.player_frame_layout, mPlayFragment);\n        // \u63d0\u4ea4\n        fragmentTransaction.commit();\n    }\n\n    @Override\n    protected void initData() {\n        ShortVideoModel.getInstance(this).setOnDataLoadFullListener(this);\n        ShortVideoModel.getInstance(this).loadDefaultVideo();\n        ShortVideoModel.getInstance(this).getVideoByFileId();\n    }\n\n    @Override", "    public void onLoadedSuccess(List<VideoModel> videoBeanList) {\n        mPlayFragment.onLoaded(videoBeanList);\n    }\n\n    @Override\n    protected void onDestroy() {\n        ShortVideoModel.getInstance(this).release();\n        ShortVideoModel.getInstance(this).setOnDataLoadFullListener(null);\n        super.onDestroy();\n    }\n\n    @Override", "    public void onLoadedFailed(int errCode) {\n        ToastUtils.showLong(getString(R.string.short_video_get_data_failed) + errCode);\n    }\n\n}\n"]}
{"filename": "shortvideo/src/main/java/com/tencent/liteav/demo/player/demo/shortvideo/view/ShortVideoPlayFragment.java", "chunked_list": ["package com.tencent.liteav.demo.player.demo.shortvideo.view;\n\nimport android.content.Context;\nimport android.os.Bundle;\nimport android.util.Log;\nimport android.view.View;\nimport android.widget.ImageButton;\nimport android.widget.RelativeLayout;\nimport android.widget.TextView;\n", "import android.widget.TextView;\n\nimport androidx.annotation.Nullable;\n\nimport com.tencent.liteav.demo.player.demo.shortvideo.base.AbsBaseFragment;\nimport com.tencent.liteav.demo.vodcommon.entity.VideoModel;\nimport com.tencent.liteav.shortvideoplayerdemo.R;\n\n\nimport java.util.List;", "\nimport java.util.List;\n\nimport static android.view.View.GONE;\nimport static android.view.View.VISIBLE;\n\npublic class ShortVideoPlayFragment extends AbsBaseFragment implements View.OnClickListener {\n    private static final String TAG = \"ShortVideoDemo:ShortVideoPlayFragment\";\n    private static final String SHARE_PREFERENCE_NAME = \"tx_short_video_player_guide_setting\";\n    private static final String KEY_GUIDE_ONE = \"is_guide_one_finish\";\n    private static final String KEY_GUIDE_TWO = \"is_guide_two_finish\";\n    private static final String KEY_GUIDE_THREE = \"is_guide_three_finish\";\n    private static final String KEY_GUIDE_FOUR = \"is_guide_four_finish\";\n\n    private RelativeLayout mMaskOne;\n    private RelativeLayout mMaskTwo;\n    private RelativeLayout mMaskFour;\n    private TextView mMaskOneIKnow;\n    private TextView mMaskTwoIKnow;\n    private TextView mMaskFourIKnow;\n    private ImageButton mBack;\n    private SuperShortVideoView mSuperShortVideoView;\n\n    @Override\n    protected int getLayoutResId() {\n        return R.layout.player_fragment_short_video_play;\n    }\n\n\n    @Override\n    protected void initViews(@Nullable Bundle savedInstanceState) {\n        mMaskOne = getActivity().findViewById(R.id.rl_mask_one);\n        mMaskTwo = getActivity().findViewById(R.id.rl_mask_two);\n        mMaskFour = getActivity().findViewById(R.id.rl_mask_four);\n        mSuperShortVideoView = getActivity().findViewById(R.id.super_short_video_view_play_fragment);\n        mMaskOneIKnow = getActivity().findViewById(R.id.tv_mask_one_i_know);\n        mMaskOneIKnow.setOnClickListener(this);\n        mMaskTwoIKnow = getActivity().findViewById(R.id.tv_mask_two_i_know);\n        mMaskTwoIKnow.setOnClickListener(this);\n        mMaskFourIKnow = getActivity().findViewById(R.id.tv_mask_four_i_know);\n        mMaskFourIKnow.setOnClickListener(this);\n        mBack = getActivity().findViewById(R.id.ib_back_play);\n        mBack.setOnClickListener(this);\n        initMask();\n    }\n\n    private void initMask() {\n        boolean isFinishOne = getBoolean(KEY_GUIDE_ONE);\n        boolean isFinishTwo = getBoolean(KEY_GUIDE_TWO);\n        boolean isFinishFour = getBoolean(KEY_GUIDE_FOUR);", "        if (!isFinishOne) {\n            mMaskOne.setVisibility(View.VISIBLE);\n            mMaskTwo.setVisibility(View.GONE);\n            mMaskFour.setVisibility(View.GONE);\n        } else if (!isFinishTwo) {\n            mMaskOne.setVisibility(View.GONE);\n            mMaskTwo.setVisibility(View.VISIBLE);\n            mMaskFour.setVisibility(View.GONE);\n        } else if (!isFinishFour) {\n            mMaskOne.setVisibility(View.GONE);\n            mMaskTwo.setVisibility(View.GONE);\n            mMaskFour.setVisibility(View.VISIBLE);\n        } else {\n            mMaskOne.setVisibility(View.GONE);\n            mMaskTwo.setVisibility(View.GONE);\n            mMaskFour.setVisibility(View.GONE);\n        }\n    }\n\n\n    @Override", "        } else if (!isFinishFour) {\n            mMaskOne.setVisibility(View.GONE);\n            mMaskTwo.setVisibility(View.GONE);\n            mMaskFour.setVisibility(View.VISIBLE);\n        } else {\n            mMaskOne.setVisibility(View.GONE);\n            mMaskTwo.setVisibility(View.GONE);\n            mMaskFour.setVisibility(View.GONE);\n        }\n    }\n\n\n    @Override", "    public void onClick(View v) {\n        if (v.getId() == R.id.ib_back_play) {\n            getActivity().finish();\n        } else if (v.getId() == R.id.tv_mask_one_i_know) {\n            mMaskOne.setVisibility(GONE);\n            mMaskTwo.setVisibility(VISIBLE);\n            mMaskFour.setVisibility(GONE);\n            putBoolean(KEY_GUIDE_ONE, true);\n            putBoolean(KEY_GUIDE_TWO, false);\n            putBoolean(KEY_GUIDE_THREE, false);\n            putBoolean(KEY_GUIDE_FOUR, false);", "        } else if (v.getId() == R.id.tv_mask_two_i_know) {\n            mMaskOne.setVisibility(GONE);\n            mMaskTwo.setVisibility(GONE);\n            mMaskFour.setVisibility(VISIBLE);\n            putBoolean(KEY_GUIDE_ONE, true);\n            putBoolean(KEY_GUIDE_TWO, true);\n            putBoolean(KEY_GUIDE_THREE, false);\n            putBoolean(KEY_GUIDE_FOUR, false);\n        } else if (v.getId() == R.id.tv_mask_four_i_know) {\n            mMaskOne.setVisibility(GONE);\n            mMaskTwo.setVisibility(GONE);\n            mMaskFour.setVisibility(GONE);\n            putBoolean(KEY_GUIDE_ONE, true);\n            putBoolean(KEY_GUIDE_TWO, true);\n            putBoolean(KEY_GUIDE_THREE, true);\n            putBoolean(KEY_GUIDE_FOUR, true);\n        } else {\n            Log.i(TAG, \"onClick in other case\");\n        }\n    }\n\n    @Override\n    protected void initData() {\n\n    }\n\n\n    @Override", "        } else if (v.getId() == R.id.tv_mask_four_i_know) {\n            mMaskOne.setVisibility(GONE);\n            mMaskTwo.setVisibility(GONE);\n            mMaskFour.setVisibility(GONE);\n            putBoolean(KEY_GUIDE_ONE, true);\n            putBoolean(KEY_GUIDE_TWO, true);\n            putBoolean(KEY_GUIDE_THREE, true);\n            putBoolean(KEY_GUIDE_FOUR, true);\n        } else {\n            Log.i(TAG, \"onClick in other case\");\n        }\n    }\n\n    @Override\n    protected void initData() {\n\n    }\n\n\n    @Override", "    public void onStop() {\n        super.onStop();\n        mSuperShortVideoView.pause();\n    }\n\n\n    @Override\n    public void onDestroyView() {\n        mSuperShortVideoView.onDestroy();\n        super.onDestroyView();\n        mSuperShortVideoView.releasePlayer();\n    }\n\n    private void putBoolean(String key, boolean value) {\n        getContext().getSharedPreferences(SHARE_PREFERENCE_NAME, Context.MODE_PRIVATE).edit().putBoolean(key, value).apply();\n    }\n\n    private boolean getBoolean(String key) {\n        return getContext().getSharedPreferences(SHARE_PREFERENCE_NAME, Context.MODE_PRIVATE).getBoolean(key, false);\n    }\n", "    public void onLoaded(List<VideoModel> shortVideoBeanList) {\n        if (mSuperShortVideoView != null) {\n            mSuperShortVideoView.setDataSource(shortVideoBeanList);\n        }\n    }\n}\n"]}
{"filename": "shortvideo/src/main/java/com/tencent/liteav/demo/player/demo/shortvideo/view/SuperShortVideoView.java", "chunked_list": ["package com.tencent.liteav.demo.player.demo.shortvideo.view;\n\nimport android.content.Context;\nimport android.os.Handler;\nimport android.os.Message;\nimport android.util.AttributeSet;\nimport android.util.Log;\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.widget.RelativeLayout;", "import android.view.View;\nimport android.widget.RelativeLayout;\n\nimport androidx.annotation.NonNull;\nimport androidx.recyclerview.widget.LinearLayoutManager;\nimport androidx.recyclerview.widget.PagerSnapHelper;\nimport androidx.recyclerview.widget.RecyclerView;\n\nimport com.tencent.liteav.demo.player.demo.shortvideo.adapter.ShortVideoPlayAdapter;\nimport com.tencent.liteav.demo.player.demo.shortvideo.core.PlayerManager;", "import com.tencent.liteav.demo.player.demo.shortvideo.adapter.ShortVideoPlayAdapter;\nimport com.tencent.liteav.demo.player.demo.shortvideo.core.PlayerManager;\nimport com.tencent.liteav.demo.player.demo.shortvideo.core.TXVodPlayerWrapper;\nimport com.tencent.liteav.demo.vodcommon.entity.VideoModel;\nimport com.tencent.liteav.shortvideoplayerdemo.R;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class SuperShortVideoView extends RelativeLayout {\n    private static final String TAG                      = \"ShortVideoDemo:SuperShortVideoView\";\n    private static final int    MAX_PLAYER_COUNT_ON_PASS = 3;\n\n    private View                  mRootView;\n    private RecyclerView          mRecyclerView;\n    private ShortVideoPlayAdapter mAdapter;\n    private List<VideoModel>      mUrlList;\n    private LinearLayoutManager   mLayoutManager;\n    private PagerSnapHelper       mSnapHelper;\n    private int                   mLastPositionInIDLE = -1;\n    private TXVideoBaseView       mBaseItemView;\n    private Handler               mHandler;\n    private Object                mLock                = new Object();\n    private Context               mContext;\n    private boolean               mIsOnDestroy;\n\n    public SuperShortVideoView(Context context) {\n        super(context);\n        init(context);\n    }\n\n    public SuperShortVideoView(Context context, AttributeSet attrs) {\n        super(context, attrs);\n        init(context);\n    }\n\n    public SuperShortVideoView(Context context, AttributeSet attrs, int defStyleAttr) {\n        super(context, attrs, defStyleAttr);\n        init(context);\n    }\n", "\npublic class SuperShortVideoView extends RelativeLayout {\n    private static final String TAG                      = \"ShortVideoDemo:SuperShortVideoView\";\n    private static final int    MAX_PLAYER_COUNT_ON_PASS = 3;\n\n    private View                  mRootView;\n    private RecyclerView          mRecyclerView;\n    private ShortVideoPlayAdapter mAdapter;\n    private List<VideoModel>      mUrlList;\n    private LinearLayoutManager   mLayoutManager;\n    private PagerSnapHelper       mSnapHelper;\n    private int                   mLastPositionInIDLE = -1;\n    private TXVideoBaseView       mBaseItemView;\n    private Handler               mHandler;\n    private Object                mLock                = new Object();\n    private Context               mContext;\n    private boolean               mIsOnDestroy;\n\n    public SuperShortVideoView(Context context) {\n        super(context);\n        init(context);\n    }\n\n    public SuperShortVideoView(Context context, AttributeSet attrs) {\n        super(context, attrs);\n        init(context);\n    }\n\n    public SuperShortVideoView(Context context, AttributeSet attrs, int defStyleAttr) {\n        super(context, attrs, defStyleAttr);\n        init(context);\n    }\n", "    public void init(Context context) {\n        mContext = context;\n        mRootView = LayoutInflater.from(context).inflate(R.layout.super_short_video_view, null);\n        addView(mRootView);\n        mRecyclerView = mRootView.findViewById(R.id.rv_super_short_video);\n        mUrlList = new ArrayList<>();\n        mSnapHelper = new PagerSnapHelper();\n        mSnapHelper.attachToRecyclerView(mRecyclerView);\n        mAdapter = new ShortVideoPlayAdapter(mContext,mUrlList);\n        mLayoutManager = new LinearLayoutManager(getContext(), LinearLayoutManager.VERTICAL, false) {\n            @Override\n            protected int getExtraLayoutSpace(RecyclerView.State state) {\n                return 300;\n            }\n        };\n        mRecyclerView.setLayoutManager(mLayoutManager);\n        mRecyclerView.setItemViewCacheSize(6);\n        mRecyclerView.setHasFixedSize(true);\n        mRecyclerView.setDrawingCacheEnabled(true);\n        mRecyclerView.setDrawingCacheQuality(View.DRAWING_CACHE_QUALITY_LOW);\n        mRecyclerView.setAdapter(mAdapter);\n        mLayoutManager.scrollToPosition(0);\n        mHandler = new Handler() {\n            @Override", "            public void handleMessage(@NonNull Message msg) {\n                super.handleMessage(msg);\n                mUrlList.clear();\n                mUrlList.addAll((List<VideoModel>) msg.obj);\n                mAdapter.notifyDataSetChanged();\n            }\n        };\n        addListener();\n    }\n\n    public void setDataSource(final List<VideoModel> dataSource) {\n        Log.i(TAG, \"[setDataSource]\");\n        Message message = new Message();\n        message.obj = dataSource;\n        synchronized (mLock) {", "    public void setDataSource(final List<VideoModel> dataSource) {\n        Log.i(TAG, \"[setDataSource]\");\n        Message message = new Message();\n        message.obj = dataSource;\n        synchronized (mLock) {\n            if (mHandler == null) {\n                return;\n            }\n            mHandler.sendMessage(message);\n        }\n\n    }\n\n    private void addListener() {\n        mRecyclerView.addOnScrollListener(new RecyclerView.OnScrollListener() {\n            @Override", "            public void onScrolled(RecyclerView recyclerView, int dx, int dy) {\n                if (!recyclerView.canScrollVertically(1) || !recyclerView.canScrollVertically(-1)) {\n                    onScrollStateChanged(recyclerView, RecyclerView.SCROLL_STATE_IDLE);\n                }\n            }\n\n            @Override\n            public void onScrollStateChanged(RecyclerView recyclerView, int newState) {\n                switch (newState) {\n                    case RecyclerView.SCROLL_STATE_IDLE://\u505c\u6b62\u6eda\u52a8\n                        View view = mSnapHelper.findSnapView(mLayoutManager);\n                        int position = recyclerView.getChildAdapterPosition(view);\n                        Log.i(TAG, \"[SCROLL_STATE_IDLE] mLastPositionInIDLE \" + mLastPositionInIDLE + \" position \" + position);\n                        onPageSelectedMethod(position);\n                        break;\n                    case RecyclerView.SCROLL_STATE_DRAGGING://\u62d6\u52a8\n                        break;\n                    case RecyclerView.SCROLL_STATE_SETTLING://\u60ef\u6027\u6ed1\u52a8\n                        break;\n                }\n            }\n        });\n    }\n\n    private void onPageSelectedMethod(int position) {", "        if (mLastPositionInIDLE != position) {\n            View view = mSnapHelper.findSnapView(mLayoutManager);\n            if (view == null) {\n                return;\n            }\n            mBaseItemView = (TXVideoBaseView) view.findViewById(R.id.baseItemView);\n            Log.i(TAG, \"onPageSelected \" + position);\n            List<VideoModel> tempUrlList = initUrlList(position, MAX_PLAYER_COUNT_ON_PASS);\n            PlayerManager.getInstance(getContext()).updateManager(tempUrlList);\n            TXVodPlayerWrapper txVodPlayerWrapper = PlayerManager.getInstance(getContext())\n                    .getPlayer(mUrlList.get(position));\n            Log.i(TAG, \"txVodPlayerWrapper \" + txVodPlayerWrapper + \"url-- \" + mUrlList.get(position).videoURL);\n            Log.i(TAG, \"txVodPlayerWrapper \" + txVodPlayerWrapper);\n            mBaseItemView.setTXVodPlayer(txVodPlayerWrapper);\n            mLastPositionInIDLE = position;\n        }", "        if (mBaseItemView != null && !mIsOnDestroy) {\n            mBaseItemView.startPlay();\n        }\n    }\n\n    /**\n     * \u521d\u59cb\u5316\u5411PlayManager\u4f20\u9012\u7684urlList\n     *\n     * @param startIndex \u5f00\u59cb\u7684\u7d22\u5f15\n     * @param maxCount   \u4f20\u9012\u7684urlList\u7684\u6570\u76ee\n     * @return\n     */\n    private List<VideoModel> initUrlList(int startIndex, int maxCount) {\n\n        int i = startIndex - 1;", "        if (i + maxCount > mUrlList.size()) {\n            i = mUrlList.size() - maxCount;\n        }\n        if (i < 0) {\n            i = 0;\n        }\n        int addedCount = 0;\n        List<VideoModel> cacheList = new ArrayList<>();\n        while (i < mUrlList.size() && addedCount < maxCount) {\n            cacheList.add(mUrlList.get(i));\n            addedCount++;\n            i++;\n        }\n        return cacheList;\n    }\n", "        while (i < mUrlList.size() && addedCount < maxCount) {\n            cacheList.add(mUrlList.get(i));\n            addedCount++;\n            i++;\n        }\n        return cacheList;\n    }\n\n    public void pause() {\n        if (mBaseItemView != null) {\n            mBaseItemView.pausePlayer();\n        }\n    }\n", "    public void pause() {\n        if (mBaseItemView != null) {\n            mBaseItemView.pausePlayer();\n        }\n    }\n\n    public void releasePlayer() {\n        synchronized (mLock) {\n            mHandler.removeCallbacksAndMessages(null);\n            mHandler = null;\n        }", "        if (mBaseItemView != null) {\n            mBaseItemView.stopPlayer();\n        }\n        PlayerManager.getInstance(getContext()).releasePlayer();\n    }\n\n    public void onListPageScrolled() {\n        if (mBaseItemView != null) {\n            mBaseItemView.pausePlayer();\n        }\n    }\n", "    public void onItemClick(final int position) {\n        mRecyclerView.scrollToPosition(position);\n        mRecyclerView.post(new Runnable() {\n            @Override\n            public void run() {\n                Log.i(TAG, \"onItemClick\");\n                onPageSelectedMethod(position);\n            }\n        });\n    }\n", "    public void onDestroy() {\n        mIsOnDestroy = true;\n    }\n}\n"]}
{"filename": "shortvideo/src/main/java/com/tencent/liteav/demo/player/demo/shortvideo/view/TXVideoBaseView.java", "chunked_list": ["package com.tencent.liteav.demo.player.demo.shortvideo.view;\n\nimport android.content.Context;\nimport android.graphics.Color;\nimport android.os.Bundle;\nimport android.text.SpannableStringBuilder;\nimport android.text.Spanned;\nimport android.text.style.ForegroundColorSpan;\nimport android.util.AttributeSet;\nimport android.util.Log;", "import android.util.AttributeSet;\nimport android.util.Log;\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.widget.ImageView;\nimport android.widget.RelativeLayout;\nimport android.widget.SeekBar;\nimport android.widget.TextView;\n\nimport com.tencent.liteav.demo.player.demo.shortvideo.core.TXVodPlayerWrapper;", "\nimport com.tencent.liteav.demo.player.demo.shortvideo.core.TXVodPlayerWrapper;\nimport com.tencent.liteav.shortvideoplayerdemo.R;\nimport com.tencent.rtmp.TXLiveConstants;\nimport com.tencent.rtmp.ui.TXCloudVideoView;\n\nimport java.util.Locale;\n\n/**\n * \u6c89\u6d78\u5f0f\u64ad\u653e\u7ec4\u4ef6", "/**\n * \u6c89\u6d78\u5f0f\u64ad\u653e\u7ec4\u4ef6\n */\npublic class TXVideoBaseView extends RelativeLayout implements View.OnClickListener,\n        SeekBar.OnSeekBarChangeListener, TXVodPlayerWrapper.OnPlayEventChangedListener {\n    private static final String TAG = \"TXVideoBaseView\";\n    private View mRootView;\n    private SeekBar mSeekBar;\n    private TXCloudVideoView mTXCloudVideoView;\n    private ImageView mIvCover;\n    private ImageView mPauseImageView;\n    private TextView mProgressTime;\n\n    private TXVodPlayerWrapper mTXVodPlayerWrapper;\n    private boolean mStartSeek = false;\n    private long mTrackingTouchTS = 0;\n\n\n    public TXVideoBaseView(Context context) {\n        super(context);\n        init(context);\n    }\n\n    public TXVideoBaseView(Context context, AttributeSet attrs) {\n        super(context, attrs);\n        init(context);\n    }\n\n    public TXVideoBaseView(Context context, AttributeSet attrs, int defStyleAttr) {\n        super(context, attrs, defStyleAttr);\n        init(context);\n    }\n", "    public void setTXVodPlayer(TXVodPlayerWrapper TXVodPlayerWrapper) {\n        mTXVodPlayerWrapper = TXVodPlayerWrapper;\n        mTXVodPlayerWrapper.setPlayerView(mTXCloudVideoView);\n        mTXCloudVideoView.requestLayout();\n        Log.i(TAG, \"[setTXVodPlayer] , PLAY_EVT_PLAY_PROGRESS\uff0c\" + mTXVodPlayerWrapper.getVodPlayer().hashCode() + \" url \" + TXVodPlayerWrapper.getUrl());\n    }\n\n    private void init(Context context) {\n        mRootView = LayoutInflater.from(context).inflate(R.layout.player_item_base_view, null);\n        addView(mRootView);\n        mSeekBar = mRootView.findViewById(R.id.seekbar_short_video);\n        mSeekBar.setOnSeekBarChangeListener(this);\n        mIvCover = mRootView.findViewById(R.id.iv_cover);\n        mPauseImageView = mRootView.findViewById(R.id.iv_pause);\n        mPauseImageView.setOnClickListener(this);\n        mTXCloudVideoView = mRootView.findViewById(R.id.tcv_video_view);\n        mTXCloudVideoView.setOnClickListener(this);\n        mProgressTime = mRootView.findViewById(R.id.tv_progress_time);\n        setProgressTimeColor(mProgressTime.getText().toString());\n    }\n", "    public void addCustomView(View customView, LayoutParams params) {\n        addView(customView, params);\n    }\n\n    private void handlePlayProgress(Bundle param) {\n        if (mStartSeek) {\n            return;\n        }\n\n        int progress = param.getInt(TXLiveConstants.EVT_PLAY_PROGRESS);\n        int duration = param.getInt(TXLiveConstants.EVT_PLAY_DURATION);//\u5355\u4f4d\u4e3as\n\n        int progressMS = param.getInt(TXLiveConstants.EVT_PLAY_PROGRESS_MS);\n        int durationMS = param.getInt(TXLiveConstants.EVT_PLAY_DURATION_MS);\n\n        long curTS = System.currentTimeMillis();\n        // \u907f\u514d\u6ed1\u52a8\u8fdb\u5ea6\u6761\u677e\u5f00\u7684\u77ac\u95f4\u53ef\u80fd\u51fa\u73b0\u6ed1\u52a8\u6761\u77ac\u95f4\u8df3\u5230\u4e0a\u4e00\u4e2a\u4f4d\u7f6e", "        if (Math.abs(curTS - mTrackingTouchTS) < 500) {\n            return;\n        }\n        mTrackingTouchTS = curTS;\n\n        if (mSeekBar != null) {\n            mSeekBar.setMax(durationMS);\n            mSeekBar.setProgress(progressMS);\n        }\n        if (mProgressTime != null) {\n            String tempString = String.format(Locale.CHINA, \"%02d:%02d/%02d:%02d\", (progress) / 60, progress % 60, (duration) / 60, duration % 60);\n            setProgressTimeColor(tempString);\n        }\n    }\n\n\n    @Override", "        if (mProgressTime != null) {\n            String tempString = String.format(Locale.CHINA, \"%02d:%02d/%02d:%02d\", (progress) / 60, progress % 60, (duration) / 60, duration % 60);\n            setProgressTimeColor(tempString);\n        }\n    }\n\n\n    @Override\n    public void onClick(View v) {\n        int id = v.getId();\n        if (id == R.id.tcv_video_view || id == R.id.iv_pause) {", "    public void onClick(View v) {\n        int id = v.getId();\n        if (id == R.id.tcv_video_view || id == R.id.iv_pause) {\n            if (mTXVodPlayerWrapper == null) {\n                return;\n            }\n            if (!mTXVodPlayerWrapper.isPlaying()) {\n                mTXVodPlayerWrapper.resumePlay();\n                mPauseImageView.setVisibility(View.GONE);\n            } else {\n                pausePlayer();\n            }\n        }\n    }\n\n    @Override", "    public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {\n        if (mProgressTime != null) {\n            String tempString = String.format(Locale.CHINA, \"%02d:%02d/%02d:%02d\", (progress / 1000) / 60, (progress / 1000) % 60, (seekBar.getMax() / 1000) / 60, (seekBar.getMax() / 1000) % 60);\n            setProgressTimeColor(tempString);\n        }\n    }\n\n    private void setProgressTimeColor(String value) {\n        SpannableStringBuilder builder = new SpannableStringBuilder(value);\n        ForegroundColorSpan gray = new ForegroundColorSpan(Color.GRAY);\n        ForegroundColorSpan white = new ForegroundColorSpan(Color.WHITE);\n        builder.setSpan(gray, 5, 11, Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);\n        builder.setSpan(white, 0, 5, Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);\n        mProgressTime.setText(builder);\n    }\n\n    @Override", "    public void onStartTrackingTouch(SeekBar seekBar) {\n        mStartSeek = true;\n        // \u89e3\u51b3viewPager\u548c\u7684\u6ed1\u52a8\u51b2\u7a81\u95ee\u9898\n        getParent().requestDisallowInterceptTouchEvent(true);\n    }\n\n\n    @Override\n    public void onStopTrackingTouch(SeekBar seekBar) {\n        // \u89e3\u51b3viewPager\u548c\u7684\u6ed1\u52a8\u51b2\u7a81\u95ee\u9898\n        getParent().requestDisallowInterceptTouchEvent(false);", "    public void onStopTrackingTouch(SeekBar seekBar) {\n        // \u89e3\u51b3viewPager\u548c\u7684\u6ed1\u52a8\u51b2\u7a81\u95ee\u9898\n        getParent().requestDisallowInterceptTouchEvent(false);\n        if (mTXVodPlayerWrapper != null) {\n            Log.i(TAG, \"[onStopTrackingTouch] seekBar.getProgress() \" + seekBar.getProgress());\n            mTXVodPlayerWrapper.seekTo(seekBar.getProgress() / 1000);\n        }\n        mTrackingTouchTS = System.currentTimeMillis();\n        mStartSeek = false;\n    }\n\n", "    public void pausePlayer() {\n        if (mTXVodPlayerWrapper != null) {\n            mTXVodPlayerWrapper.pausePlay();\n            mPauseImageView.setVisibility(View.VISIBLE);\n        }\n    }\n\n\n    public void startPlay() {\n        if (mTXVodPlayerWrapper != null) {\n            mPauseImageView.setVisibility(View.GONE);\n            mTXVodPlayerWrapper.setVodChangeListener(this);\n            mTXVodPlayerWrapper.resumePlay();\n            Log.i(TAG, \"[startPlay] mTXVodPlayerWrapper.url \" + mTXVodPlayerWrapper.getUrl());\n        }\n    }\n", "    public void startPlay() {\n        if (mTXVodPlayerWrapper != null) {\n            mPauseImageView.setVisibility(View.GONE);\n            mTXVodPlayerWrapper.setVodChangeListener(this);\n            mTXVodPlayerWrapper.resumePlay();\n            Log.i(TAG, \"[startPlay] mTXVodPlayerWrapper.url \" + mTXVodPlayerWrapper.getUrl());\n        }\n    }\n\n    public void stopPlayer() {\n        if (mTXVodPlayerWrapper != null) {\n            mTXVodPlayerWrapper.stopPlay();\n            mTXVodPlayerWrapper.setVodChangeListener(null);\n            Log.i(TAG, \"[stopPlayer] mTXVodPlayerWrapper.url \" + mTXVodPlayerWrapper.getUrl());\n            mPauseImageView.setVisibility(View.GONE);\n        }\n    }\n", "    public void stopPlayer() {\n        if (mTXVodPlayerWrapper != null) {\n            mTXVodPlayerWrapper.stopPlay();\n            mTXVodPlayerWrapper.setVodChangeListener(null);\n            Log.i(TAG, \"[stopPlayer] mTXVodPlayerWrapper.url \" + mTXVodPlayerWrapper.getUrl());\n            mPauseImageView.setVisibility(View.GONE);\n        }\n    }\n\n    public void stopForPlaying() {\n        if (mTXVodPlayerWrapper != null) {\n            mTXVodPlayerWrapper.stopForPlaying();\n            mTXVodPlayerWrapper.setVodChangeListener(null);\n            Log.i(TAG, \"[stopForPlaying] mTXVodPlayerWrapper.url \" + mTXVodPlayerWrapper.getUrl());\n            mPauseImageView.setVisibility(View.GONE);\n            mIvCover.setVisibility(VISIBLE);\n        }\n    }\n\n    @Override", "    public void stopForPlaying() {\n        if (mTXVodPlayerWrapper != null) {\n            mTXVodPlayerWrapper.stopForPlaying();\n            mTXVodPlayerWrapper.setVodChangeListener(null);\n            Log.i(TAG, \"[stopForPlaying] mTXVodPlayerWrapper.url \" + mTXVodPlayerWrapper.getUrl());\n            mPauseImageView.setVisibility(View.GONE);\n            mIvCover.setVisibility(VISIBLE);\n        }\n    }\n\n    @Override", "    public void onProgress(Bundle bundle) {\n        handlePlayProgress(bundle);\n    }\n\n    @Override\n    public void onRcvFirstFrame() {\n        Log.i(TAG,\"[onPrepared in TXVideoBaseView]\");\n        mIvCover.setVisibility(GONE);\n    }\n}\n"]}
{"filename": "shortvideo/src/androidTest/java/com/tencent/liteav/shortvideodemo/ExampleInstrumentedTest.java", "chunked_list": ["package com.tencent.liteav.shortvideodemo;\n\nimport android.content.Context;\n\nimport androidx.test.platform.app.InstrumentationRegistry;\nimport androidx.test.ext.junit.runners.AndroidJUnit4;\n\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\n", "import org.junit.runner.RunWith;\n\n\n/**\n * Instrumented test, which will execute on an Android device.\n *\n * @see <a href=\"http://d.android.com/tools/testing\">Testing documentation</a>\n */\n@RunWith(AndroidJUnit4.class)\npublic class ExampleInstrumentedTest {\n    @Test", "@RunWith(AndroidJUnit4.class)\npublic class ExampleInstrumentedTest {\n    @Test\n    public void useAppContext() {\n        // Context of the app under test.\n        Context appContext = InstrumentationRegistry.getInstrumentation().getTargetContext();\n        assertEquals(\"com.tencent.liteav.shortvideodemo.test\", appContext.getPackageName());\n    }\n}"]}
{"filename": "vodcommon/src/test/java/com/tencent/liteav/demo/vodcommon/ExampleUnitTest.java", "chunked_list": ["package com.tencent.liteav.demo.vodcommon;\n\nimport org.junit.Test;\n\n\n/**\n * Example local unit test, which will execute on the development machine (host).\n *\n * @see <a href=\"http://d.android.com/tools/testing\">Testing documentation</a>\n */\npublic class ExampleUnitTest {\n    @Test", " * @see <a href=\"http://d.android.com/tools/testing\">Testing documentation</a>\n */\npublic class ExampleUnitTest {\n    @Test\n    public void addition_isCorrect() {\n        assertEquals(4, 2 + 2);\n    }\n}"]}
{"filename": "vodcommon/src/main/java/com/tencent/liteav/demo/vodcommon/entity/SuperPlayerModel.java", "chunked_list": ["package com.tencent.liteav.demo.vodcommon.entity;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\n\n/**\n * \u8d85\u7ea7\u64ad\u653e\u5668\u652f\u6301\u4e09\u79cd\u65b9\u5f0f\u64ad\u653e\u89c6\u9891:\n * 1. \u89c6\u9891 URL\n * \u586b\u5199\u89c6\u9891 URL, \u5982\u9700\u4f7f\u7528\u76f4\u64ad\u65f6\u79fb\u529f\u80fd\uff0c\u8fd8\u9700\u586b\u5199appId", " * 1. \u89c6\u9891 URL\n * \u586b\u5199\u89c6\u9891 URL, \u5982\u9700\u4f7f\u7528\u76f4\u64ad\u65f6\u79fb\u529f\u80fd\uff0c\u8fd8\u9700\u586b\u5199appId\n * 2. \u817e\u8baf\u4e91\u70b9\u64ad File ID \u64ad\u653e\n * \u586b\u5199 appId \u53ca videoId (\u5982\u679c\u4f7f\u7528\u65e7\u7248\u672cV2, \u8bf7\u586b\u5199videoIdV2)\n * 3. \u591a\u7801\u7387\u89c6\u9891\u64ad\u653e\n * \u662fURL\u64ad\u653e\u65b9\u5f0f\u6269\u5c55\uff0c\u53ef\u540c\u65f6\u4f20\u5165\u591a\u6761URL\uff0c\u7528\u4e8e\u8fdb\u884c\u7801\u7387\u5207\u6362\n */\npublic class SuperPlayerModel {\n\n    /**\n     * \u81ea\u52a8\u64ad\u653e\n     */", "    public static final int PLAY_ACTION_AUTO_PLAY = 0;\n\n    /**\n     * \u624b\u52a8\u64ad\u653e\n     */\n    public static final int PLAY_ACTION_MANUAL_PLAY = 1;\n\n    /**\n     * \u9884\u52a0\u8f7d\n     */\n    public static final int PLAY_ACTION_PRELOAD = 2;\n", "    public static final int PLAY_ACTION_PRELOAD = 2;\n\n    public int appId;              // AppId \u7528\u4e8e\u817e\u8baf\u4e91\u70b9\u64ad File ID \u64ad\u653e\u53ca\u817e\u8baf\u4e91\u76f4\u64ad\u65f6\u79fb\u529f\u80fd\n\n    /**\n     * \u5916\u6302\u5b57\u5e55\n     */\n    public List<SubtitleSourceModel> subtitleSourceModelList = null;\n\n    /**\n     * ------------------------------------------------------------------\n     * \u76f4\u63a5\u4f7f\u7528URL\u64ad\u653e\n     * <p>\n     * \u652f\u6301 RTMP\u3001FLV\u3001MP4\u3001HLS \u5c01\u88c5\u683c\u5f0f\n     * \u4f7f\u7528\u817e\u8baf\u4e91\u76f4\u64ad\u65f6\u79fb\u529f\u80fd\u5219\u9700\u8981\u586b\u5199appId\n     * ------------------------------------------------------------------\n     */", "    public String url = \"\";      // \u89c6\u9891URL\n\n    /**\n     * ------------------------------------------------------------------\n     * \u591a\u7801\u7387\u89c6\u9891 URL\n     * <p>\n     * \u7528\u4e8e\u62e5\u6709\u591a\u4e2a\u64ad\u653e\u5730\u5740\u7684\u591a\u6e05\u6670\u5ea6\u89c6\u9891\u64ad\u653e\n     * ------------------------------------------------------------------\n     */\n    public List<SuperPlayerURL> multiURLs;\n\n    public List<VideoQuality> videoQualityList = new ArrayList<>();  // \u6e05\u6670\u5ea6\u5217\u8868\n", "    public int playDefaultIndex; // \u6307\u5b9a\u591a\u7801\u7387\u60c5\u51b5\u4e0b\uff0c\u9ed8\u8ba4\u64ad\u653e\u7684\u8fde\u63a5Index\n\n\n    /**\n     * ------------------------------------------------------------------\n     * \u817e\u8baf\u4e91\u70b9\u64ad File ID \u64ad\u653e\u53c2\u6570\n     * ------------------------------------------------------------------\n     */\n    public SuperPlayerVideoId videoId;\n\n    public String title = \"\";             // \u89c6\u9891\u6587\u4ef6\u540d \uff08\u7528\u4e8e\u663e\u793a\u5728UI\u5c42);\u4f7f\u7528file id\u64ad\u653e\uff0c\u82e5\u672a\u6307\u5b9atitle\uff0c\u5219\u4f7f\u7528FileId\u8fd4\u56de\u7684Title\uff1b\u4f7f\u7528url\u64ad\u653e\u9700\u8981\u6307\u5b9atitle\uff0c\u5426\u5219title\u663e\u793a\u4e3a\u7a7a\n", "    public SuperPlayerVideoId videoId;\n\n    public String title = \"\";             // \u89c6\u9891\u6587\u4ef6\u540d \uff08\u7528\u4e8e\u663e\u793a\u5728UI\u5c42);\u4f7f\u7528file id\u64ad\u653e\uff0c\u82e5\u672a\u6307\u5b9atitle\uff0c\u5219\u4f7f\u7528FileId\u8fd4\u56de\u7684Title\uff1b\u4f7f\u7528url\u64ad\u653e\u9700\u8981\u6307\u5b9atitle\uff0c\u5426\u5219title\u663e\u793a\u4e3a\u7a7a\n\n    public int playAction = PLAY_ACTION_AUTO_PLAY;\n\n    /**\n     * \u4ece\u817e\u8baf\u670d\u52a1\u5668\u62c9\u53d6\u7684\u5c01\u9762\u56fe\u7247\n     */\n    public String placeholderImage;\n\n    /**\n     * \u7528\u6237\u8bbe\u7f6e\u7684\u5c01\u9762\u56fe\u7247\n     */", "    public String placeholderImage;\n\n    /**\n     * \u7528\u6237\u8bbe\u7f6e\u7684\u5c01\u9762\u56fe\u7247\n     */\n    public String coverPictureUrl;\n\n    public VipWatchModel vipWatchMode = null;\n\n    /**\n     * \u52a8\u6001\u6c34\u5370\u914d\u7f6e\n     */", "    public DynamicWaterConfig dynamicWaterConfig = null;\n\n    public int duration;\n\n    public boolean isEnableCache = false; // \u662f\u5426\u5f00\u542f\u7f13\u5b58\u80fd\u529b,\u9ed8\u8ba4\u5173\u95ed\n\n    public static class SuperPlayerURL {\n        public SuperPlayerURL(String url, String qualityName) {\n            this.qualityName = qualityName;\n            this.url = url;\n        }\n\n        public SuperPlayerURL() {\n        }\n", "        public String qualityName = \"\u539f\u753b\"; // \u6e05\u6670\u5ea6\u540d\u79f0\uff08\u7528\u4e8e\u663e\u793a\u5728UI\u5c42\uff09\n\n        public String url = \"\"; // \u8be5\u6e05\u6670\u5ea6\u5bf9\u5e94\u7684\u5730\u5740\n\n    }\n}\n"]}
{"filename": "vodcommon/src/main/java/com/tencent/liteav/demo/vodcommon/entity/VideoInfo.java", "chunked_list": ["package com.tencent.liteav.demo.vodcommon.entity;\n\n/**\n * Created by vinsonswang on 2018/3/28.\n */\n\npublic class VideoInfo {\n    public String fileId;\n    public String name;\n    public String coverUrl;\n    public int    size;", "    public String name;\n    public String coverUrl;\n    public int    size;\n    public int    duration;\n    public long   createTime;\n}\n"]}
{"filename": "vodcommon/src/main/java/com/tencent/liteav/demo/vodcommon/entity/VideoModel.java", "chunked_list": ["package com.tencent.liteav.demo.vodcommon.entity;\n\n\n\nimport android.text.TextUtils;\n\n\nimport java.io.Serializable;\nimport java.util.ArrayList;\nimport java.util.List;", "import java.util.ArrayList;\nimport java.util.List;\n\n/**\n * Created by yuejiaoli on 2018/7/4.\n */\n\npublic class VideoModel implements Serializable {\n\n    /**\n     * \u89c6\u9891\u6807\u9898\n     */", "    public String title;\n\n    /**\n     * \u89c6\u9891URL\n     */\n    public String videoURL;\n\n\n    /**\n     * \u4ece\u670d\u52a1\u5668\u62c9\u53d6\u7684\u5c01\u9762\u56fe\u7247\n     */", "    public String placeholderImage;\n\n\n    /**\n     * \u7528\u6237\u8bbe\u7f6e\u56fe\u7247\u7684\u63a5\u53e3 \u5982\u679c\u662f\u672c\u5730\u56fe\u7247\u524d\u9762\u52a0file://\n     */\n    public String coverPictureUrl;\n\n    /**\n     * \u89c6\u9891\u65f6\u957f\n     */", "    public int duration;\n\n    /**\n     * appId\n     */\n    public int appid;\n\n    /**\n     * \u89c6\u9891\u7684fileid\n     */\n    public String fileid;\n\n    /**\n     * \u7b7e\u540d\u5b57\u4e32\n     */", "    public String fileid;\n\n    /**\n     * \u7b7e\u540d\u5b57\u4e32\n     */\n    public String pSign;\n\n\n    public List<VideoQuality> videoQualityList = new ArrayList<>();\n\n    /**\n     * \u5916\u6302\u5b57\u5e55\n     */\n    public List<SubtitleSourceModel> subtitleSourceModelList = new ArrayList<>();\n\n    /**\n     * VIDEO \u4e0d\u540c\u6e05\u6670\u5ea6\u7684URL\u94fe\u63a5\n     */\n    public List<VideoPlayerURL> multiVideoURLs;", "    public int                  playDefaultIndex; // \u6307\u5b9a\u591a\u7801\u7387\u60c5\u51b5\u4e0b\uff0c\u9ed8\u8ba4\u64ad\u653e\u7684\u8fde\u63a5Index\n    public VipWatchModel        vipWatchModel = null;\n\n    //feed\u6d41\u89c6\u9891\u63cf\u8ff0\u4fe1\u606f\n    public String             videoDescription     = null;\n    public String             videoMoreDescription = null;\n    /**\n     * \u52a8\u6001\u6c34\u5370\u6587\u672c\n     */\n    public DynamicWaterConfig dynamicWaterConfig   = null;\n\n    /**\n     * \u662f\u5426\u542f\u7528\u7f13\u5b58\u4e0b\u8f7d\u80fd\u529b\n     */", "    public DynamicWaterConfig dynamicWaterConfig   = null;\n\n    /**\n     * \u662f\u5426\u542f\u7528\u7f13\u5b58\u4e0b\u8f7d\u80fd\u529b\n     */\n    public boolean isEnableDownload = false;\n\n\n    public static class VideoPlayerURL implements  Serializable {\n\n        public VideoPlayerURL() {\n        }\n\n        public VideoPlayerURL(String title, String url) {\n            this.title = title;\n            this.url = url;\n        }\n\n        /**\n         * \u89c6\u9891\u6807\u9898\n         */", "    public static class VideoPlayerURL implements  Serializable {\n\n        public VideoPlayerURL() {\n        }\n\n        public VideoPlayerURL(String title, String url) {\n            this.title = title;\n            this.url = url;\n        }\n\n        /**\n         * \u89c6\u9891\u6807\u9898\n         */", "        public String title;\n\n        /**\n         * \u89c6\u9891URL\n         */\n        public String url;\n\n        @Override\n        public String toString() {\n            return \"SuperPlayerUrl{\" +\n                    \"title='\" + title + '\\'' +\n                    \", url='\" + url + '\\'' +\n                    '}';\n        }\n    }\n", "        public String toString() {\n            return \"SuperPlayerUrl{\" +\n                    \"title='\" + title + '\\'' +\n                    \", url='\" + url + '\\'' +\n                    '}';\n        }\n    }\n\n    public SuperPlayerModel convertToSuperPlayerModel() {\n        SuperPlayerModel superPlayerModel = new SuperPlayerModel();\n        superPlayerModel.appId = appid;\n        superPlayerModel.vipWatchMode = vipWatchModel;", "    public SuperPlayerModel convertToSuperPlayerModel() {\n        SuperPlayerModel superPlayerModel = new SuperPlayerModel();\n        superPlayerModel.appId = appid;\n        superPlayerModel.vipWatchMode = vipWatchModel;\n        if (dynamicWaterConfig != null) {\n            superPlayerModel.dynamicWaterConfig = dynamicWaterConfig;\n        }\n        if (!TextUtils.isEmpty(videoURL)) {\n            if (isSuperPlayerVideo()) {\n                return transToSuperPlayerVideo();\n            } else {\n                superPlayerModel.title = title;\n                superPlayerModel.url = videoURL;\n\n                superPlayerModel.multiURLs = new ArrayList<>();", "            if (isSuperPlayerVideo()) {\n                return transToSuperPlayerVideo();\n            } else {\n                superPlayerModel.title = title;\n                superPlayerModel.url = videoURL;\n\n                superPlayerModel.multiURLs = new ArrayList<>();\n                if (multiVideoURLs != null) {\n                    for (VideoModel.VideoPlayerURL modelURL : multiVideoURLs) {\n                        superPlayerModel.multiURLs.add(new SuperPlayerModel.SuperPlayerURL(modelURL.url,\n                                modelURL.title));\n                    }\n                }\n            }\n        }", "                    for (VideoModel.VideoPlayerURL modelURL : multiVideoURLs) {\n                        superPlayerModel.multiURLs.add(new SuperPlayerModel.SuperPlayerURL(modelURL.url,\n                                modelURL.title));\n                    }\n                }\n            }\n        }\n        if (!TextUtils.isEmpty(fileid)) {\n            superPlayerModel.videoId = new SuperPlayerVideoId();\n            superPlayerModel.videoId.fileId = fileid;\n            superPlayerModel.videoId.pSign = pSign;\n        }\n\n        superPlayerModel.subtitleSourceModelList = subtitleSourceModelList;\n\n        superPlayerModel.placeholderImage = placeholderImage;\n        superPlayerModel.coverPictureUrl = coverPictureUrl;\n        superPlayerModel.duration = duration;\n        superPlayerModel.title = title;\n        superPlayerModel.videoQualityList = videoQualityList;\n        superPlayerModel.isEnableCache = isEnableDownload;\n\n        return superPlayerModel;\n    }\n\n    private boolean isSuperPlayerVideo() {\n        return videoURL.startsWith(\"txsuperplayer://play_vod\");\n    }\n\n    private SuperPlayerModel transToSuperPlayerVideo() {\n        SuperPlayerModel model = new SuperPlayerModel();\n        String videoUrl = videoURL;\n        String appIdStr = getValueByName(videoUrl, \"appId\");", "        try {\n            model.appId = appIdStr.equals(\"\") ? 0 : Integer.valueOf(appIdStr);\n            SuperPlayerVideoId videoId = new SuperPlayerVideoId();\n            videoId.fileId = getValueByName(videoUrl, \"fileId\");\n            videoId.pSign = getValueByName(videoUrl, \"psign\");\n            model.videoId = videoId;\n            return model;\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n        return null;\n    }\n\n    private String getValueByName(String url, String name) { //txsuperplayer://play_vod?v=4&appId=1400295357&fileId\n        // =5285890796599775084&pcfg=Default\n        String result = \"\";\n        int index = url.indexOf(\"?\");\n        String temp = url.substring(index + 1);\n        String[] keyValue = temp.split(\"&\");", "        for (String str : keyValue) {\n            if (str.startsWith(name + \"=\")) {\n                result = str.replace(name + \"=\", \"\");\n                break;\n            }\n        }\n        return result;\n    }\n\n\n}\n"]}
{"filename": "vodcommon/src/main/java/com/tencent/liteav/demo/vodcommon/entity/VipWatchModel.java", "chunked_list": ["package com.tencent.liteav.demo.vodcommon.entity;\n\nimport java.io.Serializable;\n\npublic class VipWatchModel implements Serializable { //\u5c55\u793a\u7684\u63d0\u793a\u8bed\u4fe1\u606f\n    private String tipStr       = null;\n    //\u8bd5\u770b\u7684\u65f6\u95f4   \u9ed8\u8ba4\u503c\u662flong\u7684\u6700\u5927\u503c\uff0c\u8868\u793a\u4e0d\u5c55\u793aVIP\u8bd5\u770b\u5185\u5bb9\u7684\u65f6\u95f4\uff0c\u5355\u4f4d\u4e3a\u79d2\n    private long   canWatchTime = Long.MAX_VALUE;\n\n\n    public VipWatchModel(String tipStr, long canWatchTime) {\n        this.tipStr = String.format(tipStr, canWatchTime);\n        this.canWatchTime = canWatchTime;\n    }\n", "    public String getTipStr() {\n        return tipStr;\n    }\n\n    public void setTipStr(String tipStr) {\n        this.tipStr = tipStr;\n    }\n\n    public long getCanWatchTime() {\n        return canWatchTime;\n    }\n", "    public long getCanWatchTime() {\n        return canWatchTime;\n    }\n\n    public void setCanWatchTime(long canWatchTime) {\n        this.canWatchTime = canWatchTime;\n    }\n}"]}
{"filename": "vodcommon/src/main/java/com/tencent/liteav/demo/vodcommon/entity/SuperVodListLoader.java", "chunked_list": ["package com.tencent.liteav.demo.vodcommon.entity;\n\nimport android.content.Context;\nimport android.os.Handler;\nimport android.os.HandlerThread;\nimport android.text.TextUtils;\nimport android.util.Log;\n\n\n", "\n\nimport com.tencent.liteav.demo.vodcommon.R;\n\n\nimport org.json.JSONException;\nimport org.json.JSONObject;\n\nimport java.io.IOException;\nimport java.util.ArrayList;", "import java.io.IOException;\nimport java.util.ArrayList;\nimport java.util.concurrent.TimeUnit;\nimport java.util.concurrent.atomic.AtomicInteger;\n\nimport okhttp3.Call;\nimport okhttp3.Callback;\nimport okhttp3.OkHttpClient;\nimport okhttp3.Request;\nimport okhttp3.Response;", "import okhttp3.Request;\nimport okhttp3.Response;\n\n/**\n * Created by liyuejiao on 2018/7/3.\n * \u83b7\u53d6\u70b9\u64ad\u4fe1\u606f\n */\n\npublic class SuperVodListLoader {\n\n    private static final String                M3U8_SUFFIX = \".m3u8\";\n    private static final String                TAG       = \"SuperVodListLoader\";\n    private              Context               mContext;\n    private              Handler               mHandler;\n    private              HandlerThread         mHandlerThread;\n    private              boolean               mIsHttps  = true;\n    private final        String                BASE_URL  = \"http://playvideo.qcloud.com/getplayinfo/v4\";\n    private final        String                BASE_URLS = \"https://playvideo.qcloud.com/getplayinfo/v4\";\n    private              OnVodInfoLoadListener mOnVodInfoLoadListener;\n    private              OkHttpClient          mHttpClient;\n    private              int                   mAppId    = 1500005830;\n    private              Object mLock = new Object();\n\n\n    public SuperVodListLoader(Context context) {\n        mHandlerThread = new HandlerThread(\"SuperVodListLoader\");\n        mHandlerThread.start();\n        mHandler = new Handler(mHandlerThread.getLooper());\n        mContext = context;\n        mHttpClient = new OkHttpClient();\n        mHttpClient.newBuilder().connectTimeout(5, TimeUnit.SECONDS);\n    }\n", "public class SuperVodListLoader {\n\n    private static final String                M3U8_SUFFIX = \".m3u8\";\n    private static final String                TAG       = \"SuperVodListLoader\";\n    private              Context               mContext;\n    private              Handler               mHandler;\n    private              HandlerThread         mHandlerThread;\n    private              boolean               mIsHttps  = true;\n    private final        String                BASE_URL  = \"http://playvideo.qcloud.com/getplayinfo/v4\";\n    private final        String                BASE_URLS = \"https://playvideo.qcloud.com/getplayinfo/v4\";\n    private              OnVodInfoLoadListener mOnVodInfoLoadListener;\n    private              OkHttpClient          mHttpClient;\n    private              int                   mAppId    = 1500005830;\n    private              Object mLock = new Object();\n\n\n    public SuperVodListLoader(Context context) {\n        mHandlerThread = new HandlerThread(\"SuperVodListLoader\");\n        mHandlerThread.start();\n        mHandler = new Handler(mHandlerThread.getLooper());\n        mContext = context;\n        mHttpClient = new OkHttpClient();\n        mHttpClient.newBuilder().connectTimeout(5, TimeUnit.SECONDS);\n    }\n", "    public void getVideoListInfo(final ArrayList<VideoModel> videoModels, final boolean isCacheModel,\n                                 final OnVodListLoadListener listener) {\n        mHandler.post(new Runnable() {\n            @Override\n            public void run() {\n                final int loadSize = videoModels.size();\n                final AtomicInteger integer = new AtomicInteger(0);\n                for (VideoModel model : videoModels) {\n                    getVodByFileId(model, new OnVodInfoLoadListener() {\n                        @Override\n                        public void onSuccess(VideoModel videoModel) {\n                            synchronized (mLock) {\n                                integer.getAndAdd(1);", "                        public void onSuccess(VideoModel videoModel) {\n                            synchronized (mLock) {\n                                integer.getAndAdd(1);\n                                if (integer.get() == loadSize) {\n                                    VideoListModel videoListModel = new VideoListModel();\n                                    videoListModel.videoModelList = videoModels;\n                                    videoListModel.isEnableDownload = isCacheModel;\n                                    listener.onSuccess(videoListModel);\n                                }\n                            }\n                        }\n\n                        @Override", "                        public void onFail(int errCode) {\n                            listener.onFail(-1);\n                        }\n                    });\n                }\n            }\n        });\n    }\n\n    public void getVodByFileId(final VideoModel model, final OnVodInfoLoadListener listener) {\n        mHandler.post(new Runnable() {\n            @Override", "    public void getVodByFileId(final VideoModel model, final OnVodInfoLoadListener listener) {\n        mHandler.post(new Runnable() {\n            @Override\n            public void run() {\n                String urlStr = makeUrlString(model.appid, model.fileid, model.pSign);\n                Request request = new Request.Builder().url(urlStr).build();\n                Call call = mHttpClient.newCall(request);\n                call.enqueue(new Callback() {\n                    @Override\n                    public void onFailure(Call call, IOException e) {\n                        //\u83b7\u53d6\u8bf7\u6c42\u4fe1\u606f\u5931\u8d25\n                        listener.onFail(-1);\n                    }\n\n                    @Override", "                    public void onFailure(Call call, IOException e) {\n                        //\u83b7\u53d6\u8bf7\u6c42\u4fe1\u606f\u5931\u8d25\n                        listener.onFail(-1);\n                    }\n\n                    @Override\n                    public void onResponse(Call call, Response response) throws IOException {\n                        String content = response.body().string();\n                        parseJson(model, content, listener);\n                    }\n                });\n            }\n        });\n    }\n\n\n\n    private void parseJson(VideoModel videoModel, String content, OnVodInfoLoadListener listener) {", "        if (TextUtils.isEmpty(content)) {\n            Log.e(TAG, \"parseJson err, content is empty!\");\n            return;\n        }\n\n        try {\n            JSONObject jsonObject = new JSONObject(content);\n            int code = jsonObject.getInt(\"code\");\n            if (code != 0) {\n                String message = jsonObject.getString(\"message\");\n                listener.onFail(-1);\n                Log.e(TAG, message);\n                return;\n            }\n\n            int version = jsonObject.getInt(\"version\");\n", "            if (code != 0) {\n                String message = jsonObject.getString(\"message\");\n                listener.onFail(-1);\n                Log.e(TAG, message);\n                return;\n            }\n\n            int version = jsonObject.getInt(\"version\");\n\n            if (version == 4) {\n                videoModel.videoURL = jsonObject.optJSONObject(\"media\").optJSONObject(\"streamingInfo\").optJSONObject(\"plainOutput\").optString(\"url\");\n                String title = jsonObject.optJSONObject(\"media\").optJSONObject(\"basicInfo\").optString(\"name\");\n                upDataTitle(videoModel, title);\n                videoModel.placeholderImage = jsonObject.optJSONObject(\"media\").optJSONObject(\"basicInfo\").optString(\"coverUrl\");\n                videoModel.duration = jsonObject.optJSONObject(\"media\").optJSONObject(\"basicInfo\").optInt(\"duration\");\n            }\n            videoModel.title = getTitleByFileId(videoModel);\n            listener.onSuccess(videoModel);\n        } catch (JSONException e) {\n            e.printStackTrace();\n        }\n    }\n\n    /**\n     * \u6839\u636e\u89c6\u9891ID \u83b7\u53d6\u89c6\u9891\u6807\u9898\n     *\n     * @param model\n     * @return\n     */\n    private String getTitleByFileId(VideoModel model) {\n        String fileId = model.fileid;\n        String title = \"\";\n        switch (fileId) {\n            case \"387702299774251236\":\n                title = mContext.getString(R.string.tencent_cloud_audio_and_video_achievements_title);\n                break;\n            case \"387702299774544650\":\n                title = mContext.getString(R.string.tencent_cloud_audio_and_video_steady_title);\n                break;\n            case \"387702299774644824\":\n                title = mContext.getString(R.string.tencent_cloud_audio_and_video_real_title);\n                break;\n            case \"387702299774211080\":\n                title = mContext.getString(R.string.tencent_cloud_audio_and_video_complete_title);\n                break;\n            case \"387702299774545556\":\n                title = mContext.getString(R.string.tencent_cloud_business_introduction_title);\n                break;\n            case \"387702299774574470\":\n                title = mContext.getString(R.string.what_are_numbers_title);\n                break;\n            case \"387702299774253670\":\n                title = mContext.getString(R.string.simplify_complexity_and_build_big_from_small_title);\n                break;\n            case \"387702299773851453\":\n                title = String.format(mContext.getString(R.string.super_player_cache_video_title),1);\n                break;\n            case \"387702299774155981\":\n                title = String.format(mContext.getString(R.string.super_player_cache_video_title),2);\n                break;\n            case \"387702299773830943\":\n                title = String.format(mContext.getString(R.string.super_player_cache_video_title),3);\n                break;\n            case \"387702299773823860\":\n                title = String.format(mContext.getString(R.string.super_player_cache_video_title),4);\n                break;\n            case \"387702299774156604\":\n                title = String.format(mContext.getString(R.string.super_player_cache_video_title),5);\n                break;\n            default:\n                title = model.title;\n                break;\n        }\n        return title;\n    }\n\n    private void upDataTitle(VideoModel videoModel, String newTitle) {", "            if (version == 4) {\n                videoModel.videoURL = jsonObject.optJSONObject(\"media\").optJSONObject(\"streamingInfo\").optJSONObject(\"plainOutput\").optString(\"url\");\n                String title = jsonObject.optJSONObject(\"media\").optJSONObject(\"basicInfo\").optString(\"name\");\n                upDataTitle(videoModel, title);\n                videoModel.placeholderImage = jsonObject.optJSONObject(\"media\").optJSONObject(\"basicInfo\").optString(\"coverUrl\");\n                videoModel.duration = jsonObject.optJSONObject(\"media\").optJSONObject(\"basicInfo\").optInt(\"duration\");\n            }\n            videoModel.title = getTitleByFileId(videoModel);\n            listener.onSuccess(videoModel);\n        } catch (JSONException e) {\n            e.printStackTrace();\n        }\n    }\n\n    /**\n     * \u6839\u636e\u89c6\u9891ID \u83b7\u53d6\u89c6\u9891\u6807\u9898\n     *\n     * @param model\n     * @return\n     */\n    private String getTitleByFileId(VideoModel model) {\n        String fileId = model.fileid;\n        String title = \"\";\n        switch (fileId) {\n            case \"387702299774251236\":\n                title = mContext.getString(R.string.tencent_cloud_audio_and_video_achievements_title);\n                break;\n            case \"387702299774544650\":\n                title = mContext.getString(R.string.tencent_cloud_audio_and_video_steady_title);\n                break;\n            case \"387702299774644824\":\n                title = mContext.getString(R.string.tencent_cloud_audio_and_video_real_title);\n                break;\n            case \"387702299774211080\":\n                title = mContext.getString(R.string.tencent_cloud_audio_and_video_complete_title);\n                break;\n            case \"387702299774545556\":\n                title = mContext.getString(R.string.tencent_cloud_business_introduction_title);\n                break;\n            case \"387702299774574470\":\n                title = mContext.getString(R.string.what_are_numbers_title);\n                break;\n            case \"387702299774253670\":\n                title = mContext.getString(R.string.simplify_complexity_and_build_big_from_small_title);\n                break;\n            case \"387702299773851453\":\n                title = String.format(mContext.getString(R.string.super_player_cache_video_title),1);\n                break;\n            case \"387702299774155981\":\n                title = String.format(mContext.getString(R.string.super_player_cache_video_title),2);\n                break;\n            case \"387702299773830943\":\n                title = String.format(mContext.getString(R.string.super_player_cache_video_title),3);\n                break;\n            case \"387702299773823860\":\n                title = String.format(mContext.getString(R.string.super_player_cache_video_title),4);\n                break;\n            case \"387702299774156604\":\n                title = String.format(mContext.getString(R.string.super_player_cache_video_title),5);\n                break;\n            default:\n                title = model.title;\n                break;\n        }\n        return title;\n    }\n\n    private void upDataTitle(VideoModel videoModel, String newTitle) {", "        if (TextUtils.isEmpty(videoModel.title)) {\n            videoModel.title = newTitle;\n        }\n    }\n\n    /**\n     * \u62fc\u88c5\u534f\u8bae\u8bf7\u6c42url\n     *\n     * @return \u534f\u8bae\u8bf7\u6c42url\u5b57\u7b26\u4e32\n     */\n    private String makeUrlString(int appId, String fileId, String pSign) {\n        String urlStr;", "        if (mIsHttps) {\n            // \u9ed8\u8ba4\u7528https\n            urlStr = String.format(\"%s/%d/%s\", BASE_URLS, appId, fileId);\n        } else {\n            urlStr = String.format(\"%s/%d/%s\", BASE_URL, appId, fileId);\n        }\n        String query = makeQueryString(null, pSign, null);\n        if (query != null) {\n            urlStr = urlStr + \"?\" + query;\n        }\n        return urlStr;\n    }\n\n    /**\n     * \u62fc\u88c5\u534f\u8bae\u8bf7\u6c42url\u4e2d\u7684query\u5b57\u6bb5\n     *\n     * @return query\u5b57\u6bb5\u5b57\u7b26\u4e32\n     */\n    private String makeQueryString(String pcfg, String psign, String content) {\n        StringBuilder str = new StringBuilder();", "        if (!TextUtils.isEmpty(pcfg)) {\n            str.append(\"pcfg=\" + pcfg + \"&\");\n        }\n\n        if (!TextUtils.isEmpty(psign)) {\n            str.append(\"psign=\" + psign + \"&\");\n        }\n\n        if (!TextUtils.isEmpty(content)) {\n            str.append(\"context=\" + content + \"&\");\n        }", "        if (!TextUtils.isEmpty(content)) {\n            str.append(\"context=\" + content + \"&\");\n        }\n        if (str.length() > 1) {\n            str.deleteCharAt(str.length() - 1);\n        }\n        return str.toString();\n    }\n\n    public interface OnVodInfoLoadListener {\n        void onSuccess(VideoModel videoModel);\n\n        void onFail(int errCode);\n    }\n\n", "    public interface OnVodInfoLoadListener {\n        void onSuccess(VideoModel videoModel);\n\n        void onFail(int errCode);\n    }\n\n\n    public interface OnVodListLoadListener {\n        void onSuccess(VideoListModel videoListModel);\n\n        void onFail(int errCode);\n    }\n}\n"]}
{"filename": "vodcommon/src/main/java/com/tencent/liteav/demo/vodcommon/entity/VideoQuality.java", "chunked_list": ["package com.tencent.liteav.demo.vodcommon.entity;\n\nimport java.io.Serializable;\n\n/**\n * Created by yuejiaoli on 2018/7/7.\n * <p>\n * \u6e05\u6670\u5ea6\n */\n\npublic class VideoQuality implements Comparable<VideoQuality>, Serializable {\n", " */\n\npublic class VideoQuality implements Comparable<VideoQuality>, Serializable {\n\n    public int    height;\n    public int    width;\n    public int    index;\n    public int    bitrate;\n    // \u6e05\u6670\u5ea6\u5217\u8868\u7684\u6e05\u6670\u5ea6\u548cdp\u503c\n    public String title;\n    public String url;\n\n    public VideoQuality() {\n    }\n\n    public VideoQuality(int index, String title, String url) {\n        this.index = index;\n        this.title = title;\n        this.url = url;\n    }\n\n    @Override", "    public String title;\n    public String url;\n\n    public VideoQuality() {\n    }\n\n    public VideoQuality(int index, String title, String url) {\n        this.index = index;\n        this.title = title;\n        this.url = url;\n    }\n\n    @Override", "    public int compareTo(VideoQuality o) {\n        return o.bitrate - this.bitrate;\n    }\n}\n"]}
{"filename": "vodcommon/src/main/java/com/tencent/liteav/demo/vodcommon/entity/SuperPlayerVideoId.java", "chunked_list": ["package com.tencent.liteav.demo.vodcommon.entity;\n\n/**\n * Created by hans on 2019/3/25.\n * \u4f7f\u7528\u817e\u8baf\u4e91fileId\u64ad\u653e\n */\npublic class SuperPlayerVideoId {\n    public String           fileId;                             // \u817e\u8baf\u4e91\u89c6\u9891fileId\n    public String           pSign;                              // v4 \u5f00\u542f\u9632\u76d7\u94fe\u5fc5\u586b\n\n    @Override", "    public String           pSign;                              // v4 \u5f00\u542f\u9632\u76d7\u94fe\u5fc5\u586b\n\n    @Override\n    public String toString() {\n        return \"SuperPlayerVideoId{\" +\n                \", fileId='\" + fileId + '\\'' +\n                \", pSign='\" + pSign + '}';\n    }\n}\n"]}
{"filename": "vodcommon/src/main/java/com/tencent/liteav/demo/vodcommon/entity/DynamicWaterConfig.java", "chunked_list": ["package com.tencent.liteav.demo.vodcommon.entity;\n\n\nimport java.io.Serializable;\n\npublic class DynamicWaterConfig implements Serializable {\n    /**\n     * \u52a8\u6001\u6c34\u5370\u6587\u672c\n     */\n    public String dynamicWatermarkTip;\n    public int    tipTextSize;", "    public String dynamicWatermarkTip;\n    public int    tipTextSize;\n    public int    tipTextColor;\n\n    public DynamicWaterConfig(String dynamicWatermarkTip, int tipTextSize, int tipTextColor) {\n        this.dynamicWatermarkTip = dynamicWatermarkTip;\n        this.tipTextSize = tipTextSize;\n        this.tipTextColor = tipTextColor;\n    }\n\n}\n"]}
{"filename": "vodcommon/src/main/java/com/tencent/liteav/demo/vodcommon/entity/SubtitleSourceModel.java", "chunked_list": ["package com.tencent.liteav.demo.vodcommon.entity;\n\nimport java.io.Serializable;\n\npublic class SubtitleSourceModel implements Serializable {\n\n    /**\n     * \u5916\u6302\u5b57\u5e55\u540d\u79f0\n     */\n    public String name;\n\n    /**\n     * \u5916\u6302\u5b57\u5e55\u8fde\u63a5\n     */", "    public String name;\n\n    /**\n     * \u5916\u6302\u5b57\u5e55\u8fde\u63a5\n     */\n    public String url;\n\n    /**\n     * \u5916\u6302\u5b57\u5e55\u6570\u636e\u7c7b\u578b\n     * \u53ef\u9009\u62e9 TXVodConstants.VOD_PLAY_MIMETYPE_TEXT_SRT \u548c TXVodConstants.VOD_PLAY_MIMETYPE_TEXT_SRT\n     */", "    public String mimeType;\n\n}\n\n"]}
{"filename": "vodcommon/src/main/java/com/tencent/liteav/demo/vodcommon/entity/ConfigBean.java", "chunked_list": ["package com.tencent.liteav.demo.vodcommon.entity;\n\nimport com.tencent.rtmp.TXLiveConstants;\nimport com.tencent.rtmp.TXVodConstants;\n\npublic class ConfigBean {\n\n    private boolean mIsEnableSelfAdaption;\n    private boolean mIsEnableHardWareDecode;\n    private int mLogLevel;\n    private boolean mIsUseDash;\n    private boolean mEnableAccurateSeek;\n    private boolean mSmoothSwitchBitrate;\n    private boolean mAutoRotate;\n    private int mConnectRetryInterval;\n    private boolean mEnableRenderProcess;\n    private int mProgressInterval;\n    private int mConnectRetryCount;\n    private int mTimeout;\n    private String mCacheFolderPath;\n    private int mMaxCacheItems;\n    private long mPreferredResolution;\n    private int mMediaType;\n    private int mMaxPreloadSize;\n    private int mMaxBufferSize;\n    private int mBitRateIndex;\n    private static volatile ConfigBean mInstance;\n\n    private ConfigBean() {\n        reset();\n    }\n", "    public static ConfigBean getInstance() {\n        if (mInstance == null) {\n            synchronized (ConfigBean.class) {\n                if (mInstance == null) {\n                    mInstance = new ConfigBean();\n                }\n            }\n        }\n        return mInstance;\n    }\n", "    public void reset() {\n        setEnableAccurateSeek(true);\n        setSmoothSwitchBitrate(true);\n        setAutoRotate(true);\n        setEnableSelfAdaption(true);\n        setEnableRenderProcess(true);\n        setConnectRetryCount(3);\n        setConnectRetryInterval(3);\n        setTimeout(10);\n        setProgressInterval(500);\n        setCacheFolderPath(null);\n        setMaxCacheItems(200);\n        setMaxPreloadSize(50);\n        setMaxBufferSize(50);\n        setPreferredResolution(720 * 1280);\n        setMediaType(TXVodConstants.MEDIA_TYPE_AUTO);\n        setEnableHardWareDecode(true);\n        setLogLevel(TXLiveConstants.LOG_LEVEL_VERBOSE);\n    }\n", "    public boolean isEnableSelfAdaption() {\n        return mIsEnableSelfAdaption;\n    }\n\n    public void setEnableSelfAdaption(boolean isEnableSelfAdaption) {\n        this.mIsEnableSelfAdaption = isEnableSelfAdaption;\n    }\n\n    public boolean isEnableHardWareDecode() {\n        return mIsEnableHardWareDecode;\n    }\n", "    public boolean isEnableHardWareDecode() {\n        return mIsEnableHardWareDecode;\n    }\n\n    public void setEnableHardWareDecode(boolean enableHardWareDecode) {\n        this.mIsEnableHardWareDecode = enableHardWareDecode;\n    }\n\n    public int getLogLevel() {\n        return mLogLevel;\n    }\n", "    public int getLogLevel() {\n        return mLogLevel;\n    }\n\n    public void setLogLevel(int logLevel) {\n        this.mLogLevel = logLevel;\n    }\n\n    public boolean isIsUseDash() {\n        return mIsUseDash;\n    }\n", "    public boolean isIsUseDash() {\n        return mIsUseDash;\n    }\n\n    public void setsIsUseDash(boolean isUseDash) {\n        this.mIsUseDash = isUseDash;\n    }\n\n    public boolean isEnableAccurateSeek() {\n        return mEnableAccurateSeek;\n    }\n", "    public boolean isEnableAccurateSeek() {\n        return mEnableAccurateSeek;\n    }\n\n    public void setEnableAccurateSeek(boolean enableAccurateSeek) {\n        this.mEnableAccurateSeek = enableAccurateSeek;\n    }\n\n    public boolean isSmoothSwitchBitrate() {\n        return mSmoothSwitchBitrate;\n    }\n", "    public boolean isSmoothSwitchBitrate() {\n        return mSmoothSwitchBitrate;\n    }\n\n    public void setSmoothSwitchBitrate(boolean smoothSwitchBitrate) {\n        this.mSmoothSwitchBitrate = smoothSwitchBitrate;\n    }\n\n    public boolean isAutoRotate() {\n        return mAutoRotate;\n    }\n", "    public boolean isAutoRotate() {\n        return mAutoRotate;\n    }\n\n    public void setAutoRotate(boolean autoRotate) {\n        this.mAutoRotate = autoRotate;\n    }\n\n    public boolean isEnableRenderProcess() {\n        return mEnableRenderProcess;\n    }\n", "    public boolean isEnableRenderProcess() {\n        return mEnableRenderProcess;\n    }\n\n    public void setEnableRenderProcess(boolean enableRenderProcess) {\n        this.mEnableRenderProcess = enableRenderProcess;\n    }\n\n    public int getProgressInterval() {\n        return mProgressInterval;\n    }\n", "    public int getProgressInterval() {\n        return mProgressInterval;\n    }\n\n    public void setProgressInterval(int progressInterval) {\n        this.mProgressInterval = progressInterval;\n    }\n\n    public int getConnectRetryCount() {\n        return mConnectRetryCount;\n    }\n", "    public int getConnectRetryCount() {\n        return mConnectRetryCount;\n    }\n\n    public void setConnectRetryCount(int connectRetryCount) {\n        this.mConnectRetryCount = connectRetryCount;\n    }\n\n    public int getTimeout() {\n        return mTimeout;\n    }\n", "    public int getTimeout() {\n        return mTimeout;\n    }\n\n    public void setTimeout(int timeout) {\n        this.mTimeout = timeout;\n    }\n\n    public String getCacheFolderPath() {\n        return mCacheFolderPath;\n    }\n", "    public String getCacheFolderPath() {\n        return mCacheFolderPath;\n    }\n\n    public void setCacheFolderPath(String cacheFolderPath) {\n        this.mCacheFolderPath = cacheFolderPath;\n    }\n\n    public int getMaxCacheItems() {\n        return mMaxCacheItems;\n    }\n", "    public int getMaxCacheItems() {\n        return mMaxCacheItems;\n    }\n\n    public void setMaxCacheItems(int maxCacheItems) {\n        this.mMaxCacheItems = maxCacheItems;\n    }\n\n    public long getPreferredResolution() {\n        return mPreferredResolution;\n    }\n", "    public long getPreferredResolution() {\n        return mPreferredResolution;\n    }\n\n    public void setPreferredResolution(long preferredResolution) {\n        this.mPreferredResolution = preferredResolution;\n    }\n\n    public int getMediaType() {\n        return mMediaType;\n    }\n", "    public int getMediaType() {\n        return mMediaType;\n    }\n\n    public void setMediaType(int mediaType) {\n        this.mMediaType = mediaType;\n    }\n\n    public int getConnectRetryInterval() {\n        return mConnectRetryInterval;\n    }\n", "    public int getConnectRetryInterval() {\n        return mConnectRetryInterval;\n    }\n\n    public void setConnectRetryInterval(int connectRetryInterval) {\n        this.mConnectRetryInterval = connectRetryInterval;\n    }\n\n    public int getMaxPreloadSize() {\n        return mMaxPreloadSize;\n    }\n", "    public int getMaxPreloadSize() {\n        return mMaxPreloadSize;\n    }\n\n    public void setMaxPreloadSize(int maxPreloadSize) {\n        this.mMaxPreloadSize = maxPreloadSize;\n    }\n\n    public int getMaxBufferSize() {\n        return mMaxBufferSize;\n    }\n", "    public int getMaxBufferSize() {\n        return mMaxBufferSize;\n    }\n\n    public void setMaxBufferSize(int maxBufferSize) {\n        this.mMaxBufferSize = maxBufferSize;\n    }\n}"]}
{"filename": "vodcommon/src/main/java/com/tencent/liteav/demo/vodcommon/entity/VideoListModel.java", "chunked_list": ["package com.tencent.liteav.demo.vodcommon.entity;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class VideoListModel {\n    public List<VideoModel> videoModelList = new ArrayList<>();\n    public String title;\n    public String  icon;\n    // \u662f\u5426\u53ef\u4ee5\u79bb\u7ebf\u7f13\u5b58\n    public boolean isEnableDownload;\n", "    public String  icon;\n    // \u662f\u5426\u53ef\u4ee5\u79bb\u7ebf\u7f13\u5b58\n    public boolean isEnableDownload;\n\n    public void addVideoModel(VideoModel videoModel) {\n        videoModelList.add(videoModel);\n    }\n}\n"]}
{"filename": "vodcommon/src/androidTest/java/com/tencent/liteav/demo/vodcommon/ExampleInstrumentedTest.java", "chunked_list": ["package com.tencent.liteav.demo.vodcommon;\n\nimport android.content.Context;\n\nimport androidx.test.platform.app.InstrumentationRegistry;\nimport androidx.test.ext.junit.runners.AndroidJUnit4;\n\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\n", "import org.junit.runner.RunWith;\n\n\n/**\n * Instrumented test, which will execute on an Android device.\n *\n * @see <a href=\"http://d.android.com/tools/testing\">Testing documentation</a>\n */\n@RunWith(AndroidJUnit4.class)\npublic class ExampleInstrumentedTest {\n    @Test", "@RunWith(AndroidJUnit4.class)\npublic class ExampleInstrumentedTest {\n    @Test\n    public void useAppContext() {\n        // Context of the app under test.\n        Context appContext = InstrumentationRegistry.getInstrumentation().getTargetContext();\n        assertEquals(\"com.tencent.liteav.demo.vodcommon.test\", appContext.getPackageName());\n    }\n}"]}
