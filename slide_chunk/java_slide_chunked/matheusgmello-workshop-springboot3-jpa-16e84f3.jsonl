{"filename": "src/test/java/com/educandoweb/course/CourseApplicationTests.java", "chunked_list": ["package com.educandoweb.course;\n\nimport org.junit.jupiter.api.Test;\nimport org.springframework.boot.test.context.SpringBootTest;\n\n@SpringBootTest\nclass CourseApplicationTests {\n\n\t@Test\n\tvoid contextLoads() {", "\t@Test\n\tvoid contextLoads() {\n\t}\n\n}\n"]}
{"filename": "src/main/java/com/educandoweb/course/CourseApplication.java", "chunked_list": ["package com.educandoweb.course;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\n\n@SpringBootApplication\npublic class CourseApplication {\n\n\tpublic static void main(String[] args) {\n\t\tSpringApplication.run(CourseApplication.class, args);\n\t}\n\n}\n", "\tpublic static void main(String[] args) {\n\t\tSpringApplication.run(CourseApplication.class, args);\n\t}\n\n}\n"]}
{"filename": "src/main/java/com/educandoweb/course/config/TestConfig.java", "chunked_list": ["package com.educandoweb.course.config;\n\nimport java.time.Instant;\nimport java.util.Arrays;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.boot.CommandLineRunner;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.context.annotation.Profile;\n", "import org.springframework.context.annotation.Profile;\n\nimport com.educandoweb.course.entities.Category;\nimport com.educandoweb.course.entities.Order;\nimport com.educandoweb.course.entities.OrderItem;\nimport com.educandoweb.course.entities.Payment;\nimport com.educandoweb.course.entities.Product;\nimport com.educandoweb.course.entities.User;\nimport com.educandoweb.course.entities.enums.OrderStatus;\nimport com.educandoweb.course.repositories.CategoryRepository;", "import com.educandoweb.course.entities.enums.OrderStatus;\nimport com.educandoweb.course.repositories.CategoryRepository;\nimport com.educandoweb.course.repositories.OrderItemRepository;\nimport com.educandoweb.course.repositories.OrderRepository;\nimport com.educandoweb.course.repositories.ProductRepository;\nimport com.educandoweb.course.repositories.UserRepository;\n\n@Configuration\n@Profile(\"test\")\npublic class TestConfig implements CommandLineRunner {\n\n\t@Autowired\n\tprivate UserRepository userRepository;\n\n\t@Autowired\n\tprivate OrderRepository orderRepository;\n\n\t@Autowired\n\tprivate CategoryRepository categoryRepository;\n\t\n\t@Autowired\n\tprivate ProductRepository productRepository;\n\n\t@Autowired\n\tprivate OrderItemRepository orderItemRepository;\n\t\n\t@Override", "@Profile(\"test\")\npublic class TestConfig implements CommandLineRunner {\n\n\t@Autowired\n\tprivate UserRepository userRepository;\n\n\t@Autowired\n\tprivate OrderRepository orderRepository;\n\n\t@Autowired\n\tprivate CategoryRepository categoryRepository;\n\t\n\t@Autowired\n\tprivate ProductRepository productRepository;\n\n\t@Autowired\n\tprivate OrderItemRepository orderItemRepository;\n\t\n\t@Override", "\tpublic void run(String... args) throws Exception {\n\n\t\tCategory cat1 = new Category(null, \"Electronics\");\n\t\tCategory cat2 = new Category(null, \"Books\");\n\t\tCategory cat3 = new Category(null, \"Computers\");\n\t\t\n\t\tProduct p1 = new Product(null, \"The Lord of the Rings\", \"Lorem ipsum dolor sit amet, consectetur.\", 90.5, \"\");\n\t\tProduct p2 = new Product(null, \"Smart TV\", \"Nulla eu imperdiet purus. Maecenas ante.\", 2190.0, \"\");\n\t\tProduct p3 = new Product(null, \"Macbook Pro\", \"Nam eleifend maximus tortor, at mollis.\", 1250.0, \"\");\n\t\tProduct p4 = new Product(null, \"PC Gamer\", \"Donec aliquet odio ac rhoncus cursus.\", 1200.0, \"\");\n\t\tProduct p5 = new Product(null, \"Rails for Dummies\", \"Cras fringilla convallis sem vel faucibus.\", 100.99, \"\");\n\n\t\tcategoryRepository.saveAll(Arrays.asList(cat1, cat2, cat3));\n\t\tproductRepository.saveAll(Arrays.asList(p1, p2, p3, p4, p5));\n\n\t\tp1.getCategories().add(cat2);\n\t\tp2.getCategories().add(cat1);\n\t\tp2.getCategories().add(cat3);\n\t\tp3.getCategories().add(cat3);\n\t\tp4.getCategories().add(cat3);\n\t\tp5.getCategories().add(cat2);\n\n\t\tproductRepository.saveAll(Arrays.asList(p1, p2, p3, p4, p5));\n\n\t\tUser u1 = new User(null, \"Maria Brown\", \"maria@gmail.com\", \"988888888\", \"123456\");\n\t\tUser u2 = new User(null, \"Alex Green\", \"alex@gmail.com\", \"977777777\", \"123456\");\n\n\t\tOrder o1 = new Order(null, Instant.parse(\"2019-06-20T19:53:07Z\"), OrderStatus.PAID, u1);\n\t\tOrder o2 = new Order(null, Instant.parse(\"2019-07-21T03:42:10Z\"), OrderStatus.WAITING_PAYMENT, u2);\n\t\tOrder o3 = new Order(null, Instant.parse(\"2019-07-22T15:21:22Z\"), OrderStatus.WAITING_PAYMENT, u1);\n\n\t\tuserRepository.saveAll(Arrays.asList(u1, u2));\n\t\torderRepository.saveAll(Arrays.asList(o1, o2, o3));\n\t\t\n\t\tOrderItem oi1 = new OrderItem(o1, p1, 2, p1.getPrice());\n\t\tOrderItem oi2 = new OrderItem(o1, p3, 1, p3.getPrice());\n\t\tOrderItem oi3 = new OrderItem(o2, p3, 2, p3.getPrice());\n\t\tOrderItem oi4 = new OrderItem(o3, p5, 2, p5.getPrice());\n\n\t\torderItemRepository.saveAll(Arrays.asList(oi1, oi2, oi3, oi4));\t\n\t\t\n\t\tPayment pay1 = new Payment(null, Instant.parse(\"2019-06-20T21:53:07Z\"), o1);\n\t\to1.setPayment(pay1);\n\n\t\torderRepository.save(o1);\n\t}\n}"]}
{"filename": "src/main/java/com/educandoweb/course/repositories/UserRepository.java", "chunked_list": ["package com.educandoweb.course.repositories;\n\nimport org.springframework.data.jpa.repository.JpaRepository;\n\nimport com.educandoweb.course.entities.User;\n\npublic interface UserRepository extends JpaRepository<User, Long> {\n\n}"]}
{"filename": "src/main/java/com/educandoweb/course/repositories/OrderRepository.java", "chunked_list": ["package com.educandoweb.course.repositories;\n\nimport org.springframework.data.jpa.repository.JpaRepository;\n\nimport com.educandoweb.course.entities.Order;\n\npublic interface OrderRepository extends JpaRepository<Order, Long> {\n\n}"]}
{"filename": "src/main/java/com/educandoweb/course/repositories/CategoryRepository.java", "chunked_list": ["package com.educandoweb.course.repositories;\n\nimport org.springframework.data.jpa.repository.JpaRepository;\n\nimport com.educandoweb.course.entities.Category;\n\npublic interface CategoryRepository extends JpaRepository<Category, Long> {\n\n}"]}
{"filename": "src/main/java/com/educandoweb/course/repositories/ProductRepository.java", "chunked_list": ["package com.educandoweb.course.repositories;\n\nimport org.springframework.data.jpa.repository.JpaRepository;\n\nimport com.educandoweb.course.entities.Product;\n\npublic interface ProductRepository extends JpaRepository<Product, Long> {\n\n}"]}
{"filename": "src/main/java/com/educandoweb/course/repositories/OrderItemRepository.java", "chunked_list": ["package com.educandoweb.course.repositories;\n\nimport org.springframework.data.jpa.repository.JpaRepository;\n\nimport com.educandoweb.course.entities.OrderItem;\nimport com.educandoweb.course.entities.pk.OrderItemPK;\n\npublic interface OrderItemRepository extends JpaRepository<OrderItem, OrderItemPK> {\n\n}"]}
{"filename": "src/main/java/com/educandoweb/course/resources/UserResource.java", "chunked_list": ["package com.educandoweb.course.resources;\n\nimport java.net.URI;\nimport java.util.List;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.http.ResponseEntity;\nimport org.springframework.web.bind.annotation.DeleteMapping;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.PathVariable;", "import org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.PathVariable;\nimport org.springframework.web.bind.annotation.PostMapping;\nimport org.springframework.web.bind.annotation.PutMapping;\nimport org.springframework.web.bind.annotation.RequestBody;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RestController;\nimport org.springframework.web.servlet.support.ServletUriComponentsBuilder;\n\nimport com.educandoweb.course.entities.User;", "\nimport com.educandoweb.course.entities.User;\nimport com.educandoweb.course.services.UserService;\n\n@RestController\n@RequestMapping(value = \"/users\")\npublic class UserResource {\n\n\t@Autowired \n\tprivate UserService service;\n\t\n\t@GetMapping\n\tpublic ResponseEntity<List<User>> findAll() {\n\t\tList<User> list = service.findAll();\n\t\treturn ResponseEntity.ok().body(list);\n\t}\n\n\t@GetMapping(value = \"/{id}\")\n\tpublic ResponseEntity<User> findById(@PathVariable Long id) {\n\t\tUser obj = service.findById(id);\n\t\treturn ResponseEntity.ok().body(obj);\n\t}\n\t\n\t@PostMapping\n\tpublic ResponseEntity<User> insert(@RequestBody User obj) {\n\t\tobj = service.insert(obj);\n\t\tURI uri = ServletUriComponentsBuilder.fromCurrentRequest().path(\"/{id}\")\n\t\t\t\t.buildAndExpand(obj.getId()).toUri();\n\t\treturn ResponseEntity.created(uri).body(obj);\n\t}\n\t\n\t@DeleteMapping(value = \"/{id}\")\n\tpublic ResponseEntity<Void> delete(@PathVariable Long id) {\n\t\tservice.delete(id);\n\t\treturn ResponseEntity.noContent().build();\n\t}\n\t\n\t@PutMapping(value = \"/{id}\")\n\tpublic ResponseEntity<User> update(@PathVariable Long id, @RequestBody User obj) {\n\t\tobj = service.update(id, obj);\n\t\treturn ResponseEntity.ok().body(obj);\n\t}\n}"]}
{"filename": "src/main/java/com/educandoweb/course/resources/ProductResource.java", "chunked_list": ["package com.educandoweb.course.resources;\n\nimport java.util.List;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.http.ResponseEntity;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.PathVariable;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RestController;", "import org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RestController;\n\nimport com.educandoweb.course.entities.Product;\nimport com.educandoweb.course.services.ProductService;\n\n@RestController\n@RequestMapping(value = \"/products\")\npublic class ProductResource {\n\n\t@Autowired \n\tprivate ProductService service;\n\n\t@GetMapping\n\tpublic ResponseEntity<List<Product>> findAll() {\n\t\tList<Product> list = service.findAll();\n\t\treturn ResponseEntity.ok().body(list);\n\t}\n\n\t@GetMapping(value = \"/{id}\")\n\tpublic ResponseEntity<Product> findById(@PathVariable Long id) {\n\t\tProduct obj = service.findById(id);\n\t\treturn ResponseEntity.ok().body(obj);\n\t}\n}", "public class ProductResource {\n\n\t@Autowired \n\tprivate ProductService service;\n\n\t@GetMapping\n\tpublic ResponseEntity<List<Product>> findAll() {\n\t\tList<Product> list = service.findAll();\n\t\treturn ResponseEntity.ok().body(list);\n\t}\n\n\t@GetMapping(value = \"/{id}\")\n\tpublic ResponseEntity<Product> findById(@PathVariable Long id) {\n\t\tProduct obj = service.findById(id);\n\t\treturn ResponseEntity.ok().body(obj);\n\t}\n}"]}
{"filename": "src/main/java/com/educandoweb/course/resources/CategoryResource.java", "chunked_list": ["package com.educandoweb.course.resources;\n\nimport java.util.List;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.http.ResponseEntity;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.PathVariable;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RestController;", "import org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RestController;\n\nimport com.educandoweb.course.entities.Category;\nimport com.educandoweb.course.services.CategoryService;\n\n@RestController\n@RequestMapping(value = \"/categories\")\npublic class CategoryResource {\n\n\t@Autowired \n\tprivate CategoryService service;\n\n\t@GetMapping\n\tpublic ResponseEntity<List<Category>> findAll() {\n\t\tList<Category> list = service.findAll();\n\t\treturn ResponseEntity.ok().body(list);\n\t}\n\n\t@GetMapping(value = \"/{id}\")\n\tpublic ResponseEntity<Category> findById(@PathVariable Long id) {\n\t\tCategory obj = service.findById(id);\n\t\treturn ResponseEntity.ok().body(obj);\n\t}\n}", "public class CategoryResource {\n\n\t@Autowired \n\tprivate CategoryService service;\n\n\t@GetMapping\n\tpublic ResponseEntity<List<Category>> findAll() {\n\t\tList<Category> list = service.findAll();\n\t\treturn ResponseEntity.ok().body(list);\n\t}\n\n\t@GetMapping(value = \"/{id}\")\n\tpublic ResponseEntity<Category> findById(@PathVariable Long id) {\n\t\tCategory obj = service.findById(id);\n\t\treturn ResponseEntity.ok().body(obj);\n\t}\n}"]}
{"filename": "src/main/java/com/educandoweb/course/resources/OrderResource.java", "chunked_list": ["package com.educandoweb.course.resources;\n\nimport java.util.List;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.http.ResponseEntity;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.PathVariable;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RestController;", "import org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RestController;\n\nimport com.educandoweb.course.entities.Order;\nimport com.educandoweb.course.services.OrderService;\n\n@RestController\n@RequestMapping(value = \"/orders\")\npublic class OrderResource {\n\n\t@Autowired \n\tprivate OrderService service;\n\n\t@GetMapping\n\tpublic ResponseEntity<List<Order>> findAll() {\n\t\tList<Order> list = service.findAll();\n\t\treturn ResponseEntity.ok().body(list);\n\t}\n\n\t@GetMapping(value = \"/{id}\")\n\tpublic ResponseEntity<Order> findById(@PathVariable Long id) {\n\t\tOrder obj = service.findById(id);\n\t\treturn ResponseEntity.ok().body(obj);\n\t}\n}", "public class OrderResource {\n\n\t@Autowired \n\tprivate OrderService service;\n\n\t@GetMapping\n\tpublic ResponseEntity<List<Order>> findAll() {\n\t\tList<Order> list = service.findAll();\n\t\treturn ResponseEntity.ok().body(list);\n\t}\n\n\t@GetMapping(value = \"/{id}\")\n\tpublic ResponseEntity<Order> findById(@PathVariable Long id) {\n\t\tOrder obj = service.findById(id);\n\t\treturn ResponseEntity.ok().body(obj);\n\t}\n}"]}
{"filename": "src/main/java/com/educandoweb/course/resources/exceptions/ResourceExceptionHandler.java", "chunked_list": ["package com.educandoweb.course.resources.exceptions;\n\nimport java.time.Instant;\n\nimport org.springframework.http.HttpStatus;\nimport org.springframework.http.ResponseEntity;\nimport org.springframework.web.bind.annotation.ControllerAdvice;\nimport org.springframework.web.bind.annotation.ExceptionHandler;\n\nimport com.educandoweb.course.services.exceptions.DatabaseException;", "\nimport com.educandoweb.course.services.exceptions.DatabaseException;\nimport com.educandoweb.course.services.exceptions.ResourceNotFoundException;\n\nimport jakarta.servlet.http.HttpServletRequest;\n\n@ControllerAdvice\npublic class ResourceExceptionHandler {\n\n\t@ExceptionHandler(ResourceNotFoundException.class)\n\tpublic ResponseEntity<StandardError> resourceNotFound(ResourceNotFoundException e, HttpServletRequest request) {\n\t\tString error = \"Resource not found\";\n\t\tHttpStatus status = HttpStatus.NOT_FOUND;\n\t\tStandardError err = new StandardError(Instant.now(), status.value(), error, e.getMessage(), request.getRequestURI());\n\t\treturn ResponseEntity.status(status).body(err);\n\t}\n\t\n\t@ExceptionHandler(DatabaseException.class)\n\tpublic ResponseEntity<StandardError> database(DatabaseException e, HttpServletRequest request) {\n\t\tString error = \"Database error\";\n\t\tHttpStatus status = HttpStatus.BAD_REQUEST;\n\t\tStandardError err = new StandardError(Instant.now(), status.value(), error, e.getMessage(), request.getRequestURI());\n\t\treturn ResponseEntity.status(status).body(err);\n\t}\n}"]}
{"filename": "src/main/java/com/educandoweb/course/resources/exceptions/StandardError.java", "chunked_list": ["package com.educandoweb.course.resources.exceptions;\n\nimport java.io.Serializable;\nimport java.time.Instant;\n\nimport com.fasterxml.jackson.annotation.JsonFormat;\n\npublic class StandardError implements Serializable {\n\tprivate static final long serialVersionUID = 1L;\n\n\t@JsonFormat(shape = JsonFormat.Shape.STRING, pattern = \"yyyy-MM-dd'T'HH:mm:ss'Z'\", timezone = \"GMT\")\t\n\tprivate Instant timestamp;\n\tprivate Integer status;\n\tprivate String error;\n\tprivate String message;\n\tprivate String path;\n\n\tpublic StandardError() {\n\t}\n\n\tpublic StandardError(Instant timestamp, Integer status, String error, String message, String path) {\n\t\tsuper();\n\t\tthis.timestamp = timestamp;\n\t\tthis.status = status;\n\t\tthis.error = error;\n\t\tthis.message = message;\n\t\tthis.path = path;\n\t}\n", "\tpublic Instant getTimestamp() {\n\t\treturn timestamp;\n\t}\n\n\tpublic void setTimestamp(Instant timestamp) {\n\t\tthis.timestamp = timestamp;\n\t}\n\n\tpublic Integer getStatus() {\n\t\treturn status;\n\t}\n", "\tpublic Integer getStatus() {\n\t\treturn status;\n\t}\n\n\tpublic void setStatus(Integer status) {\n\t\tthis.status = status;\n\t}\n\n\tpublic String getError() {\n\t\treturn error;\n\t}\n", "\tpublic String getError() {\n\t\treturn error;\n\t}\n\n\tpublic void setError(String error) {\n\t\tthis.error = error;\n\t}\n\n\tpublic String getMessage() {\n\t\treturn message;\n\t}\n", "\tpublic String getMessage() {\n\t\treturn message;\n\t}\n\n\tpublic void setMessage(String message) {\n\t\tthis.message = message;\n\t}\n\n\tpublic String getPath() {\n\t\treturn path;\n\t}\n", "\tpublic String getPath() {\n\t\treturn path;\n\t}\n\n\tpublic void setPath(String path) {\n\t\tthis.path = path;\n\t}\n}"]}
{"filename": "src/main/java/com/educandoweb/course/services/ProductService.java", "chunked_list": ["package com.educandoweb.course.services;\n\nimport java.util.List;\nimport java.util.Optional;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\n\nimport com.educandoweb.course.entities.Product;\nimport com.educandoweb.course.repositories.ProductRepository;", "import com.educandoweb.course.entities.Product;\nimport com.educandoweb.course.repositories.ProductRepository;\n\n@Service\npublic class ProductService {\n\n\t@Autowired\n\tprivate ProductRepository repository;\n\n\tpublic List<Product> findAll() {\n\t\treturn repository.findAll();\n\t}\n", "\tpublic Product findById(Long id) {\n\t\tOptional<Product> obj = repository.findById(id);\n\t\treturn obj.get();\n\t}\n}"]}
{"filename": "src/main/java/com/educandoweb/course/services/CategoryService.java", "chunked_list": ["package com.educandoweb.course.services;\n\nimport java.util.List;\nimport java.util.Optional;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\n\nimport com.educandoweb.course.entities.Category;\nimport com.educandoweb.course.repositories.CategoryRepository;", "import com.educandoweb.course.entities.Category;\nimport com.educandoweb.course.repositories.CategoryRepository;\n\n@Service\npublic class CategoryService {\n\n\t@Autowired\n\tprivate CategoryRepository repository;\n\n\tpublic List<Category> findAll() {\n\t\treturn repository.findAll();\n\t}\n", "\tpublic Category findById(Long id) {\n\t\tOptional<Category> obj = repository.findById(id);\n\t\treturn obj.get();\n\t}\n}"]}
{"filename": "src/main/java/com/educandoweb/course/services/UserService.java", "chunked_list": ["package com.educandoweb.course.services;\n\nimport java.util.List;\nimport java.util.Optional;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.dao.DataIntegrityViolationException;\nimport org.springframework.dao.EmptyResultDataAccessException;\nimport org.springframework.stereotype.Service;\n", "import org.springframework.stereotype.Service;\n\nimport com.educandoweb.course.entities.User;\nimport com.educandoweb.course.repositories.UserRepository;\nimport com.educandoweb.course.services.exceptions.DatabaseException;\nimport com.educandoweb.course.services.exceptions.ResourceNotFoundException;\n\nimport jakarta.persistence.EntityNotFoundException;\n\n@Service\npublic class UserService {\n\n\t@Autowired\n\tprivate UserRepository repository;\n\n\tpublic List<User> findAll() {\n\t\treturn repository.findAll();\n\t}\n", "\n@Service\npublic class UserService {\n\n\t@Autowired\n\tprivate UserRepository repository;\n\n\tpublic List<User> findAll() {\n\t\treturn repository.findAll();\n\t}\n", "\tpublic User findById(Long id) {\n\t\tOptional<User> obj = repository.findById(id);\n\t\treturn obj.orElseThrow(() -> new ResourceNotFoundException(id));\n\t}\n\t\n\tpublic User insert(User obj) {\n\t\treturn repository.save(obj);\n\t}\n\t\n\tpublic void delete(Long id) {\n\t\ttry {\n\t\t\trepository.deleteById(id);\n\t\t} catch (EmptyResultDataAccessException e) {\n\t\t\tthrow new ResourceNotFoundException(id);\n\t\t} catch (DataIntegrityViolationException e) {\n\t\t\tthrow new DatabaseException(e.getMessage());\n\t\t}\n\t}\n\t", "\tpublic void delete(Long id) {\n\t\ttry {\n\t\t\trepository.deleteById(id);\n\t\t} catch (EmptyResultDataAccessException e) {\n\t\t\tthrow new ResourceNotFoundException(id);\n\t\t} catch (DataIntegrityViolationException e) {\n\t\t\tthrow new DatabaseException(e.getMessage());\n\t\t}\n\t}\n\t\n\tpublic User update(Long id, User obj) {", "\tpublic User update(Long id, User obj) {\n\t\ttry {\n\t\t\tUser entity = repository.getReferenceById(id);\n\t\t\tupdateData(entity, obj);\n\t\t\treturn repository.save(entity);\n\t\t} catch (EntityNotFoundException e) {\n\t\t\tthrow new ResourceNotFoundException(id);\n\t\t}\t\n\t}\n\n\tprivate void updateData(User entity, User obj) {\n\t\tentity.setName(obj.getName());\n\t\tentity.setEmail(obj.getEmail());\n\t\tentity.setPhone(obj.getPhone());\n\t}\n}"]}
{"filename": "src/main/java/com/educandoweb/course/services/OrderService.java", "chunked_list": ["package com.educandoweb.course.services;\n\nimport java.util.List;\nimport java.util.Optional;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\n\nimport com.educandoweb.course.entities.Order;\nimport com.educandoweb.course.repositories.OrderRepository;", "import com.educandoweb.course.entities.Order;\nimport com.educandoweb.course.repositories.OrderRepository;\n\n@Service\npublic class OrderService {\n\n\t@Autowired\n\tprivate OrderRepository repository;\n\n\tpublic List<Order> findAll() {\n\t\treturn repository.findAll();\n\t}\n", "\tpublic Order findById(Long id) {\n\t\tOptional<Order> obj = repository.findById(id);\n\t\treturn obj.get();\n\t}\n}"]}
{"filename": "src/main/java/com/educandoweb/course/services/exceptions/ResourceNotFoundException.java", "chunked_list": ["package com.educandoweb.course.services.exceptions;\n\npublic class ResourceNotFoundException extends RuntimeException {\n\n\tprivate static final long serialVersionUID = 1L;\n\n\tpublic ResourceNotFoundException(Object id) {\n\t\tsuper(\"Resource not found. Id \" + id);\n\t}\n}"]}
{"filename": "src/main/java/com/educandoweb/course/services/exceptions/DatabaseException.java", "chunked_list": ["package com.educandoweb.course.services.exceptions;\n\npublic class DatabaseException extends RuntimeException {\n\n\tprivate static final long serialVersionUID = 1L;\n\n\tpublic DatabaseException(String msg) {\n\t\tsuper(msg);\n\t}\n}"]}
{"filename": "src/main/java/com/educandoweb/course/entities/User.java", "chunked_list": ["package com.educandoweb.course.entities;\n\nimport java.io.Serializable;\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport com.fasterxml.jackson.annotation.JsonIgnore;\n\nimport jakarta.persistence.Entity;\nimport jakarta.persistence.GeneratedValue;", "import jakarta.persistence.Entity;\nimport jakarta.persistence.GeneratedValue;\nimport jakarta.persistence.GenerationType;\nimport jakarta.persistence.Id;\nimport jakarta.persistence.OneToMany;\nimport jakarta.persistence.Table;\n\n@Entity\n@Table(name = \"tb_user\")\npublic class User implements Serializable {\n\tprivate static final long serialVersionUID = 1L;\n\n\t@Id\n\t@GeneratedValue(strategy = GenerationType.IDENTITY)\n\tprivate Long id;\n\tprivate String name;\n\tprivate String email;\n\tprivate String phone;\n\tprivate String password;\n\n\t@JsonIgnore\n\t@OneToMany(mappedBy = \"client\")\n\tprivate List<Order> orders = new ArrayList<>();\n\t\n\tpublic User() {\n\t}\n\n\tpublic User(Long id, String name, String email, String phone, String password) {\n\t\tsuper();\n\t\tthis.id = id;\n\t\tthis.name = name;\n\t\tthis.email = email;\n\t\tthis.phone = phone;\n\t\tthis.password = password;\n\t}\n", "@Table(name = \"tb_user\")\npublic class User implements Serializable {\n\tprivate static final long serialVersionUID = 1L;\n\n\t@Id\n\t@GeneratedValue(strategy = GenerationType.IDENTITY)\n\tprivate Long id;\n\tprivate String name;\n\tprivate String email;\n\tprivate String phone;\n\tprivate String password;\n\n\t@JsonIgnore\n\t@OneToMany(mappedBy = \"client\")\n\tprivate List<Order> orders = new ArrayList<>();\n\t\n\tpublic User() {\n\t}\n\n\tpublic User(Long id, String name, String email, String phone, String password) {\n\t\tsuper();\n\t\tthis.id = id;\n\t\tthis.name = name;\n\t\tthis.email = email;\n\t\tthis.phone = phone;\n\t\tthis.password = password;\n\t}\n", "\tpublic Long getId() {\n\t\treturn id;\n\t}\n\n\tpublic void setId(Long id) {\n\t\tthis.id = id;\n\t}\n\n\tpublic String getName() {\n\t\treturn name;\n\t}\n", "\tpublic String getName() {\n\t\treturn name;\n\t}\n\n\tpublic void setName(String name) {\n\t\tthis.name = name;\n\t}\n\n\tpublic String getEmail() {\n\t\treturn email;\n\t}\n", "\tpublic String getEmail() {\n\t\treturn email;\n\t}\n\n\tpublic void setEmail(String email) {\n\t\tthis.email = email;\n\t}\n\n\tpublic String getPhone() {\n\t\treturn phone;\n\t}\n", "\tpublic String getPhone() {\n\t\treturn phone;\n\t}\n\n\tpublic void setPhone(String phone) {\n\t\tthis.phone = phone;\n\t}\n\n\tpublic String getPassword() {\n\t\treturn password;\n\t}\n", "\tpublic String getPassword() {\n\t\treturn password;\n\t}\n\n\tpublic void setPassword(String password) {\n\t\tthis.password = password;\n\t}\n\n\tpublic List<Order> getOrders() {\n\t\treturn orders;\n\t}\n\t\n\t@Override", "\tpublic int hashCode() {\n\t\tfinal int prime = 31;\n\t\tint result = 1;\n\t\tresult = prime * result + ((id == null) ? 0 : id.hashCode());\n\t\treturn result;\n\t}\n\n\t@Override\n\tpublic boolean equals(Object obj) {\n\t\tif (this == obj)\n\t\t\treturn true;", "\tpublic boolean equals(Object obj) {\n\t\tif (this == obj)\n\t\t\treturn true;\n\t\tif (obj == null)\n\t\t\treturn false;\n\t\tif (getClass() != obj.getClass())\n\t\t\treturn false;\n\t\tUser other = (User) obj;\n\t\tif (id == null) {\n\t\t\tif (other.id != null)\n\t\t\t\treturn false;", "\t\tif (id == null) {\n\t\t\tif (other.id != null)\n\t\t\t\treturn false;\n\t\t} else if (!id.equals(other.id))\n\t\t\treturn false;\n\t\treturn true;\n\t}\n}"]}
{"filename": "src/main/java/com/educandoweb/course/entities/Order.java", "chunked_list": ["package com.educandoweb.course.entities;\n\nimport java.io.Serializable;\nimport java.time.Instant;\nimport java.util.HashSet;\nimport java.util.Set;\n\nimport com.educandoweb.course.entities.enums.OrderStatus;\n\nimport jakarta.persistence.CascadeType;", "\nimport jakarta.persistence.CascadeType;\nimport jakarta.persistence.Entity;\nimport jakarta.persistence.GeneratedValue;\nimport jakarta.persistence.GenerationType;\nimport jakarta.persistence.Id;\nimport jakarta.persistence.JoinColumn;\nimport jakarta.persistence.ManyToOne;\nimport jakarta.persistence.OneToMany;\nimport jakarta.persistence.OneToOne;", "import jakarta.persistence.OneToMany;\nimport jakarta.persistence.OneToOne;\nimport jakarta.persistence.Table;\n\n@Entity\n@Table(name = \"tb_order\")\npublic class Order implements Serializable {\n\tprivate static final long serialVersionUID = 1L;\n\n\t@Id\n\t@GeneratedValue(strategy = GenerationType.IDENTITY)\n\tprivate Long id;\n\tprivate Instant moment;\n\t\n\tprivate Integer orderStatus;\n\n\t@ManyToOne\n\t@JoinColumn(name = \"client_id\")\n\tprivate User client;\n\n\t@OneToMany(mappedBy = \"id.order\")\n\tprivate Set<OrderItem> items = new HashSet<>();\n\t\n\t@OneToOne(mappedBy = \"order\", cascade = CascadeType.ALL)\n\tprivate Payment payment;\n\t\n\tpublic Order() {\n\t}\n\n\tpublic Order(Long id, Instant moment, OrderStatus orderStatus, User client) {\n\t\tsuper();\n\t\tthis.id = id;\n\t\tthis.moment = moment;\n\t\tthis.client = client;\n\t\tsetOrderStatus(orderStatus);\n\t}\n", "\tpublic Long getId() {\n\t\treturn id;\n\t}\n\n\tpublic void setId(Long id) {\n\t\tthis.id = id;\n\t}\n\n\tpublic Instant getMoment() {\n\t\treturn moment;\n\t}\n", "\tpublic Instant getMoment() {\n\t\treturn moment;\n\t}\n\n\tpublic void setMoment(Instant moment) {\n\t\tthis.moment = moment;\n\t}\n\n\tpublic User getClient() {\n\t\treturn client;\n\t}\n", "\tpublic User getClient() {\n\t\treturn client;\n\t}\n\n\tpublic void setClient(User client) {\n\t\tthis.client = client;\n\t}\n\n\tpublic OrderStatus getOrderStatus() {\n\t\treturn OrderStatus.valueOf(orderStatus);\n\t}\n", "\tpublic OrderStatus getOrderStatus() {\n\t\treturn OrderStatus.valueOf(orderStatus);\n\t}\n\n\tpublic void setOrderStatus(OrderStatus orderStatus) {\n\t\tif (orderStatus != null) {\n\t\t\tthis.orderStatus = orderStatus.getCode();\n\t\t}\n\t}\n\t\n\tpublic Payment getPayment() {\n\t\treturn payment;\n\t}\n", "\tpublic Payment getPayment() {\n\t\treturn payment;\n\t}\n\n\tpublic void setPayment(Payment payment) {\n\t\tthis.payment = payment;\n\t}\n\t\n\tpublic Set<OrderItem> getItems() {\n\t\treturn items;\n\t}\n\t", "\tpublic Double getTotal() {\n\t\tdouble sum = 0.0;\n\t\tfor (OrderItem x : items) {\n\t\t\tsum += x.getSubTotal();\n\t\t}\n\t\treturn sum;\n\t}\n\t\n\t@Override\n\tpublic int hashCode() {\n\t\tfinal int prime = 31;\n\t\tint result = 1;\n\t\tresult = prime * result + ((id == null) ? 0 : id.hashCode());\n\t\treturn result;\n\t}\n\n\t@Override", "\tpublic int hashCode() {\n\t\tfinal int prime = 31;\n\t\tint result = 1;\n\t\tresult = prime * result + ((id == null) ? 0 : id.hashCode());\n\t\treturn result;\n\t}\n\n\t@Override\n\tpublic boolean equals(Object obj) {\n\t\tif (this == obj)\n\t\t\treturn true;", "\tpublic boolean equals(Object obj) {\n\t\tif (this == obj)\n\t\t\treturn true;\n\t\tif (obj == null)\n\t\t\treturn false;\n\t\tif (getClass() != obj.getClass())\n\t\t\treturn false;\n\t\tOrder other = (Order) obj;\n\t\tif (id == null) {\n\t\t\tif (other.id != null)\n\t\t\t\treturn false;", "\t\tif (id == null) {\n\t\t\tif (other.id != null)\n\t\t\t\treturn false;\n\t\t} else if (!id.equals(other.id))\n\t\t\treturn false;\n\t\treturn true;\n\t}\n}"]}
{"filename": "src/main/java/com/educandoweb/course/entities/Payment.java", "chunked_list": ["package com.educandoweb.course.entities;\n\nimport java.io.Serializable;\nimport java.time.Instant;\n\nimport com.fasterxml.jackson.annotation.JsonIgnore;\n\nimport jakarta.persistence.Entity;\nimport jakarta.persistence.GeneratedValue;\nimport jakarta.persistence.GenerationType;", "import jakarta.persistence.GeneratedValue;\nimport jakarta.persistence.GenerationType;\nimport jakarta.persistence.Id;\nimport jakarta.persistence.MapsId;\nimport jakarta.persistence.OneToOne;\nimport jakarta.persistence.Table;\n\n@Entity\n@Table(name = \"tb_payment\")\npublic class Payment implements Serializable {\n\tprivate static final long serialVersionUID = 1L;\n\n\t@Id\n\t@GeneratedValue(strategy = GenerationType.IDENTITY)\n\tprivate Long id;\n\tprivate Instant moment;\n\n\t@JsonIgnore\n\t@OneToOne\n\t@MapsId\n\tprivate Order order;\n\n\tpublic Payment() {\n\t}\n\n\tpublic Payment(Long id, Instant moment, Order order) {\n\t\tsuper();\n\t\tthis.id = id;\n\t\tthis.moment = moment;\n\t\tthis.order = order;\n\t}\n", "@Table(name = \"tb_payment\")\npublic class Payment implements Serializable {\n\tprivate static final long serialVersionUID = 1L;\n\n\t@Id\n\t@GeneratedValue(strategy = GenerationType.IDENTITY)\n\tprivate Long id;\n\tprivate Instant moment;\n\n\t@JsonIgnore\n\t@OneToOne\n\t@MapsId\n\tprivate Order order;\n\n\tpublic Payment() {\n\t}\n\n\tpublic Payment(Long id, Instant moment, Order order) {\n\t\tsuper();\n\t\tthis.id = id;\n\t\tthis.moment = moment;\n\t\tthis.order = order;\n\t}\n", "\tpublic Long getId() {\n\t\treturn id;\n\t}\n\n\tpublic void setId(Long id) {\n\t\tthis.id = id;\n\t}\n\n\tpublic Instant getMoment() {\n\t\treturn moment;\n\t}\n", "\tpublic Instant getMoment() {\n\t\treturn moment;\n\t}\n\n\tpublic void setMoment(Instant moment) {\n\t\tthis.moment = moment;\n\t}\n\n\tpublic Order getOrder() {\n\t\treturn order;\n\t}\n", "\tpublic Order getOrder() {\n\t\treturn order;\n\t}\n\n\tpublic void setOrder(Order order) {\n\t\tthis.order = order;\n\t}\n\n\t@Override\n\tpublic int hashCode() {\n\t\tfinal int prime = 31;\n\t\tint result = 1;\n\t\tresult = prime * result + ((id == null) ? 0 : id.hashCode());\n\t\treturn result;\n\t}\n\n\t@Override", "\tpublic int hashCode() {\n\t\tfinal int prime = 31;\n\t\tint result = 1;\n\t\tresult = prime * result + ((id == null) ? 0 : id.hashCode());\n\t\treturn result;\n\t}\n\n\t@Override\n\tpublic boolean equals(Object obj) {\n\t\tif (this == obj)\n\t\t\treturn true;", "\tpublic boolean equals(Object obj) {\n\t\tif (this == obj)\n\t\t\treturn true;\n\t\tif (obj == null)\n\t\t\treturn false;\n\t\tif (getClass() != obj.getClass())\n\t\t\treturn false;\n\t\tPayment other = (Payment) obj;\n\t\tif (id == null) {\n\t\t\tif (other.id != null)\n\t\t\t\treturn false;", "\t\tif (id == null) {\n\t\t\tif (other.id != null)\n\t\t\t\treturn false;\n\t\t} else if (!id.equals(other.id))\n\t\t\treturn false;\n\t\treturn true;\n\t}\n}"]}
{"filename": "src/main/java/com/educandoweb/course/entities/Product.java", "chunked_list": ["package com.educandoweb.course.entities;\n\nimport java.io.Serializable;\nimport java.util.HashSet;\nimport java.util.Set;\n\nimport com.fasterxml.jackson.annotation.JsonIgnore;\n\nimport jakarta.persistence.Entity;\nimport jakarta.persistence.GeneratedValue;", "import jakarta.persistence.Entity;\nimport jakarta.persistence.GeneratedValue;\nimport jakarta.persistence.GenerationType;\nimport jakarta.persistence.Id;\nimport jakarta.persistence.JoinColumn;\nimport jakarta.persistence.JoinTable;\nimport jakarta.persistence.ManyToMany;\nimport jakarta.persistence.OneToMany;\nimport jakarta.persistence.Table;\n", "import jakarta.persistence.Table;\n\n@Entity\n@Table(name = \"tb_product\")\npublic class Product implements Serializable {\n\tprivate static final long serialVersionUID = 1L;\n\n\t@Id\n\t@GeneratedValue(strategy = GenerationType.IDENTITY)\n\tprivate Long id;\n\tprivate String name;\n\tprivate String description;\n\tprivate Double price;\n\tprivate String imgUrl;\n\n\t@ManyToMany\n\t@JoinTable(name = \"tb_product_category\", joinColumns = @JoinColumn(name = \"product_id\"), inverseJoinColumns = @JoinColumn(name = \"category_id\"))\n\tprivate Set<Category> categories = new HashSet<>();\n\n\t@OneToMany(mappedBy = \"id.product\")\n\tprivate Set<OrderItem> items = new HashSet<>();\n\t\n\tpublic Product() {\n\t}\n\n\tpublic Product(Long id, String name, String description, Double price, String imgUrl) {\n\t\tsuper();\n\t\tthis.id = id;\n\t\tthis.name = name;\n\t\tthis.description = description;\n\t\tthis.price = price;\n\t\tthis.imgUrl = imgUrl;\n\t}\n", "\tpublic Long getId() {\n\t\treturn id;\n\t}\n\n\tpublic void setId(Long id) {\n\t\tthis.id = id;\n\t}\n\n\tpublic String getName() {\n\t\treturn name;\n\t}\n", "\tpublic String getName() {\n\t\treturn name;\n\t}\n\n\tpublic void setName(String name) {\n\t\tthis.name = name;\n\t}\n\n\tpublic String getDescription() {\n\t\treturn description;\n\t}\n", "\tpublic String getDescription() {\n\t\treturn description;\n\t}\n\n\tpublic void setDescription(String description) {\n\t\tthis.description = description;\n\t}\n\n\tpublic Double getPrice() {\n\t\treturn price;\n\t}\n", "\tpublic Double getPrice() {\n\t\treturn price;\n\t}\n\n\tpublic void setPrice(Double price) {\n\t\tthis.price = price;\n\t}\n\n\tpublic String getImgUrl() {\n\t\treturn imgUrl;\n\t}\n", "\tpublic String getImgUrl() {\n\t\treturn imgUrl;\n\t}\n\n\tpublic void setImgUrl(String imgUrl) {\n\t\tthis.imgUrl = imgUrl;\n\t}\n\n\tpublic Set<Category> getCategories() {\n\t\treturn categories;\n\t}\n\n\t@JsonIgnore\n\tpublic Set<Order> getOrders() {\n\t\tSet<Order> set = new HashSet<>();", "\t\tfor (OrderItem x : items) {\n\t\t\tset.add(x.getOrder());\n\t\t}\n\t\treturn set;\n\t}\n\t\n\t@Override\n\tpublic int hashCode() {\n\t\tfinal int prime = 31;\n\t\tint result = 1;\n\t\tresult = prime * result + ((id == null) ? 0 : id.hashCode());\n\t\treturn result;\n\t}\n\n\t@Override", "\tpublic boolean equals(Object obj) {\n\t\tif (this == obj)\n\t\t\treturn true;\n\t\tif (obj == null)\n\t\t\treturn false;\n\t\tif (getClass() != obj.getClass())\n\t\t\treturn false;\n\t\tProduct other = (Product) obj;\n\t\tif (id == null) {\n\t\t\tif (other.id != null)\n\t\t\t\treturn false;", "\t\tif (id == null) {\n\t\t\tif (other.id != null)\n\t\t\t\treturn false;\n\t\t} else if (!id.equals(other.id))\n\t\t\treturn false;\n\t\treturn true;\n\t}\n}"]}
{"filename": "src/main/java/com/educandoweb/course/entities/OrderItem.java", "chunked_list": ["package com.educandoweb.course.entities;\n\nimport java.io.Serializable;\n\nimport com.educandoweb.course.entities.pk.OrderItemPK;\nimport com.fasterxml.jackson.annotation.JsonIgnore;\n\nimport jakarta.persistence.EmbeddedId;\nimport jakarta.persistence.Entity;\nimport jakarta.persistence.Table;", "import jakarta.persistence.Entity;\nimport jakarta.persistence.Table;\n\n@Entity\n@Table(name = \"tb_order_item\")\npublic class OrderItem implements Serializable {\n\tprivate static final long serialVersionUID = 1L;\n\n\t@EmbeddedId\n\tprivate OrderItemPK id = new OrderItemPK();\n\n\tprivate Integer quantity;\n\tprivate Double price;\n\n\tpublic OrderItem() {\n\t}\n\n\tpublic OrderItem(Order order, Product product, Integer quantity, Double price) {\n\t\tsuper();\n\t\tid.setOrder(order);\n\t\tid.setProduct(product);\n\t\tthis.quantity = quantity;\n\t\tthis.price = price;\n\t}\n\n\t@JsonIgnore", "\tpublic Order getOrder() {\n\t\treturn id.getOrder();\n\t}\n\n\tpublic void setOrder(Order order) {\n\t\tid.setOrder(order);\n\t}\n\n\tpublic Product getProduct() {\n\t\treturn id.getProduct();\n\t}\n", "\tpublic Product getProduct() {\n\t\treturn id.getProduct();\n\t}\n\n\tpublic void setProduct(Product product) {\n\t\tid.setProduct(product);\n\t}\n\n\tpublic Integer getQuantity() {\n\t\treturn quantity;\n\t}\n", "\tpublic Integer getQuantity() {\n\t\treturn quantity;\n\t}\n\n\tpublic void setQuantity(Integer quantity) {\n\t\tthis.quantity = quantity;\n\t}\n\n\tpublic Double getPrice() {\n\t\treturn price;\n\t}\n", "\tpublic Double getPrice() {\n\t\treturn price;\n\t}\n\n\tpublic void setPrice(Double price) {\n\t\tthis.price = price;\n\t}\n\n\tpublic Double getSubTotal() {\n\t\treturn price * quantity;\n\t}\n\t\n\t@Override", "\tpublic Double getSubTotal() {\n\t\treturn price * quantity;\n\t}\n\t\n\t@Override\n\tpublic int hashCode() {\n\t\tfinal int prime = 31;\n\t\tint result = 1;\n\t\tresult = prime * result + ((id == null) ? 0 : id.hashCode());\n\t\treturn result;\n\t}\n\n\t@Override", "\tpublic boolean equals(Object obj) {\n\t\tif (this == obj)\n\t\t\treturn true;\n\t\tif (obj == null)\n\t\t\treturn false;\n\t\tif (getClass() != obj.getClass())\n\t\t\treturn false;\n\t\tOrderItem other = (OrderItem) obj;\n\t\tif (id == null) {\n\t\t\tif (other.id != null)\n\t\t\t\treturn false;", "\t\tif (id == null) {\n\t\t\tif (other.id != null)\n\t\t\t\treturn false;\n\t\t} else if (!id.equals(other.id))\n\t\t\treturn false;\n\t\treturn true;\n\t}\n}"]}
{"filename": "src/main/java/com/educandoweb/course/entities/Category.java", "chunked_list": ["package com.educandoweb.course.entities;\n\nimport java.io.Serializable;\nimport java.util.HashSet;\nimport java.util.Set;\n\nimport com.fasterxml.jackson.annotation.JsonIgnore;\n\nimport jakarta.persistence.Entity;\nimport jakarta.persistence.GeneratedValue;", "import jakarta.persistence.Entity;\nimport jakarta.persistence.GeneratedValue;\nimport jakarta.persistence.GenerationType;\nimport jakarta.persistence.Id;\nimport jakarta.persistence.ManyToMany;\nimport jakarta.persistence.Table;\n\n@Entity\n@Table(name = \"tb_category\")\npublic class Category implements Serializable {\n\tprivate static final long serialVersionUID = 1L;\n\n\t@Id\n\t@GeneratedValue(strategy = GenerationType.IDENTITY)\n\tprivate Long id;\n\tprivate String name;\n\n\t@JsonIgnore\n\t@ManyToMany(mappedBy = \"categories\")\n\tprivate Set<Product> products = new HashSet<>();\n\t\n\tpublic Category() {\n\t}\n\n\tpublic Category(Long id, String name) {\n\t\tsuper();\n\t\tthis.id = id;\n\t\tthis.name = name;\n\t}\n", "@Table(name = \"tb_category\")\npublic class Category implements Serializable {\n\tprivate static final long serialVersionUID = 1L;\n\n\t@Id\n\t@GeneratedValue(strategy = GenerationType.IDENTITY)\n\tprivate Long id;\n\tprivate String name;\n\n\t@JsonIgnore\n\t@ManyToMany(mappedBy = \"categories\")\n\tprivate Set<Product> products = new HashSet<>();\n\t\n\tpublic Category() {\n\t}\n\n\tpublic Category(Long id, String name) {\n\t\tsuper();\n\t\tthis.id = id;\n\t\tthis.name = name;\n\t}\n", "\tpublic Long getId() {\n\t\treturn id;\n\t}\n\n\tpublic void setId(Long id) {\n\t\tthis.id = id;\n\t}\n\n\tpublic String getName() {\n\t\treturn name;\n\t}\n", "\tpublic String getName() {\n\t\treturn name;\n\t}\n\n\tpublic void setName(String name) {\n\t\tthis.name = name;\n\t}\n\n\tpublic Set<Product> getProducts() {\n\t\treturn products;\n\t}\n\t\n\t@Override", "\tpublic int hashCode() {\n\t\tfinal int prime = 31;\n\t\tint result = 1;\n\t\tresult = prime * result + ((id == null) ? 0 : id.hashCode());\n\t\treturn result;\n\t}\n\n\t@Override\n\tpublic boolean equals(Object obj) {\n\t\tif (this == obj)\n\t\t\treturn true;", "\tpublic boolean equals(Object obj) {\n\t\tif (this == obj)\n\t\t\treturn true;\n\t\tif (obj == null)\n\t\t\treturn false;\n\t\tif (getClass() != obj.getClass())\n\t\t\treturn false;\n\t\tCategory other = (Category) obj;\n\t\tif (id == null) {\n\t\t\tif (other.id != null)\n\t\t\t\treturn false;", "\t\tif (id == null) {\n\t\t\tif (other.id != null)\n\t\t\t\treturn false;\n\t\t} else if (!id.equals(other.id))\n\t\t\treturn false;\n\t\treturn true;\n\t}\n}"]}
{"filename": "src/main/java/com/educandoweb/course/entities/pk/OrderItemPK.java", "chunked_list": ["package com.educandoweb.course.entities.pk;\n\nimport java.io.Serializable;\n\nimport com.educandoweb.course.entities.Order;\nimport com.educandoweb.course.entities.Product;\n\nimport jakarta.persistence.Embeddable;\nimport jakarta.persistence.JoinColumn;\nimport jakarta.persistence.ManyToOne;", "import jakarta.persistence.JoinColumn;\nimport jakarta.persistence.ManyToOne;\n\n@Embeddable\npublic class OrderItemPK implements Serializable {\n\tprivate static final long serialVersionUID = 1L;\n\n\t@ManyToOne\n\t@JoinColumn(name = \"order_id\")\n\tprivate Order order;\n\n\t@ManyToOne\n\t@JoinColumn(name = \"product_id\")\n\tprivate Product product;\n", "\tpublic Order getOrder() {\n\t\treturn order;\n\t}\n\n\tpublic void setOrder(Order order) {\n\t\tthis.order = order;\n\t}\n\n\tpublic Product getProduct() {\n\t\treturn product;\n\t}\n", "\tpublic Product getProduct() {\n\t\treturn product;\n\t}\n\n\tpublic void setProduct(Product product) {\n\t\tthis.product = product;\n\t}\n\n\t@Override\n\tpublic int hashCode() {\n\t\tfinal int prime = 31;\n\t\tint result = 1;\n\t\tresult = prime * result + ((order == null) ? 0 : order.hashCode());\n\t\tresult = prime * result + ((product == null) ? 0 : product.hashCode());\n\t\treturn result;\n\t}\n\n\t@Override", "\tpublic int hashCode() {\n\t\tfinal int prime = 31;\n\t\tint result = 1;\n\t\tresult = prime * result + ((order == null) ? 0 : order.hashCode());\n\t\tresult = prime * result + ((product == null) ? 0 : product.hashCode());\n\t\treturn result;\n\t}\n\n\t@Override\n\tpublic boolean equals(Object obj) {\n\t\tif (this == obj)\n\t\t\treturn true;", "\tpublic boolean equals(Object obj) {\n\t\tif (this == obj)\n\t\t\treturn true;\n\t\tif (obj == null)\n\t\t\treturn false;\n\t\tif (getClass() != obj.getClass())\n\t\t\treturn false;\n\t\tOrderItemPK other = (OrderItemPK) obj;\n\t\tif (order == null) {\n\t\t\tif (other.order != null)\n\t\t\t\treturn false;", "\t\tif (order == null) {\n\t\t\tif (other.order != null)\n\t\t\t\treturn false;\n\t\t} else if (!order.equals(other.order))\n\t\t\treturn false;\n\t\tif (product == null) {\n\t\t\tif (other.product != null)\n\t\t\t\treturn false;\n\t\t} else if (!product.equals(other.product))\n\t\t\treturn false;\n\t\treturn true;\n\t}\n}", "\t\t} else if (!product.equals(other.product))\n\t\t\treturn false;\n\t\treturn true;\n\t}\n}"]}
{"filename": "src/main/java/com/educandoweb/course/entities/enums/OrderStatus.java", "chunked_list": ["package com.educandoweb.course.entities.enums;\n\npublic enum OrderStatus {\n\n\tWAITING_PAYMENT(1),\n\n\tPAID(2),\n\n\tSHIPPED(3),\n\n\tDELIVERED(4),\n\n\tCANCELED(5);\n\n\tprivate int code;\n\n\tprivate OrderStatus(int code) {\n\n\t\tthis.code = code;\n\n\t}\n", "\tpublic int getCode() {\n\n\t\treturn code;\n\n\t}\n\n\tpublic static OrderStatus valueOf(int code) {\n\n\t\tfor (OrderStatus value : OrderStatus.values()) {\n\n\t\t\tif (value.getCode() == code) {\n\n\t\t\t\treturn value;\n\n\t\t\t}\n\n\t\t}\n\n\t\tthrow new IllegalArgumentException(\"Invalid OrderStatus code\");\n\n\t}\n\n}", "\t\tfor (OrderStatus value : OrderStatus.values()) {\n\n\t\t\tif (value.getCode() == code) {\n\n\t\t\t\treturn value;\n\n\t\t\t}\n\n\t\t}\n\n\t\tthrow new IllegalArgumentException(\"Invalid OrderStatus code\");\n\n\t}\n\n}"]}
