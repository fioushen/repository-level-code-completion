{"filename": "src/main/java/com/cursework/WebArtSell/WebArtSellApplication.java", "chunked_list": ["package com.cursework.WebArtSell;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\n\n@SpringBootApplication\npublic class WebArtSellApplication {\n    public static void main(String[] args) {\n        SpringApplication.run(WebArtSellApplication.class, args);\n    }\n}"]}
{"filename": "src/main/java/com/cursework/WebArtSell/Services/ProductService.java", "chunked_list": ["package com.cursework.WebArtSell.Services;\n\nimport com.cursework.WebArtSell.Models.Product;\nimport com.cursework.WebArtSell.Repositories.ProductRepository;\nimport org.springframework.stereotype.Service;\n\nimport java.util.List;\n\n@Service\npublic class ProductService {\n    private final ProductRepository productRepository;\n\n    public ProductService(ProductRepository productRepository) {\n        this.productRepository = productRepository;\n    }\n\n    public List<Product> findAll() {\n        return productRepository.findAll();\n    }\n\n    public List<Product> findAllByCategory(String category) {\n        return productRepository.findByCategory(category);\n    }\n\n}\n", "@Service\npublic class ProductService {\n    private final ProductRepository productRepository;\n\n    public ProductService(ProductRepository productRepository) {\n        this.productRepository = productRepository;\n    }\n\n    public List<Product> findAll() {\n        return productRepository.findAll();\n    }\n\n    public List<Product> findAllByCategory(String category) {\n        return productRepository.findByCategory(category);\n    }\n\n}\n"]}
{"filename": "src/main/java/com/cursework/WebArtSell/Services/TransactionService.java", "chunked_list": ["package com.cursework.WebArtSell.Services;\n\nimport com.cursework.WebArtSell.Models.Product;\nimport com.cursework.WebArtSell.Models.Transaction;\nimport com.cursework.WebArtSell.Repositories.TransactionRepository;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\n\nimport java.time.format.DateTimeFormatter;\nimport java.util.List;", "import java.time.format.DateTimeFormatter;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.TreeMap;\n\n@Service\npublic class TransactionService {\n\n    @Autowired\n    private TransactionRepository transactionRepository;\n\n    public List<Transaction> findAll() {\n        return transactionRepository.findAll();\n    }\n\n    public Map<String, Double> getMonthlySalesData() {\n        List<Transaction> transactions = findAll();\n\n        Map<String, Double> salesData = new TreeMap<>();\n", "        for (Transaction transaction : transactions) {\n            String monthYear = transaction.getPurchaseDate().format(DateTimeFormatter.ofPattern(\"MM-yyyy\"));\n\n            salesData.put(monthYear, salesData.getOrDefault(monthYear, 0.0) + transaction.getSum());\n        }\n\n        return salesData;\n    }\n\n    public boolean isProductInTransactions(Product product) {\n        return transactionRepository.findAll().stream()\n                .anyMatch(transaction -> transaction.getProductId().equals(product.getId()));\n    }\n}", "    public boolean isProductInTransactions(Product product) {\n        return transactionRepository.findAll().stream()\n                .anyMatch(transaction -> transaction.getProductId().equals(product.getId()));\n    }\n}"]}
{"filename": "src/main/java/com/cursework/WebArtSell/Models/TransactionChartData.java", "chunked_list": ["package com.cursework.WebArtSell.Models;\n\npublic class TransactionChartData {\n    private String date;\n    private Double sum;\n\n    public TransactionChartData(String date, Double sum) {\n        this.date = date;\n        this.sum = sum;\n    }\n", "    public String getDate() {\n        return date;\n    }\n\n    public void setDate(String date) {\n        this.date = date;\n    }\n\n    public Double getSum() {\n        return sum;\n    }\n", "    public Double getSum() {\n        return sum;\n    }\n\n    public void setSum(Double sum) {\n        this.sum = sum;\n    }\n}\n"]}
{"filename": "src/main/java/com/cursework/WebArtSell/Models/User.java", "chunked_list": ["package com.cursework.WebArtSell.Models;\n\nimport jakarta.persistence.*;\n\nimport java.time.LocalDateTime;\n\n@Entity\n@Table(name = \"users\")\npublic class User {\n    @Id\n    @GeneratedValue(strategy = GenerationType.AUTO)\n    private Long id;\n\n    @Column(unique = true, nullable = false)\n    private String email;\n\n    @Column(unique = true, nullable = false)\n    private String login;\n\n    @Column(nullable = false)\n    private String password;\n\n    @Column(nullable = false)\n    private String role;\n    @Column(nullable = false)\n    private LocalDateTime creationDate;\n    @Column(nullable = false)\n    private String status;\n", "public class User {\n    @Id\n    @GeneratedValue(strategy = GenerationType.AUTO)\n    private Long id;\n\n    @Column(unique = true, nullable = false)\n    private String email;\n\n    @Column(unique = true, nullable = false)\n    private String login;\n\n    @Column(nullable = false)\n    private String password;\n\n    @Column(nullable = false)\n    private String role;\n    @Column(nullable = false)\n    private LocalDateTime creationDate;\n    @Column(nullable = false)\n    private String status;\n", "    public LocalDateTime getCreationDate() {\n        return creationDate;\n    }\n\n    public void setCreationDate(LocalDateTime creationDate) {\n        this.creationDate = creationDate;\n    }\n\n    public String getStatus() {\n        return status;\n    }\n", "    public String getStatus() {\n        return status;\n    }\n\n    public void setStatus(String status) {\n        this.status = status;\n    }\n\n    public Long getId() {\n        return id;\n    }\n", "    public Long getId() {\n        return id;\n    }\n\n    public void setId(Long id) {\n        this.id = id;\n    }\n\n    public String getEmail() {\n        return email;\n    }\n", "    public String getEmail() {\n        return email;\n    }\n\n    public void setEmail(String email) {\n        this.email = email;\n    }\n\n    public String getLogin() {\n        return login;\n    }\n", "    public String getLogin() {\n        return login;\n    }\n\n    public void setLogin(String login) {\n        this.login = login;\n    }\n\n    public String getPassword() {\n        return password;\n    }\n", "    public String getPassword() {\n        return password;\n    }\n\n    public void setPassword(String password) {\n        this.password = password;\n    }\n\n    public String getRole() {\n        return role;\n    }\n", "    public String getRole() {\n        return role;\n    }\n\n    public void setRole(String role) {\n        this.role = role;\n    }\n}"]}
{"filename": "src/main/java/com/cursework/WebArtSell/Models/Transaction.java", "chunked_list": ["package com.cursework.WebArtSell.Models;\n\nimport jakarta.persistence.*;\nimport org.springframework.data.annotation.Id;\n\nimport java.time.LocalDateTime;\n\n@Entity\n@Table(name = \"transaction\")\npublic class Transaction {\n\n    @jakarta.persistence.Id\n    @Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    private Long id;\n\n    @Column(name = \"buyer_id\")\n    private Long buyerId;\n\n    @Column(name = \"purchase_date\")\n    private LocalDateTime purchaseDate;\n\n    @Column(name = \"seller_id\")\n    private Long sellerId;\n\n    @Column(name = \"sum\")\n    private Double sum;\n\n    @Column(name = \"product_id\")\n    private Long productId;\n", "@Table(name = \"transaction\")\npublic class Transaction {\n\n    @jakarta.persistence.Id\n    @Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    private Long id;\n\n    @Column(name = \"buyer_id\")\n    private Long buyerId;\n\n    @Column(name = \"purchase_date\")\n    private LocalDateTime purchaseDate;\n\n    @Column(name = \"seller_id\")\n    private Long sellerId;\n\n    @Column(name = \"sum\")\n    private Double sum;\n\n    @Column(name = \"product_id\")\n    private Long productId;\n", "    public Long getProductId() {\n        return productId;\n    }\n\n    public void setProductId(Long productId) {\n        this.productId = productId;\n    }\n\n    public Long getId() {\n        return id;\n    }\n", "    public Long getId() {\n        return id;\n    }\n\n    public void setId(Long id) {\n        this.id = id;\n    }\n\n    public LocalDateTime getPurchaseDate() {\n        return purchaseDate;\n    }\n", "    public LocalDateTime getPurchaseDate() {\n        return purchaseDate;\n    }\n\n    public void setPurchaseDate(LocalDateTime purchaseDate) {\n        this.purchaseDate = purchaseDate;\n    }\n\n    public Double getSum() {\n        return sum;\n    }\n", "    public Double getSum() {\n        return sum;\n    }\n\n    public void setSum(Double sum) {\n        this.sum = sum;\n    }\n\n    public Long getBuyerId() {\n        return buyerId;\n    }\n", "    public Long getBuyerId() {\n        return buyerId;\n    }\n\n    public void setBuyerId(Long buyerId) {\n        this.buyerId = buyerId;\n    }\n\n    public Long getSellerId() {\n        return sellerId;\n    }\n", "    public Long getSellerId() {\n        return sellerId;\n    }\n\n    public void setSellerId(Long sellerId) {\n        this.sellerId = sellerId;\n    }\n}\n"]}
{"filename": "src/main/java/com/cursework/WebArtSell/Models/Product.java", "chunked_list": ["package com.cursework.WebArtSell.Models;\n\nimport jakarta.persistence.Entity;\nimport jakarta.persistence.GeneratedValue;\nimport jakarta.persistence.GenerationType;\nimport jakarta.persistence.ManyToOne;\nimport org.springframework.data.annotation.Id;\n\nimport java.math.BigDecimal;\nimport java.time.LocalDateTime;", "import java.math.BigDecimal;\nimport java.time.LocalDateTime;\n\n@Entity\npublic class Product {\n    @jakarta.persistence.Id\n    @Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    private Long id;\n    private String name;\n    private String imageUrl;\n    private String description;\n    private BigDecimal price;\n    private String artist;\n    private String dimensions;\n    private String category;\n    @ManyToOne\n    private User createdBy;\n    private boolean disableButton;\n", "    public boolean isDisableButton() {\n        return disableButton;\n    }\n\n    public void setDisableButton(boolean disableButton) {\n        this.disableButton = disableButton;\n    }\n\n    public User getCreatedBy() {\n        return createdBy;\n    }\n", "    public User getCreatedBy() {\n        return createdBy;\n    }\n\n    public void setCreatedBy(User createdBy) {\n        this.createdBy = createdBy;\n    }\n\n    private LocalDateTime creationDate;\n\n    public LocalDateTime getCreationDate() {\n        return creationDate;\n    }\n", "    public LocalDateTime getCreationDate() {\n        return creationDate;\n    }\n\n    public void setCreationDate(LocalDateTime creationDate) {\n        this.creationDate = creationDate;\n    }\n\n    public String getCategory() {\n        return category;\n    }\n", "    public String getCategory() {\n        return category;\n    }\n\n    public void setCategory(String category) {\n        this.category = category;\n    }\n\n    public Long getId() {\n        return id;\n    }\n", "    public Long getId() {\n        return id;\n    }\n\n    public void setId(Long id) {\n        this.id = id;\n    }\n\n    public String getName() {\n        return name;\n    }\n", "    public String getName() {\n        return name;\n    }\n\n    public void setName(String name) {\n        this.name = name;\n    }\n\n    public String getImageUrl() {\n        return imageUrl;\n    }\n", "    public String getImageUrl() {\n        return imageUrl;\n    }\n\n    public void setImageUrl(String imageUrl) {\n        this.imageUrl = imageUrl;\n    }\n\n    public String getDescription() {\n        return description;\n    }\n", "    public String getDescription() {\n        return description;\n    }\n\n    public void setDescription(String description) {\n        this.description = description;\n    }\n\n    public BigDecimal getPrice() {\n        return price;\n    }\n", "    public BigDecimal getPrice() {\n        return price;\n    }\n\n    public void setPrice(BigDecimal price) {\n        this.price = price;\n    }\n\n    public String getArtist() {\n        return artist;\n    }\n", "    public String getArtist() {\n        return artist;\n    }\n\n    public void setArtist(String artist) {\n        this.artist = artist;\n    }\n\n    public String getDimensions() {\n        return dimensions;\n    }\n", "    public String getDimensions() {\n        return dimensions;\n    }\n\n    public void setDimensions(String dimensions) {\n        this.dimensions = dimensions;\n    }\n\n}\n"]}
{"filename": "src/main/java/com/cursework/WebArtSell/Models/Comment.java", "chunked_list": ["package com.cursework.WebArtSell.Models;\n\nimport jakarta.persistence.*;\n\nimport java.time.LocalDateTime;\n\n@Entity\npublic class Comment {\n    @Id\n    @GeneratedValue(strategy = GenerationType.AUTO)\n    private Long id;\n\n    private String text;\n\n    @ManyToOne\n    @JoinColumn(name = \"user_id\")\n    private User user;\n\n    @ManyToOne\n    @JoinColumn(name = \"product_id\")\n    private Product product;\n\n    private LocalDateTime creationDate;\n", "    public Long getId() {\n        return id;\n    }\n\n    public void setId(Long id) {\n        this.id = id;\n    }\n\n    public String getText() {\n        return text;\n    }\n", "    public String getText() {\n        return text;\n    }\n\n    public void setText(String text) {\n        this.text = text;\n    }\n\n    public User getUser() {\n        return user;\n    }\n", "    public User getUser() {\n        return user;\n    }\n\n    public void setUser(User user) {\n        this.user = user;\n    }\n\n    public Product getProduct() {\n        return product;\n    }\n", "    public Product getProduct() {\n        return product;\n    }\n\n    public void setProduct(Product product) {\n        this.product = product;\n    }\n\n    public LocalDateTime getCreationDate() {\n        return creationDate;\n    }\n", "    public LocalDateTime getCreationDate() {\n        return creationDate;\n    }\n\n    public void setCreationDate(LocalDateTime creationDate) {\n        this.creationDate = creationDate;\n    }\n}"]}
{"filename": "src/main/java/com/cursework/WebArtSell/Repositories/TransactionRepository.java", "chunked_list": ["package com.cursework.WebArtSell.Repositories;\n\nimport com.cursework.WebArtSell.Models.Transaction;\nimport com.cursework.WebArtSell.Models.TransactionChartData;\nimport org.springframework.data.jpa.repository.JpaRepository;\nimport org.springframework.data.jpa.repository.Query;\n\nimport java.util.List;\n\npublic interface TransactionRepository extends JpaRepository<Transaction, Long> {\n    @Query(\"SELECT new com.cursework.WebArtSell.Models.TransactionChartData(FUNCTION('DATE_FORMAT', t.purchaseDate, '%Y-%m-%d'), SUM(t.sum)) \" +\n            \"FROM Transaction t GROUP BY FUNCTION('DATE_FORMAT', t.purchaseDate, '%Y-%m-%d') ORDER BY FUNCTION('DATE_FORMAT', t.purchaseDate, '%Y-%m-%d') ASC\")\n    List<TransactionChartData> findTransactionChartData();\n\n    List<Transaction> findAllByProductId(Long productId);\n}\n", "\npublic interface TransactionRepository extends JpaRepository<Transaction, Long> {\n    @Query(\"SELECT new com.cursework.WebArtSell.Models.TransactionChartData(FUNCTION('DATE_FORMAT', t.purchaseDate, '%Y-%m-%d'), SUM(t.sum)) \" +\n            \"FROM Transaction t GROUP BY FUNCTION('DATE_FORMAT', t.purchaseDate, '%Y-%m-%d') ORDER BY FUNCTION('DATE_FORMAT', t.purchaseDate, '%Y-%m-%d') ASC\")\n    List<TransactionChartData> findTransactionChartData();\n\n    List<Transaction> findAllByProductId(Long productId);\n}\n"]}
{"filename": "src/main/java/com/cursework/WebArtSell/Repositories/CommentRepository.java", "chunked_list": ["package com.cursework.WebArtSell.Repositories;\n\nimport com.cursework.WebArtSell.Models.Comment;\nimport org.springframework.data.jpa.repository.JpaRepository;\n\nimport java.util.List;\n\npublic interface CommentRepository extends JpaRepository<Comment, Long> {\n    List<Comment> findByProductId(Long productId);\n}\n"]}
{"filename": "src/main/java/com/cursework/WebArtSell/Repositories/UserRepository.java", "chunked_list": ["package com.cursework.WebArtSell.Repositories;\n\nimport com.cursework.WebArtSell.Models.User;\nimport org.springframework.data.jpa.repository.JpaRepository;\n\nimport java.util.Optional;\n\npublic interface UserRepository extends JpaRepository<User, Long> {\n    Optional<User> findByEmailAndPassword(String email, String password);\n}"]}
{"filename": "src/main/java/com/cursework/WebArtSell/Repositories/ProductRepository.java", "chunked_list": ["package com.cursework.WebArtSell.Repositories;\n\nimport com.cursework.WebArtSell.Models.Product;\nimport org.springframework.data.jpa.repository.JpaRepository;\n\nimport java.util.List;\n\npublic interface ProductRepository extends JpaRepository<Product, Long> {\n    List<Product> findByCategory(String category);\n\n}\n"]}
{"filename": "src/main/java/com/cursework/WebArtSell/Controllers/AuthorisationController.java", "chunked_list": ["package com.cursework.WebArtSell.Controllers;\n\nimport com.cursework.WebArtSell.Models.User;\nimport com.cursework.WebArtSell.Repositories.UserRepository;\nimport jakarta.servlet.http.HttpServletRequest;\nimport jakarta.servlet.http.HttpSession;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Controller;\nimport org.springframework.ui.Model;\nimport org.springframework.web.bind.annotation.GetMapping;", "import org.springframework.ui.Model;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.PostMapping;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RequestParam;\n\nimport java.util.Optional;\n\n\n@Controller", "\n@Controller\n@RequestMapping(\"/authorisation\")\npublic class AuthorisationController {\n    @Autowired\n    private UserRepository userRepository;\n\n    @GetMapping\n    public String getAllUsers(Model model) {\n        model.addAttribute(\"users\", userRepository.findAll());\n        return \"authorisation\";\n    }\n\n    @PostMapping", "    public String getAllUsers(Model model) {\n        model.addAttribute(\"users\", userRepository.findAll());\n        return \"authorisation\";\n    }\n\n    @PostMapping\n    public String userLogin(@RequestParam String email,\n                            @RequestParam String password,\n                            Model model,\n                            HttpServletRequest request) {\n        Optional<User> optionalUser = userRepository.findByEmailAndPassword(email, password);", "        if (optionalUser.isPresent()) {\n            User user = optionalUser.get();\n            HttpSession session = request.getSession();\n            session.setAttribute(\"user\", user);\n            if (user.getRole().equals(\"ADMIN\")) {\n                return \"redirect:/table-users\";\n            } else {\n                return \"redirect:/main-user\";\n            }\n        } else {\n            model.addAttribute(\"error\", \"\u041d\u0435\u0432\u0435\u0440\u043d\u044b\u0439 email \u0438\u043b\u0438 \u043f\u0430\u0440\u043e\u043b\u044c\");\n            return \"authorisation\";\n        }\n    }\n\n}\n"]}
{"filename": "src/main/java/com/cursework/WebArtSell/Controllers/TransactionController.java", "chunked_list": ["package com.cursework.WebArtSell.Controllers;\n\n\nimport com.cursework.WebArtSell.Models.Product;\nimport com.cursework.WebArtSell.Models.Transaction;\nimport com.cursework.WebArtSell.Models.TransactionChartData;\nimport com.cursework.WebArtSell.Models.User;\nimport com.cursework.WebArtSell.Repositories.ProductRepository;\nimport com.cursework.WebArtSell.Repositories.TransactionRepository;\nimport com.cursework.WebArtSell.Services.TransactionService;", "import com.cursework.WebArtSell.Repositories.TransactionRepository;\nimport com.cursework.WebArtSell.Services.TransactionService;\nimport jakarta.servlet.http.HttpServletRequest;\nimport jakarta.servlet.http.HttpSession;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Controller;\nimport org.springframework.ui.Model;\nimport org.springframework.web.bind.annotation.*;\n\nimport java.time.LocalDateTime;", "\nimport java.time.LocalDateTime;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.Optional;\n\n@Controller\npublic class TransactionController {\n\n    @Autowired\n    private TransactionService transactionService;\n\n    @Autowired\n    private TransactionRepository transactionRepository;\n\n    @Autowired\n    private ProductRepository productRepository;\n\n    @GetMapping(\"/billing/{id}\")", "    public String authorisationModel(@PathVariable Long id, Model model, HttpServletRequest request) {\n        Optional<Product> product = productRepository.findById(id);\n\n        if (product.isPresent()) {\n            model.addAttribute(\"product\", product.get());\n\n            Transaction transaction = new Transaction();\n\n            HttpSession session = request.getSession();\n            User buyer = (User) session.getAttribute(\"user\");\n            transaction.setBuyerId(buyer.getId());\n            transaction.setSellerId(product.get().getCreatedBy().getId());\n            transaction.setPurchaseDate(LocalDateTime.now());\n            transaction.setSum(product.get().getPrice().doubleValue());\n            transaction.setProductId(product.get().getId());\n\n            model.addAttribute(\"transaction\", transaction);\n            model.addAttribute(\"productId\", product.get().getId());\n        } else {\n            return \"redirect:/billing\";\n        }\n\n        return \"billing\";\n    }\n\n\n\n\n    @PostMapping(\"/billing-buy\")", "    public String processTransaction(@ModelAttribute Transaction transaction, @RequestParam(\"productId\") Long productId, Model model, HttpServletRequest request) {\n        try {\n            System.out.println(transaction.getBuyerId());\n            System.out.println(transaction.getSellerId());\n            System.out.println(transaction.getPurchaseDate());\n            System.out.println(transaction.getSum());\n\n            transactionRepository.save(transaction);\n\n            Optional<Product> product = productRepository.findById(productId);\n            if (product.isPresent()) {\n                model.addAttribute(\"product\", product.get());\n            } else {\n                return \"redirect:/main-user\";\n            }\n\n        } catch (Exception e) {\n            model.addAttribute(\"error\", \"\u041e\u0448\u0438\u0431\u043a\u0430\");\n            model.addAttribute(\"transaction\", new Transaction());\n            Optional<Product> product = productRepository.findById(productId);", "            if (product.isPresent()) {\n                model.addAttribute(\"product\", product.get());\n            } else {\n                return \"redirect:/main-user\";\n            }\n\n        } catch (Exception e) {\n            model.addAttribute(\"error\", \"\u041e\u0448\u0438\u0431\u043a\u0430\");\n            model.addAttribute(\"transaction\", new Transaction());\n            Optional<Product> product = productRepository.findById(productId);\n            if (product.isPresent()) {\n                model.addAttribute(\"product\", product.get());\n                HttpSession session = request.getSession();\n                User buyer = (User) session.getAttribute(\"user\");\n                transaction.setBuyerId(buyer.getId());\n                transaction.setSellerId(product.get().getCreatedBy().getId());\n                transaction.setPurchaseDate(LocalDateTime.now());\n                transaction.setSum(product.get().getPrice().doubleValue());\n                transaction.setProductId(product.get().getId());\n            }\n            return \"billing\";\n        }\n\n        return \"redirect:/main-user\";\n    }\n    @GetMapping(\"/api/transactions\")\n    public List<Transaction> getTransactions() {\n        return transactionRepository.findAll();\n    }\n\n    @GetMapping(\"/api/transactionChartData\")\n    public List<TransactionChartData> getTransactionChartData() {\n        List<TransactionChartData> chartData = transactionRepository.findTransactionChartData();\n        System.out.println(chartData);\n        return chartData;\n    }\n\n    @GetMapping(\"/table-transactions\")", "            if (product.isPresent()) {\n                model.addAttribute(\"product\", product.get());\n                HttpSession session = request.getSession();\n                User buyer = (User) session.getAttribute(\"user\");\n                transaction.setBuyerId(buyer.getId());\n                transaction.setSellerId(product.get().getCreatedBy().getId());\n                transaction.setPurchaseDate(LocalDateTime.now());\n                transaction.setSum(product.get().getPrice().doubleValue());\n                transaction.setProductId(product.get().getId());\n            }\n            return \"billing\";\n        }\n\n        return \"redirect:/main-user\";\n    }\n    @GetMapping(\"/api/transactions\")\n    public List<Transaction> getTransactions() {\n        return transactionRepository.findAll();\n    }\n\n    @GetMapping(\"/api/transactionChartData\")\n    public List<TransactionChartData> getTransactionChartData() {\n        List<TransactionChartData> chartData = transactionRepository.findTransactionChartData();\n        System.out.println(chartData);\n        return chartData;\n    }\n\n    @GetMapping(\"/table-transactions\")", "    public String transactions(Model model) {\n        List<Transaction> transactions = transactionService.findAll();\n        Map<String, Double> chartData = transactionService.getMonthlySalesData();\n        model.addAttribute(\"transactions\", transactions);\n        model.addAttribute(\"chartData\", chartData);\n        return \"table-transactions\";\n    }\n}\n"]}
{"filename": "src/main/java/com/cursework/WebArtSell/Controllers/UserController.java", "chunked_list": ["package com.cursework.WebArtSell.Controllers;\n\nimport com.cursework.WebArtSell.Models.User;\nimport com.cursework.WebArtSell.Repositories.UserRepository;\nimport jakarta.servlet.http.HttpSession;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Controller;\nimport org.springframework.ui.Model;\nimport org.springframework.web.bind.annotation.*;\nimport java.util.Optional;", "import org.springframework.web.bind.annotation.*;\nimport java.util.Optional;\n\n@Controller\n@RequestMapping(\"/table-users\")\npublic class UserController {\n    @Autowired\n    private UserRepository userRepository;\n\n    @GetMapping\n    public String getAllUsers(Model model, HttpSession session) {\n        Iterable<User> users = userRepository.findAll();\n        User currentUser = (User) session.getAttribute(\"user\");\n        model.addAttribute(\"users\", users);\n        model.addAttribute(\"currentUser\", currentUser);\n        model.addAttribute(\"statuses\", new String[]{\"\u041f\u0440\u043e\u0432\u0435\u0440\u0435\u043d\u043d\u044b\u0439\", \"\u041d\u0435\u043f\u0440\u043e\u0432\u0435\u0440\u0435\u043d\u043d\u044b\u0439\"});\n        model.addAttribute(\"roles\", new String[]{\"ADMIN\", \"USER\"});\n        return \"table-users\";\n    }\n\n    @PostMapping(\"/edit/{id}\")", "    public String getAllUsers(Model model, HttpSession session) {\n        Iterable<User> users = userRepository.findAll();\n        User currentUser = (User) session.getAttribute(\"user\");\n        model.addAttribute(\"users\", users);\n        model.addAttribute(\"currentUser\", currentUser);\n        model.addAttribute(\"statuses\", new String[]{\"\u041f\u0440\u043e\u0432\u0435\u0440\u0435\u043d\u043d\u044b\u0439\", \"\u041d\u0435\u043f\u0440\u043e\u0432\u0435\u0440\u0435\u043d\u043d\u044b\u0439\"});\n        model.addAttribute(\"roles\", new String[]{\"ADMIN\", \"USER\"});\n        return \"table-users\";\n    }\n\n    @PostMapping(\"/edit/{id}\")", "    public String editUser(@PathVariable(\"id\") Long id, @ModelAttribute User user, HttpSession session) {\n        User currentUser = (User) session.getAttribute(\"user\");\n        if (!currentUser.getId().equals(id)) {\n            Optional<User> optUser = userRepository.findById(id);\n            if (optUser.isPresent()) {\n                User existUser = optUser.get();\n                existUser.setLogin(user.getLogin());\n                existUser.setEmail(user.getEmail());\n                existUser.setStatus(user.getStatus());\n                existUser.setRole(user.getRole());\n                userRepository.save(existUser);\n            }\n        }\n        return \"redirect:/table-users\";\n    }\n\n    @PostMapping(\"/delete/{id}\")", "    public String deleteUser(@PathVariable(\"id\") Long id, HttpSession session) {\n        User currentUser = (User) session.getAttribute(\"user\");\n        if (!currentUser.getId().equals(id)) {\n            userRepository.deleteById(id);\n        }\n        return \"redirect:/table-users\";\n    }\n}\n"]}
{"filename": "src/main/java/com/cursework/WebArtSell/Controllers/ProductController.java", "chunked_list": ["package com.cursework.WebArtSell.Controllers;\n\nimport com.cursework.WebArtSell.Models.Comment;\nimport com.cursework.WebArtSell.Models.Product;\nimport com.cursework.WebArtSell.Models.User;\nimport com.cursework.WebArtSell.Repositories.CommentRepository;\nimport com.cursework.WebArtSell.Repositories.ProductRepository;\nimport jakarta.servlet.http.HttpServletRequest;\nimport jakarta.servlet.http.HttpSession;\nimport org.springframework.beans.factory.annotation.Autowired;", "import jakarta.servlet.http.HttpSession;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Controller;\nimport org.springframework.ui.Model;\nimport org.springframework.web.bind.annotation.*;\n\nimport java.time.LocalDateTime;\nimport java.util.List;\nimport java.util.Optional;\n", "import java.util.Optional;\n\n@Controller\n@RequestMapping(\"/table-products\")\npublic class ProductController {\n    @Autowired\n    private ProductRepository productRepository;\n    @Autowired\n    private CommentRepository commentRepository;\n\n    @GetMapping", "    public String getAllProducts(Model model) {\n        List<Product> products = productRepository.findAll();\n        model.addAttribute(\"products\", products);\n        return \"table-products\";\n    }\n\n    @GetMapping(\"/add\")\n    public String addAnnouncement() {\n        return \"product-add\";\n    }\n\n    @PostMapping(\"/add\")", "    public String createProduct(@ModelAttribute Product product, HttpServletRequest request) {\n        HttpSession session = request.getSession();\n        User user = (User) session.getAttribute(\"user\");\n        product.setCreatedBy(user);\n        product.setCreationDate(LocalDateTime.now());\n        productRepository.save(product);\n        return \"redirect:/main-user\";\n    }\n\n    @GetMapping(\"/{id}\")\n    public String getProductById(@PathVariable long id, Model model) {\n        Optional<Product> product = productRepository.findById(id);", "    public String getProductById(@PathVariable long id, Model model) {\n        Optional<Product> product = productRepository.findById(id);\n        if (product.isPresent()) {\n            List<Comment> comments = commentRepository.findByProductId(id);\n            model.addAttribute(\"product\", product.get());\n            model.addAttribute(\"comments\", comments);\n            return \"product-details\";\n        }\n        return \"redirect:/table-products\";\n    }\n\n\n    @GetMapping(\"/{id}/edit\")", "    public String editProduct(@PathVariable long id, Model model) {\n        Optional<Product> product = productRepository.findById(id);\n        if (product.isPresent()) {\n            model.addAttribute(\"product\", product.get());\n            return \"product-edit\";\n        }\n        return \"redirect:/table-products\";\n    }\n\n    @PostMapping(\"/{id}/edit\")\n    public String updateProduct(@PathVariable long id, @ModelAttribute Product updatedProduct) {\n        Product product = productRepository.findById(id).orElseThrow();\n        product.setName(updatedProduct.getName());\n        product.setDescription(updatedProduct.getDescription());\n        product.setImageUrl(updatedProduct.getImageUrl());\n        product.setPrice(updatedProduct.getPrice());\n        product.setArtist(updatedProduct.getArtist());\n        product.setDimensions(updatedProduct.getDimensions());\n        productRepository.save(product);\n        return \"redirect:/table-products\";\n    }\n\n    @PostMapping(\"/{id}/remove\")", "    public String updateProduct(@PathVariable long id, @ModelAttribute Product updatedProduct) {\n        Product product = productRepository.findById(id).orElseThrow();\n        product.setName(updatedProduct.getName());\n        product.setDescription(updatedProduct.getDescription());\n        product.setImageUrl(updatedProduct.getImageUrl());\n        product.setPrice(updatedProduct.getPrice());\n        product.setArtist(updatedProduct.getArtist());\n        product.setDimensions(updatedProduct.getDimensions());\n        productRepository.save(product);\n        return \"redirect:/table-products\";\n    }\n\n    @PostMapping(\"/{id}/remove\")", "    public String deleteProduct(@PathVariable long id) {\n        productRepository.deleteById(id);\n        return \"redirect:/table-products\";\n    }\n\n}\n"]}
{"filename": "src/main/java/com/cursework/WebArtSell/Controllers/HomeController.java", "chunked_list": ["package com.cursework.WebArtSell.Controllers;\n\nimport com.cursework.WebArtSell.Models.Product;\nimport com.cursework.WebArtSell.Models.User;\nimport com.cursework.WebArtSell.Services.ProductService;\nimport com.cursework.WebArtSell.Services.TransactionService;\nimport jakarta.servlet.http.HttpServletRequest;\nimport jakarta.servlet.http.HttpSession;\nimport org.springframework.stereotype.Controller;\nimport org.springframework.ui.Model;", "import org.springframework.stereotype.Controller;\nimport org.springframework.ui.Model;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.PathVariable;\n\nimport java.util.List;\n\n@Controller\npublic class HomeController {\n    private final ProductService productService;\n    private final TransactionService transactionService;\n\n    public HomeController(ProductService productService, TransactionService transactionService) {\n        this.productService = productService;\n        this.transactionService = transactionService;\n    }\n\n    @GetMapping(\"/main-user\")", "public class HomeController {\n    private final ProductService productService;\n    private final TransactionService transactionService;\n\n    public HomeController(ProductService productService, TransactionService transactionService) {\n        this.productService = productService;\n        this.transactionService = transactionService;\n    }\n\n    @GetMapping(\"/main-user\")\n    public String getMainUserPage(Model model, HttpServletRequest request) {\n        HttpSession session = request.getSession();\n        User user = (User) session.getAttribute(\"user\");\n\n        List<Product> products = productService.findAll();\n        Long currentUserId = user.getId();", "    public String getMainUserPage(Model model, HttpServletRequest request) {\n        HttpSession session = request.getSession();\n        User user = (User) session.getAttribute(\"user\");\n\n        List<Product> products = productService.findAll();\n        Long currentUserId = user.getId();\n        for (Product product : products) {\n            if (transactionService.isProductInTransactions(product)) {\n                product.setDescription(\"\u042d\u0442\u043e\u0442 \u0442\u043e\u0432\u0430\u0440 \u0443\u0436\u0435 \u043f\u0440\u043e\u0434\u0430\u043d!\");\n                product.setDisableButton(true);\n            }", "            if (product.getCreatedBy().getId().equals(currentUserId)) {\n                product.setDescription(\"\u042d\u0442\u043e \u0432\u0430\u0448\u0435 \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u0435!\");\n                product.setDisableButton(true);\n            }\n        }\n        model.addAttribute(\"products\", products);\n        return \"main-user\";\n    }\n\n    @GetMapping(\"/\")\n    public String home(Model model) {\n        List<Product> products = productService.findAll();\n        model.addAttribute(\"products\", products);\n        return \"main\";\n    }\n\n    @GetMapping(\"/main-user/category/{category}\")", "    public String home(Model model) {\n        List<Product> products = productService.findAll();\n        model.addAttribute(\"products\", products);\n        return \"main\";\n    }\n\n    @GetMapping(\"/main-user/category/{category}\")\n    public String getMainUserPageByCategory(@PathVariable String category, Model model, HttpServletRequest request) {\n        HttpSession session = request.getSession();\n        User user = (User) session.getAttribute(\"user\");\n        if (user == null) {\n            return \"redirect:/authorisation\";\n        }\n\n        List<Product> products = productService.findAllByCategory(category);\n        Long currentUserId = user.getId();", "        if (user == null) {\n            return \"redirect:/authorisation\";\n        }\n\n        List<Product> products = productService.findAllByCategory(category);\n        Long currentUserId = user.getId();\n        for (Product product : products) {\n            if (transactionService.isProductInTransactions(product)) {\n                product.setDescription(\"\u042d\u0442\u043e\u0442 \u0442\u043e\u0432\u0430\u0440 \u0443\u0436\u0435 \u043f\u0440\u043e\u0434\u0430\u043d!\");\n                product.setDisableButton(true);\n            }", "            if (product.getCreatedBy().getId().equals(currentUserId)) {\n                product.setDescription(\"\u042d\u0442\u043e \u0432\u0430\u0448\u0435 \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u0435!\");\n                product.setDisableButton(true);\n            }\n        }\n        model.addAttribute(\"products\", products);\n        return \"main-user\";\n    }\n}\n"]}
{"filename": "src/main/java/com/cursework/WebArtSell/Controllers/CommentController.java", "chunked_list": ["package com.cursework.WebArtSell.Controllers;\n\nimport com.cursework.WebArtSell.Models.Comment;\nimport com.cursework.WebArtSell.Models.Product;\nimport com.cursework.WebArtSell.Models.User;\nimport com.cursework.WebArtSell.Repositories.CommentRepository;\nimport com.cursework.WebArtSell.Repositories.ProductRepository;\nimport jakarta.servlet.http.HttpServletRequest;\nimport jakarta.servlet.http.HttpSession;\nimport org.springframework.beans.factory.annotation.Autowired;", "import jakarta.servlet.http.HttpSession;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Controller;\nimport org.springframework.web.bind.annotation.*;\n\nimport java.time.LocalDateTime;\n\n@Controller\n@RequestMapping(\"/table-products/{productId}/comments\")\npublic class CommentController {\n    @Autowired\n    private CommentRepository commentRepository;\n\n    @Autowired\n    private ProductRepository productRepository;\n\n    @PostMapping(\"/add\")", "@RequestMapping(\"/table-products/{productId}/comments\")\npublic class CommentController {\n    @Autowired\n    private CommentRepository commentRepository;\n\n    @Autowired\n    private ProductRepository productRepository;\n\n    @PostMapping(\"/add\")\n    public String addComment(@PathVariable long productId, @ModelAttribute Comment comment, HttpServletRequest request) {\n        HttpSession session = request.getSession();\n        User user = (User) session.getAttribute(\"user\");\n        Product product = productRepository.findById(productId).orElseThrow();\n        comment.setUser(user);\n        comment.setProduct(product);\n        comment.setCreationDate(LocalDateTime.now());\n        commentRepository.save(comment);\n        return \"redirect:/table-products/\" + productId;\n    }\n}\n", "    public String addComment(@PathVariable long productId, @ModelAttribute Comment comment, HttpServletRequest request) {\n        HttpSession session = request.getSession();\n        User user = (User) session.getAttribute(\"user\");\n        Product product = productRepository.findById(productId).orElseThrow();\n        comment.setUser(user);\n        comment.setProduct(product);\n        comment.setCreationDate(LocalDateTime.now());\n        commentRepository.save(comment);\n        return \"redirect:/table-products/\" + productId;\n    }\n}\n"]}
{"filename": "src/main/java/com/cursework/WebArtSell/Controllers/RegistrationController.java", "chunked_list": ["package com.cursework.WebArtSell.Controllers;\n\nimport com.cursework.WebArtSell.Models.User;\nimport com.cursework.WebArtSell.Repositories.UserRepository;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Controller;\nimport org.springframework.ui.Model;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.PostMapping;\nimport org.springframework.web.bind.annotation.RequestMapping;", "import org.springframework.web.bind.annotation.PostMapping;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RequestParam;\n\nimport java.time.LocalDateTime;\n\n@Controller\n@RequestMapping(\"/registration\")\npublic class RegistrationController {\n    @Autowired\n    private UserRepository userRepository;\n\n    @GetMapping", "public class RegistrationController {\n    @Autowired\n    private UserRepository userRepository;\n\n    @GetMapping\n    public String getAllUsers(Model model) {\n        model.addAttribute(\"users\", userRepository.findAll());\n        return \"registration\";\n    }\n\n    @PostMapping", "    public String registerUser(@RequestParam String name, @RequestParam String email, @RequestParam String password,\n                               @RequestParam String confirm_password, Model model) {\n        if (!password.equals(confirm_password)) {\n            model.addAttribute(\"error\", \"\u041f\u0430\u0440\u043e\u043b\u0438 \u043d\u0435 \u0441\u043e\u0432\u043f\u0430\u0434\u0430\u044e\u0442!\");\n            return \"registration\";\n        }\n\n        User user = new User();\n        user.setLogin(name);\n        user.setEmail(email);\n        user.setPassword(password);\n        user.setRole(\"USER\");\n        user.setCreationDate(LocalDateTime.now());\n        user.setStatus(\"\u0410\u043a\u0442\u0438\u0432\u043d\u044b\u0439\");\n        userRepository.save(user);\n\n        return \"redirect:/authorisation\";\n    }\n\n}\n"]}
{"filename": "src/main/java/com/cursework/WebArtSell/Secure/UserCheckInterceptor.java", "chunked_list": ["package com.cursework.WebArtSell.Secure;\n\nimport jakarta.servlet.http.HttpServletRequest;\nimport jakarta.servlet.http.HttpServletResponse;\nimport jakarta.servlet.http.HttpSession;\nimport org.springframework.web.servlet.HandlerInterceptor;\n\nimport com.cursework.WebArtSell.Models.User;\n\npublic class UserCheckInterceptor implements HandlerInterceptor {\n\n    @Override", "\npublic class UserCheckInterceptor implements HandlerInterceptor {\n\n    @Override\n    public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler)\n            throws Exception {\n        HttpSession session = request.getSession();\n        User user = (User) session.getAttribute(\"user\");\n        if (user == null || !user.getRole().equals(\"USER\")) {\n            response.sendRedirect(\"/authorisation\");\n            return false;\n        }\n        return true;\n    }\n}\n", "        if (user == null || !user.getRole().equals(\"USER\")) {\n            response.sendRedirect(\"/authorisation\");\n            return false;\n        }\n        return true;\n    }\n}\n"]}
{"filename": "src/main/java/com/cursework/WebArtSell/Secure/RoleCheckInterceptor.java", "chunked_list": ["package com.cursework.WebArtSell.Secure;\n\nimport jakarta.servlet.http.HttpServletRequest;\nimport jakarta.servlet.http.HttpServletResponse;\nimport jakarta.servlet.http.HttpSession;\nimport org.springframework.web.servlet.HandlerInterceptor;\n\nimport com.cursework.WebArtSell.Models.User;\n\npublic class RoleCheckInterceptor implements HandlerInterceptor {\n\n    @Override", "\npublic class RoleCheckInterceptor implements HandlerInterceptor {\n\n    @Override\n    public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler)\n            throws Exception {\n        HttpSession session = request.getSession();\n        User user = (User) session.getAttribute(\"user\");\n        if (user == null || !user.getRole().equals(\"ADMIN\")) {\n            response.sendRedirect(\"/authorisation\");\n            return false;\n        }\n        return true;\n    }\n}\n\n", "        if (user == null || !user.getRole().equals(\"ADMIN\")) {\n            response.sendRedirect(\"/authorisation\");\n            return false;\n        }\n        return true;\n    }\n}\n\n"]}
{"filename": "src/main/java/com/cursework/WebArtSell/Secure/WebMvcConfig.java", "chunked_list": ["package com.cursework.WebArtSell.Secure;\n\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.web.servlet.config.annotation.InterceptorRegistry;\nimport org.springframework.web.servlet.config.annotation.WebMvcConfigurer;\n\n@Configuration\npublic class WebMvcConfig implements WebMvcConfigurer {\n\n    @Override\n    public void addInterceptors(InterceptorRegistry registry) {\n        registry.addInterceptor(new RoleCheckInterceptor()).addPathPatterns(\"/table-users\", \"/table-transactions\", \"/table-products\", \"/product-edit\");\n        registry.addInterceptor(new UserCheckInterceptor()).addPathPatterns(\"/billing/**\", \"/table-products/add\", \"/product-details/**\", \"/main-user\", \"/table-products/*\");\n    }\n\n}\n", "    public void addInterceptors(InterceptorRegistry registry) {\n        registry.addInterceptor(new RoleCheckInterceptor()).addPathPatterns(\"/table-users\", \"/table-transactions\", \"/table-products\", \"/product-edit\");\n        registry.addInterceptor(new UserCheckInterceptor()).addPathPatterns(\"/billing/**\", \"/table-products/add\", \"/product-details/**\", \"/main-user\", \"/table-products/*\");\n    }\n\n}\n"]}
