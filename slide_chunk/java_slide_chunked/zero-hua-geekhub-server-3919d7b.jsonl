{"filename": "src/test/java/ink/geekhub/server/ServerApplicationTests.java", "chunked_list": ["package ink.geekhub.server;\n\nimport org.elasticsearch.action.admin.indices.create.CreateIndexRequest;\nimport org.elasticsearch.action.admin.indices.create.CreateIndexResponse;\nimport org.elasticsearch.client.RequestOptions;\nimport org.elasticsearch.client.RestHighLevelClient;\nimport org.junit.jupiter.api.Test;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.boot.test.context.SpringBootTest;\n", "import org.springframework.boot.test.context.SpringBootTest;\n\nimport java.io.IOException;\n\n@SpringBootTest\nclass ServerApplicationTests {\n\n    @Autowired\n    public RestHighLevelClient client;\n\n\n    // \u6d4b\u8bd5\u7d22\u5f15\u7684\u521b\u5efa\uff0c Request PUT liuyou_index\n    @Test", "    public RestHighLevelClient client;\n\n\n    // \u6d4b\u8bd5\u7d22\u5f15\u7684\u521b\u5efa\uff0c Request PUT liuyou_index\n    @Test\n    public void testCreateIndex() throws IOException {\n        CreateIndexRequest request = new CreateIndexRequest(\"yixin_index\");\n        CreateIndexResponse response = client.indices().create(request, RequestOptions.DEFAULT);\n        //   System.out.println(response);\n        System.out.println(response.isAcknowledged());// \u67e5\u770b\u662f\u5426\u521b\u5efa\u6210\u529f\n        System.out.println(response);// \u67e5\u770b\u8fd4\u56de\u5bf9\u8c61\n        client.close();\n    }\n\n\n}\n"]}
{"filename": "src/main/java/ink/geekhub/server/ServerApplication.java", "chunked_list": ["package ink.geekhub.server;\n\nimport org.mybatis.spring.annotation.MapperScan;\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\n\n@SpringBootApplication\n@MapperScan(\"ink.geekhub.server.mapper\")\npublic class ServerApplication {\n\n    public static void main(String[] args) {\n        SpringApplication.run(ServerApplication.class, args);\n\n    }\n\n}\n", "public class ServerApplication {\n\n    public static void main(String[] args) {\n        SpringApplication.run(ServerApplication.class, args);\n\n    }\n\n}\n"]}
{"filename": "src/main/java/ink/geekhub/server/vo/ResultVO.java", "chunked_list": ["package ink.geekhub.server.vo;\n\nimport lombok.Getter;\nimport lombok.Setter;\nimport lombok.ToString;\n\n/**\n * @author linghua\n */\n@Getter", " */\n@Getter\n@ToString\n@Setter\npublic class ResultVO<T> {\n\n    /**\n     * \u9519\u8bef\u7801\n     * 0 \u8bf7\u6c42\u6210\u529f\n     * 1 \u8bf7\u6c42\u4e0d\u6210\u529f\n     * 2 \u670d\u52a1\u5668\u95ee\u9898\n     */\n    private final Integer code;\n\n    private final String msg;\n\n    private final T data;\n\n    public ResultVO(Integer code, String msg, T data) {\n        this.code = code;\n        this.msg = msg;\n        this.data = data;\n    }\n\n    public ResultVO(ReturnCode code, T data) {\n        this.code = code.getCode();\n        this.msg = code.getMsg();\n        this.data = data;\n    }\n\n    public ResultVO(T data) {\n        this(ReturnCode.SUCCESS, data);\n    }\n", "    public static ResultVO<Object> success(Object data) {\n        return new ResultVO<Object>(0, \"\u8bf7\u6c42\u6210\u529f\", data);\n    }\n}\n"]}
{"filename": "src/main/java/ink/geekhub/server/vo/ReturnCode.java", "chunked_list": ["package ink.geekhub.server.vo;\n\nimport lombok.Getter;\n\n/**\n * \u8fd4\u56de\u72b6\u6001\u7801\n * @author linghua\n */\n@Getter\npublic enum ReturnCode {\n\n    SUCCESS(200, \"\u64cd\u4f5c\u6210\u529f\"),\n    FAILURE(500, \"\u64cd\u4f5c\u5931\u8d25\"),\n    VALIDATE_FAILED(404, \"\u53c2\u6570\u6821\u9a8c\u5931\u8d25\"),\n    UNAUTHORIZED(401, \"\u672a\u767b\u5f55\u6216\u767b\u5f55\u8fc7\u671f\"),\n    FORBIDDEN(403, \"\u6ca1\u6709\u64cd\u4f5c\u6743\u9650\");\n\n    private final int code;\n\n    private final String msg;\n\n    ReturnCode(int code, String msg) {\n        this.code = code;\n        this.msg = msg;\n    }\n}\n", "@Getter\npublic enum ReturnCode {\n\n    SUCCESS(200, \"\u64cd\u4f5c\u6210\u529f\"),\n    FAILURE(500, \"\u64cd\u4f5c\u5931\u8d25\"),\n    VALIDATE_FAILED(404, \"\u53c2\u6570\u6821\u9a8c\u5931\u8d25\"),\n    UNAUTHORIZED(401, \"\u672a\u767b\u5f55\u6216\u767b\u5f55\u8fc7\u671f\"),\n    FORBIDDEN(403, \"\u6ca1\u6709\u64cd\u4f5c\u6743\u9650\");\n\n    private final int code;\n\n    private final String msg;\n\n    ReturnCode(int code, String msg) {\n        this.code = code;\n        this.msg = msg;\n    }\n}\n"]}
{"filename": "src/main/java/ink/geekhub/server/entity/User.java", "chunked_list": ["package ink.geekhub.server.entity;\n\nimport com.fasterxml.jackson.annotation.JsonIgnore;\nimport lombok.Data;\nimport org.hibernate.validator.constraints.Length;\nimport org.hibernate.validator.constraints.URL;\nimport javax.validation.constraints.Email;\nimport javax.validation.constraints.NotNull;\nimport java.util.Calendar;\nimport java.util.Date;", "import java.util.Calendar;\nimport java.util.Date;\n\n/**\n * @author linghua\n */\n@Data\npublic class User {\n    @JsonIgnore\n    @NotNull(message = \"\u7528\u6237ID\u4e0d\u80fd\u4e3a\u7a7a\uff01\")\n    private Long id;\n\n    @NotNull(message = \"\u7528\u6237\u540d\u4e0d\u80fd\u4e3a\u7a7a\uff01\")\n    private String username;\n\n    @NotNull(message = \"\u90ae\u7bb1\u4e0d\u80fd\u4e3a\u7a7a\uff01\")\n    @Email\n    private String email;\n\n    @NotNull(message = \"\u5bc6\u7801\u4e0d\u80fd\u4e3a\u7a7a\uff01\")\n    @JsonIgnore\n    private String password;\n\n    @JsonIgnore\n    private String salt;\n\n    private Date signupDate;\n\n    @Length(message = \"\u516c\u53f8\u540d\u957f\u5ea62-20\u4e2a\u5b57\u7b26\", min = 2, max = 20)\n    private String company;\n\n    @Length(message = \"\u4f4d\u7f6e\u957f\u5ea62-20\u5b57\u7b26\", min = 2, max = 20)\n    private String location;\n\n    @URL(message = \"\u65e0\u6548\u7684website\")\n    private String website;\n\n    @Length(message = \"QQ\u53f7\u957f\u5ea6\u4e0d\u6b63\u786e\", min = 6, max = 14)\n    private String qq;\n\n    @Length(message = \"motto\u957f\u5ea6\u8fc7\u957f\", max = 200)\n    private String motto;\n}\n"]}
{"filename": "src/main/java/ink/geekhub/server/entity/Comment.java", "chunked_list": ["package ink.geekhub.server.entity;\n\nimport lombok.Data;\n\nimport java.util.Calendar;\n\n/**\n * @author linghua\n */\n@Data\npublic class Comment {\n    private Long id;\n\n    private Long uid;\n\n    private Long aId;\n\n    private String content;\n\n    private Calendar createTime;\n}\n", " */\n@Data\npublic class Comment {\n    private Long id;\n\n    private Long uid;\n\n    private Long aId;\n\n    private String content;\n\n    private Calendar createTime;\n}\n"]}
{"filename": "src/main/java/ink/geekhub/server/entity/Article.java", "chunked_list": ["package ink.geekhub.server.entity;\n\nimport lombok.Data;\nimport org.springframework.data.annotation.Id;\nimport org.springframework.data.elasticsearch.annotations.Document;\nimport org.springframework.data.elasticsearch.annotations.Field;\nimport org.springframework.data.elasticsearch.annotations.FieldType;\n\nimport java.util.Calendar;\n", "import java.util.Calendar;\n\n/**\n * @author linghua\n */\n@Data\n// indexName \u7d22\u5f15\u5e93\u7684\u540d\u79f0\n@Document(indexName = \"geekhub_article\", createIndex = true, type = \"article\")\npublic class Article {\n    @Id\n    @Field(type = FieldType.Long)\n    private Long id;\n\n    private Long uid;\n\n    private String title;\n\n    private String content;\n\n    private Calendar createTime;\n\n    private Integer likeCount;\n\n    private Integer collectCount;\n\n    private Integer commentCount;\n}\n", "public class Article {\n    @Id\n    @Field(type = FieldType.Long)\n    private Long id;\n\n    private Long uid;\n\n    private String title;\n\n    private String content;\n\n    private Calendar createTime;\n\n    private Integer likeCount;\n\n    private Integer collectCount;\n\n    private Integer commentCount;\n}\n"]}
{"filename": "src/main/java/ink/geekhub/server/repository/ArticleRepository.java", "chunked_list": ["package ink.geekhub.server.repository;\n\n/**\n * @author linghua\n */\npublic interface ArticleRepository {\n}\n"]}
{"filename": "src/main/java/ink/geekhub/server/utils/MailService.java", "chunked_list": ["package ink.geekhub.server.utils;\n\nimport org.springframework.beans.factory.annotation.Value;\nimport org.springframework.mail.SimpleMailMessage;\nimport org.springframework.mail.javamail.JavaMailSender;\nimport org.springframework.stereotype.Service;\n\nimport javax.annotation.Resource;\n\n/**", "\n/**\n * @author linghua\n */\n@Service\npublic class MailService {\n\n    @Value(\"${spring.mail.username}\")\n    private String from;\n\n    @Resource\n    private JavaMailSender mailSender;\n", "    public void sendVerifyCodeEmail(String to, String code) {\n        SimpleMailMessage message = new SimpleMailMessage();\n        message.setTo(to);\n        message.setSubject(\"\u6d4b\u8bd5\u4e3b\u9898\");\n        message.setText(code);\n        message.setFrom(from);\n        mailSender.send(message);\n    }\n}\n"]}
{"filename": "src/main/java/ink/geekhub/server/utils/RandomCodeService.java", "chunked_list": ["package ink.geekhub.server.utils;\n\n/**\n * \u63d0\u4f9b\u968f\u673a\u9a8c\u8bc1\u7801\n * @author linghua\n */\npublic class RandomCodeService {\n\n    public static String getRandomCode() {\n        long l1 = System.currentTimeMillis();\n        long l2 = l1 % 1000000;\n        String s = String .valueOf(l2);", "    public static String getRandomCode() {\n        long l1 = System.currentTimeMillis();\n        long l2 = l1 % 1000000;\n        String s = String .valueOf(l2);\n        if (s.length() == 5) {\n            s += \"0\";\n        }\n        return s;\n    }\n}\n"]}
{"filename": "src/main/java/ink/geekhub/server/utils/HttpContextUtil.java", "chunked_list": ["package ink.geekhub.server.utils;\n\nimport org.elasticsearch.action.get.GetRequest;\nimport org.springframework.web.context.request.RequestContextHolder;\nimport org.springframework.web.context.request.ServletRequestAttributes;\n\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpSession;\nimport java.util.Objects;\n", "import java.util.Objects;\n\n/**\n * @author linghua\n */\npublic class HttpContextUtil {\n\n    public static HttpServletRequest getRequest() {\n        return ((ServletRequestAttributes) Objects.requireNonNull(RequestContextHolder.getRequestAttributes())).getRequest();\n    }\n", "    public static HttpSession getSession() {\n        HttpServletRequest request = getRequest();\n        return request.getSession();\n    }\n\n    public static void setAttributeToSession(String name, Object data) {\n        getSession().setAttribute(name, data);\n    }\n\n    public static Object getAttributeFromInSession(String name) {\n        return getSession().getAttribute(name);\n    }\n\n}\n", "    public static Object getAttributeFromInSession(String name) {\n        return getSession().getAttribute(name);\n    }\n\n}\n"]}
{"filename": "src/main/java/ink/geekhub/server/config/ElasticSearchRestClientConfig.java", "chunked_list": ["package ink.geekhub.server.config;\n\nimport org.elasticsearch.client.RestHighLevelClient;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.data.elasticsearch.client.ClientConfiguration;\nimport org.springframework.data.elasticsearch.client.RestClients;\nimport org.springframework.data.elasticsearch.config.AbstractElasticsearchConfiguration;\n\n/**\n * elasticSearch\u5ba2\u6237\u7aef\u914d\u7f6e\u7c7b", "/**\n * elasticSearch\u5ba2\u6237\u7aef\u914d\u7f6e\u7c7b\n * @author linghua\n */\n@Configuration\npublic class ElasticSearchRestClientConfig extends AbstractElasticsearchConfiguration {\n    @Override\n    public RestHighLevelClient elasticsearchClient() {\n        final ClientConfiguration clientConfiguration =\n                ClientConfiguration.builder()\n                        .connectedTo(\"localhost:9200\")\n                        .build();\n        return RestClients.create(clientConfiguration).rest();\n    }\n}\n"]}
{"filename": "src/main/java/ink/geekhub/server/config/MybatisPlusConfig.java", "chunked_list": ["package ink.geekhub.server.config;\n\nimport com.baomidou.mybatisplus.annotation.DbType;\nimport com.baomidou.mybatisplus.extension.plugins.MybatisPlusInterceptor;\nimport com.baomidou.mybatisplus.extension.plugins.inner.PaginationInnerInterceptor;\nimport org.mybatis.spring.annotation.MapperScan;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\n\n/**", "\n/**\n * MybatisPlus\u914d\u7f6e\u7c7b\n * @author linghua\n */\n@Configuration\n@MapperScan(\"ink.geekhub.server.mapper\")\npublic class MybatisPlusConfig {\n    @Bean\n    public MybatisPlusInterceptor mybatisPlusInterceptor() {\n        MybatisPlusInterceptor interceptor = new MybatisPlusInterceptor();\n        interceptor.addInnerInterceptor(new PaginationInnerInterceptor(DbType.MYSQL));\n        return interceptor;\n    }\n}\n", "    public MybatisPlusInterceptor mybatisPlusInterceptor() {\n        MybatisPlusInterceptor interceptor = new MybatisPlusInterceptor();\n        interceptor.addInnerInterceptor(new PaginationInnerInterceptor(DbType.MYSQL));\n        return interceptor;\n    }\n}\n"]}
{"filename": "src/main/java/ink/geekhub/server/config/CorsConfig.java", "chunked_list": ["package ink.geekhub.server.config;\n\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.web.servlet.config.annotation.CorsRegistry;\nimport org.springframework.web.servlet.config.annotation.WebMvcConfigurer;\n\n/**\n * @author linghua\n */\n//@Configuration\npublic class CorsConfig{\n}\n", " */\n//@Configuration\npublic class CorsConfig{\n}\n"]}
{"filename": "src/main/java/ink/geekhub/server/controller/UserController.java", "chunked_list": ["package ink.geekhub.server.controller;\n\nimport com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;\nimport ink.geekhub.server.entity.User;\nimport ink.geekhub.server.service.IUserService;\nimport ink.geekhub.server.utils.MailService;\nimport org.apache.shiro.SecurityUtils;\nimport org.apache.shiro.session.Session;\nimport org.springframework.validation.annotation.Validated;\nimport org.springframework.web.bind.annotation.*;", "import org.springframework.validation.annotation.Validated;\nimport org.springframework.web.bind.annotation.*;\n\nimport javax.annotation.Resource;\nimport java.util.List;\n\n/**\n * @author linghua\n */\n@RestController", " */\n@RestController\n@RequestMapping(\"/api\")\n@Validated\npublic class UserController {\n\n    @Resource\n    private IUserService userService;\n\n    @Resource\n    private MailService mailService;\n\n    @GetMapping(\"/user/{account}\")", "    public User findUser(@PathVariable String account) {\n        return userService.getOne(new QueryWrapper<User>(){{\n            eq(\"username\", account).or().eq(\"email\", account);\n        }});\n    }\n\n    @PutMapping(\"/user\")\n    public void updateUser(User user) {\n        Session session = SecurityUtils.getSubject().getSession();\n    }\n\n    @GetMapping(\"/users\")\n    public List<User> getAll() {\n        return userService.list();\n    }\n}\n"]}
{"filename": "src/main/java/ink/geekhub/server/controller/ArticleController.java", "chunked_list": ["package ink.geekhub.server.controller;\n\nimport com.baomidou.mybatisplus.extension.plugins.pagination.Page;\nimport ink.geekhub.server.entity.Article;\nimport ink.geekhub.server.service.IArticleService;\nimport org.springframework.web.bind.annotation.*;\n\nimport javax.annotation.Resource;\nimport javax.validation.Valid;\nimport java.util.List;", "import javax.validation.Valid;\nimport java.util.List;\n\n/**\n * @author linghua\n */\n@RestController\n@RequestMapping(\"/api\")\npublic class ArticleController {\n\n    @Resource\n    private IArticleService articleService;\n\n    @PostMapping(\"/article\")", "public class ArticleController {\n\n    @Resource\n    private IArticleService articleService;\n\n    @PostMapping(\"/article\")\n    public Boolean saveArticle(Article article) {\n        return articleService.save(article);\n    }\n\n    @GetMapping(\"/article/{id}\")", "    public Article getArticleById(@PathVariable Integer id) {\n        Article article = articleService.getById(id);\n        return article;\n    }\n\n    @GetMapping(\"/article/new\")\n    public List<Article> getNewArticle(int current) {\n        //\u6bcf\u987510\u6761\n        Page<Article> page = new Page<>(current, 10);\n        return articleService.selectNewArticle(page).getRecords();\n    }\n\n    @PutMapping(\"/article\")", "    public Boolean updateArticle(@Valid Article article) {\n        return articleService.updateById(article);\n    }\n\n    @DeleteMapping(\"/article/{id}\")\n    public Boolean deleteArticle(@PathVariable Integer id) {\n        return articleService.removeById(id);\n    }\n}\n"]}
{"filename": "src/main/java/ink/geekhub/server/controller/CommentController.java", "chunked_list": ["package ink.geekhub.server.controller;\n\nimport ink.geekhub.server.service.ICommentService;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RestController;\n\n/**\n * @author linghua\n */\n@RestController", " */\n@RestController\n@RequestMapping(\"/api\")\npublic class CommentController {\n\n    private ICommentService commentService;\n}\n"]}
{"filename": "src/main/java/ink/geekhub/server/controller/AccountController.java", "chunked_list": ["package ink.geekhub.server.controller;\n\nimport com.baomidou.mybatisplus.core.conditions.Wrapper;\nimport com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;\nimport ink.geekhub.server.controller.vo.LoginVO;\nimport ink.geekhub.server.controller.vo.SignupVO;\nimport ink.geekhub.server.entity.User;\nimport ink.geekhub.server.service.IUserService;\nimport ink.geekhub.server.utils.HttpContextUtil;\nimport ink.geekhub.server.utils.MailService;", "import ink.geekhub.server.utils.HttpContextUtil;\nimport ink.geekhub.server.utils.MailService;\nimport ink.geekhub.server.utils.RandomCodeService;\nimport lombok.extern.slf4j.Slf4j;\nimport org.apache.shiro.SecurityUtils;\nimport org.apache.shiro.authc.UsernamePasswordToken;\nimport org.apache.shiro.session.Session;\nimport org.apache.shiro.subject.Subject;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.validation.annotation.Validated;", "import org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.validation.annotation.Validated;\nimport org.springframework.web.bind.annotation.*;\n\nimport javax.servlet.http.HttpSession;\nimport javax.validation.Valid;\nimport javax.validation.constraints.Email;\nimport java.util.HashMap;\nimport java.util.Map;\n", "import java.util.Map;\n\n/**\n * \u5904\u7406\u767b\u5f55\u6a21\u5757\n * @author linghua\n */\n@Validated\n@RestController\n@RequestMapping(\"/api\")\n@Slf4j\npublic class AccountController {\n\n    @Autowired\n    private IUserService userService;\n\n    @Autowired\n    private MailService mailService;\n\n    @PostMapping(\"/signup\")", "@RequestMapping(\"/api\")\n@Slf4j\npublic class AccountController {\n\n    @Autowired\n    private IUserService userService;\n\n    @Autowired\n    private MailService mailService;\n\n    @PostMapping(\"/signup\")", "    public String signup(@Valid @RequestBody SignupVO signupVO) {\n        System.out.println(signupVO);\n        String verifyCode = (String) HttpContextUtil.getAttributeFromInSession(\"verifyCode\");\n        if (!verifyCode.equals(signupVO.getVerifyCode())) {\n            return \"\u9a8c\u8bc1\u7801\u4e0d\u6b63\u786e\uff0c\u6ce8\u518c\u5931\u8d25\";\n        }\n        QueryWrapper<User> queryWrapper = new QueryWrapper<>();\n        queryWrapper.eq(\"email\", signupVO.getEmail());\n        User user = userService.getOne(queryWrapper);\n        if (user != null ) {\n            return \"\u8be5\u90ae\u7bb1\u5df2\u6ce8\u518c\";\n        }\n        userService.save(signupVO);\n        return \"\u6ce8\u518c\u6210\u529f\";\n    }\n\n    /**\n     * \u9700\u8981\u89e3\u51b3\u540e\u53f0\u9a8c\u8bc1\u7801\u91cd\u590d\u8bf7\u6c42\u95ee\u9898\n     * @param email\n     * @return\n     */\n    @GetMapping(\"/sendVerifyCode\")", "        if (user != null ) {\n            return \"\u8be5\u90ae\u7bb1\u5df2\u6ce8\u518c\";\n        }\n        userService.save(signupVO);\n        return \"\u6ce8\u518c\u6210\u529f\";\n    }\n\n    /**\n     * \u9700\u8981\u89e3\u51b3\u540e\u53f0\u9a8c\u8bc1\u7801\u91cd\u590d\u8bf7\u6c42\u95ee\u9898\n     * @param email\n     * @return\n     */\n    @GetMapping(\"/sendVerifyCode\")", "    public String sendVerifyCode(@Valid @Email @RequestParam(name = \"email\") String email) {\n        String code = RandomCodeService.getRandomCode();\n        mailService.sendVerifyCodeEmail(email, code);\n        HttpContextUtil.setAttributeToSession(\"verifyCode\", code);\n        log.info(\"\u53d1\u9001\u9a8c\u8bc1\u7801\uff1a\" + code + \"\u5230---> \" + email);\n        return \"\u53d1\u9001\u6210\u529f\uff0c\u8bf7\u6ce8\u610f\u67e5\u6536\";\n    }\n\n    @PostMapping(\"/login\")\n    public User login(@RequestBody @Valid LoginVO loginVO) {\n        Subject subject = SecurityUtils.getSubject();\n        UsernamePasswordToken token = new UsernamePasswordToken(loginVO.getUsername(), loginVO.getPassword());\n        subject.login(token);\n        User user = userService.getOne(new QueryWrapper<User>(){{\n            eq(\"email\", loginVO.getUsername());\n        }});\n        System.out.println(user);\n        HttpContextUtil.setAttributeToSession(\"currentUser\", user);\n        return user;\n    }\n\n    @GetMapping(\"/logout\")", "    public User login(@RequestBody @Valid LoginVO loginVO) {\n        Subject subject = SecurityUtils.getSubject();\n        UsernamePasswordToken token = new UsernamePasswordToken(loginVO.getUsername(), loginVO.getPassword());\n        subject.login(token);\n        User user = userService.getOne(new QueryWrapper<User>(){{\n            eq(\"email\", loginVO.getUsername());\n        }});\n        System.out.println(user);\n        HttpContextUtil.setAttributeToSession(\"currentUser\", user);\n        return user;\n    }\n\n    @GetMapping(\"/logout\")", "    public String logout() {\n        Subject subject = SecurityUtils.getSubject();\n        subject.logout();\n        return \"\u8d26\u53f7\u5df2\u9000\u51fa\";\n    }\n\n    @DeleteMapping(\"\")\n    public String deleteAccount() {\n        return \"\";\n    }\n}\n"]}
{"filename": "src/main/java/ink/geekhub/server/controller/vo/SignupVO.java", "chunked_list": ["package ink.geekhub.server.controller.vo;\n\nimport lombok.Data;\n\nimport javax.validation.constraints.Email;\nimport javax.validation.constraints.NotNull;\nimport javax.validation.constraints.Size;\n\n/**\n * @author linghua", "/**\n * @author linghua\n */\n@Data\npublic class SignupVO {\n    @NotNull\n    @Size(min = 1, max = 50)\n    private String username;\n\n    @NotNull\n    @Email\n    private String email;\n\n    @NotNull\n    @Size(min = 4, max = 100)\n    private String password;\n\n    @NotNull\n    @Size(min = 4, max = 6)\n    private String verifyCode;\n}\n"]}
{"filename": "src/main/java/ink/geekhub/server/controller/vo/LoginVO.java", "chunked_list": ["package ink.geekhub.server.controller.vo;\n\nimport lombok.Data;\n\nimport javax.validation.constraints.NotNull;\nimport javax.validation.constraints.Size;\n\n/**\n * @author linghua\n */", " * @author linghua\n */\n@Data\npublic class LoginVO {\n    @NotNull\n    @Size(min = 1, max = 50)\n    private String username;\n\n    @NotNull\n    @Size(min = 4, max = 100)\n    private String password;\n\n    private Boolean rememberMe;\n}\n"]}
{"filename": "src/main/java/ink/geekhub/server/controller/common/ResponseControllerAdvice.java", "chunked_list": ["package ink.geekhub.server.controller.common;\n\nimport com.fasterxml.jackson.core.JsonProcessingException;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport ink.geekhub.server.exception.ApiException;\nimport ink.geekhub.server.vo.ResultVO;\nimport org.springframework.core.MethodParameter;\nimport org.springframework.http.MediaType;\nimport org.springframework.http.converter.HttpMessageConverter;\nimport org.springframework.http.server.ServerHttpRequest;", "import org.springframework.http.converter.HttpMessageConverter;\nimport org.springframework.http.server.ServerHttpRequest;\nimport org.springframework.http.server.ServerHttpResponse;\nimport org.springframework.web.bind.annotation.RestControllerAdvice;\nimport org.springframework.web.servlet.mvc.method.annotation.ResponseBodyAdvice;\n\n/**\n * \u5168\u5c40\u8fd4\u56de\u5305\u88c5ResultVO\u5904\u7406\u7c7b\n * @author linghua\n */", " * @author linghua\n */\n@RestControllerAdvice(basePackages = \"ink.geekhub.server.controller\")\npublic class ResponseControllerAdvice implements ResponseBodyAdvice<Object> {\n\n    @Override\n    public boolean supports(MethodParameter methodParameter, Class<? extends HttpMessageConverter<?>> aClass) {\n        //\u5982\u679c\u63a5\u53e3\u8fd4\u56de\u503c\u7c7b\u578b\u672c\u8eab\u5c31\u662fResultVO\u5c31\u6ca1\u6709\u5fc5\u8981\u8fdb\u884c\u989d\u5916\u7684\u64cd\u4f5c\uff0c\u8fd4\u56defalse\n        return !methodParameter.getGenericParameterType().equals(ResultVO.class);\n    }\n\n    @Override", "    public Object beforeBodyWrite(Object data,\n                                  MethodParameter methodParameter,\n                                  MediaType mediaType,\n                                  Class<? extends HttpMessageConverter<?>> aClass,\n                                  ServerHttpRequest serverHttpRequest,\n                                  ServerHttpResponse serverHttpResponse) {\n        System.out.println(\"\u6267\u884c\u5c01\u88c5\u903b\u8f91\");\n        //\u6ce8\u610f\uff1abeforeBodyWrite\u65b9\u6cd5\u91cc\u5305\u88c5\u6570\u636e\u65e0\u6cd5\u5bf9String\u7c7b\u578b\u7684\u6570\u636e\u76f4\u63a5\u8fdb\u884c\u5f3a\u8f6c\uff0c\u6240\u4ee5\u8981\u8fdb\u884c\u7279\u6b8a\u5904\u7406\uff0c\u8fd9\u91cc\u4e0d\u8bb2\u8fc7\u591a\u7684\u7ec6\u8282\uff0c\u6709\u5174\u8da3\u53ef\u4ee5\u81ea\u884c\u6df1\u5165\u4e86\u89e3\u3002\n        if (methodParameter.getParameterType().equals(String.class)) {\n            ObjectMapper objectMapper = new ObjectMapper();\n            try {\n                return objectMapper.writeValueAsString(new ResultVO<>(data));\n            } catch (JsonProcessingException e) {\n                throw new ApiException(\"\u5904\u7406String\u7c7b\u578b\u5f02\u5e38\");\n            }\n        }\n        // \u5c06\u539f\u672c\u7684\u6570\u636e\u5305\u88c5\u5728ResultVO\u91cc\n        return new ResultVO<>(data);\n    }\n}\n", "        if (methodParameter.getParameterType().equals(String.class)) {\n            ObjectMapper objectMapper = new ObjectMapper();\n            try {\n                return objectMapper.writeValueAsString(new ResultVO<>(data));\n            } catch (JsonProcessingException e) {\n                throw new ApiException(\"\u5904\u7406String\u7c7b\u578b\u5f02\u5e38\");\n            }\n        }\n        // \u5c06\u539f\u672c\u7684\u6570\u636e\u5305\u88c5\u5728ResultVO\u91cc\n        return new ResultVO<>(data);\n    }\n}\n"]}
{"filename": "src/main/java/ink/geekhub/server/controller/common/ExceptionControllerAdvice.java", "chunked_list": ["package ink.geekhub.server.controller.common;\n\nimport ink.geekhub.server.anno.ExceptionCode;\nimport ink.geekhub.server.exception.ApiException;\nimport ink.geekhub.server.vo.ResultVO;\nimport ink.geekhub.server.vo.ReturnCode;\nimport org.springframework.web.bind.MethodArgumentNotValidException;\nimport org.springframework.web.bind.annotation.ExceptionHandler;\nimport org.springframework.web.bind.annotation.RestControllerAdvice;\n", "import org.springframework.web.bind.annotation.RestControllerAdvice;\n\nimport java.lang.reflect.Field;\n\n/**\n * \u5168\u5c40\u5f02\u5e38\u5904\u7406\u7c7b\n * @author linghua\n */\n@RestControllerAdvice\npublic class ExceptionControllerAdvice {\n\n    /**\n     * \u5904\u7406\u53c2\u6570\u6821\u9a8c\u5f02\u5e38\n     */\n    @ExceptionHandler(MethodArgumentNotValidException.class)\n    public ResultVO<String> methodArgumentNotValidExceptionHandler(MethodArgumentNotValidException e) throws NoSuchFieldException {\n        //\u4ece\u5f02\u5e38\u5bf9\u8c61\u4e2d\u62ff\u5230\u9519\u8bef\u4fe1\u606f\n        String defaultMessage = e.getBindingResult().getAllErrors().get(0).getDefaultMessage();\n        //\u53c2\u6570\u7684Class\u5bf9\u8c61\uff0c \u7b49\u4e0b\u901a\u8fc7\u5b57\u6bb5\u540d\u5b57\u83b7\u53d6Field\u5bf9\u8c61\n        Class parameterType = e.getParameter().getParameterType();\n        //\u62ff\u5230\u9519\u8bef\u7684\u5b57\u6bb5\u540d\u79f0\n        String fieldName = e.getBindingResult().getFieldError().getField();\n        Field field = parameterType.getDeclaredField(fieldName);\n        //\u83b7\u53d6Field\u5bf9\u8c61\u4e0a\u7684\u81ea\u5b9a\u4e49\u6ce8\u89e3\n        ExceptionCode exceptionCode = field.getAnnotation(ExceptionCode.class);\n\n        //\u88ab\u81ea\u5b9a\u4e49\u6ce8\u89e3\u7684\u8bdd\u5c31\u8fd4\u56de\u6ce8\u89e3\u7684\u54cd\u5e94\u4fe1\u606f", "@RestControllerAdvice\npublic class ExceptionControllerAdvice {\n\n    /**\n     * \u5904\u7406\u53c2\u6570\u6821\u9a8c\u5f02\u5e38\n     */\n    @ExceptionHandler(MethodArgumentNotValidException.class)\n    public ResultVO<String> methodArgumentNotValidExceptionHandler(MethodArgumentNotValidException e) throws NoSuchFieldException {\n        //\u4ece\u5f02\u5e38\u5bf9\u8c61\u4e2d\u62ff\u5230\u9519\u8bef\u4fe1\u606f\n        String defaultMessage = e.getBindingResult().getAllErrors().get(0).getDefaultMessage();\n        //\u53c2\u6570\u7684Class\u5bf9\u8c61\uff0c \u7b49\u4e0b\u901a\u8fc7\u5b57\u6bb5\u540d\u5b57\u83b7\u53d6Field\u5bf9\u8c61\n        Class parameterType = e.getParameter().getParameterType();\n        //\u62ff\u5230\u9519\u8bef\u7684\u5b57\u6bb5\u540d\u79f0\n        String fieldName = e.getBindingResult().getFieldError().getField();\n        Field field = parameterType.getDeclaredField(fieldName);\n        //\u83b7\u53d6Field\u5bf9\u8c61\u4e0a\u7684\u81ea\u5b9a\u4e49\u6ce8\u89e3\n        ExceptionCode exceptionCode = field.getAnnotation(ExceptionCode.class);\n\n        //\u88ab\u81ea\u5b9a\u4e49\u6ce8\u89e3\u7684\u8bdd\u5c31\u8fd4\u56de\u6ce8\u89e3\u7684\u54cd\u5e94\u4fe1\u606f", "        if (exceptionCode == null) {\n            return new ResultVO<>(exceptionCode.value(), exceptionCode.msg(), defaultMessage);\n        }\n        //\u6ca1\u6709\u5c31\u8fd4\u56de\u9ed8\u8ba4\u7684\u7edf\u4e00\u7684\u9519\u8bef\u4fe1\u606f\n        return new ResultVO<>(ReturnCode.FAILURE, defaultMessage);\n    }\n\n    /**\n     * api\u5f02\u5e38\n     */\n    @ExceptionHandler(ApiException.class)\n    public ResultVO<String> apiExceptionHandler(ApiException e) {\n        return new ResultVO<>(ReturnCode.VALIDATE_FAILED, e.getMsg());\n    }\n}\n"]}
{"filename": "src/main/java/ink/geekhub/server/shiro/UserRealm.java", "chunked_list": ["package ink.geekhub.server.shiro;\n\nimport com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;\nimport ink.geekhub.server.entity.User;\nimport ink.geekhub.server.mapper.UserMapper;\nimport org.apache.shiro.authc.*;\nimport org.apache.shiro.authz.AuthorizationInfo;\nimport org.apache.shiro.realm.AuthorizingRealm;\nimport org.apache.shiro.subject.PrincipalCollection;\nimport org.apache.shiro.util.ByteSource;", "import org.apache.shiro.subject.PrincipalCollection;\nimport org.apache.shiro.util.ByteSource;\nimport org.springframework.beans.factory.annotation.Autowired;\n\n/**\n * @program: book-of-geek\n * @description: \u7528\u6237\u5b89\u5168\u7684Realm\n * @author: zerohua\n * @create: 2020-05-18 18:31\n **/\npublic class UserRealm extends AuthorizingRealm {\n\n    @Autowired\n    UserMapper userMapper;\n\n    //\u6388\u6743\n    @Override\n    protected AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principalCollection) {\n        return null;\n    }\n\n    /**\n     * \u8ba4\u8bc1\n     * @param authenticationToken\n     * @return\n     */\n    @Override\n    protected AuthenticationInfo doGetAuthenticationInfo(AuthenticationToken authenticationToken) {\n        UsernamePasswordToken token = (UsernamePasswordToken) authenticationToken;\n        User user = userMapper.selectOne(new QueryWrapper<User>(){{\n            eq(\"email\", token.getUsername());\n        }});", " * @create: 2020-05-18 18:31\n **/\npublic class UserRealm extends AuthorizingRealm {\n\n    @Autowired\n    UserMapper userMapper;\n\n    //\u6388\u6743\n    @Override\n    protected AuthorizationInfo doGetAuthorizationInfo(PrincipalCollection principalCollection) {\n        return null;\n    }\n\n    /**\n     * \u8ba4\u8bc1\n     * @param authenticationToken\n     * @return\n     */\n    @Override\n    protected AuthenticationInfo doGetAuthenticationInfo(AuthenticationToken authenticationToken) {\n        UsernamePasswordToken token = (UsernamePasswordToken) authenticationToken;\n        User user = userMapper.selectOne(new QueryWrapper<User>(){{\n            eq(\"email\", token.getUsername());\n        }});", "        if(user == null){\n            throw new AuthenticationException(\"sorry\uff0c\u7528\u6237\u4e0d\u5b58\u5728\uff01\");\n        }\n        return new SimpleAuthenticationInfo(\n                user.getUsername(),\n                user.getPassword(),\n                ByteSource.Util.bytes(user.getSalt()),\n                getName()\n        );\n    }\n}\n"]}
{"filename": "src/main/java/ink/geekhub/server/shiro/ShiroConfig.java", "chunked_list": ["package ink.geekhub.server.shiro;\n\nimport lombok.extern.slf4j.Slf4j;\nimport org.apache.shiro.authc.credential.CredentialsMatcher;\nimport org.apache.shiro.authc.credential.HashedCredentialsMatcher;\nimport org.apache.shiro.mgt.SessionsSecurityManager;\nimport org.apache.shiro.realm.Realm;\nimport org.apache.shiro.spring.web.ShiroFilterFactoryBean;\nimport org.apache.shiro.web.mgt.DefaultWebSecurityManager;\nimport org.apache.shiro.web.mgt.WebSecurityManager;", "import org.apache.shiro.web.mgt.DefaultWebSecurityManager;\nimport org.apache.shiro.web.mgt.WebSecurityManager;\nimport org.springframework.beans.factory.annotation.Qualifier;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\n\nimport javax.servlet.Filter;\nimport java.util.LinkedHashMap;\nimport java.util.Map;", "import java.util.LinkedHashMap;\nimport java.util.Map;\n\n\n/**\n * @author linghua\n */\n@Configuration\n@Slf4j\npublic class ShiroConfig {\n\n    @Bean", "@Slf4j\npublic class ShiroConfig {\n\n    @Bean\n    public Realm getRealm(CredentialsMatcher matcher){\n        UserRealm realm = new UserRealm();\n        realm.setCredentialsMatcher(matcher);\n        return realm;\n    }\n\n    @Bean", "    public CredentialsMatcher getMatcher(){\n        HashedCredentialsMatcher hashedCredentialsMatcher = new HashedCredentialsMatcher();\n        hashedCredentialsMatcher.setHashAlgorithmName(\"SHA-256\");\n        hashedCredentialsMatcher.setHashIterations(2);\n        return hashedCredentialsMatcher;\n    }\n\n    @Bean\n    public WebSecurityManager getWebSecurityManager(Realm realm){\n        DefaultWebSecurityManager webSecurityManager = new DefaultWebSecurityManager();\n        webSecurityManager.setRealm(realm);\n        log.info(\"SecurityManager\u6ce8\u5165\u6210\u529f...\");\n        return webSecurityManager;\n    }\n\n    @Bean", "    public WebSecurityManager getWebSecurityManager(Realm realm){\n        DefaultWebSecurityManager webSecurityManager = new DefaultWebSecurityManager();\n        webSecurityManager.setRealm(realm);\n        log.info(\"SecurityManager\u6ce8\u5165\u6210\u529f...\");\n        return webSecurityManager;\n    }\n\n    @Bean\n    public ShiroFilterFactoryBean getShiroFilterFactoryBean(WebSecurityManager webSecurityManager){\n        ShiroFilterFactoryBean shiroFilterFactoryBean = new ShiroFilterFactoryBean();\n        // \u5fc5\u987b\u8bbe\u7f6e SecurityManager\n        shiroFilterFactoryBean.setSecurityManager(webSecurityManager);\n        return shiroFilterFactoryBean;\n    }\n\n}\n\n", "    public ShiroFilterFactoryBean getShiroFilterFactoryBean(WebSecurityManager webSecurityManager){\n        ShiroFilterFactoryBean shiroFilterFactoryBean = new ShiroFilterFactoryBean();\n        // \u5fc5\u987b\u8bbe\u7f6e SecurityManager\n        shiroFilterFactoryBean.setSecurityManager(webSecurityManager);\n        return shiroFilterFactoryBean;\n    }\n\n}\n\n"]}
{"filename": "src/main/java/ink/geekhub/server/exception/ApiException.java", "chunked_list": ["package ink.geekhub.server.exception;\n\nimport lombok.Getter;\n\n/**\n * \u63a5\u53e3\u9519\u8bef\u5f02\u5e38\n * @author linghua\n */\n@Getter\npublic class ApiException extends RuntimeException{\n\n    private final int code;\n\n    private final String msg;\n\n    public ApiException(int code, String msg) {\n        this.code = code;\n        this.msg = msg;\n    }\n\n    public ApiException(String msg) {\n        this(400, msg);\n    }\n\n    public ApiException() {\n        this(400, \"\u63a5\u53e3\u5f02\u5e38\");\n    }\n}\n", "@Getter\npublic class ApiException extends RuntimeException{\n\n    private final int code;\n\n    private final String msg;\n\n    public ApiException(int code, String msg) {\n        this.code = code;\n        this.msg = msg;\n    }\n\n    public ApiException(String msg) {\n        this(400, msg);\n    }\n\n    public ApiException() {\n        this(400, \"\u63a5\u53e3\u5f02\u5e38\");\n    }\n}\n"]}
{"filename": "src/main/java/ink/geekhub/server/service/ICommentService.java", "chunked_list": ["package ink.geekhub.server.service;\n\nimport com.baomidou.mybatisplus.extension.service.IService;\nimport ink.geekhub.server.entity.Comment;\n\n/**\n * @author linghua\n */\npublic interface ICommentService extends IService<Comment> {\n}\n", "public interface ICommentService extends IService<Comment> {\n}\n"]}
{"filename": "src/main/java/ink/geekhub/server/service/IArticleService.java", "chunked_list": ["package ink.geekhub.server.service;\n\nimport com.baomidou.mybatisplus.core.metadata.IPage;\nimport com.baomidou.mybatisplus.extension.plugins.pagination.Page;\nimport com.baomidou.mybatisplus.extension.service.IService;\nimport ink.geekhub.server.entity.Article;\n\n/**\n * @author linghua\n */\npublic interface IArticleService extends IService<Article> {\n\n    /**\n     * @param page\n     * @return\n     */\n    IPage<Article> selectNewArticle(Page<Article> page);\n}\n", " * @author linghua\n */\npublic interface IArticleService extends IService<Article> {\n\n    /**\n     * @param page\n     * @return\n     */\n    IPage<Article> selectNewArticle(Page<Article> page);\n}\n"]}
{"filename": "src/main/java/ink/geekhub/server/service/IUserService.java", "chunked_list": ["package ink.geekhub.server.service;\n\nimport com.baomidou.mybatisplus.extension.service.IService;\nimport ink.geekhub.server.controller.vo.SignupVO;\nimport ink.geekhub.server.entity.User;\n\n/**\n * @author linghua\n */\npublic interface IUserService extends IService<User> {\n    void save(SignupVO signupVO);\n}\n", " */\npublic interface IUserService extends IService<User> {\n    void save(SignupVO signupVO);\n}\n"]}
{"filename": "src/main/java/ink/geekhub/server/service/impl/CommentServiceImpl.java", "chunked_list": ["package ink.geekhub.server.service.impl;\n\nimport com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;\nimport ink.geekhub.server.entity.Comment;\nimport ink.geekhub.server.mapper.CommentMapper;\nimport ink.geekhub.server.service.ICommentService;\nimport org.springframework.stereotype.Service;\n\n@Service\npublic class CommentServiceImpl extends ServiceImpl<CommentMapper, Comment> implements ICommentService {\n}\n", "@Service\npublic class CommentServiceImpl extends ServiceImpl<CommentMapper, Comment> implements ICommentService {\n}\n"]}
{"filename": "src/main/java/ink/geekhub/server/service/impl/ArticleServiceImpl.java", "chunked_list": ["package ink.geekhub.server.service.impl;\n\nimport com.baomidou.mybatisplus.core.metadata.IPage;\nimport com.baomidou.mybatisplus.extension.plugins.pagination.Page;\nimport com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;\nimport ink.geekhub.server.entity.Article;\nimport ink.geekhub.server.mapper.ArticleMapper;\nimport ink.geekhub.server.service.IArticleService;\nimport org.springframework.stereotype.Service;\n", "import org.springframework.stereotype.Service;\n\n/**\n * @author linghua\n */\n@Service\npublic class ArticleServiceImpl extends ServiceImpl<ArticleMapper, Article> implements IArticleService {\n\n    @Override\n    public IPage<Article> selectNewArticle(Page<Article> page) {\n        return this.baseMapper.selectNewArticle(page);\n    }\n}\n"]}
{"filename": "src/main/java/ink/geekhub/server/service/impl/UserServiceImpl.java", "chunked_list": ["package ink.geekhub.server.service.impl;\n\nimport com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;\nimport ink.geekhub.server.controller.vo.SignupVO;\nimport ink.geekhub.server.entity.User;\nimport ink.geekhub.server.mapper.UserMapper;\nimport ink.geekhub.server.service.IUserService;\nimport org.apache.shiro.crypto.SecureRandomNumberGenerator;\nimport org.apache.shiro.crypto.hash.SimpleHash;\nimport org.springframework.stereotype.Service;", "import org.apache.shiro.crypto.hash.SimpleHash;\nimport org.springframework.stereotype.Service;\n\nimport java.util.Date;\n\n/**\n * User\u4e1a\u52a1\u7c7b\n * @author linghua\n */\n@Service\npublic class UserServiceImpl extends ServiceImpl<UserMapper, User> implements IUserService {\n\n    @Override", " */\n@Service\npublic class UserServiceImpl extends ServiceImpl<UserMapper, User> implements IUserService {\n\n    @Override\n    public void save(SignupVO signupVO) {\n        User user = new User();\n        user.setEmail(signupVO.getEmail());\n        user.setUsername(signupVO.getUsername());\n        //\u76d0\n        String salt = new SecureRandomNumberGenerator().nextBytes().toString();\n        //\u54c8\u5e0c256\u52a0\u5bc6\n        user.setPassword(new SimpleHash(\"SHA-256\", signupVO.getPassword(), salt, 2).toString());\n        user.setSalt(salt);\n        user.setSignupDate(new Date());\n        save(user);\n    }\n}\n"]}
{"filename": "src/main/java/ink/geekhub/server/mapper/CommentMapper.java", "chunked_list": ["package ink.geekhub.server.mapper;\n\nimport com.baomidou.mybatisplus.core.mapper.BaseMapper;\nimport ink.geekhub.server.entity.Comment;\n\n/**\n * @author linghua\n */\npublic interface CommentMapper extends BaseMapper<Comment> {\n}\n", "public interface CommentMapper extends BaseMapper<Comment> {\n}\n"]}
{"filename": "src/main/java/ink/geekhub/server/mapper/UserMapper.java", "chunked_list": ["package ink.geekhub.server.mapper;\n\nimport com.baomidou.mybatisplus.core.mapper.BaseMapper;;\nimport ink.geekhub.server.entity.User;\n\n/**\n * @author linghua\n */\npublic interface UserMapper extends BaseMapper<User> {\n}\n", "public interface UserMapper extends BaseMapper<User> {\n}\n"]}
{"filename": "src/main/java/ink/geekhub/server/mapper/ArticleMapper.java", "chunked_list": ["package ink.geekhub.server.mapper;\n\nimport com.baomidou.mybatisplus.core.mapper.BaseMapper;\nimport com.baomidou.mybatisplus.core.metadata.IPage;\nimport com.baomidou.mybatisplus.extension.plugins.pagination.Page;\nimport ink.geekhub.server.entity.Article;\nimport ink.geekhub.server.entity.User;\nimport org.apache.ibatis.annotations.Select;\n\n", "\n\n/**\n * @author linghua\n */\npublic interface ArticleMapper extends BaseMapper<Article> {\n\n    /**\n     * \u67e5\u8be2\u6700\u65b0\u6587\u7ae0\n     * @param page \u5206\u9875\u5bf9\u8c61\n     * @return \u5206\u9875\u7ed3\u679c\n     */\n    @Select(\"select * from article order by id desc limit 40\")\n    IPage<Article> selectNewArticle(Page<Article> page);\n}\n"]}
{"filename": "src/main/java/ink/geekhub/server/anno/ExceptionCode.java", "chunked_list": ["package ink.geekhub.server.anno;\n\nimport java.lang.annotation.ElementType;\nimport java.lang.annotation.Retention;\nimport java.lang.annotation.RetentionPolicy;\nimport java.lang.annotation.Target;\n\n/**\n * \u81ea\u5b9a\u4e49\u53c2\u6570\u6821\u9a8c\u9519\u8bef\u7801\u548c\u9519\u8bef\u4fe1\u606f\u6ce8\u89e3\n * @author linghua", " * \u81ea\u5b9a\u4e49\u53c2\u6570\u6821\u9a8c\u9519\u8bef\u7801\u548c\u9519\u8bef\u4fe1\u606f\u6ce8\u89e3\n * @author linghua\n */\n@Retention(RetentionPolicy.RUNTIME)//\u8fd0\u884c\u65f6\u53ef\u4ee5\u901a\u8fc7\u53cd\u5c04\u8bbf\u95ee\n@Target({ElementType.FIELD})//\u4f5c\u7528\u4e8e\u57df\u4e0a\npublic @interface ExceptionCode {\n\n    int value() default 400;\n\n    String msg() default \"\u670d\u52a1\u51fa\u73b0\u5f02\u5e38\";", "\n    String msg() default \"\u670d\u52a1\u51fa\u73b0\u5f02\u5e38\";\n}\n"]}
{"filename": "src/main/java/ink/geekhub/server/sys/Admin.java", "chunked_list": ["package ink.geekhub.server.sys;\n\npublic class Admin {\n}\n"]}
