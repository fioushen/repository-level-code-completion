{"filename": "AssemblyCacheExplorer/AssemblyCacheExplorer.Designer.cs", "chunked_list": ["\ufeffnamespace AssemblyCacheExplorer\n{\n    partial class AssemblyCacheExplorer\n    {\n        /// <summary>\n        /// Required designer variable.\n        /// </summary>\n        private System.ComponentModel.IContainer components = null;\n\n        /// <summary>\n        /// Clean up any resources being used.\n        /// </summary>\n        /// <param name=\"disposing\">true if managed resources should be disposed; otherwise, false.</param>", "        protected override void Dispose(bool disposing)\n        {\n            if (disposing && (components != null))\n            {\n                components.Dispose();\n            }\n            base.Dispose(disposing);\n        }\n\n        #region Windows Form Designer generated code\n\n        /// <summary>\n        /// Required method for Designer support - do not modify\n        /// the contents of this method with the code editor.\n        /// </summary>", "        private void InitializeComponent()\n        {\n            this.components = new System.ComponentModel.Container();\n            System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(AssemblyCacheExplorer));\n            this.statusStrip = new System.Windows.Forms.StatusStrip();\n            this.toolStripStatusLabel = new System.Windows.Forms.ToolStripStatusLabel();\n            this.toolStripProgressBar = new System.Windows.Forms.ToolStripProgressBar();\n            this.toolStrip = new System.Windows.Forms.ToolStrip();\n            this.toolStripInstallButton = new System.Windows.Forms.ToolStripButton();\n            this.toolStripUninstallButton = new System.Windows.Forms.ToolStripButton();\n            this.toolStripExportAssemblyButton = new System.Windows.Forms.ToolStripButton();\n            this.toolStripSeparator2 = new System.Windows.Forms.ToolStripSeparator();\n            this.toolStripRefreshButton = new System.Windows.Forms.ToolStripButton();\n            this.toolStripSeparator6 = new System.Windows.Forms.ToolStripSeparator();\n            this.toolStripBackupFolderButton = new System.Windows.Forms.ToolStripButton();\n            this.toolStripSeparator8 = new System.Windows.Forms.ToolStripSeparator();\n            this.toolStripSettingsButton = new System.Windows.Forms.ToolStripButton();\n            this.toolStripSeparator3 = new System.Windows.Forms.ToolStripSeparator();\n            this.toolStripFilterLabel = new System.Windows.Forms.ToolStripLabel();\n            this.toolStripFilterTextBox = new System.Windows.Forms.ToolStripTextBox();\n            this.toolStripSeparator4 = new System.Windows.Forms.ToolStripSeparator();\n            this.toolStripRuntimeVersionLabel = new System.Windows.Forms.ToolStripLabel();\n            this.toolStripRuntimeVersionComboBox = new System.Windows.Forms.ToolStripComboBox();\n            this.toolStripSeparator5 = new System.Windows.Forms.ToolStripSeparator();\n            this.toolStripAboutButton = new System.Windows.Forms.ToolStripButton();\n            this.toolStripSeparator7 = new System.Windows.Forms.ToolStripSeparator();\n            this.lvAssemblyCache = new System.Windows.Forms.ListView();\n            this.colAssemblyName = ((System.Windows.Forms.ColumnHeader)(new System.Windows.Forms.ColumnHeader()));\n            this.colVersion = ((System.Windows.Forms.ColumnHeader)(new System.Windows.Forms.ColumnHeader()));\n            this.colPublicKeyToken = ((System.Windows.Forms.ColumnHeader)(new System.Windows.Forms.ColumnHeader()));\n            this.colRuntimeVersion = ((System.Windows.Forms.ColumnHeader)(new System.Windows.Forms.ColumnHeader()));\n            this.colFileVersion = ((System.Windows.Forms.ColumnHeader)(new System.Windows.Forms.ColumnHeader()));\n            this.colModifiedDate = ((System.Windows.Forms.ColumnHeader)(new System.Windows.Forms.ColumnHeader()));\n            this.contextMenuStrip = new System.Windows.Forms.ContextMenuStrip(this.components);\n            this.toolStripMenuUninstall = new System.Windows.Forms.ToolStripMenuItem();\n            this.toolStripMenuExport = new System.Windows.Forms.ToolStripMenuItem();\n            this.toolStripSeparator1 = new System.Windows.Forms.ToolStripSeparator();\n            this.toolStripMenuProperties = new System.Windows.Forms.ToolStripMenuItem();\n            this.imageList = new System.Windows.Forms.ImageList(this.components);\n            this.openFileDialog = new System.Windows.Forms.OpenFileDialog();\n            this.folderBrowserDialog = new System.Windows.Forms.FolderBrowserDialog();\n            this.bgWorker = new System.ComponentModel.BackgroundWorker();\n            this.statusStrip.SuspendLayout();\n            this.toolStrip.SuspendLayout();\n            this.contextMenuStrip.SuspendLayout();\n            this.SuspendLayout();\n            // \n            // statusStrip\n            // \n            this.statusStrip.Items.AddRange(new System.Windows.Forms.ToolStripItem[] {\n            this.toolStripStatusLabel,\n            this.toolStripProgressBar});\n            this.statusStrip.Location = new System.Drawing.Point(0, 416);\n            this.statusStrip.Name = \"statusStrip\";\n            this.statusStrip.Size = new System.Drawing.Size(914, 22);\n            this.statusStrip.TabIndex = 0;\n            this.statusStrip.Text = \"statusStrip\";\n            // \n            // toolStripStatusLabel\n            // \n            this.toolStripStatusLabel.AutoSize = false;\n            this.toolStripStatusLabel.BorderSides = ((System.Windows.Forms.ToolStripStatusLabelBorderSides)((((System.Windows.Forms.ToolStripStatusLabelBorderSides.Left | System.Windows.Forms.ToolStripStatusLabelBorderSides.Top) \n            | System.Windows.Forms.ToolStripStatusLabelBorderSides.Right) \n            | System.Windows.Forms.ToolStripStatusLabelBorderSides.Bottom)));\n            this.toolStripStatusLabel.BorderStyle = System.Windows.Forms.Border3DStyle.Sunken;\n            this.toolStripStatusLabel.Name = \"toolStripStatusLabel\";\n            this.toolStripStatusLabel.Size = new System.Drawing.Size(170, 17);\n            this.toolStripStatusLabel.Text = \"0 Assemblies, 0 Selected\";\n            this.toolStripStatusLabel.TextAlign = System.Drawing.ContentAlignment.MiddleLeft;\n            // \n            // toolStripProgressBar\n            // \n            this.toolStripProgressBar.Alignment = System.Windows.Forms.ToolStripItemAlignment.Right;\n            this.toolStripProgressBar.Name = \"toolStripProgressBar\";\n            this.toolStripProgressBar.Size = new System.Drawing.Size(100, 16);\n            this.toolStripProgressBar.Visible = false;\n            // \n            // toolStrip\n            // \n            this.toolStrip.Items.AddRange(new System.Windows.Forms.ToolStripItem[] {\n            this.toolStripInstallButton,\n            this.toolStripUninstallButton,\n            this.toolStripExportAssemblyButton,\n            this.toolStripSeparator2,\n            this.toolStripRefreshButton,\n            this.toolStripSeparator6,\n            this.toolStripBackupFolderButton,\n            this.toolStripSeparator8,\n            this.toolStripSettingsButton,\n            this.toolStripSeparator3,\n            this.toolStripFilterLabel,\n            this.toolStripFilterTextBox,\n            this.toolStripSeparator4,\n            this.toolStripRuntimeVersionLabel,\n            this.toolStripRuntimeVersionComboBox,\n            this.toolStripSeparator5,\n            this.toolStripAboutButton,\n            this.toolStripSeparator7});\n            this.toolStrip.Location = new System.Drawing.Point(0, 0);\n            this.toolStrip.Name = \"toolStrip\";\n            this.toolStrip.Size = new System.Drawing.Size(914, 31);\n            this.toolStrip.TabIndex = 2;\n            this.toolStrip.Text = \"toolStrip1\";\n            // \n            // toolStripInstallButton\n            // \n            this.toolStripInstallButton.DisplayStyle = System.Windows.Forms.ToolStripItemDisplayStyle.Image;\n            this.toolStripInstallButton.Image = ((System.Drawing.Image)(resources.GetObject(\"toolStripInstallButton.Image\")));\n            this.toolStripInstallButton.ImageScaling = System.Windows.Forms.ToolStripItemImageScaling.None;\n            this.toolStripInstallButton.ImageTransparentColor = System.Drawing.Color.Magenta;\n            this.toolStripInstallButton.Name = \"toolStripInstallButton\";\n            this.toolStripInstallButton.Size = new System.Drawing.Size(36, 28);\n            this.toolStripInstallButton.Text = \"Install Assembly\";\n            this.toolStripInstallButton.Click += new System.EventHandler(this.toolStripInstallButton_Click);\n            // \n            // toolStripUninstallButton\n            // \n            this.toolStripUninstallButton.DisplayStyle = System.Windows.Forms.ToolStripItemDisplayStyle.Image;\n            this.toolStripUninstallButton.Image = ((System.Drawing.Image)(resources.GetObject(\"toolStripUninstallButton.Image\")));\n            this.toolStripUninstallButton.ImageScaling = System.Windows.Forms.ToolStripItemImageScaling.None;\n            this.toolStripUninstallButton.ImageTransparentColor = System.Drawing.Color.Magenta;\n            this.toolStripUninstallButton.Name = \"toolStripUninstallButton\";\n            this.toolStripUninstallButton.Size = new System.Drawing.Size(36, 28);\n            this.toolStripUninstallButton.Text = \"Uninstall Assembly\";\n            this.toolStripUninstallButton.Click += new System.EventHandler(this.toolStripUninstallButton_Click);\n            // \n            // toolStripExportAssemblyButton\n            // \n            this.toolStripExportAssemblyButton.DisplayStyle = System.Windows.Forms.ToolStripItemDisplayStyle.Image;\n            this.toolStripExportAssemblyButton.Image = ((System.Drawing.Image)(resources.GetObject(\"toolStripExportAssemblyButton.Image\")));\n            this.toolStripExportAssemblyButton.ImageScaling = System.Windows.Forms.ToolStripItemImageScaling.None;\n            this.toolStripExportAssemblyButton.ImageTransparentColor = System.Drawing.Color.Magenta;\n            this.toolStripExportAssemblyButton.Name = \"toolStripExportAssemblyButton\";\n            this.toolStripExportAssemblyButton.Size = new System.Drawing.Size(36, 28);\n            this.toolStripExportAssemblyButton.Text = \"Export Assembly\";\n            this.toolStripExportAssemblyButton.ToolTipText = \"Export Assembly\";\n            this.toolStripExportAssemblyButton.Click += new System.EventHandler(this.toolStripExportAssemblyButton_Click);\n            // \n            // toolStripSeparator2\n            // \n            this.toolStripSeparator2.Name = \"toolStripSeparator2\";\n            this.toolStripSeparator2.Size = new System.Drawing.Size(6, 31);\n            // \n            // toolStripRefreshButton\n            // \n            this.toolStripRefreshButton.DisplayStyle = System.Windows.Forms.ToolStripItemDisplayStyle.Image;\n            this.toolStripRefreshButton.Image = ((System.Drawing.Image)(resources.GetObject(\"toolStripRefreshButton.Image\")));\n            this.toolStripRefreshButton.ImageScaling = System.Windows.Forms.ToolStripItemImageScaling.None;\n            this.toolStripRefreshButton.ImageTransparentColor = System.Drawing.Color.Magenta;\n            this.toolStripRefreshButton.Name = \"toolStripRefreshButton\";\n            this.toolStripRefreshButton.Size = new System.Drawing.Size(36, 28);\n            this.toolStripRefreshButton.Text = \"Refresh\";\n            this.toolStripRefreshButton.Click += new System.EventHandler(this.toolStripRefreshButton_Click);\n            // \n            // toolStripSeparator6\n            // \n            this.toolStripSeparator6.Name = \"toolStripSeparator6\";\n            this.toolStripSeparator6.Size = new System.Drawing.Size(6, 31);\n            // \n            // toolStripBackupFolderButton\n            // \n            this.toolStripBackupFolderButton.DisplayStyle = System.Windows.Forms.ToolStripItemDisplayStyle.Image;\n            this.toolStripBackupFolderButton.Image = ((System.Drawing.Image)(resources.GetObject(\"toolStripBackupFolderButton.Image\")));\n            this.toolStripBackupFolderButton.ImageScaling = System.Windows.Forms.ToolStripItemImageScaling.None;\n            this.toolStripBackupFolderButton.ImageTransparentColor = System.Drawing.Color.Magenta;\n            this.toolStripBackupFolderButton.Name = \"toolStripBackupFolderButton\";\n            this.toolStripBackupFolderButton.Size = new System.Drawing.Size(36, 28);\n            this.toolStripBackupFolderButton.ToolTipText = \"Show Backup Folder\";\n            this.toolStripBackupFolderButton.Click += new System.EventHandler(this.toolStripBackupFolderButton_Click);\n            // \n            // toolStripSeparator8\n            // \n            this.toolStripSeparator8.Name = \"toolStripSeparator8\";\n            this.toolStripSeparator8.Size = new System.Drawing.Size(6, 31);\n            // \n            // toolStripSettingsButton\n            // \n            this.toolStripSettingsButton.DisplayStyle = System.Windows.Forms.ToolStripItemDisplayStyle.Image;\n            this.toolStripSettingsButton.Image = ((System.Drawing.Image)(resources.GetObject(\"toolStripSettingsButton.Image\")));\n            this.toolStripSettingsButton.ImageScaling = System.Windows.Forms.ToolStripItemImageScaling.None;\n            this.toolStripSettingsButton.ImageTransparentColor = System.Drawing.Color.Magenta;\n            this.toolStripSettingsButton.Name = \"toolStripSettingsButton\";\n            this.toolStripSettingsButton.Size = new System.Drawing.Size(36, 28);\n            this.toolStripSettingsButton.Text = \"Settings\";\n            this.toolStripSettingsButton.Click += new System.EventHandler(this.toolStripSettingsButton_Click);\n            // \n            // toolStripSeparator3\n            // \n            this.toolStripSeparator3.Name = \"toolStripSeparator3\";\n            this.toolStripSeparator3.Size = new System.Drawing.Size(6, 31);\n            // \n            // toolStripFilterLabel\n            // \n            this.toolStripFilterLabel.Name = \"toolStripFilterLabel\";\n            this.toolStripFilterLabel.Size = new System.Drawing.Size(36, 28);\n            this.toolStripFilterLabel.Text = \"Filter:\";\n            // \n            // toolStripFilterTextBox\n            // \n            this.toolStripFilterTextBox.Name = \"toolStripFilterTextBox\";\n            this.toolStripFilterTextBox.Size = new System.Drawing.Size(200, 31);\n            this.toolStripFilterTextBox.TextChanged += new System.EventHandler(this.toolStripFilterTextBox_TextChanged);\n            // \n            // toolStripSeparator4\n            // \n            this.toolStripSeparator4.Name = \"toolStripSeparator4\";\n            this.toolStripSeparator4.Size = new System.Drawing.Size(6, 31);\n            // \n            // toolStripRuntimeVersionLabel\n            // \n            this.toolStripRuntimeVersionLabel.Name = \"toolStripRuntimeVersionLabel\";\n            this.toolStripRuntimeVersionLabel.Size = new System.Drawing.Size(97, 28);\n            this.toolStripRuntimeVersionLabel.Text = \"Runtime Version:\";\n            // \n            // toolStripRuntimeVersionComboBox\n            // \n            this.toolStripRuntimeVersionComboBox.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;\n            this.toolStripRuntimeVersionComboBox.Items.AddRange(new object[] {\n            \"*ALL*\",\n            \"CLR 2\",\n            \"CLR 4\"});\n            this.toolStripRuntimeVersionComboBox.Name = \"toolStripRuntimeVersionComboBox\";\n            this.toolStripRuntimeVersionComboBox.Size = new System.Drawing.Size(121, 31);\n            this.toolStripRuntimeVersionComboBox.SelectedIndexChanged += new System.EventHandler(this.toolStripRuntimeVersionComboBox_SelectedIndexChanged);\n            // \n            // toolStripSeparator5\n            // \n            this.toolStripSeparator5.Name = \"toolStripSeparator5\";\n            this.toolStripSeparator5.Size = new System.Drawing.Size(6, 31);\n            // \n            // toolStripAboutButton\n            // \n            this.toolStripAboutButton.DisplayStyle = System.Windows.Forms.ToolStripItemDisplayStyle.Image;\n            this.toolStripAboutButton.Image = ((System.Drawing.Image)(resources.GetObject(\"toolStripAboutButton.Image\")));\n            this.toolStripAboutButton.ImageScaling = System.Windows.Forms.ToolStripItemImageScaling.None;\n            this.toolStripAboutButton.ImageTransparentColor = System.Drawing.Color.Magenta;\n            this.toolStripAboutButton.Name = \"toolStripAboutButton\";\n            this.toolStripAboutButton.Size = new System.Drawing.Size(36, 28);\n            this.toolStripAboutButton.Text = \"About\";\n            this.toolStripAboutButton.Click += new System.EventHandler(this.toolStripAboutButton_Click);\n            // \n            // toolStripSeparator7\n            // \n            this.toolStripSeparator7.Name = \"toolStripSeparator7\";\n            this.toolStripSeparator7.Size = new System.Drawing.Size(6, 31);\n            // \n            // lvAssemblyCache\n            // \n            this.lvAssemblyCache.AllowColumnReorder = true;\n            this.lvAssemblyCache.AllowDrop = true;\n            this.lvAssemblyCache.Anchor = ((System.Windows.Forms.AnchorStyles)((((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom) \n            | System.Windows.Forms.AnchorStyles.Left) \n            | System.Windows.Forms.AnchorStyles.Right)));\n            this.lvAssemblyCache.Columns.AddRange(new System.Windows.Forms.ColumnHeader[] {\n            this.colAssemblyName,\n            this.colVersion,\n            this.colPublicKeyToken,\n            this.colRuntimeVersion,\n            this.colFileVersion,\n            this.colModifiedDate});\n            this.lvAssemblyCache.ContextMenuStrip = this.contextMenuStrip;\n            this.lvAssemblyCache.FullRowSelect = true;\n            this.lvAssemblyCache.GridLines = true;\n            this.lvAssemblyCache.LargeImageList = this.imageList;\n            this.lvAssemblyCache.Location = new System.Drawing.Point(0, 28);\n            this.lvAssemblyCache.Name = \"lvAssemblyCache\";\n            this.lvAssemblyCache.Size = new System.Drawing.Size(914, 385);\n            this.lvAssemblyCache.SmallImageList = this.imageList;\n            this.lvAssemblyCache.TabIndex = 3;\n            this.lvAssemblyCache.UseCompatibleStateImageBehavior = false;\n            this.lvAssemblyCache.View = System.Windows.Forms.View.Details;\n            this.lvAssemblyCache.ColumnClick += new System.Windows.Forms.ColumnClickEventHandler(this.lvAssemblyCache_ColumnClick);\n            this.lvAssemblyCache.SelectedIndexChanged += new System.EventHandler(this.lvAssemblyCache_SelectedIndexChanged);\n            this.lvAssemblyCache.Click += new System.EventHandler(this.lvAssemblyCache_Click);\n            this.lvAssemblyCache.DragDrop += new System.Windows.Forms.DragEventHandler(this.lvAssemblyCache_DragDrop);\n            this.lvAssemblyCache.DragEnter += new System.Windows.Forms.DragEventHandler(this.lvAssemblyCache_DragEnter);\n            this.lvAssemblyCache.DoubleClick += new System.EventHandler(this.lvAssemblyCache_DoubleClick);\n            this.lvAssemblyCache.KeyUp += new System.Windows.Forms.KeyEventHandler(this.lvAssemblyCache_KeyUp);\n            // \n            // colAssemblyName\n            // \n            this.colAssemblyName.Text = \"Assembly Name\";\n            this.colAssemblyName.Width = 363;\n            // \n            // colVersion\n            // \n            this.colVersion.Text = \"Version\";\n            this.colVersion.Width = 64;\n            // \n            // colPublicKeyToken\n            // \n            this.colPublicKeyToken.Text = \"Public Key Token\";\n            this.colPublicKeyToken.Width = 115;\n            // \n            // colRuntimeVersion\n            // \n            this.colRuntimeVersion.Text = \"Runtime Version\";\n            this.colRuntimeVersion.Width = 98;\n            // \n            // colFileVersion\n            // \n            this.colFileVersion.Text = \"File Version\";\n            this.colFileVersion.Width = 178;\n            // \n            // colModifiedDate\n            // \n            this.colModifiedDate.Text = \"Modified Date\";\n            this.colModifiedDate.Width = 166;\n            // \n            // contextMenuStrip\n            // \n            this.contextMenuStrip.Items.AddRange(new System.Windows.Forms.ToolStripItem[] {\n            this.toolStripMenuUninstall,\n            this.toolStripMenuExport,\n            this.toolStripSeparator1,\n            this.toolStripMenuProperties});\n            this.contextMenuStrip.Name = \"contextMenuStrip\";\n            this.contextMenuStrip.Size = new System.Drawing.Size(128, 76);\n            // \n            // toolStripMenuUninstall\n            // \n            this.toolStripMenuUninstall.Name = \"toolStripMenuUninstall\";\n            this.toolStripMenuUninstall.Size = new System.Drawing.Size(127, 22);\n            this.toolStripMenuUninstall.Text = \"Uninstall\";\n            this.toolStripMenuUninstall.Click += new System.EventHandler(this.toolStripMenuUninstall_Click);\n            // \n            // toolStripMenuExport\n            // \n            this.toolStripMenuExport.Name = \"toolStripMenuExport\";\n            this.toolStripMenuExport.Size = new System.Drawing.Size(127, 22);\n            this.toolStripMenuExport.Text = \"Export\";\n            this.toolStripMenuExport.Click += new System.EventHandler(this.toolStripMenuExport_Click);\n            // \n            // toolStripSeparator1\n            // \n            this.toolStripSeparator1.Name = \"toolStripSeparator1\";\n            this.toolStripSeparator1.Size = new System.Drawing.Size(124, 6);\n            // \n            // toolStripMenuProperties\n            // \n            this.toolStripMenuProperties.Name = \"toolStripMenuProperties\";\n            this.toolStripMenuProperties.Size = new System.Drawing.Size(127, 22);\n            this.toolStripMenuProperties.Text = \"Properties\";\n            this.toolStripMenuProperties.Click += new System.EventHandler(this.toolStripMenuProperties_Click);\n            // \n            // imageList\n            // \n            this.imageList.ImageStream = ((System.Windows.Forms.ImageListStreamer)(resources.GetObject(\"imageList.ImageStream\")));\n            this.imageList.TransparentColor = System.Drawing.Color.Transparent;\n            this.imageList.Images.SetKeyName(0, \"Assembly.png\");\n            // \n            // openFileDialog\n            // \n            this.openFileDialog.Multiselect = true;\n            this.openFileDialog.Title = \"Select Assemblies to Install\";\n            this.openFileDialog.FileOk += new System.ComponentModel.CancelEventHandler(this.openFileDialog_FileOk);\n            // \n            // bgWorker\n            // \n            this.bgWorker.DoWork += new System.ComponentModel.DoWorkEventHandler(this.bgWorker_DoWork);\n            this.bgWorker.ProgressChanged += new System.ComponentModel.ProgressChangedEventHandler(this.bgWorker_ProgressChanged);\n            this.bgWorker.RunWorkerCompleted += new System.ComponentModel.RunWorkerCompletedEventHandler(this.bgWorker_RunWorkerCompleted);\n            // \n            // AssemblyCacheExplorer\n            // \n            this.AllowDrop = true;\n            this.AutoScaleDimensions = new System.Drawing.SizeF(6F, 13F);\n            this.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font;\n            this.ClientSize = new System.Drawing.Size(914, 438);\n            this.Controls.Add(this.lvAssemblyCache);\n            this.Controls.Add(this.toolStrip);\n            this.Controls.Add(this.statusStrip);\n            this.Icon = ((System.Drawing.Icon)(resources.GetObject(\"$this.Icon\")));\n            this.Name = \"AssemblyCacheExplorer\";\n            this.Text = \"Assembly Cache Explorer\";\n            this.Activated += new System.EventHandler(this.AssemblyCacheExplorer_Activated);\n            this.FormClosing += new System.Windows.Forms.FormClosingEventHandler(this.AssemblyCacheExplorer_FormClosing);\n            this.Load += new System.EventHandler(this.AssemblyCacheExplorer_Load);\n            this.statusStrip.ResumeLayout(false);\n            this.statusStrip.PerformLayout();\n            this.toolStrip.ResumeLayout(false);\n            this.toolStrip.PerformLayout();\n            this.contextMenuStrip.ResumeLayout(false);\n            this.ResumeLayout(false);\n            this.PerformLayout();\n\n        }\n\n        #endregion\n\n        private System.Windows.Forms.StatusStrip statusStrip;\n        private System.Windows.Forms.ToolStrip toolStrip;\n        private System.Windows.Forms.ToolStripButton toolStripInstallButton;\n        private System.Windows.Forms.ToolStripButton toolStripUninstallButton;\n        private System.Windows.Forms.ToolStripButton toolStripRefreshButton;\n        private System.Windows.Forms.ToolStripSeparator toolStripSeparator2;\n        private System.Windows.Forms.ToolStripButton toolStripSettingsButton;\n        private System.Windows.Forms.ToolStripSeparator toolStripSeparator3;\n        private System.Windows.Forms.ToolStripLabel toolStripFilterLabel;\n        private System.Windows.Forms.ToolStripTextBox toolStripFilterTextBox;\n        private System.Windows.Forms.ToolStripStatusLabel toolStripStatusLabel;\n        private System.Windows.Forms.ListView lvAssemblyCache;\n        private System.Windows.Forms.ColumnHeader colAssemblyName;\n        private System.Windows.Forms.ColumnHeader colVersion;\n        private System.Windows.Forms.ColumnHeader colPublicKeyToken;\n        private System.Windows.Forms.ColumnHeader colFileVersion;\n        private System.Windows.Forms.ColumnHeader colModifiedDate;\n        private System.Windows.Forms.ImageList imageList;\n        private System.Windows.Forms.OpenFileDialog openFileDialog;\n        private System.Windows.Forms.ContextMenuStrip contextMenuStrip;\n        private System.Windows.Forms.ToolStripMenuItem toolStripMenuUninstall;\n        private System.Windows.Forms.ToolStripSeparator toolStripSeparator1;\n        private System.Windows.Forms.ToolStripMenuItem toolStripMenuProperties;\n        private System.Windows.Forms.ColumnHeader colRuntimeVersion;\n        private System.Windows.Forms.ToolStripLabel toolStripRuntimeVersionLabel;\n        private System.Windows.Forms.ToolStripComboBox toolStripRuntimeVersionComboBox;\n        private System.Windows.Forms.ToolStripButton toolStripExportAssemblyButton;\n        private System.Windows.Forms.ToolStripSeparator toolStripSeparator4;\n        private System.Windows.Forms.ToolStripSeparator toolStripSeparator5;\n        private System.Windows.Forms.ToolStripButton toolStripAboutButton;\n        private System.Windows.Forms.ToolStripSeparator toolStripSeparator6;\n        private System.Windows.Forms.ToolStripSeparator toolStripSeparator7;\n        private System.Windows.Forms.FolderBrowserDialog folderBrowserDialog;\n        private System.Windows.Forms.ToolStripMenuItem toolStripMenuExport;\n        private System.Windows.Forms.ToolStripProgressBar toolStripProgressBar;\n        private System.Windows.Forms.ToolStripButton toolStripBackupFolderButton;\n        private System.Windows.Forms.ToolStripSeparator toolStripSeparator8;\n        private System.ComponentModel.BackgroundWorker bgWorker;\n    }\n}\n\n"]}
{"filename": "AssemblyCacheExplorer/AssemblyProperties.cs", "chunked_list": ["\ufeffusing System;\nusing System.Collections.Generic;\nusing System.ComponentModel;\nusing System.Data;\nusing System.Drawing;\nusing System.Linq;\nusing System.Text;\nusing System.Windows.Forms;\nusing System.IO;\nusing AssemblyCacheHelper.DTO;", "using System.IO;\nusing AssemblyCacheHelper.DTO;\n\nnamespace AssemblyCacheExplorer\n{\n    public partial class AssemblyProperties : Form\n    {\n        public NetAssembly NetAssemblyProperties { get; set; }\n\n        public AssemblyProperties()\n        {\n            InitializeComponent();\n        }\n", "        private void AssemblyProperties_Load(object sender, EventArgs e)\n        {\n            string imageRuntimeVersion = AssemblyCacheHelper.NetAssemblies.GetImageRuntimeVersion(NetAssemblyProperties.AssemblyFilename);\n\n            lblAssemblyNameValue.Text = NetAssemblyProperties.AssemblyName;\n            lblAssemblyVersionValue.Text = NetAssemblyProperties.AssemblyVersion;\n            lblCultureValue.Text = NetAssemblyProperties.Culture;\n            lblPublicKeyTokenValue.Text = NetAssemblyProperties.PublicKeyToken;\n            lblProcesorArchitectureValue.Text = NetAssemblyProperties.ProcessorArchitecture;\n            lblRuntimeVersionValue.Text = (imageRuntimeVersion != \"\") ? String.Format(\"{0} ({1})\", NetAssemblyProperties.RuntimeVersion, imageRuntimeVersion) : NetAssemblyProperties.RuntimeVersion;\n            lblModifiedDateValue.Text = NetAssemblyProperties.ModifiedDate;\n            lblFileSizeValue.Text = NetAssemblyProperties.FileSize;\n            lblAssemblyFilenameValue.Text = Path.GetFileName(NetAssemblyProperties.AssemblyFilename);\n            lblFileVersionValue.Text = NetAssemblyProperties.FileVersion;\n            lblFileDescriptionValue.Text = NetAssemblyProperties.FileDescription;\n            lblCompanyValue.Text = NetAssemblyProperties.Company;\n            lblProductNameValue.Text = NetAssemblyProperties.ProductName;\n        }\n", "        private void btnOK_Click(object sender, EventArgs e)\n        {\n            this.Close();\n        }\n    }\n}\n"]}
{"filename": "AssemblyCacheExplorer/Settings.cs", "chunked_list": ["\ufeffusing System;\nusing System.Collections.Generic;\nusing System.ComponentModel;\nusing System.Data;\nusing System.Drawing;\nusing System.Linq;\nusing System.Text;\nusing System.Windows.Forms;\n\nusing System.Configuration;", "\nusing System.Configuration;\n\nnamespace AssemblyCacheExplorer\n{\n    public partial class Settings : Form\n    {\n        const string _AssemblyFolderCLR2 = \"AssemblyFolderCLR2\";\n        const string _AssemblyFolderCLR4 = \"AssemblyFolderCLR4\";\n        const string _BackupAssemblies = \"BackupAssemblies\";\n", "        private Configuration _config = ConfigurationManager.OpenExeConfiguration(ConfigurationUserLevel.None);\n\n        public Settings()\n        {\n            InitializeComponent();\n        }\n\n        private void Settings_Load(object sender, EventArgs e)\n        {\n            txtAssemblyFolderCLR2.Text = _config.AppSettings.Settings[_AssemblyFolderCLR2].Value ?? \"\";\n            txtAssemblyFolderCLR4.Text = _config.AppSettings.Settings[_AssemblyFolderCLR4].Value ?? \"\";\n            chkBackupAssemblies.Checked = Convert.ToBoolean(_config.AppSettings.Settings[_BackupAssemblies].Value ?? \"True\");\n        }\n", "        private void btnCancel_Click(object sender, EventArgs e)\n        {\n            this.Close();\n        }\n\n        private void btnOK_Click(object sender, EventArgs e)\n        {\n            try\n            {\n                _config.AppSettings.Settings[_AssemblyFolderCLR2].Value = txtAssemblyFolderCLR2.Text;\n                _config.AppSettings.Settings[_AssemblyFolderCLR4].Value = txtAssemblyFolderCLR4.Text;\n                _config.AppSettings.Settings[_BackupAssemblies].Value = chkBackupAssemblies.Checked.ToString();\n\n                _config.Save(ConfigurationSaveMode.Full);\n\n                ConfigurationManager.RefreshSection(\"appSettings\");\n                this.Close();\n            }", "            catch (Exception ex)\n            {\n                MessageBox.Show(ex.Message, \"Settings\", MessageBoxButtons.OK, MessageBoxIcon.Error);\n            }\n        }\n\n        private void btnRestoreDefaults_Click(object sender, EventArgs e)\n        {\n            txtAssemblyFolderCLR2.Text = @\"C:\\Windows\\assembly\\GAC_MSIL\";\n            txtAssemblyFolderCLR4.Text = @\"C:\\Windows\\Microsoft.NET\\assembly\\GAC_MSIL\";\n            chkBackupAssemblies.Checked = true;\n        }\n    }\n}\n"]}
{"filename": "AssemblyCacheExplorer/About.Designer.cs", "chunked_list": ["\ufeffnamespace AssemblyCacheExplorer\n{\n    partial class About\n    {\n        /// <summary>\n        /// Required designer variable.\n        /// </summary>\n        private System.ComponentModel.IContainer components = null;\n\n        /// <summary>\n        /// Clean up any resources being used.\n        /// </summary>\n        /// <param name=\"disposing\">true if managed resources should be disposed; otherwise, false.</param>", "        protected override void Dispose(bool disposing)\n        {\n            if (disposing && (components != null))\n            {\n                components.Dispose();\n            }\n            base.Dispose(disposing);\n        }\n\n        #region Windows Form Designer generated code\n\n        /// <summary>\n        /// Required method for Designer support - do not modify\n        /// the contents of this method with the code editor.\n        /// </summary>", "        private void InitializeComponent()\n        {\n            System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(About));\n            this.lblTitle = new System.Windows.Forms.Label();\n            this.lblVersion = new System.Windows.Forms.Label();\n            this.lblWhatsNew = new System.Windows.Forms.Label();\n            this.pictureBox1 = new System.Windows.Forms.PictureBox();\n            this.btnOK = new System.Windows.Forms.Button();\n            this.rtbWhatsNew = new System.Windows.Forms.RichTextBox();\n            ((System.ComponentModel.ISupportInitialize)(this.pictureBox1)).BeginInit();\n            this.SuspendLayout();\n            // \n            // lblTitle\n            // \n            this.lblTitle.AutoSize = true;\n            this.lblTitle.Font = new System.Drawing.Font(\"Microsoft Sans Serif\", 20.25F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));\n            this.lblTitle.Location = new System.Drawing.Point(68, 11);\n            this.lblTitle.Name = \"lblTitle\";\n            this.lblTitle.Size = new System.Drawing.Size(325, 31);\n            this.lblTitle.TabIndex = 0;\n            this.lblTitle.Text = \"Assembly Cache Explorer\";\n            // \n            // lblVersion\n            // \n            this.lblVersion.AutoSize = true;\n            this.lblVersion.Font = new System.Drawing.Font(\"Microsoft Sans Serif\", 12F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));\n            this.lblVersion.Location = new System.Drawing.Point(261, 42);\n            this.lblVersion.Name = \"lblVersion\";\n            this.lblVersion.Size = new System.Drawing.Size(93, 20);\n            this.lblVersion.TabIndex = 1;\n            this.lblVersion.Text = \"Version: 1.6\";\n            // \n            // lblWhatsNew\n            // \n            this.lblWhatsNew.AutoSize = true;\n            this.lblWhatsNew.Font = new System.Drawing.Font(\"Microsoft Sans Serif\", 9.75F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));\n            this.lblWhatsNew.Location = new System.Drawing.Point(10, 75);\n            this.lblWhatsNew.Name = \"lblWhatsNew\";\n            this.lblWhatsNew.Size = new System.Drawing.Size(79, 16);\n            this.lblWhatsNew.TabIndex = 2;\n            this.lblWhatsNew.Text = \"Whats New:\";\n            // \n            // pictureBox1\n            // \n            this.pictureBox1.ErrorImage = null;\n            this.pictureBox1.Image = ((System.Drawing.Image)(resources.GetObject(\"pictureBox1.Image\")));\n            this.pictureBox1.Location = new System.Drawing.Point(12, 11);\n            this.pictureBox1.Name = \"pictureBox1\";\n            this.pictureBox1.Size = new System.Drawing.Size(48, 51);\n            this.pictureBox1.SizeMode = System.Windows.Forms.PictureBoxSizeMode.StretchImage;\n            this.pictureBox1.TabIndex = 4;\n            this.pictureBox1.TabStop = false;\n            // \n            // btnOK\n            // \n            this.btnOK.Location = new System.Drawing.Point(318, 239);\n            this.btnOK.Name = \"btnOK\";\n            this.btnOK.Size = new System.Drawing.Size(75, 23);\n            this.btnOK.TabIndex = 5;\n            this.btnOK.Text = \"&OK\";\n            this.btnOK.UseVisualStyleBackColor = true;\n            this.btnOK.Click += new System.EventHandler(this.btnOK_Click);\n            // \n            // rtbWhatsNew\n            // \n            this.rtbWhatsNew.Location = new System.Drawing.Point(13, 94);\n            this.rtbWhatsNew.Name = \"rtbWhatsNew\";\n            this.rtbWhatsNew.ReadOnly = true;\n            this.rtbWhatsNew.Size = new System.Drawing.Size(380, 139);\n            this.rtbWhatsNew.TabIndex = 6;\n            this.rtbWhatsNew.Text = resources.GetString(\"rtbWhatsNew.Text\");\n            // \n            // About\n            // \n            this.AutoScaleDimensions = new System.Drawing.SizeF(6F, 13F);\n            this.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font;\n            this.ClientSize = new System.Drawing.Size(405, 269);\n            this.Controls.Add(this.rtbWhatsNew);\n            this.Controls.Add(this.btnOK);\n            this.Controls.Add(this.pictureBox1);\n            this.Controls.Add(this.lblWhatsNew);\n            this.Controls.Add(this.lblVersion);\n            this.Controls.Add(this.lblTitle);\n            this.FormBorderStyle = System.Windows.Forms.FormBorderStyle.FixedSingle;\n            this.Icon = ((System.Drawing.Icon)(resources.GetObject(\"$this.Icon\")));\n            this.MaximizeBox = false;\n            this.MinimizeBox = false;\n            this.Name = \"About\";\n            this.StartPosition = System.Windows.Forms.FormStartPosition.CenterParent;\n            this.Text = \"About\";\n            ((System.ComponentModel.ISupportInitialize)(this.pictureBox1)).EndInit();\n            this.ResumeLayout(false);\n            this.PerformLayout();\n\n        }\n\n        #endregion\n\n        private System.Windows.Forms.Label lblTitle;\n        private System.Windows.Forms.Label lblVersion;\n        private System.Windows.Forms.Label lblWhatsNew;\n        private System.Windows.Forms.PictureBox pictureBox1;\n        private System.Windows.Forms.Button btnOK;\n        private System.Windows.Forms.RichTextBox rtbWhatsNew;\n    }\n}"]}
{"filename": "AssemblyCacheExplorer/AssemblyGACResults.cs", "chunked_list": ["\ufeffusing System;\nusing System.Collections.Generic;\nusing System.ComponentModel;\nusing System.Data;\nusing System.Drawing;\nusing System.Linq;\nusing System.Text;\nusing System.Windows.Forms;\n\nnamespace AssemblyCacheExplorer", "\nnamespace AssemblyCacheExplorer\n{\n    public partial class AssemblyGACResults : Form\n    {\n        public string GACResultsTitle { get; set; }\n        public Dictionary<string, string> GACResults { get; set; }\n\n        public AssemblyGACResults()\n        {\n            InitializeComponent();\n        }\n", "        private void AssemblyGACResults_Load(object sender, EventArgs e)\n        {\n            this.Text = GACResultsTitle;\n\n            lvGACResults.Visible = false;\n            lvGACResults.Items.Clear();\n\n            foreach (KeyValuePair<string, string> gacResult in GACResults)\n            {\n                ListViewItem lvi = new ListViewItem(new string[] { gacResult.Value == \"\" ? \"Success\" : \"Failed\", gacResult.Key });\n", "                if (gacResult.Value == \"\")\n                {\n                    lvi.ImageIndex = 0;\n                }\n                else\n                {\n                    lvi.ImageIndex = 1;\n                    lvi.ToolTipText = gacResult.Value;\n                }\n\n                lvGACResults.Items.Add(lvi);\n            }\n            lvGACResults.Visible = true;\n        }\n", "        private void btnOK_Click(object sender, EventArgs e)\n        {\n            this.Close();\n        }\n    }\n}\n"]}
{"filename": "AssemblyCacheExplorer/About.cs", "chunked_list": ["\ufeffusing System;\nusing System.Collections.Generic;\nusing System.ComponentModel;\nusing System.Data;\nusing System.Drawing;\nusing System.Linq;\nusing System.Text;\nusing System.Windows.Forms;\n\nnamespace AssemblyCacheExplorer", "\nnamespace AssemblyCacheExplorer\n{\n    public partial class About : Form\n    {\n        public About()\n        {\n            InitializeComponent();\n        }\n\n        private void btnOK_Click(object sender, EventArgs e)\n        {\n            this.Close();\n        }\n    }\n}\n", "        private void btnOK_Click(object sender, EventArgs e)\n        {\n            this.Close();\n        }\n    }\n}\n"]}
{"filename": "AssemblyCacheExplorer/AssemblyGACResults.Designer.cs", "chunked_list": ["\ufeffnamespace AssemblyCacheExplorer\n{\n    partial class AssemblyGACResults\n    {\n        /// <summary>\n        /// Required designer variable.\n        /// </summary>\n        private System.ComponentModel.IContainer components = null;\n\n        /// <summary>\n        /// Clean up any resources being used.\n        /// </summary>\n        /// <param name=\"disposing\">true if managed resources should be disposed; otherwise, false.</param>", "        protected override void Dispose(bool disposing)\n        {\n            if (disposing && (components != null))\n            {\n                components.Dispose();\n            }\n            base.Dispose(disposing);\n        }\n\n        #region Windows Form Designer generated code\n\n        /// <summary>\n        /// Required method for Designer support - do not modify\n        /// the contents of this method with the code editor.\n        /// </summary>", "        private void InitializeComponent()\n        {\n            this.components = new System.ComponentModel.Container();\n            System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(AssemblyGACResults));\n            this.btnOK = new System.Windows.Forms.Button();\n            this.lvGACResults = new System.Windows.Forms.ListView();\n            this.col1 = ((System.Windows.Forms.ColumnHeader)(new System.Windows.Forms.ColumnHeader()));\n            this.col2 = ((System.Windows.Forms.ColumnHeader)(new System.Windows.Forms.ColumnHeader()));\n            this.imageList = new System.Windows.Forms.ImageList(this.components);\n            this.SuspendLayout();\n            // \n            // btnOK\n            // \n            this.btnOK.Location = new System.Drawing.Point(573, 381);\n            this.btnOK.Name = \"btnOK\";\n            this.btnOK.Size = new System.Drawing.Size(75, 23);\n            this.btnOK.TabIndex = 0;\n            this.btnOK.Text = \"&OK\";\n            this.btnOK.UseVisualStyleBackColor = true;\n            this.btnOK.Click += new System.EventHandler(this.btnOK_Click);\n            // \n            // lvGACResults\n            // \n            this.lvGACResults.Columns.AddRange(new System.Windows.Forms.ColumnHeader[] {\n            this.col1,\n            this.col2});\n            this.lvGACResults.GridLines = true;\n            this.lvGACResults.LargeImageList = this.imageList;\n            this.lvGACResults.Location = new System.Drawing.Point(12, 12);\n            this.lvGACResults.MultiSelect = false;\n            this.lvGACResults.Name = \"lvGACResults\";\n            this.lvGACResults.ShowItemToolTips = true;\n            this.lvGACResults.Size = new System.Drawing.Size(636, 357);\n            this.lvGACResults.SmallImageList = this.imageList;\n            this.lvGACResults.TabIndex = 1;\n            this.lvGACResults.UseCompatibleStateImageBehavior = false;\n            this.lvGACResults.View = System.Windows.Forms.View.Details;\n            // \n            // col1\n            // \n            this.col1.DisplayIndex = 1;\n            this.col1.Text = \"Result\";\n            this.col1.Width = 293;\n            // \n            // col2\n            // \n            this.col2.DisplayIndex = 0;\n            this.col2.Text = \"Assembly Name\";\n            this.col2.Width = 451;\n            // \n            // imageList\n            // \n            this.imageList.ImageStream = ((System.Windows.Forms.ImageListStreamer)(resources.GetObject(\"imageList.ImageStream\")));\n            this.imageList.TransparentColor = System.Drawing.Color.Transparent;\n            this.imageList.Images.SetKeyName(0, \"Success.png\");\n            this.imageList.Images.SetKeyName(1, \"Error.png\");\n            // \n            // AssemblyGACResults\n            // \n            this.AutoScaleDimensions = new System.Drawing.SizeF(6F, 13F);\n            this.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font;\n            this.ClientSize = new System.Drawing.Size(660, 416);\n            this.Controls.Add(this.lvGACResults);\n            this.Controls.Add(this.btnOK);\n            this.FormBorderStyle = System.Windows.Forms.FormBorderStyle.FixedSingle;\n            this.Icon = ((System.Drawing.Icon)(resources.GetObject(\"$this.Icon\")));\n            this.MaximizeBox = false;\n            this.MinimizeBox = false;\n            this.Name = \"AssemblyGACResults\";\n            this.StartPosition = System.Windows.Forms.FormStartPosition.CenterParent;\n            this.Text = \"AssemblyGACResults\";\n            this.Load += new System.EventHandler(this.AssemblyGACResults_Load);\n            this.ResumeLayout(false);\n\n        }\n\n        #endregion\n\n        private System.Windows.Forms.Button btnOK;\n        private System.Windows.Forms.ListView lvGACResults;\n        private System.Windows.Forms.ColumnHeader col2;\n        private System.Windows.Forms.ColumnHeader col1;\n        private System.Windows.Forms.ImageList imageList;\n    }\n}"]}
{"filename": "AssemblyCacheExplorer/Settings.Designer.cs", "chunked_list": ["\ufeffnamespace AssemblyCacheExplorer\n{\n    partial class Settings\n    {\n        /// <summary>\n        /// Required designer variable.\n        /// </summary>\n        private System.ComponentModel.IContainer components = null;\n\n        /// <summary>\n        /// Clean up any resources being used.\n        /// </summary>\n        /// <param name=\"disposing\">true if managed resources should be disposed; otherwise, false.</param>", "        protected override void Dispose(bool disposing)\n        {\n            if (disposing && (components != null))\n            {\n                components.Dispose();\n            }\n            base.Dispose(disposing);\n        }\n\n        #region Windows Form Designer generated code\n\n        /// <summary>\n        /// Required method for Designer support - do not modify\n        /// the contents of this method with the code editor.\n        /// </summary>", "        private void InitializeComponent()\n        {\n            System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(Settings));\n            this.btnOK = new System.Windows.Forms.Button();\n            this.btnCancel = new System.Windows.Forms.Button();\n            this.lblAssemblyFolderCLR2 = new System.Windows.Forms.Label();\n            this.lblAssemblyFolderCLR4 = new System.Windows.Forms.Label();\n            this.txtAssemblyFolderCLR2 = new System.Windows.Forms.TextBox();\n            this.txtAssemblyFolderCLR4 = new System.Windows.Forms.TextBox();\n            this.btnReset = new System.Windows.Forms.Button();\n            this.chkBackupAssemblies = new System.Windows.Forms.CheckBox();\n            this.SuspendLayout();\n            // \n            // btnOK\n            // \n            this.btnOK.Location = new System.Drawing.Point(242, 236);\n            this.btnOK.Name = \"btnOK\";\n            this.btnOK.Size = new System.Drawing.Size(75, 23);\n            this.btnOK.TabIndex = 0;\n            this.btnOK.Text = \"&OK\";\n            this.btnOK.UseVisualStyleBackColor = true;\n            this.btnOK.Click += new System.EventHandler(this.btnOK_Click);\n            // \n            // btnCancel\n            // \n            this.btnCancel.Location = new System.Drawing.Point(323, 236);\n            this.btnCancel.Name = \"btnCancel\";\n            this.btnCancel.Size = new System.Drawing.Size(75, 23);\n            this.btnCancel.TabIndex = 1;\n            this.btnCancel.Text = \"&Cancel\";\n            this.btnCancel.UseVisualStyleBackColor = true;\n            this.btnCancel.Click += new System.EventHandler(this.btnCancel_Click);\n            // \n            // lblAssemblyFolderCLR2\n            // \n            this.lblAssemblyFolderCLR2.AutoSize = true;\n            this.lblAssemblyFolderCLR2.Location = new System.Drawing.Point(12, 9);\n            this.lblAssemblyFolderCLR2.Name = \"lblAssemblyFolderCLR2\";\n            this.lblAssemblyFolderCLR2.Size = new System.Drawing.Size(116, 13);\n            this.lblAssemblyFolderCLR2.TabIndex = 2;\n            this.lblAssemblyFolderCLR2.Text = \"CLR2 Assembly Folder:\";\n            // \n            // lblAssemblyFolderCLR4\n            // \n            this.lblAssemblyFolderCLR4.AutoSize = true;\n            this.lblAssemblyFolderCLR4.Location = new System.Drawing.Point(12, 60);\n            this.lblAssemblyFolderCLR4.Name = \"lblAssemblyFolderCLR4\";\n            this.lblAssemblyFolderCLR4.Size = new System.Drawing.Size(116, 13);\n            this.lblAssemblyFolderCLR4.TabIndex = 3;\n            this.lblAssemblyFolderCLR4.Text = \"CLR4 Assembly Folder:\";\n            // \n            // txtAssemblyFolderCLR2\n            // \n            this.txtAssemblyFolderCLR2.Location = new System.Drawing.Point(12, 25);\n            this.txtAssemblyFolderCLR2.Name = \"txtAssemblyFolderCLR2\";\n            this.txtAssemblyFolderCLR2.Size = new System.Drawing.Size(376, 20);\n            this.txtAssemblyFolderCLR2.TabIndex = 4;\n            // \n            // txtAssemblyFolderCLR4\n            // \n            this.txtAssemblyFolderCLR4.Location = new System.Drawing.Point(12, 76);\n            this.txtAssemblyFolderCLR4.Name = \"txtAssemblyFolderCLR4\";\n            this.txtAssemblyFolderCLR4.Size = new System.Drawing.Size(376, 20);\n            this.txtAssemblyFolderCLR4.TabIndex = 5;\n            // \n            // btnReset\n            // \n            this.btnReset.Location = new System.Drawing.Point(12, 236);\n            this.btnReset.Name = \"btnReset\";\n            this.btnReset.Size = new System.Drawing.Size(75, 23);\n            this.btnReset.TabIndex = 6;\n            this.btnReset.Text = \"&Reset\";\n            this.btnReset.UseVisualStyleBackColor = true;\n            this.btnReset.Click += new System.EventHandler(this.btnRestoreDefaults_Click);\n            // \n            // chkBackupAssemblies\n            // \n            this.chkBackupAssemblies.AutoSize = true;\n            this.chkBackupAssemblies.Location = new System.Drawing.Point(12, 122);\n            this.chkBackupAssemblies.Name = \"chkBackupAssemblies\";\n            this.chkBackupAssemblies.Size = new System.Drawing.Size(295, 17);\n            this.chkBackupAssemblies.TabIndex = 7;\n            this.chkBackupAssemblies.Text = \"Backup assemblies during Install and Uninstall operations\";\n            this.chkBackupAssemblies.UseVisualStyleBackColor = true;\n            // \n            // Settings\n            // \n            this.AutoScaleDimensions = new System.Drawing.SizeF(6F, 13F);\n            this.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font;\n            this.ClientSize = new System.Drawing.Size(410, 271);\n            this.Controls.Add(this.chkBackupAssemblies);\n            this.Controls.Add(this.btnReset);\n            this.Controls.Add(this.txtAssemblyFolderCLR4);\n            this.Controls.Add(this.txtAssemblyFolderCLR2);\n            this.Controls.Add(this.lblAssemblyFolderCLR4);\n            this.Controls.Add(this.lblAssemblyFolderCLR2);\n            this.Controls.Add(this.btnCancel);\n            this.Controls.Add(this.btnOK);\n            this.FormBorderStyle = System.Windows.Forms.FormBorderStyle.FixedSingle;\n            this.Icon = ((System.Drawing.Icon)(resources.GetObject(\"$this.Icon\")));\n            this.MaximizeBox = false;\n            this.MinimizeBox = false;\n            this.Name = \"Settings\";\n            this.StartPosition = System.Windows.Forms.FormStartPosition.CenterParent;\n            this.Text = \"Settings\";\n            this.Load += new System.EventHandler(this.Settings_Load);\n            this.ResumeLayout(false);\n            this.PerformLayout();\n\n        }\n\n        #endregion\n\n        private System.Windows.Forms.Button btnOK;\n        private System.Windows.Forms.Button btnCancel;\n        private System.Windows.Forms.Label lblAssemblyFolderCLR2;\n        private System.Windows.Forms.Label lblAssemblyFolderCLR4;\n        private System.Windows.Forms.TextBox txtAssemblyFolderCLR2;\n        private System.Windows.Forms.TextBox txtAssemblyFolderCLR4;\n        private System.Windows.Forms.Button btnReset;\n        private System.Windows.Forms.CheckBox chkBackupAssemblies;\n    }\n}"]}
{"filename": "AssemblyCacheExplorer/AssemblyProperties.Designer.cs", "chunked_list": ["\ufeffnamespace AssemblyCacheExplorer\n{\n    partial class AssemblyProperties\n    {\n        /// <summary>\n        /// Required designer variable.\n        /// </summary>\n        private System.ComponentModel.IContainer components = null;\n\n        /// <summary>\n        /// Clean up any resources being used.\n        /// </summary>\n        /// <param name=\"disposing\">true if managed resources should be disposed; otherwise, false.</param>", "        protected override void Dispose(bool disposing)\n        {\n            if (disposing && (components != null))\n            {\n                components.Dispose();\n            }\n            base.Dispose(disposing);\n        }\n\n        #region Windows Form Designer generated code\n\n        /// <summary>\n        /// Required method for Designer support - do not modify\n        /// the contents of this method with the code editor.\n        /// </summary>", "        private void InitializeComponent()\n        {\n            System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(AssemblyProperties));\n            this.pnlAssemblyProperties = new System.Windows.Forms.Panel();\n            this.lblRuntimeVersionValue = new System.Windows.Forms.Label();\n            this.lblRuntimeVersion = new System.Windows.Forms.Label();\n            this.lblProductNameValue = new System.Windows.Forms.Label();\n            this.lblCompanyValue = new System.Windows.Forms.Label();\n            this.lblFileDescriptionValue = new System.Windows.Forms.Label();\n            this.lblFileVersionValue = new System.Windows.Forms.Label();\n            this.lblAssemblyFilenameValue = new System.Windows.Forms.Label();\n            this.lblFileSizeValue = new System.Windows.Forms.Label();\n            this.lblModifiedDateValue = new System.Windows.Forms.Label();\n            this.lblProcesorArchitectureValue = new System.Windows.Forms.Label();\n            this.lblPublicKeyTokenValue = new System.Windows.Forms.Label();\n            this.lblCultureValue = new System.Windows.Forms.Label();\n            this.lblAssemblyVersionValue = new System.Windows.Forms.Label();\n            this.lblAssemblyNameValue = new System.Windows.Forms.Label();\n            this.lblProductName = new System.Windows.Forms.Label();\n            this.lblCompany = new System.Windows.Forms.Label();\n            this.lblFileDescription = new System.Windows.Forms.Label();\n            this.lblFileVersion = new System.Windows.Forms.Label();\n            this.lblAssemblyFilename = new System.Windows.Forms.Label();\n            this.lblFileSize = new System.Windows.Forms.Label();\n            this.lblModifiedDate = new System.Windows.Forms.Label();\n            this.lblProcessorArchitecture = new System.Windows.Forms.Label();\n            this.lblPublicKeyToken = new System.Windows.Forms.Label();\n            this.lblCulture = new System.Windows.Forms.Label();\n            this.lblAssemblyVersion = new System.Windows.Forms.Label();\n            this.lblAssemblyName = new System.Windows.Forms.Label();\n            this.btnOK = new System.Windows.Forms.Button();\n            this.pnlAssemblyProperties.SuspendLayout();\n            this.SuspendLayout();\n            // \n            // pnlAssemblyProperties\n            // \n            this.pnlAssemblyProperties.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;\n            this.pnlAssemblyProperties.Controls.Add(this.lblRuntimeVersionValue);\n            this.pnlAssemblyProperties.Controls.Add(this.lblRuntimeVersion);\n            this.pnlAssemblyProperties.Controls.Add(this.lblProductNameValue);\n            this.pnlAssemblyProperties.Controls.Add(this.lblCompanyValue);\n            this.pnlAssemblyProperties.Controls.Add(this.lblFileDescriptionValue);\n            this.pnlAssemblyProperties.Controls.Add(this.lblFileVersionValue);\n            this.pnlAssemblyProperties.Controls.Add(this.lblAssemblyFilenameValue);\n            this.pnlAssemblyProperties.Controls.Add(this.lblFileSizeValue);\n            this.pnlAssemblyProperties.Controls.Add(this.lblModifiedDateValue);\n            this.pnlAssemblyProperties.Controls.Add(this.lblProcesorArchitectureValue);\n            this.pnlAssemblyProperties.Controls.Add(this.lblPublicKeyTokenValue);\n            this.pnlAssemblyProperties.Controls.Add(this.lblCultureValue);\n            this.pnlAssemblyProperties.Controls.Add(this.lblAssemblyVersionValue);\n            this.pnlAssemblyProperties.Controls.Add(this.lblAssemblyNameValue);\n            this.pnlAssemblyProperties.Controls.Add(this.lblProductName);\n            this.pnlAssemblyProperties.Controls.Add(this.lblCompany);\n            this.pnlAssemblyProperties.Controls.Add(this.lblFileDescription);\n            this.pnlAssemblyProperties.Controls.Add(this.lblFileVersion);\n            this.pnlAssemblyProperties.Controls.Add(this.lblAssemblyFilename);\n            this.pnlAssemblyProperties.Controls.Add(this.lblFileSize);\n            this.pnlAssemblyProperties.Controls.Add(this.lblModifiedDate);\n            this.pnlAssemblyProperties.Controls.Add(this.lblProcessorArchitecture);\n            this.pnlAssemblyProperties.Controls.Add(this.lblPublicKeyToken);\n            this.pnlAssemblyProperties.Controls.Add(this.lblCulture);\n            this.pnlAssemblyProperties.Controls.Add(this.lblAssemblyVersion);\n            this.pnlAssemblyProperties.Controls.Add(this.lblAssemblyName);\n            this.pnlAssemblyProperties.Location = new System.Drawing.Point(12, 12);\n            this.pnlAssemblyProperties.Name = \"pnlAssemblyProperties\";\n            this.pnlAssemblyProperties.Size = new System.Drawing.Size(528, 391);\n            this.pnlAssemblyProperties.TabIndex = 0;\n            // \n            // lblRuntimeVersionValue\n            // \n            this.lblRuntimeVersionValue.AutoSize = true;\n            this.lblRuntimeVersionValue.Location = new System.Drawing.Point(162, 159);\n            this.lblRuntimeVersionValue.Name = \"lblRuntimeVersionValue\";\n            this.lblRuntimeVersionValue.Size = new System.Drawing.Size(14, 13);\n            this.lblRuntimeVersionValue.TabIndex = 25;\n            this.lblRuntimeVersionValue.Text = \"T\";\n            // \n            // lblRuntimeVersion\n            // \n            this.lblRuntimeVersion.AutoSize = true;\n            this.lblRuntimeVersion.Location = new System.Drawing.Point(24, 159);\n            this.lblRuntimeVersion.Name = \"lblRuntimeVersion\";\n            this.lblRuntimeVersion.Size = new System.Drawing.Size(87, 13);\n            this.lblRuntimeVersion.TabIndex = 24;\n            this.lblRuntimeVersion.Text = \"Runtime Version:\";\n            // \n            // lblProductNameValue\n            // \n            this.lblProductNameValue.AutoSize = true;\n            this.lblProductNameValue.Location = new System.Drawing.Point(162, 341);\n            this.lblProductNameValue.Name = \"lblProductNameValue\";\n            this.lblProductNameValue.Size = new System.Drawing.Size(14, 13);\n            this.lblProductNameValue.TabIndex = 23;\n            this.lblProductNameValue.Text = \"T\";\n            // \n            // lblCompanyValue\n            // \n            this.lblCompanyValue.AutoSize = true;\n            this.lblCompanyValue.Location = new System.Drawing.Point(162, 315);\n            this.lblCompanyValue.Name = \"lblCompanyValue\";\n            this.lblCompanyValue.Size = new System.Drawing.Size(14, 13);\n            this.lblCompanyValue.TabIndex = 22;\n            this.lblCompanyValue.Text = \"T\";\n            // \n            // lblFileDescriptionValue\n            // \n            this.lblFileDescriptionValue.AutoSize = true;\n            this.lblFileDescriptionValue.Location = new System.Drawing.Point(162, 289);\n            this.lblFileDescriptionValue.Name = \"lblFileDescriptionValue\";\n            this.lblFileDescriptionValue.Size = new System.Drawing.Size(14, 13);\n            this.lblFileDescriptionValue.TabIndex = 21;\n            this.lblFileDescriptionValue.Text = \"T\";\n            // \n            // lblFileVersionValue\n            // \n            this.lblFileVersionValue.AutoSize = true;\n            this.lblFileVersionValue.Location = new System.Drawing.Point(162, 263);\n            this.lblFileVersionValue.Name = \"lblFileVersionValue\";\n            this.lblFileVersionValue.Size = new System.Drawing.Size(14, 13);\n            this.lblFileVersionValue.TabIndex = 20;\n            this.lblFileVersionValue.Text = \"T\";\n            // \n            // lblAssemblyFilenameValue\n            // \n            this.lblAssemblyFilenameValue.AutoSize = true;\n            this.lblAssemblyFilenameValue.Location = new System.Drawing.Point(162, 237);\n            this.lblAssemblyFilenameValue.Name = \"lblAssemblyFilenameValue\";\n            this.lblAssemblyFilenameValue.Size = new System.Drawing.Size(14, 13);\n            this.lblAssemblyFilenameValue.TabIndex = 19;\n            this.lblAssemblyFilenameValue.Text = \"T\";\n            // \n            // lblFileSizeValue\n            // \n            this.lblFileSizeValue.AutoSize = true;\n            this.lblFileSizeValue.Location = new System.Drawing.Point(162, 211);\n            this.lblFileSizeValue.Name = \"lblFileSizeValue\";\n            this.lblFileSizeValue.Size = new System.Drawing.Size(14, 13);\n            this.lblFileSizeValue.TabIndex = 18;\n            this.lblFileSizeValue.Text = \"T\";\n            // \n            // lblModifiedDateValue\n            // \n            this.lblModifiedDateValue.AutoSize = true;\n            this.lblModifiedDateValue.Location = new System.Drawing.Point(162, 185);\n            this.lblModifiedDateValue.Name = \"lblModifiedDateValue\";\n            this.lblModifiedDateValue.Size = new System.Drawing.Size(14, 13);\n            this.lblModifiedDateValue.TabIndex = 17;\n            this.lblModifiedDateValue.Text = \"T\";\n            // \n            // lblProcesorArchitectureValue\n            // \n            this.lblProcesorArchitectureValue.AutoSize = true;\n            this.lblProcesorArchitectureValue.Location = new System.Drawing.Point(162, 133);\n            this.lblProcesorArchitectureValue.Name = \"lblProcesorArchitectureValue\";\n            this.lblProcesorArchitectureValue.Size = new System.Drawing.Size(14, 13);\n            this.lblProcesorArchitectureValue.TabIndex = 16;\n            this.lblProcesorArchitectureValue.Text = \"T\";\n            // \n            // lblPublicKeyTokenValue\n            // \n            this.lblPublicKeyTokenValue.AutoSize = true;\n            this.lblPublicKeyTokenValue.Location = new System.Drawing.Point(162, 107);\n            this.lblPublicKeyTokenValue.Name = \"lblPublicKeyTokenValue\";\n            this.lblPublicKeyTokenValue.Size = new System.Drawing.Size(14, 13);\n            this.lblPublicKeyTokenValue.TabIndex = 15;\n            this.lblPublicKeyTokenValue.Text = \"T\";\n            // \n            // lblCultureValue\n            // \n            this.lblCultureValue.AutoSize = true;\n            this.lblCultureValue.Location = new System.Drawing.Point(162, 81);\n            this.lblCultureValue.Name = \"lblCultureValue\";\n            this.lblCultureValue.Size = new System.Drawing.Size(14, 13);\n            this.lblCultureValue.TabIndex = 14;\n            this.lblCultureValue.Text = \"T\";\n            // \n            // lblAssemblyVersionValue\n            // \n            this.lblAssemblyVersionValue.AutoSize = true;\n            this.lblAssemblyVersionValue.Location = new System.Drawing.Point(162, 55);\n            this.lblAssemblyVersionValue.Name = \"lblAssemblyVersionValue\";\n            this.lblAssemblyVersionValue.Size = new System.Drawing.Size(14, 13);\n            this.lblAssemblyVersionValue.TabIndex = 13;\n            this.lblAssemblyVersionValue.Text = \"T\";\n            // \n            // lblAssemblyNameValue\n            // \n            this.lblAssemblyNameValue.AutoSize = true;\n            this.lblAssemblyNameValue.Location = new System.Drawing.Point(162, 29);\n            this.lblAssemblyNameValue.Name = \"lblAssemblyNameValue\";\n            this.lblAssemblyNameValue.Size = new System.Drawing.Size(14, 13);\n            this.lblAssemblyNameValue.TabIndex = 12;\n            this.lblAssemblyNameValue.Text = \"T\";\n            // \n            // lblProductName\n            // \n            this.lblProductName.AutoSize = true;\n            this.lblProductName.Location = new System.Drawing.Point(24, 341);\n            this.lblProductName.Name = \"lblProductName\";\n            this.lblProductName.Size = new System.Drawing.Size(78, 13);\n            this.lblProductName.TabIndex = 11;\n            this.lblProductName.Text = \"Product Name:\";\n            // \n            // lblCompany\n            // \n            this.lblCompany.AutoSize = true;\n            this.lblCompany.Location = new System.Drawing.Point(24, 315);\n            this.lblCompany.Name = \"lblCompany\";\n            this.lblCompany.Size = new System.Drawing.Size(54, 13);\n            this.lblCompany.TabIndex = 10;\n            this.lblCompany.Text = \"Company:\";\n            // \n            // lblFileDescription\n            // \n            this.lblFileDescription.AutoSize = true;\n            this.lblFileDescription.Location = new System.Drawing.Point(24, 289);\n            this.lblFileDescription.Name = \"lblFileDescription\";\n            this.lblFileDescription.Size = new System.Drawing.Size(82, 13);\n            this.lblFileDescription.TabIndex = 9;\n            this.lblFileDescription.Text = \"File Description:\";\n            // \n            // lblFileVersion\n            // \n            this.lblFileVersion.AutoSize = true;\n            this.lblFileVersion.Location = new System.Drawing.Point(24, 263);\n            this.lblFileVersion.Name = \"lblFileVersion\";\n            this.lblFileVersion.Size = new System.Drawing.Size(64, 13);\n            this.lblFileVersion.TabIndex = 8;\n            this.lblFileVersion.Text = \"File Version:\";\n            // \n            // lblAssemblyFilename\n            // \n            this.lblAssemblyFilename.AutoSize = true;\n            this.lblAssemblyFilename.Location = new System.Drawing.Point(24, 237);\n            this.lblAssemblyFilename.Name = \"lblAssemblyFilename\";\n            this.lblAssemblyFilename.Size = new System.Drawing.Size(99, 13);\n            this.lblAssemblyFilename.TabIndex = 7;\n            this.lblAssemblyFilename.Text = \"Assembly Filename:\";\n            // \n            // lblFileSize\n            // \n            this.lblFileSize.AutoSize = true;\n            this.lblFileSize.Location = new System.Drawing.Point(24, 211);\n            this.lblFileSize.Name = \"lblFileSize\";\n            this.lblFileSize.Size = new System.Drawing.Size(49, 13);\n            this.lblFileSize.TabIndex = 6;\n            this.lblFileSize.Text = \"File Size:\";\n            // \n            // lblModifiedDate\n            // \n            this.lblModifiedDate.AutoSize = true;\n            this.lblModifiedDate.Location = new System.Drawing.Point(24, 185);\n            this.lblModifiedDate.Name = \"lblModifiedDate\";\n            this.lblModifiedDate.Size = new System.Drawing.Size(76, 13);\n            this.lblModifiedDate.TabIndex = 5;\n            this.lblModifiedDate.Text = \"Modified Date:\";\n            // \n            // lblProcessorArchitecture\n            // \n            this.lblProcessorArchitecture.AutoSize = true;\n            this.lblProcessorArchitecture.Location = new System.Drawing.Point(24, 133);\n            this.lblProcessorArchitecture.Name = \"lblProcessorArchitecture\";\n            this.lblProcessorArchitecture.Size = new System.Drawing.Size(117, 13);\n            this.lblProcessorArchitecture.TabIndex = 4;\n            this.lblProcessorArchitecture.Text = \"Processor Architecture:\";\n            // \n            // lblPublicKeyToken\n            // \n            this.lblPublicKeyToken.AutoSize = true;\n            this.lblPublicKeyToken.Location = new System.Drawing.Point(24, 107);\n            this.lblPublicKeyToken.Name = \"lblPublicKeyToken\";\n            this.lblPublicKeyToken.Size = new System.Drawing.Size(94, 13);\n            this.lblPublicKeyToken.TabIndex = 3;\n            this.lblPublicKeyToken.Text = \"Public Key Token:\";\n            // \n            // lblCulture\n            // \n            this.lblCulture.AutoSize = true;\n            this.lblCulture.Location = new System.Drawing.Point(24, 81);\n            this.lblCulture.Name = \"lblCulture\";\n            this.lblCulture.Size = new System.Drawing.Size(43, 13);\n            this.lblCulture.TabIndex = 2;\n            this.lblCulture.Text = \"Culture:\";\n            // \n            // lblAssemblyVersion\n            // \n            this.lblAssemblyVersion.AutoSize = true;\n            this.lblAssemblyVersion.Location = new System.Drawing.Point(26, 55);\n            this.lblAssemblyVersion.Name = \"lblAssemblyVersion\";\n            this.lblAssemblyVersion.Size = new System.Drawing.Size(92, 13);\n            this.lblAssemblyVersion.TabIndex = 1;\n            this.lblAssemblyVersion.Text = \"Assembly Version:\";\n            // \n            // lblAssemblyName\n            // \n            this.lblAssemblyName.AutoSize = true;\n            this.lblAssemblyName.Location = new System.Drawing.Point(24, 29);\n            this.lblAssemblyName.Name = \"lblAssemblyName\";\n            this.lblAssemblyName.Size = new System.Drawing.Size(85, 13);\n            this.lblAssemblyName.TabIndex = 0;\n            this.lblAssemblyName.Text = \"Assembly Name:\";\n            // \n            // btnOK\n            // \n            this.btnOK.Location = new System.Drawing.Point(465, 414);\n            this.btnOK.Name = \"btnOK\";\n            this.btnOK.Size = new System.Drawing.Size(75, 23);\n            this.btnOK.TabIndex = 1;\n            this.btnOK.Text = \"&OK\";\n            this.btnOK.UseVisualStyleBackColor = true;\n            this.btnOK.Click += new System.EventHandler(this.btnOK_Click);\n            // \n            // AssemblyProperties\n            // \n            this.AutoScaleDimensions = new System.Drawing.SizeF(6F, 13F);\n            this.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font;\n            this.ClientSize = new System.Drawing.Size(552, 449);\n            this.Controls.Add(this.btnOK);\n            this.Controls.Add(this.pnlAssemblyProperties);\n            this.FormBorderStyle = System.Windows.Forms.FormBorderStyle.FixedSingle;\n            this.Icon = ((System.Drawing.Icon)(resources.GetObject(\"$this.Icon\")));\n            this.MaximizeBox = false;\n            this.MinimizeBox = false;\n            this.Name = \"AssemblyProperties\";\n            this.StartPosition = System.Windows.Forms.FormStartPosition.CenterParent;\n            this.Text = \"Assembly Properties\";\n            this.Load += new System.EventHandler(this.AssemblyProperties_Load);\n            this.pnlAssemblyProperties.ResumeLayout(false);\n            this.pnlAssemblyProperties.PerformLayout();\n            this.ResumeLayout(false);\n\n        }\n\n        #endregion\n\n        private System.Windows.Forms.Panel pnlAssemblyProperties;\n        private System.Windows.Forms.Button btnOK;\n        private System.Windows.Forms.Label lblFileSize;\n        private System.Windows.Forms.Label lblModifiedDate;\n        private System.Windows.Forms.Label lblProcessorArchitecture;\n        private System.Windows.Forms.Label lblPublicKeyToken;\n        private System.Windows.Forms.Label lblCulture;\n        private System.Windows.Forms.Label lblAssemblyVersion;\n        private System.Windows.Forms.Label lblAssemblyName;\n        private System.Windows.Forms.Label lblAssemblyFilename;\n        private System.Windows.Forms.Label lblFileDescription;\n        private System.Windows.Forms.Label lblFileVersion;\n        private System.Windows.Forms.Label lblProductName;\n        private System.Windows.Forms.Label lblCompany;\n        private System.Windows.Forms.Label lblProductNameValue;\n        private System.Windows.Forms.Label lblCompanyValue;\n        private System.Windows.Forms.Label lblFileDescriptionValue;\n        private System.Windows.Forms.Label lblFileVersionValue;\n        private System.Windows.Forms.Label lblAssemblyFilenameValue;\n        private System.Windows.Forms.Label lblFileSizeValue;\n        private System.Windows.Forms.Label lblModifiedDateValue;\n        private System.Windows.Forms.Label lblProcesorArchitectureValue;\n        private System.Windows.Forms.Label lblPublicKeyTokenValue;\n        private System.Windows.Forms.Label lblCultureValue;\n        private System.Windows.Forms.Label lblAssemblyVersionValue;\n        private System.Windows.Forms.Label lblAssemblyNameValue;\n        private System.Windows.Forms.Label lblRuntimeVersionValue;\n        private System.Windows.Forms.Label lblRuntimeVersion;\n    }\n}"]}
{"filename": "AssemblyCacheExplorer/Program.cs", "chunked_list": ["\ufeffusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Windows.Forms;\nusing System.Diagnostics;\nusing System.Runtime.InteropServices;\n\nnamespace AssemblyCacheExplorer\n{\n    static class Program\n    {\n        [DllImport(\"user32.dll\")]", "{\n    static class Program\n    {\n        [DllImport(\"user32.dll\")]\n        private static extern int ShowWindow(IntPtr hWnd, int nCmdShow);\n\n        [DllImport(\"user32.dll\")]\n        private static extern int SetForegroundWindow(IntPtr hWnd);\n\n        /// <summary>\n        /// The main entry point for the application.\n        /// </summary>\n        [STAThread]\n        static void Main()\n        {\n            const int SW_RESTORE = 9;\n\n            Process pThis = Process.GetCurrentProcess();", "            foreach (Process p in Process.GetProcesses())\n            {\n                if (p.Id != pThis.Id && p.ProcessName == pThis.ProcessName)\n                {\n                    MessageBox.Show(\"Assembly Cache Explorer is already running.\", \"Assembly Cache Explorer\", MessageBoxButtons.OK, MessageBoxIcon.Information);\n\n                    IntPtr hWnd = p.MainWindowHandle;\n                    ShowWindow(hWnd, SW_RESTORE);\n                    SetForegroundWindow(hWnd);\n\n                    return;\n                }\n            }\n\n            Application.EnableVisualStyles();\n            Application.SetCompatibleTextRenderingDefault(false);\n            Application.Run(new AssemblyCacheExplorer());\n        }\n    }\n}\n"]}
{"filename": "AssemblyCacheExplorer/AssemblyCacheExplorer.cs", "chunked_list": ["\ufeffusing System;\nusing System.Collections.Generic;\nusing System.ComponentModel;\nusing System.Data;\nusing System.Drawing;\nusing System.Linq;\nusing System.Text;\nusing System.Windows.Forms;\nusing System.Collections;\nusing System.Diagnostics;", "using System.Collections;\nusing System.Diagnostics;\nusing System.Configuration;\nusing System.Reflection;\nusing System.IO;\nusing AssemblyCacheHelper;\nusing AssemblyCacheHelper.DTO;\nusing AssemblyCacheExplorer.ListView;\n\nnamespace AssemblyCacheExplorer", "\nnamespace AssemblyCacheExplorer\n{\n    public partial class AssemblyCacheExplorer : Form\n    {\n        const string _AssemblyFolderCLR2 = \"AssemblyFolderCLR2\";\n        const string _AssemblyFolderCLR4 = \"AssemblyFolderCLR4\";\n        const string _BackupAssemblies = \"BackupAssemblies\";\n\n        static bool _appLoaded = false;\n        static int _lastPercentComplete = 0;\n        static ListViewSorter _lvSorter = new ListViewSorter();\n\n        private List<NetAssembly> _netAssemblyList = new List<NetAssembly>();", "        private bool _bgWorkerCompleted = true;\n        private bool _closePending = false;\n        \n        public AssemblyCacheExplorer()\n        {\n            InitializeComponent();\n        }\n\n        private void AssemblyCacheExplorer_Load(object sender, EventArgs e)\n        {\n            //enable background worker progress reporting and cancellation\n            bgWorker.WorkerReportsProgress = true;\n            bgWorker.WorkerSupportsCancellation = true;\n        }\n", "        private void AssemblyCacheExplorer_Load(object sender, EventArgs e)\n        {\n            //enable background worker progress reporting and cancellation\n            bgWorker.WorkerReportsProgress = true;\n            bgWorker.WorkerSupportsCancellation = true;\n        }\n\n        private void AssemblyCacheExplorer_FormClosing(object sender, FormClosingEventArgs e)\n        {\n            if (!_bgWorkerCompleted && !_closePending)\n            {\n                _closePending = true;\n                e.Cancel = true;", "            if (!_bgWorkerCompleted && !_closePending)\n            {\n                _closePending = true;\n                e.Cancel = true;\n                if (bgWorker.IsBusy) bgWorker.CancelAsync();\n            }\n        }\n\n        private void bgWorker_DoWork(object sender, DoWorkEventArgs e)\n        {\n            _bgWorkerCompleted = false;\n            e.Result = \"\";\n\n            string assemblyFolderCLR2 = ConfigurationManager.AppSettings[_AssemblyFolderCLR2];", "        private void bgWorker_DoWork(object sender, DoWorkEventArgs e)\n        {\n            _bgWorkerCompleted = false;\n            e.Result = \"\";\n\n            string assemblyFolderCLR2 = ConfigurationManager.AppSettings[_AssemblyFolderCLR2];\n            if (!Directory.Exists(assemblyFolderCLR2)) throw new System.ApplicationException(String.Format(\"AssemblyFolderCLR2 folder does not exist ({0})\", assemblyFolderCLR2));\n\n            string assemblyFolderCLR4 = ConfigurationManager.AppSettings[_AssemblyFolderCLR4];\n            if (!Directory.Exists(assemblyFolderCLR4)) throw new System.ApplicationException(String.Format(\"AssemblyFolderCLR4 folder does not exist ({0})\", assemblyFolderCLR4));\n\n            _netAssemblyList.Clear();\n            List<NetAssemblyFile> assemblyFileList = new List<NetAssemblyFile>();\n\n            string[] assemblyFiles;\n            assemblyFiles = Directory.GetFiles(assemblyFolderCLR2, \"*.dll\", SearchOption.AllDirectories);", "            if (!Directory.Exists(assemblyFolderCLR4)) throw new System.ApplicationException(String.Format(\"AssemblyFolderCLR4 folder does not exist ({0})\", assemblyFolderCLR4));\n\n            _netAssemblyList.Clear();\n            List<NetAssemblyFile> assemblyFileList = new List<NetAssemblyFile>();\n\n            string[] assemblyFiles;\n            assemblyFiles = Directory.GetFiles(assemblyFolderCLR2, \"*.dll\", SearchOption.AllDirectories);\n            foreach (string assemblyFileName in assemblyFiles)\n                    assemblyFileList.Add(new NetAssemblyFile() { AssemblyFilename = assemblyFileName, RuntimeVersion = \"CLR2\" });\n\n            assemblyFiles = Directory.GetFiles(assemblyFolderCLR4, \"*.dll\", SearchOption.AllDirectories);", "            foreach (string assemblyFileName in assemblyFiles)\n                    assemblyFileList.Add(new NetAssemblyFile() { AssemblyFilename = assemblyFileName, RuntimeVersion = \"CLR4\" });\n\n            for (int i = 0; i < assemblyFileList.Count(); i++)\n            {\n                NetAssembly netAssembly = NetAssemblies.GetAssemblyInfo(assemblyFileList[i].AssemblyFilename, assemblyFileList[i].RuntimeVersion);\n                _netAssemblyList.Add(netAssembly);\n\n                int percentComplete = Convert.ToInt32(100.00 / assemblyFileList.Count() * (i + 1));\n\n                if (percentComplete != _lastPercentComplete)\n                {\n                    bgWorker.ReportProgress(percentComplete, \"\");\n                    _lastPercentComplete = percentComplete;\n                }\n            }\n        }\n", "                if (percentComplete != _lastPercentComplete)\n                {\n                    bgWorker.ReportProgress(percentComplete, \"\");\n                    _lastPercentComplete = percentComplete;\n                }\n            }\n        }\n\n        private void bgWorker_ProgressChanged(object sender, ProgressChangedEventArgs e)\n        {\n            SetProgressBar(e.ProgressPercentage);\n        }\n", "        private void bgWorker_ProgressChanged(object sender, ProgressChangedEventArgs e)\n        {\n            SetProgressBar(e.ProgressPercentage);\n        }\n\n        private void bgWorker_RunWorkerCompleted(object sender, RunWorkerCompletedEventArgs e)\n        {\n            _bgWorkerCompleted = true;\n            toolStripProgressBar.Visible = false;\n            this.Cursor = Cursors.Default;\n\n            RefreshAssemblyCacheView();\n\n            try\n            {\n                string cache = AssemblyCacheHelper.Serialization.SerializeObject(_netAssemblyList);\n                StreamWriter sw = new StreamWriter(\"NetAssemblyCache.xml\");\n                sw.WriteLine(cache);\n                sw.Close();\n            }\n            catch\n            {\n            }\n\n            BeReady();\n", "            if (_closePending) \n                this.Close();\n        }\n\n        private void ReloadAssemblyCacheView()\n        {\n            try\n            {\n                this.Cursor = Cursors.WaitCursor;\n                toolStripProgressBar.Visible = true;\n                SetProgressBar(0);\n\n                BeBusy();\n                bgWorker.RunWorkerAsync();\n            }", "            catch (Exception ex)\n            {\n                MessageBox.Show(\"Error: \" + ex.Message, \"Error\", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);\n            }\n        }\n\n        private void SetProgressBar(int percentage)\n        {\n            toolStripProgressBar.Value = percentage;\n            toolStripStatusLabel.Text = String.Format(\"Loading Assemblies {0}%\", toolStripProgressBar.Value);\n            statusStrip.Refresh();\n        }\n", "        private void toolStripRuntimeVersionComboBox_SelectedIndexChanged(object sender, EventArgs e)\n        {\n            if (_bgWorkerCompleted && !_closePending)\n            {\n                RefreshAssemblyCacheView();\n            }\n        }\n\n        private void RefreshAssemblyCacheView()\n        {\n            try\n            {\n                lvAssemblyCache.ListViewItemSorter = null;\n\n                lvAssemblyCache.Visible = false;\n                lvAssemblyCache.Items.Clear();\n\n                List<NetAssembly> netAssemblyListFiltered = (from assembly in _netAssemblyList\n                                                             where (toolStripRuntimeVersionComboBox.SelectedIndex == 0) || \n                                                                   (toolStripRuntimeVersionComboBox.SelectedIndex == 1 && assembly.RuntimeVersion == \"CLR2\") ||\n                                                                   (toolStripRuntimeVersionComboBox.SelectedIndex == 2 && assembly.RuntimeVersion == \"CLR4\")\n                                                             select assembly).ToList<NetAssembly>();\n\n                PopulateAssemblyCacheView(netAssemblyListFiltered);\n            }\n            finally\n            {\n                lvAssemblyCache.Visible = true;\n            }\n        }\n", "        private void RefreshAssemblyCacheView()\n        {\n            try\n            {\n                lvAssemblyCache.ListViewItemSorter = null;\n\n                lvAssemblyCache.Visible = false;\n                lvAssemblyCache.Items.Clear();\n\n                List<NetAssembly> netAssemblyListFiltered = (from assembly in _netAssemblyList\n                                                             where (toolStripRuntimeVersionComboBox.SelectedIndex == 0) || \n                                                                   (toolStripRuntimeVersionComboBox.SelectedIndex == 1 && assembly.RuntimeVersion == \"CLR2\") ||\n                                                                   (toolStripRuntimeVersionComboBox.SelectedIndex == 2 && assembly.RuntimeVersion == \"CLR4\")\n                                                             select assembly).ToList<NetAssembly>();\n\n                PopulateAssemblyCacheView(netAssemblyListFiltered);\n            }\n            finally\n            {\n                lvAssemblyCache.Visible = true;\n            }\n        }\n", "        private void PopulateAssemblyCacheView(List<NetAssembly> netAssemblyList)\n        {\n            var netAssemblyListFiltered = (from assembly in netAssemblyList\n                                           where assembly.AssemblyName.ToLower().Contains(toolStripFilterTextBox.Text.ToLower())\n                                           select assembly);\n\n            foreach (NetAssembly netAssembly in netAssemblyListFiltered)\n            {\n                ListViewItem lvi = new ListViewItem(new string[] { netAssembly.AssemblyName, netAssembly.AssemblyVersion, netAssembly.PublicKeyToken, netAssembly.RuntimeVersion, netAssembly.FileVersion, netAssembly.ModifiedDate });\n                lvi.Tag = netAssembly;\n                lvi.ImageIndex = 0;\n                lvAssemblyCache.Items.Add(lvi);\n            }\n\n            toolStripStatusLabel.Text = String.Format(\"{0} Assemblies, {1} Selected\", lvAssemblyCache.Items.Count, lvAssemblyCache.SelectedItems.Count);\n        }\n", "        private void AssemblyCacheExplorer_Activated(object sender, EventArgs e)\n        {\n            if (!_appLoaded)\n            {\n                this.Refresh();\n                toolStripRuntimeVersionComboBox.SelectedIndex = 0;\n                ReloadAssemblyCacheView();\n                _appLoaded = true;\n            }\n        }\n", "        private void toolStripRefreshButton_Click(object sender, EventArgs e)\n        {\n            if (_bgWorkerCompleted && !_closePending)\n            {\n                ReloadAssemblyCacheView();\n            }\n        }\n\n        private void toolStripBackupFolderButton_Click(object sender, EventArgs e)\n        {\n            try\n            {", "        private void toolStripBackupFolderButton_Click(object sender, EventArgs e)\n        {\n            try\n            {\n                if (_bgWorkerCompleted && !_closePending)\n                {\n                    string appFolderFullPath = Path.GetDirectoryName(Application.ExecutablePath);\n                    string backupFolderFullPath = Path.Combine(appFolderFullPath, \"Backup\");\n\n                    Process process = new Process();\n                    if (Directory.Exists(backupFolderFullPath))\n                    {\n                        process.StartInfo.FileName = \"explorer.exe\";\n                        process.StartInfo.Arguments = backupFolderFullPath;\n                        process.StartInfo.UseShellExecute = false;\n                        process.StartInfo.CreateNoWindow = true;\n                        process.StartInfo.RedirectStandardOutput = true;\n                        process.Start();\n                    }\n                    else\n                    {\n                        MessageBox.Show(\"Backup folder deos not exist.\", \"Information\", MessageBoxButtons.OK, MessageBoxIcon.Information);\n                    }\n                }\n            }", "                    if (Directory.Exists(backupFolderFullPath))\n                    {\n                        process.StartInfo.FileName = \"explorer.exe\";\n                        process.StartInfo.Arguments = backupFolderFullPath;\n                        process.StartInfo.UseShellExecute = false;\n                        process.StartInfo.CreateNoWindow = true;\n                        process.StartInfo.RedirectStandardOutput = true;\n                        process.Start();\n                    }\n                    else\n                    {\n                        MessageBox.Show(\"Backup folder deos not exist.\", \"Information\", MessageBoxButtons.OK, MessageBoxIcon.Information);\n                    }\n                }\n            }", "            catch (Exception ex)\n            {\n                MessageBox.Show(\"Error: \" + ex.Message, \"Error\", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);\n            }\n        }\n\n        private void lvAssemblyCache_Click(object sender, EventArgs e)\n        {\n            if (_bgWorkerCompleted && !_closePending)\n            {\n                toolStripStatusLabel.Text = String.Format(\"{0} Assemblies, {1} Selected\", lvAssemblyCache.Items.Count, lvAssemblyCache.SelectedItems.Count);\n            }\n        }\n", "            if (_bgWorkerCompleted && !_closePending)\n            {\n                toolStripStatusLabel.Text = String.Format(\"{0} Assemblies, {1} Selected\", lvAssemblyCache.Items.Count, lvAssemblyCache.SelectedItems.Count);\n            }\n        }\n\n        private void lvAssemblyCache_SelectedIndexChanged(object sender, EventArgs e)\n        {\n            if (_bgWorkerCompleted && !_closePending)\n            {\n                toolStripStatusLabel.Text = String.Format(\"{0} Assemblies, {1} Selected\", lvAssemblyCache.Items.Count, lvAssemblyCache.SelectedItems.Count);\n            }\n        }\n", "            if (_bgWorkerCompleted && !_closePending)\n            {\n                toolStripStatusLabel.Text = String.Format(\"{0} Assemblies, {1} Selected\", lvAssemblyCache.Items.Count, lvAssemblyCache.SelectedItems.Count);\n            }\n        }\n\n        private void toolStripFilterTextBox_TextChanged(object sender, EventArgs e)\n        {\n            if (_bgWorkerCompleted && !_closePending)\n            {\n                this.Cursor = Cursors.WaitCursor;\n\n                RefreshAssemblyCacheView();\n\n                this.Cursor = Cursors.Default;\n            }\n        }\n\n        #region InstallAssemblies\n", "            if (_bgWorkerCompleted && !_closePending)\n            {\n                this.Cursor = Cursors.WaitCursor;\n\n                RefreshAssemblyCacheView();\n\n                this.Cursor = Cursors.Default;\n            }\n        }\n\n        #region InstallAssemblies\n", "        private void openFileDialog_FileOk(object sender, CancelEventArgs e)\n        {\n            string unmanagedAssemblies = \"\";\n\n            foreach (string fileFullPath in openFileDialog.FileNames)\n            {\n                try\n                {\n                    AssemblyName asmname = AssemblyName.GetAssemblyName(fileFullPath);\n                }\n                catch\n                {\n                    unmanagedAssemblies = unmanagedAssemblies + fileFullPath + \"\\n\";\n                }\n            }\n", "            if (unmanagedAssemblies != \"\")\n            {\n                MessageBox.Show(\"The following modules were expected to contain an assembly manifest: \\n\\n\" + unmanagedAssemblies, \"Error\", MessageBoxButtons.OK, MessageBoxIcon.Error);\n                e.Cancel = true;\n            }\n        }\n\n        private void toolStripInstallButton_Click(object sender, EventArgs e)\n        {\n            if (_bgWorkerCompleted && !_closePending)\n            {\n                openFileDialog.AddExtension = true;\n                openFileDialog.FileName = \"\";\n                openFileDialog.DefaultExt = \".dll\";\n                openFileDialog.CheckFileExists = true;\n                openFileDialog.Filter = \"DLL files|*.dll\";\n\n                DialogResult dialogResult = openFileDialog.ShowDialog();", "            if (_bgWorkerCompleted && !_closePending)\n            {\n                openFileDialog.AddExtension = true;\n                openFileDialog.FileName = \"\";\n                openFileDialog.DefaultExt = \".dll\";\n                openFileDialog.CheckFileExists = true;\n                openFileDialog.Filter = \"DLL files|*.dll\";\n\n                DialogResult dialogResult = openFileDialog.ShowDialog();\n                if (dialogResult == DialogResult.OK)\n                {\n                    List<string> assembliesToInstall = new List<string>();\n", "                if (dialogResult == DialogResult.OK)\n                {\n                    List<string> assembliesToInstall = new List<string>();\n\n                    foreach (string fileFullPath in openFileDialog.FileNames)\n                    {\n                        assembliesToInstall.Add(fileFullPath);\n                    }\n\n                    if (assembliesToInstall.Count > 0)\n                        InstallAssemblies(assembliesToInstall);\n                }\n            }\n        }\n", "                    if (assembliesToInstall.Count > 0)\n                        InstallAssemblies(assembliesToInstall);\n                }\n            }\n        }\n\n        private void lvAssemblyCache_DragEnter(object sender, DragEventArgs e)\n        {\n            if (e.Data.GetDataPresent(DataFormats.FileDrop))\n                e.Effect = DragDropEffects.Copy;\n            else\n                e.Effect = DragDropEffects.None;\n        }\n", "            if (e.Data.GetDataPresent(DataFormats.FileDrop))\n                e.Effect = DragDropEffects.Copy;\n            else\n                e.Effect = DragDropEffects.None;\n        }\n\n        private void lvAssemblyCache_DragDrop(object sender, DragEventArgs e)\n        {\n            if (_bgWorkerCompleted && !_closePending)\n            {\n                Array files = (Array)e.Data.GetData(DataFormats.FileDrop);\n", "            if (_bgWorkerCompleted && !_closePending)\n            {\n                Array files = (Array)e.Data.GetData(DataFormats.FileDrop);\n\n                if (files != null)\n                {\n                    List<string> assembliesToInstall = new List<string>();\n\n                    foreach (string fileFullPath in files)\n                    {\n                        assembliesToInstall.Add(fileFullPath);\n                    }\n\n                    InstallAssemblies(assembliesToInstall);\n                }\n            }\n        }\n", "                    foreach (string fileFullPath in files)\n                    {\n                        assembliesToInstall.Add(fileFullPath);\n                    }\n\n                    InstallAssemblies(assembliesToInstall);\n                }\n            }\n        }\n\n        private void InstallAssemblies(List<string> assembliesToInstall)\n        {\n            bool backupAssemblies = Convert.ToBoolean(ConfigurationManager.AppSettings[_BackupAssemblies] ?? \"True\");", "        private void InstallAssemblies(List<string> assembliesToInstall)\n        {\n            bool backupAssemblies = Convert.ToBoolean(ConfigurationManager.AppSettings[_BackupAssemblies] ?? \"True\");\n            if (backupAssemblies)\n            {\n                List<string> assembliesToBackup = new List<string>();\n                foreach (string assemblyFullPath in assembliesToInstall)\n                {\n                    NetAssembly netAssembly = NetAssemblies.GetAssemblyInfo(assemblyFullPath, \"\");\n                    var netAssemblyFileName = (from assembly in _netAssemblyList\n                                               where (assembly.AssemblyName == netAssembly.AssemblyName) &&\n                                                     (assembly.AssemblyVersion == netAssembly.AssemblyVersion)\n                                               select assembly.AssemblyFilename).FirstOrDefault();\n", "                    if (netAssemblyFileName != null) assembliesToBackup.Add(netAssemblyFileName);\n                }\n                if (assembliesToBackup.Count > 0) BackupAssemblies(assembliesToBackup, \"InstallAssemblies\");\n            }\n\n            Dictionary<string, string> results = new Dictionary<string, string>();\n            foreach (string assemblyFullPath in assembliesToInstall)\n            {\n                string gacUtilFullPath = Path.Combine(Path.GetDirectoryName(Application.ExecutablePath), @\"GACUtil\\gacutil.exe\");\n                string result = GACUtil.AssemblyInstall(gacUtilFullPath, assemblyFullPath, false);\n                results.Add(Path.GetFileName(assemblyFullPath), result);\n            }\n\n            Application.DoEvents();\n\n            AssemblyGACResults frmAssemblyGACResults = new AssemblyGACResults();\n            frmAssemblyGACResults.GACResultsTitle = \"Install Assembly Summary\";\n            frmAssemblyGACResults.GACResults = results;\n            frmAssemblyGACResults.ShowDialog();\n\n            ReloadAssemblyCacheView();\n        }\n\n        #endregion\n\n        #region AssemblyProperties\n", "        private void lvAssemblyCache_DoubleClick(object sender, EventArgs e)\n        {\n            if (_bgWorkerCompleted && !_closePending)\n            {\n                ShowAssemblyProperties();\n            }\n        }\n\n        private void toolStripMenuProperties_Click(object sender, EventArgs e)\n        {\n            if (_bgWorkerCompleted && !_closePending)\n            {\n                ShowAssemblyProperties();\n            }\n        }\n", "        private void toolStripMenuProperties_Click(object sender, EventArgs e)\n        {\n            if (_bgWorkerCompleted && !_closePending)\n            {\n                ShowAssemblyProperties();\n            }\n        }\n\n        private void ShowAssemblyProperties()\n        {\n            List<NetAssembly> netAssemblyList = new List<NetAssembly>();\n", "        private void ShowAssemblyProperties()\n        {\n            List<NetAssembly> netAssemblyList = new List<NetAssembly>();\n\n            if (lvAssemblyCache.SelectedItems.Count == 0)\n            {\n                MessageBox.Show(\"No Assembly Selected\", \"Assembly Properties\", MessageBoxButtons.OK, MessageBoxIcon.Error);\n            }\n            else if (lvAssemblyCache.SelectedItems.Count > 1)\n            {\n                MessageBox.Show(\"Multiple Assemblies Selected\", \"Assembly Properties\", MessageBoxButtons.OK, MessageBoxIcon.Error);\n            }\n            else\n            {\n                AssemblyProperties frmAssemblyProperties = new AssemblyProperties();\n                frmAssemblyProperties.NetAssemblyProperties = (NetAssembly)lvAssemblyCache.SelectedItems[0].Tag;\n                frmAssemblyProperties.ShowDialog();\n            }\n        }\n\n        #endregion\n\n        #region UninstallAssembly\n", "            else if (lvAssemblyCache.SelectedItems.Count > 1)\n            {\n                MessageBox.Show(\"Multiple Assemblies Selected\", \"Assembly Properties\", MessageBoxButtons.OK, MessageBoxIcon.Error);\n            }\n            else\n            {\n                AssemblyProperties frmAssemblyProperties = new AssemblyProperties();\n                frmAssemblyProperties.NetAssemblyProperties = (NetAssembly)lvAssemblyCache.SelectedItems[0].Tag;\n                frmAssemblyProperties.ShowDialog();\n            }\n        }\n\n        #endregion\n\n        #region UninstallAssembly\n", "        private void toolStripUninstallButton_Click(object sender, EventArgs e)\n        {\n            if (_bgWorkerCompleted && !_closePending)\n            {\n                UninstallAssemblies();\n            }\n        }\n\n        private void toolStripMenuUninstall_Click(object sender, EventArgs e)\n        {\n            if (_bgWorkerCompleted && !_closePending)\n            {\n                UninstallAssemblies();\n            }\n        }\n", "        private void toolStripMenuUninstall_Click(object sender, EventArgs e)\n        {\n            if (_bgWorkerCompleted && !_closePending)\n            {\n                UninstallAssemblies();\n            }\n        }\n\n        private void UninstallAssemblies()\n        {\n            if (lvAssemblyCache.SelectedItems.Count == 0)\n            {\n                MessageBox.Show(\"No Assemblies Selected\", \"Uninstall Assembly\", MessageBoxButtons.OK, MessageBoxIcon.Error);\n            }\n            else\n            {\n                string message;", "        private void UninstallAssemblies()\n        {\n            if (lvAssemblyCache.SelectedItems.Count == 0)\n            {\n                MessageBox.Show(\"No Assemblies Selected\", \"Uninstall Assembly\", MessageBoxButtons.OK, MessageBoxIcon.Error);\n            }\n            else\n            {\n                string message;\n                if (lvAssemblyCache.SelectedItems.Count == 1)\n                    message = String.Format(\"Are you sure you want to uninstall '{0}' ?\", ((NetAssembly)lvAssemblyCache.SelectedItems[0].Tag).AssemblyName);\n                else\n                    message = String.Format(\"Are you sure you want to uninstall these {0} items ?\", lvAssemblyCache.SelectedItems.Count);\n\n                DialogResult dialogResult = MessageBox.Show(message, \"Confirm Assembly Uninstall\", MessageBoxButtons.YesNo, MessageBoxIcon.Question);\n", "                if (lvAssemblyCache.SelectedItems.Count == 1)\n                    message = String.Format(\"Are you sure you want to uninstall '{0}' ?\", ((NetAssembly)lvAssemblyCache.SelectedItems[0].Tag).AssemblyName);\n                else\n                    message = String.Format(\"Are you sure you want to uninstall these {0} items ?\", lvAssemblyCache.SelectedItems.Count);\n\n                DialogResult dialogResult = MessageBox.Show(message, \"Confirm Assembly Uninstall\", MessageBoxButtons.YesNo, MessageBoxIcon.Question);\n\n                if (dialogResult == DialogResult.Yes)\n                {\n                    bool backupAssemblies = Convert.ToBoolean(ConfigurationManager.AppSettings[_BackupAssemblies] ?? \"True\");\n                    if (backupAssemblies)\n                    {\n                        List<string> assembliesToBackup = new List<string>();", "                    if (backupAssemblies)\n                    {\n                        List<string> assembliesToBackup = new List<string>();\n                        for (int i = 0; i < lvAssemblyCache.SelectedItems.Count; i++)\n                        {\n                            NetAssembly assembly = (NetAssembly)lvAssemblyCache.SelectedItems[i].Tag;\n                            assembliesToBackup.Add(assembly.AssemblyFilename);\n                        }\n                        if (assembliesToBackup.Count > 0) BackupAssemblies(assembliesToBackup, \"UninstallAssemblies\");\n                    }\n\n                    Dictionary<string, string> results = new Dictionary<string, string>();", "                        if (assembliesToBackup.Count > 0) BackupAssemblies(assembliesToBackup, \"UninstallAssemblies\");\n                    }\n\n                    Dictionary<string, string> results = new Dictionary<string, string>();\n                    for (int i = 0; i < lvAssemblyCache.SelectedItems.Count; i++)\n                    {\n                        NetAssembly asm = (NetAssembly)lvAssemblyCache.SelectedItems[i].Tag;\n                        string gacUtilFullPath = Path.Combine(Path.GetDirectoryName(Application.ExecutablePath), @\"GACUtil\\gacutil.exe\");\n\n                        string result = GACUtil.AssemblyUninstall(gacUtilFullPath, asm.AssemblyFullName.Replace(\" \", \"\"), false);\n\n                        results.Add(asm.AssemblyFullName, result);\n                    }\n\n                    ReloadAssemblyCacheView();\n\n                    AssemblyGACResults frmAssemblyGACResults = new AssemblyGACResults();\n                    frmAssemblyGACResults.GACResultsTitle = \"Uninstall Assembly Summary\";\n                    frmAssemblyGACResults.GACResults = results;\n                    frmAssemblyGACResults.ShowDialog();\n                }\n            }\n        }\n", "        private void BackupAssemblies(List<string> assembliesToBackup, string operation)\n        {\n            string appFolderFullPath = Path.GetDirectoryName(Application.ExecutablePath);\n            string backupFolderFullPath = Path.Combine(appFolderFullPath, \"Backup\");\n            string backupSubFolderFullPath = Path.Combine(backupFolderFullPath, DateTime.Now.ToString(\"yyyy-MM-dd_HHmm!ss_\") + operation);\n\n            if (!Directory.Exists(backupFolderFullPath)) Directory.CreateDirectory(backupFolderFullPath);\n            if (!Directory.Exists(backupSubFolderFullPath)) Directory.CreateDirectory(backupSubFolderFullPath);\n\n            foreach (string assemblyToBackup in assembliesToBackup)\n            {\n                string destinationFullPath = Path.Combine(backupSubFolderFullPath, Path.GetFileName(assemblyToBackup));\n                int suffix = 1;", "            foreach (string assemblyToBackup in assembliesToBackup)\n            {\n                string destinationFullPath = Path.Combine(backupSubFolderFullPath, Path.GetFileName(assemblyToBackup));\n                int suffix = 1;\n                while(File.Exists(destinationFullPath))\n                {\n                    destinationFullPath = destinationFullPath + suffix.ToString();\n                    suffix++;\n                }\n\n                File.Copy(assemblyToBackup, destinationFullPath);\n            }\n        }\n\n        #endregion\n\n        #region Export Assembly\n", "        private void toolStripExportAssemblyButton_Click(object sender, EventArgs e)\n        {\n            if (_bgWorkerCompleted && !_closePending)\n            {\n                ExportAssemblies();\n            }\n        }\n\n        private void toolStripMenuExport_Click(object sender, EventArgs e)\n        {\n            if (_bgWorkerCompleted && !_closePending)\n            {\n                ExportAssemblies();\n            }\n        }\n        ", "        private void toolStripMenuExport_Click(object sender, EventArgs e)\n        {\n            if (_bgWorkerCompleted && !_closePending)\n            {\n                ExportAssemblies();\n            }\n        }\n        \n        private void ExportAssemblies()\n        {\n            try\n            {", "        private void ExportAssemblies()\n        {\n            try\n            {\n                if (lvAssemblyCache.SelectedItems.Count == 0)\n                {\n                    MessageBox.Show(\"No Assemblies Selected\", \"Export Assembly\", MessageBoxButtons.OK, MessageBoxIcon.Error);\n                }\n                else\n                {\n                    folderBrowserDialog.Description = \"Select Export Folder\";\n                    DialogResult folderBrowserDialogResult = folderBrowserDialog.ShowDialog();\n", "                    if (folderBrowserDialogResult == DialogResult.OK)\n                    {\n                        string destinationFolder = folderBrowserDialog.SelectedPath;\n\n                        List<string> assembliesToExport = new List<string>();\n                        for (int i = 0; i < lvAssemblyCache.SelectedItems.Count; i++)\n                        {\n                            NetAssembly asm = (NetAssembly)lvAssemblyCache.SelectedItems[i].Tag;\n                            assembliesToExport.Add(asm.AssemblyFilename);\n                        }\n", "                        if (!Directory.Exists(destinationFolder))\n                        {\n                            MessageBox.Show(String.Format(\"Destination folder does not exist./n/n'{0}'.\", destinationFolder), \"Export Assemblies\", MessageBoxButtons.OK, MessageBoxIcon.Error);\n                            return;\n                        }\n\n                        foreach (string assemblyFullPath in assembliesToExport)\n                        {\n                            string assemblyFileName = Path.GetFileName(assemblyFullPath);\n                            string exportAssemblyFullPath = Path.Combine(destinationFolder, assemblyFileName);\n", "                            if (File.Exists(exportAssemblyFullPath))\n                            {\n                                DialogResult dialogResult = MessageBox.Show(String.Format(\"Assembly '{0}' already exists, overwrite ?\", assemblyFileName), \"Export Assemblies\", MessageBoxButtons.YesNo, MessageBoxIcon.Question);\n\n                                if (dialogResult == DialogResult.Yes)\n                                {\n                                    try\n                                    {\n                                        File.Delete(exportAssemblyFullPath);\n                                        File.Copy(assemblyFullPath, exportAssemblyFullPath);\n                                    }", "                                    catch (Exception ex)\n                                    {\n                                        string msg = String.Format(\"Assembly '{0}' could not be overwritten./n/nError:/n{1}\", assemblyFileName, ex.Message);\n                                        MessageBox.Show(msg, \"Export Assemblies\", MessageBoxButtons.OK, MessageBoxIcon.Error);\n                                    }\n\n                                }\n                            }\n                            else\n                            {\n                                File.Copy(assemblyFullPath, exportAssemblyFullPath);\n                            }\n                        }\n\n                        MessageBox.Show(\"Assembly Export completed successfully.\", \"Export Assembly\", MessageBoxButtons.OK, MessageBoxIcon.Information);\n                    }\n                }\n            }", "            catch (Exception ex)\n            {\n                MessageBox.Show(String.Format(\"Export Assemblies failed./n/nError:/n{0}\", ex.Message), \"Export Assemblies\", MessageBoxButtons.OK, MessageBoxIcon.Error);\n            }\n        }\n\n        #endregion\n\n        private void lvAssemblyCache_KeyUp(object sender, KeyEventArgs e)\n        {\n            if (_bgWorkerCompleted && !_closePending)\n            {", "        private void lvAssemblyCache_KeyUp(object sender, KeyEventArgs e)\n        {\n            if (_bgWorkerCompleted && !_closePending)\n            {\n                if (e.KeyCode == Keys.Delete)\n                {\n                    UninstallAssemblies();\n                }\n                else if (e.KeyCode == Keys.F5)\n                {\n                    ReloadAssemblyCacheView();\n                }\n            }\n        }\n", "                else if (e.KeyCode == Keys.F5)\n                {\n                    ReloadAssemblyCacheView();\n                }\n            }\n        }\n\n        private void toolStripSettingsButton_Click(object sender, EventArgs e)\n        {\n            if (_bgWorkerCompleted && !_closePending)\n            {\n                Settings frmSettings = new Settings();\n                frmSettings.ShowDialog();\n            }\n        }\n", "            if (_bgWorkerCompleted && !_closePending)\n            {\n                Settings frmSettings = new Settings();\n                frmSettings.ShowDialog();\n            }\n        }\n\n        private void toolStripAboutButton_Click(object sender, EventArgs e)\n        {\n            if (_bgWorkerCompleted && !_closePending)\n            {\n                About frmAbout = new About();\n                frmAbout.ShowDialog();\n            }\n        }\n", "            if (_bgWorkerCompleted && !_closePending)\n            {\n                About frmAbout = new About();\n                frmAbout.ShowDialog();\n            }\n        }\n\n        private void lvAssemblyCache_ColumnClick(object sender, ColumnClickEventArgs e)\n        {\n            if (_bgWorkerCompleted && !_closePending)\n            {\n                lvAssemblyCache.ListViewItemSorter = _lvSorter;\n", "            if (_bgWorkerCompleted && !_closePending)\n            {\n                lvAssemblyCache.ListViewItemSorter = _lvSorter;\n\n                if (_lvSorter.LastSortColumn == e.Column)\n                {\n                    if (lvAssemblyCache.Sorting == SortOrder.Ascending)\n                        lvAssemblyCache.Sorting = SortOrder.Descending;\n                    else\n                        lvAssemblyCache.Sorting = SortOrder.Ascending;\n                }\n                else\n                {\n                    lvAssemblyCache.Sorting = SortOrder.Descending;\n                }\n                _lvSorter.Column = e.Column;\n\n                lvAssemblyCache.Sort();\n            }\n        }\n", "        private void BeBusy()\n        {\n            toolStripInstallButton.Enabled = false;\n            toolStripUninstallButton.Enabled = false;\n            toolStripExportAssemblyButton.Enabled = false;\n            toolStripRefreshButton.Enabled = false;\n            toolStripBackupFolderButton.Enabled = false;\n            toolStripSettingsButton.Enabled = false;\n            toolStripFilterTextBox.Enabled = false;\n            toolStripRuntimeVersionComboBox.Enabled = false;\n            toolStripAboutButton.Enabled = false;\n\n            contextMenuStrip.Enabled = false;\n        }\n", "        private void BeReady()\n        {\n            toolStripInstallButton.Enabled = true;\n            toolStripUninstallButton.Enabled = true;\n            toolStripExportAssemblyButton.Enabled = true;\n            toolStripRefreshButton.Enabled = true;\n            toolStripBackupFolderButton.Enabled = true;\n            toolStripSettingsButton.Enabled = true;\n            toolStripFilterTextBox.Enabled = true;\n            toolStripRuntimeVersionComboBox.Enabled = true;\n            toolStripAboutButton.Enabled = true;\n\n            contextMenuStrip.Enabled = true;\n        }\n   }\n}\n"]}
{"filename": "AssemblyCacheExplorer/Properties/Settings.Designer.cs", "chunked_list": ["\ufeff//------------------------------------------------------------------------------\n// <auto-generated>\n//     This code was generated by a tool.\n//     Runtime Version:4.0.30319.42000\n//\n//     Changes to this file may cause incorrect behavior and will be lost if\n//     the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\n", "//------------------------------------------------------------------------------\n\nnamespace AssemblyCacheExplorer.Properties {\n    \n    \n    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]\n    [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator\", \"17.5.0.0\")]\n    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {\n        \n        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));\n        ", "        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));\n        \n        public static Settings Default {\n            get {\n                return defaultInstance;\n            }\n        }\n    }\n}\n"]}
{"filename": "AssemblyCacheExplorer/Properties/Resources.Designer.cs", "chunked_list": ["\ufeff//------------------------------------------------------------------------------\n// <auto-generated>\n//     This code was generated by a tool.\n//     Runtime Version:4.0.30319.42000\n//\n//     Changes to this file may cause incorrect behavior and will be lost if\n//     the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\n", "//------------------------------------------------------------------------------\n\nnamespace AssemblyCacheExplorer.Properties {\n    using System;\n    \n    \n    /// <summary>\n    ///   A strongly-typed resource class, for looking up localized strings, etc.\n    /// </summary>\n    // This class was auto-generated by the StronglyTypedResourceBuilder\n    // class via a tool like ResGen or Visual Studio.\n    // To add or remove a member, edit your .ResX file then rerun ResGen\n    // with the /str option, or rebuild your VS project.\n    [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"System.Resources.Tools.StronglyTypedResourceBuilder\", \"17.0.0.0\")]\n    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]\n    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]", "    /// </summary>\n    // This class was auto-generated by the StronglyTypedResourceBuilder\n    // class via a tool like ResGen or Visual Studio.\n    // To add or remove a member, edit your .ResX file then rerun ResGen\n    // with the /str option, or rebuild your VS project.\n    [global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"System.Resources.Tools.StronglyTypedResourceBuilder\", \"17.0.0.0\")]\n    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]\n    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]\n    internal class Resources {\n        \n        private static global::System.Resources.ResourceManager resourceMan;\n        ", "    internal class Resources {\n        \n        private static global::System.Resources.ResourceManager resourceMan;\n        \n        private static global::System.Globalization.CultureInfo resourceCulture;\n        \n        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute(\"Microsoft.Performance\", \"CA1811:AvoidUncalledPrivateCode\")]\n        internal Resources() {\n        }\n        \n        /// <summary>\n        ///   Returns the cached ResourceManager instance used by this class.\n        /// </summary>\n        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]\n        internal static global::System.Resources.ResourceManager ResourceManager {\n            get {", "                if (object.ReferenceEquals(resourceMan, null)) {\n                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager(\"AssemblyCacheExplorer.Properties.Resources\", typeof(Resources).Assembly);\n                    resourceMan = temp;\n                }\n                return resourceMan;\n            }\n        }\n        \n        /// <summary>\n        ///   Overrides the current thread's CurrentUICulture property for all\n        ///   resource lookups using this strongly typed resource class.\n        /// </summary>\n        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]\n        internal static global::System.Globalization.CultureInfo Culture {\n            get {\n                return resourceCulture;\n            }\n            set {\n                resourceCulture = value;\n            }\n        }\n    }\n}\n"]}
{"filename": "AssemblyCacheExplorer/Properties/AssemblyInfo.cs", "chunked_list": ["\ufeffusing System.Reflection;\nusing System.Runtime.CompilerServices;\nusing System.Runtime.InteropServices;\n\n// General Information about an assembly is controlled through the following \n// set of attributes. Change these attribute values to modify the information\n// associated with an assembly.\n[assembly: AssemblyTitle(\"AssemblyCacheExplorer\")]\n[assembly: AssemblyDescription(\"\")]\n[assembly: AssemblyConfiguration(\"\")]", "[assembly: AssemblyDescription(\"\")]\n[assembly: AssemblyConfiguration(\"\")]\n[assembly: AssemblyCompany(\"Microsoft\")]\n[assembly: AssemblyProduct(\"AssemblyCacheExplorer\")]\n[assembly: AssemblyCopyright(\"Copyright \u00a9 Microsoft 2011\")]\n[assembly: AssemblyTrademark(\"\")]\n[assembly: AssemblyCulture(\"\")]\n\n// Setting ComVisible to false makes the types in this assembly not visible \n// to COM components.  If you need to access a type in this assembly from ", "// Setting ComVisible to false makes the types in this assembly not visible \n// to COM components.  If you need to access a type in this assembly from \n// COM, set the ComVisible attribute to true on that type.\n[assembly: ComVisible(false)]\n\n// The following GUID is for the ID of the typelib if this project is exposed to COM\n[assembly: Guid(\"695a08f9-938b-4815-a99d-8c5ff0de7663\")]\n\n// Version information for an assembly consists of the following four values:\n//", "// Version information for an assembly consists of the following four values:\n//\n//      Major Version\n//      Minor Version \n//      Build Number\n//      Revision\n//\n// You can specify all the values or you can default the Build and Revision Numbers \n// by using the '*' as shown below:\n// [assembly: AssemblyVersion(\"1.0.*\")]", "// by using the '*' as shown below:\n// [assembly: AssemblyVersion(\"1.0.*\")]\n[assembly: AssemblyVersion(\"1.0.0.0\")]\n[assembly: AssemblyFileVersion(\"1.0.0.0\")]\n"]}
{"filename": "AssemblyCacheExplorer/ListView/ListViewSorter.cs", "chunked_list": ["\ufeffusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Windows.Forms;\n\nnamespace AssemblyCacheExplorer.ListView\n{\n    public class ListViewSorter : System.Collections.IComparer\n    {\n        int _column = 0;\n        int _lastSortColumn = 0;\n", "    public class ListViewSorter : System.Collections.IComparer\n    {\n        int _column = 0;\n        int _lastSortColumn = 0;\n\n        public int Column\n        {\n            get { return _column; }\n            set { _column = value; }\n        }\n", "        public int LastSortColumn\n        {\n            get { return _lastSortColumn; }\n            set { _lastSortColumn = value; }\n        }\n        \n        public int Compare(object o1, object o2)\n        {\n            if (!(o1 is ListViewItem)) return (0);\n            if (!(o2 is ListViewItem)) return (0);\n\n            ListViewItem lvi1 = (ListViewItem)o2;\n            string str1 = lvi1.SubItems[Column].Text;\n            ListViewItem lvi2 = (ListViewItem)o1;\n            string str2 = lvi2.SubItems[Column].Text;\n\n            int result;\n\n            DateTime dt1;\n            DateTime dt2;", "            if (!(o1 is ListViewItem)) return (0);\n            if (!(o2 is ListViewItem)) return (0);\n\n            ListViewItem lvi1 = (ListViewItem)o2;\n            string str1 = lvi1.SubItems[Column].Text;\n            ListViewItem lvi2 = (ListViewItem)o1;\n            string str2 = lvi2.SubItems[Column].Text;\n\n            int result;\n\n            DateTime dt1;\n            DateTime dt2;", "            if (DateTime.TryParse(str1, out dt1) && DateTime.TryParse(str2, out dt2))\n            {\n                if (lvi1.ListView.Sorting == SortOrder.Ascending)\n                    result = DateTime.Compare(dt1, dt2);\n                else\n                    result = DateTime.Compare(dt2, dt1);\n            }\n            else\n            {\n                if (lvi1.ListView.Sorting == SortOrder.Ascending)\n                    result = String.Compare(str1, str2);\n                else\n                    result = String.Compare(str2, str1);\n            }\n            LastSortColumn = Column;\n\n            return (result);\n        }\n    }   \n}\n", "                if (lvi1.ListView.Sorting == SortOrder.Ascending)\n                    result = String.Compare(str1, str2);\n                else\n                    result = String.Compare(str2, str1);\n            }\n            LastSortColumn = Column;\n\n            return (result);\n        }\n    }   \n}\n"]}
{"filename": "AssemblyCacheHelper/Utilities.cs", "chunked_list": ["\ufeffusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Diagnostics;\nusing System.IO;\n\nnamespace AssemblyCacheHelper\n{\n    public class Utilities\n    {", "{\n    public class Utilities\n    {\n        public static string RunProcess(string exePath, string arguments)\n        {\n            string result = \"\";\n\n            Process process = new Process();\n            process.StartInfo.FileName = exePath;\n            process.StartInfo.Arguments = arguments;\n            process.StartInfo.UseShellExecute = false;\n            process.StartInfo.CreateNoWindow = true;\n            process.StartInfo.RedirectStandardOutput = true;\n            process.Start();\n\n            StreamReader sr = process.StandardOutput;\n            result = sr.ReadToEnd();\n            process.WaitForExit();\n\n            return result;\n        }\n    }\n}\n"]}
{"filename": "AssemblyCacheHelper/Serialization.cs", "chunked_list": ["\ufeffusing System;\nusing System.IO;\nusing System.Text;\nusing System.Xml;\nusing System.Xml.Serialization;\n\nnamespace AssemblyCacheHelper\n{\n    public class Serialization\n    {\n        public static T DeserializeObject<T>(string xml)\n        {\n            XmlSerializer serializer = new XmlSerializer(typeof(T));\n            MemoryStream w = new MemoryStream(StringToUTF8ByteArray(xml));\n            XmlTextWriter writer = new XmlTextWriter(w, Encoding.UTF8);\n            return (T)serializer.Deserialize(w);\n        }\n", "    public class Serialization\n    {\n        public static T DeserializeObject<T>(string xml)\n        {\n            XmlSerializer serializer = new XmlSerializer(typeof(T));\n            MemoryStream w = new MemoryStream(StringToUTF8ByteArray(xml));\n            XmlTextWriter writer = new XmlTextWriter(w, Encoding.UTF8);\n            return (T)serializer.Deserialize(w);\n        }\n\n        public static string SerializeObject<T>(T obj)\n        {\n            try\n            {\n                MemoryStream w = new MemoryStream();\n                XmlSerializer serializer = new XmlSerializer(typeof(T));\n                XmlTextWriter writer = new XmlTextWriter(w, Encoding.UTF8);\n                writer.Formatting = Formatting.Indented;\n                writer.Indentation = 2;\n                serializer.Serialize((XmlWriter)writer, obj);\n                w = (MemoryStream)writer.BaseStream;\n                return UTF8ByteArrayToString(w.ToArray());\n            }\n            catch\n            {\n                return string.Empty;\n            }\n        }\n", "        public static string SerializeObject<T>(T obj)\n        {\n            try\n            {\n                MemoryStream w = new MemoryStream();\n                XmlSerializer serializer = new XmlSerializer(typeof(T));\n                XmlTextWriter writer = new XmlTextWriter(w, Encoding.UTF8);\n                writer.Formatting = Formatting.Indented;\n                writer.Indentation = 2;\n                serializer.Serialize((XmlWriter)writer, obj);\n                w = (MemoryStream)writer.BaseStream;\n                return UTF8ByteArrayToString(w.ToArray());\n            }\n            catch\n            {\n                return string.Empty;\n            }\n        }\n", "        private static byte[] StringToUTF8ByteArray(string pXmlString)\n        {\n            UTF8Encoding encoding = new UTF8Encoding();\n            return encoding.GetBytes(pXmlString);\n        }\n\n        private static string UTF8ByteArrayToString(byte[] characters)\n        {\n            UTF8Encoding encoding = new UTF8Encoding();\n            return encoding.GetString(characters);\n        }\n    }\n}\n\n"]}
{"filename": "AssemblyCacheHelper/NetAssemblies.cs", "chunked_list": ["\ufeffusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing AssemblyCacheHelper.DTO;\nusing System.Threading;\nusing System.Threading.Tasks;\nusing System.Resources;\n\nnamespace AssemblyCacheHelper", "\nnamespace AssemblyCacheHelper\n{\n    using System.IO;\n    using System.Reflection;\n    using System.Diagnostics;\n    using System.Text.RegularExpressions;\n\n    public class NetAssemblies\n    {\n        static List<NetAssembly> _netAssemblyCache = new List<NetAssembly>();\n", "    public class NetAssemblies\n    {\n        static List<NetAssembly> _netAssemblyCache = new List<NetAssembly>();\n\n        public static List<NetAssembly> NetAssemblyCache \n        {\n            get\n            {\n                if (_netAssemblyCache.Count() == 0)\n                {\n                    if (File.Exists(\"NetAssemblyCache.xml\"))\n                    {\n                        StreamReader sr = new StreamReader(\"NetAssemblyCache.xml\");\n                        _netAssemblyCache = AssemblyCacheHelper.Serialization.DeserializeObject<List<NetAssembly>>(sr.ReadToEnd());\n                        sr.Close();\n                    }\n                    else\n                    {\n                        Stream stm = Assembly.GetExecutingAssembly().GetManifestResourceStream(\"AssemblyCacheHelper.Resources.NetAssemblyCache.xml\");\n                        StreamReader sr = new StreamReader(stm);\n                        _netAssemblyCache = AssemblyCacheHelper.Serialization.DeserializeObject<List<NetAssembly>>(sr.ReadToEnd());\n                        sr.Close();\n                    }\n                }\n                return _netAssemblyCache;\n            }\n        }\n", "                if (_netAssemblyCache.Count() == 0)\n                {\n                    if (File.Exists(\"NetAssemblyCache.xml\"))\n                    {\n                        StreamReader sr = new StreamReader(\"NetAssemblyCache.xml\");\n                        _netAssemblyCache = AssemblyCacheHelper.Serialization.DeserializeObject<List<NetAssembly>>(sr.ReadToEnd());\n                        sr.Close();\n                    }\n                    else\n                    {\n                        Stream stm = Assembly.GetExecutingAssembly().GetManifestResourceStream(\"AssemblyCacheHelper.Resources.NetAssemblyCache.xml\");\n                        StreamReader sr = new StreamReader(stm);\n                        _netAssemblyCache = AssemblyCacheHelper.Serialization.DeserializeObject<List<NetAssembly>>(sr.ReadToEnd());\n                        sr.Close();\n                    }\n                }\n                return _netAssemblyCache;\n            }\n        }\n", "        public static NetAssembly GetAssemblyInfo(string assemblyFullPath, string runtimeVersion)\n        {\n            NetAssembly netAssembly = new NetAssembly();\n\n            FileInfo fi = new FileInfo(assemblyFullPath);\n            netAssembly.ModifiedDate = fi.LastWriteTime.ToString(\"dd/MM/yyyy HH:mm:ss\");\n            netAssembly.FileSize = fi.Length.ToString(\"###,###,##0.###\");\n            netAssembly.AssemblyFilename = assemblyFullPath;\n\n            var asmCache = (from asm in NetAssemblyCache\n                            where asm.ModifiedDate == netAssembly.ModifiedDate &&\n                                  asm.FileSize == netAssembly.FileSize &&\n                                  asm.AssemblyFilename == netAssembly.AssemblyFilename\n                            select asm).FirstOrDefault();\n", "            if (asmCache != null)\n            {\n                netAssembly.FileVersion = asmCache.FileVersion;\n                netAssembly.FileDescription = asmCache.FileDescription;\n                netAssembly.Company = asmCache.Company;\n                netAssembly.ProductName = asmCache.ProductName;\n                netAssembly.AssemblyName = asmCache.AssemblyName;\n                netAssembly.AssemblyFullName = asmCache.AssemblyFullName;\n                netAssembly.ProcessorArchitecture = asmCache.AssemblyFullName;\n                netAssembly.RuntimeVersion = asmCache.RuntimeVersion;\n                netAssembly.AssemblyVersion = asmCache.AssemblyVersion;\n                netAssembly.Culture = asmCache.Culture;\n                netAssembly.PublicKeyToken = asmCache.PublicKeyToken;\n            }\n            else\n            {\n                FileVersionInfo fvi = FileVersionInfo.GetVersionInfo(assemblyFullPath);\n                netAssembly.FileVersion = fvi.FileVersion;\n                netAssembly.FileDescription = fvi.FileDescription;\n                netAssembly.Company = fvi.CompanyName;\n                netAssembly.ProductName = fvi.ProductName;\n\n                AssemblyName asmName = AssemblyName.GetAssemblyName(assemblyFullPath);\n                netAssembly.AssemblyName = asmName.Name;\n                netAssembly.AssemblyFullName = asmName.FullName;\n                netAssembly.ProcessorArchitecture = asmName.ProcessorArchitecture.ToString();\n                netAssembly.RuntimeVersion = runtimeVersion;\n\n                string asmFullName = asmName.FullName;\n                string[] s = asmFullName.Split(',');\n                netAssembly.AssemblyVersion = s[1].Replace(\" Version=\", \"\");\n                netAssembly.Culture = s[2].Replace(\" Culture=\", \"\");\n                netAssembly.PublicKeyToken = s[3].Replace(\" PublicKeyToken=\", \"\");\n            }\n            \n            return netAssembly;\n        }\n", "        public static string GetImageRuntimeVersion(string assemblyFullPath)\n        {\n            AppDomain appDomain = null;\n            string assemblyVersion = \"\";\n            try \n            {\n                byte[] buffer = File.ReadAllBytes(assemblyFullPath);\n                appDomain = AppDomain.CreateDomain(\"TempAppDomain\");\n                Assembly assembly = appDomain.Load(buffer);\n\n                assemblyVersion = assembly.ImageRuntimeVersion;\n            }\n            catch\n            { \n            }\n            finally \n            { ", "                if (appDomain != null)\n                    AppDomain.Unload(appDomain); \n            }\n            return assemblyVersion;\n        }\n    }\n}\n"]}
{"filename": "AssemblyCacheHelper/GACUtil.cs", "chunked_list": ["\ufeffusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\n\nnamespace AssemblyCacheHelper\n{\n    public class GACUtil\n    {\n        public static string AssemblyInstall(string gacUtilFullPath, string assemblyFullPath, bool force)\n        {\n            string args = force ? String.Format(\"/i /f \\\"{0}\\\"\", assemblyFullPath) : String.Format(\"/i \\\"{0}\\\"\", assemblyFullPath);\n            string response = Utilities.RunProcess(gacUtilFullPath, args);\n            bool success = response.Contains(\"Assembly successfully added to the cache\");\n\n            return success ? \"\" : response;\n        }\n", "        public static string AssemblyInstall(string gacUtilFullPath, string assemblyFullPath, bool force)\n        {\n            string args = force ? String.Format(\"/i /f \\\"{0}\\\"\", assemblyFullPath) : String.Format(\"/i \\\"{0}\\\"\", assemblyFullPath);\n            string response = Utilities.RunProcess(gacUtilFullPath, args);\n            bool success = response.Contains(\"Assembly successfully added to the cache\");\n\n            return success ? \"\" : response;\n        }\n\n        public static string AssemblyUninstall(string gacUtilFullPath, string assemblyFullName, bool force)\n        {\n            string args = force ? String.Format(\"/uf \\\"{0}\\\"\", assemblyFullName) : String.Format(\"/u \\\"{0}\\\"\", assemblyFullName);\n            string response = Utilities.RunProcess(gacUtilFullPath, args);\n            bool success = response.Contains(\"Number of assemblies uninstalled = 1\") && response.Contains(\"Number of failures = 0\");\n\n            return success ? \"\" : response;\n        }\n", "        public static string AssemblyUninstall(string gacUtilFullPath, string assemblyFullName, bool force)\n        {\n            string args = force ? String.Format(\"/uf \\\"{0}\\\"\", assemblyFullName) : String.Format(\"/u \\\"{0}\\\"\", assemblyFullName);\n            string response = Utilities.RunProcess(gacUtilFullPath, args);\n            bool success = response.Contains(\"Number of assemblies uninstalled = 1\") && response.Contains(\"Number of failures = 0\");\n\n            return success ? \"\" : response;\n        }\n\n        public static bool AssemblyExists(string gacUtilFullPath, string assemblyFullName)\n        {\n            string args = String.Format(\"/l \\\"{0}\\\"\", assemblyFullName);\n            return Utilities.RunProcess(gacUtilFullPath, args).Contains(\"Number of items = 1\");\n        }\n    }\n}\n", "        public static bool AssemblyExists(string gacUtilFullPath, string assemblyFullName)\n        {\n            string args = String.Format(\"/l \\\"{0}\\\"\", assemblyFullName);\n            return Utilities.RunProcess(gacUtilFullPath, args).Contains(\"Number of items = 1\");\n        }\n    }\n}\n"]}
{"filename": "AssemblyCacheHelper/ThreadSafeList.cs", "chunked_list": ["\ufeffusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\n\nnamespace AssemblyCacheHelper\n{\n    public sealed class ThreadSafeList<T> \n    { \n        private readonly IList<T> list = new List<T>(); \n        private readonly object lockable = new object(); \n        ", "        private readonly IList<T> list = new List<T>(); \n        private readonly object lockable = new object(); \n        \n        public void Add(T t) \n        { \n            lock (lockable) \n            { \n                list.Add(t); \n            } \n        } \n        \n        public IList<T> GetSnapshot() \n        { \n            IList<T> result; \n            \n            lock (lockable) \n            { \n                result = new List<T>(list); \n            } \n            return result; \n        } \n    } \n}\n"]}
{"filename": "AssemblyCacheHelper/Properties/AssemblyInfo.cs", "chunked_list": ["\ufeffusing System.Reflection;\nusing System.Runtime.CompilerServices;\nusing System.Runtime.InteropServices;\n\n// General Information about an assembly is controlled through the following \n// set of attributes. Change these attribute values to modify the information\n// associated with an assembly.\n[assembly: AssemblyTitle(\"AssemblyCacheHelper\")]\n[assembly: AssemblyDescription(\"\")]\n[assembly: AssemblyConfiguration(\"\")]", "[assembly: AssemblyDescription(\"\")]\n[assembly: AssemblyConfiguration(\"\")]\n[assembly: AssemblyCompany(\"Microsoft\")]\n[assembly: AssemblyProduct(\"AssemblyCacheHelper\")]\n[assembly: AssemblyCopyright(\"Copyright \u00a9 Microsoft 2011\")]\n[assembly: AssemblyTrademark(\"\")]\n[assembly: AssemblyCulture(\"\")]\n\n// Setting ComVisible to false makes the types in this assembly not visible \n// to COM components.  If you need to access a type in this assembly from ", "// Setting ComVisible to false makes the types in this assembly not visible \n// to COM components.  If you need to access a type in this assembly from \n// COM, set the ComVisible attribute to true on that type.\n[assembly: ComVisible(false)]\n\n// The following GUID is for the ID of the typelib if this project is exposed to COM\n[assembly: Guid(\"94882efb-5619-41d8-8545-2f5542bc33bb\")]\n\n// Version information for an assembly consists of the following four values:\n//", "// Version information for an assembly consists of the following four values:\n//\n//      Major Version\n//      Minor Version \n//      Build Number\n//      Revision\n//\n// You can specify all the values or you can default the Build and Revision Numbers \n// by using the '*' as shown below:\n// [assembly: AssemblyVersion(\"1.0.*\")]", "// by using the '*' as shown below:\n// [assembly: AssemblyVersion(\"1.0.*\")]\n[assembly: AssemblyVersion(\"1.0.0.0\")]\n[assembly: AssemblyFileVersion(\"1.0.0.0\")]\n"]}
{"filename": "AssemblyCacheHelper/DTO/NetAssemblyFile.cs", "chunked_list": ["\ufeffusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\n\nnamespace AssemblyCacheHelper.DTO\n{\n    public class NetAssemblyFile\n    {\n        public string AssemblyFilename { get; set; }\n        public string RuntimeVersion { get; set; } \n    }\n}\n", "        public string AssemblyFilename { get; set; }\n        public string RuntimeVersion { get; set; } \n    }\n}\n"]}
{"filename": "AssemblyCacheHelper/DTO/NetAssembly.cs", "chunked_list": ["\ufeffusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\n\nnamespace AssemblyCacheHelper.DTO\n{\n    public class NetAssembly\n    {\n        public string AssemblyName { get; set; }\n        public string AssemblyFullName { get; set; }", "        public string AssemblyName { get; set; }\n        public string AssemblyFullName { get; set; }\n        public string AssemblyVersion { get; set; }\n        public string Culture { get; set; }\n        public string PublicKeyToken { get; set; }\n        public string ProcessorArchitecture { get; set; }\n        public string RuntimeVersion { get; set; }\n        public string ModifiedDate { get; set; }\n        public string FileSize { get; set; }\n        public string AssemblyFilename { get; set; }\n        public string FileVersion { get; set; }", "        public string FileSize { get; set; }\n        public string AssemblyFilename { get; set; }\n        public string FileVersion { get; set; }\n        public string FileDescription { get; set; }\n        public string Company { get; set; }\n        public string ProductName { get; set; }\n    }\n}\n"]}
