{"filename": "tools/createAuthToken.py", "chunked_list": ["import json\n\timport requests\n\tdef createAuthToken():\n\t    ip = input('Enter the IP: ')\n\t    input('The power button on the device should be held for 5-7 seconds, then you need to press enter within 30 seconds.')\n\t    print('Please wait.')\n\t    response = requests.post(f'http://{ip}:16021/api/v1/new')\n\t    data = json.loads(response.text)\n\t    print('auth_token created:', data['auth_token'])\n\tcreateAuthToken()"]}
{"filename": "tools/findNewDevice.py", "chunked_list": ["from ctypes import c_char_p\n\tfrom multiprocessing import Process, Manager\n\timport getmac\n\timport socket\n\tdef getMac(ip, mac):\n\t    macAddress = getmac.get_mac_address(ip=ip)\n\t    mac.value = macAddress\n\tdef getIPFromDevice():\n\t    deviceList = []\n\t    deviceCount = int(input('How many devices do you have in your local network?: '))\n", "    print('\\n[INFO] Please wait. This may take up to 2 minutes.')\n\t    localIP = socket.gethostbyname(socket.gethostname())\n\t    localIP = localIP[:localIP.rfind('.') - len(localIP) + 1]\n\t    for i in range(255):\n\t        ip = localIP + str(i)\n\t        print(round(i / 254 * 100), '%', end='\\r')\n\t        mac = Manager().Value(c_char_p, 'None')\n\t        p = Process(target=getMac, args=[ip, mac])\n\t        p.start()\n\t        p.join(0.5)\n", "        if p.is_alive():\n\t            p.terminate()\n\t        if mac.value != 'None':\n\t            if mac.value.startswith('00:55:da:5') or mac.value.startswith('80:8a:f7'):      # registered prefixes for nanoleaf MAC addresses https://maclookup.app/vendors/nanoleaf\n\t                deviceList.append(ip)\n\t                if len(deviceList) == deviceCount:\n\t                    break\n\t    if len(deviceList) > 0:\n\t        print(f'\\n\\n[SUCCESS] {len(deviceList)} device(s) found:\\n')\n\t        for i, device in enumerate(deviceList):\n", "            print(f'Device {i + 1}: {device}')\n\t    else:\n\t        print('\\n\\n[ERROR] No devices found. Please try again later.')\n\tif __name__ == '__main__':\n\t    getIPFromDevice()"]}
{"filename": "tools/getEffectData.py", "chunked_list": ["from nanoleafapi import *\n\timport json\n\timport requests\n\tip = 'ip'\n\tauth_token = 'auth_token'\n\tnl = Nanoleaf(ip, auth_token)\n\tdef getAllEffects():\n\t    return {\n\t        \"write\": {\n\t            \"command\": \"requestPlugins\",\n", "            \"version\": \"2.0\"\n\t        }\n\t    }\n\tdef getSpecificEffect(effect):\n\t    return {\n\t        \"write\": {\n\t            \"command\": \"request\",\n\t            \"animName\": effect\n\t        }\n\t    }\n", "command = getSpecificEffect('Aurora magic')\n\tcommandString = str(command).replace('\\'', '\\\"')\n\tresponse = requests.put(nl.url + '/effects', data=commandString)\n\tjsonOut = json.loads(response.text)\n\tprint(json.dumps(jsonOut, indent=2))"]}
{"filename": "src/ui_EffectButtons.py", "chunked_list": ["from effectList import effects\n\tfrom nicegui import ui\n\tfrom ui_EffectButton import Ui_EffectButton\n\tclass Ui_EffectButtons:\n\t    def __init__(self, eventHandler):\n\t        self.selectedEffect = 'Static'\n\t        self.eventHandler = eventHandler\n\t    def loadEffects(self, effectType):\n\t        with ui.row():\n\t            for effect in effects[effectType]:\n", "                Ui_EffectButton(effect, self.eventHandler)"]}
{"filename": "src/filemanager.py", "chunked_list": ["from enum import Enum\n\timport json\n\tclass File(Enum):\n\t    SETTINGS = 'settings.json'\n\t    EFFECTS = 'effects.json'\n\tclass Filemanager:\n\t    @staticmethod\n\t    def setValue(file, key, value):\n\t        with open(file.value, 'r') as settingsFile:\n\t            settings = json.load(settingsFile)\n", "        settings[key] = value\n\t        with open(file.value, 'w') as settingsFile:\n\t            json.dump(settings, settingsFile, indent=4)\n\t    @staticmethod\n\t    def getValue(file, key):\n\t        with open(file.value, 'r') as settingsFile:\n\t            settings = json.load(settingsFile)\n\t        return settings[key]\n\t    @staticmethod\n\t    def createFiles():\n", "        try:\n\t            Filemanager.getValue(File.SETTINGS, \"ip\")\n\t        except FileNotFoundError:\n\t            settings = {\"ip\": None, \"auth_token\": None, \"dark_mode\": True, \"accent_color\": \"#4500db\", \"language\": \"english\", \"native_mode\": False}\n\t            with open(File.SETTINGS.value, 'w') as settingsFile:\n\t                json.dump(settings, settingsFile, indent=4)\n\t        try:\n\t            Filemanager.getValue(File.EFFECTS, \"current_effect\")\n\t        except FileNotFoundError:\n\t            effects = {\"current_effect\": None}\n", "            with open(File.EFFECTS.value, 'w') as effectsFile:\n\t                json.dump(effects, effectsFile, indent=4)"]}
{"filename": "src/lightController.py", "chunked_list": ["from nanoleafapi import *\n\timport colorConverter\n\timport requests\n\tclass LightController:\n\t    def __init__(self):\n\t        self.nl = None\n\t        self.notifier = None\n\t    def initialize(self, ip, auth_token):\n\t        self.nl = Nanoleaf(ip, auth_token)\n\t    def setBrightness(self, value):\n", "        if self.isDeviceConnected():\n\t            self.nl.set_brightness(value)\n\t            self.notifier.notify(message=f'Set brightness to {value}%')\n\t    def setPower(self, value):\n\t        if self.isDeviceConnected():\n\t            if value:\n\t                self.nl.power_on()\n\t                self.notifier.notify(message='Set device on.')\n\t            else:\n\t                self.nl.power_off()\n", "                self.notifier.notify(message='Set device off.')\n\t    def setColor(self, color):\n\t        if self.isDeviceConnected():\n\t            self.nl.set_color(colorConverter.HEXtoRGB(color))\n\t            self.notifier.notify(message=f'Set static color to {color}.', type='positive')\n\t    def setEffect(self, effect):\n\t        if self.isDeviceConnected():\n\t            requests.put(self.nl.url + \"/effects\", data=effect)\n\t            self.notifier.notify(message='Color effect applied.', type='positive')\n\t    def identify(self):\n", "        if self.isDeviceConnected():\n\t            self.nl.identify()\n\t    def getPower(self):\n\t        return self.nl.get_power()\n\t    def getBrightness(self):\n\t        return self.nl.get_brightness()\n\t    def isDeviceConnected(self):\n\t        if self.nl is None:\n\t            self.notifier.notify(message='No device connected. Please add a new device first.', type='negative')\n\t            return False\n", "        return True\n\t    def setNotifier(self, notifier):\n\t        self.notifier = notifier"]}
{"filename": "src/effectList.py", "chunked_list": ["effects = {\n\t    'color': {\n\t        'Burst': ['713518c1-d560-47db-8991-de780af71d1e', ['delayTime', 'transTime']],\n\t        'Checkerboard': ['b75f1438-c37b-49c2-aa39-273bceb3d94b', ['delayTime', 'transTime']],\n\t        'Fade': ['b3fd723a-aae8-4c99-bf2b-087159e0ef53', ['delayTime', 'transTime']],\n\t        'Firecrackers': ['ebf4b0ed-7894-42da-9b6f-fc21030aee5a', ['delayTime', 'transTime']],\n\t        'Flow': ['027842e4-e1d6-4a4c-a731-be74a1ebd4cf', ['delayTime', 'transTime', 'linDirection']],\n\t        'Highlight': ['70b7c636-6bf8-491f-89c1-f4103508d642', ['delayTime', 'transTime', 'mainColorProb']],\n\t        'Melt': ['30a017d4-e6a5-4647-8c41-5a7cd38ff907', ['delayTime', 'transTime']],\n\t        'Organic': ['1dab05d3-07bf-4648-9d48-db8dd196ed28', ['transTime', 'linDirection', 'evolutionSpeed', 'scale', 'stretch']],\n", "        'Pulse': ['0794a6b3-f6cc-452d-a900-30081604b7ec', ['delayTime', 'transTime']],\n\t        'Radiate': ['e0ce975f-59e0-4d2e-872c-4856b79a36e9', ['delayTime', 'transTime']],\n\t        'Random': ['ba632d3e-9c2b-4413-a965-510c839b3f71', ['delayTime', 'transTime']],\n\t        'Snakes on a Plane': ['b6aa071f-8377-4a04-819b-6fe8a7adb44c', ['transTime']],\n\t        'Splash': ['820f02cf-2a40-41f9-9148-052671720b59', ['delayTime', 'transTime']],\n\t        'Starry Night': ['7fabb316-1015-478e-b73e-f2d6dcec3311', ['delayTime', 'transTime', 'mainColorProb']],\n\t        'Static': [None, []],\n\t        'Weave': ['ac8fb29a-333d-4de8-a95e-211cecc31ae1', ['delayTime', 'transTime', 'linDirection']],\n\t        'Wheel': ['6970681a-20b5-4c5e-8813-bdaebc4ee4fa', ['transTime', 'linDirection', 'nColorsPerFrame']],\n\t        'Windmill': ['6f3c6267-2644-4086-b175-d0a8b00078d3', ['delayTime', 'transTime']]\n", "    },\n\t    'rhythm': {\n\t        'Classic Visualizer': ['fa0ce428-ad3a-40a9-84e4-1c9316644852', []],\n\t        'Colorful Zebra': ['622d4641-b008-4f5f-9c72-f13afefd0c1e', []],\n\t        'Dancing Duo': ['213c955a-cae1-4f9a-b882-a598ea379579', []],\n\t        'Dancing Tiles': ['5ff9d7e0-87b2-4182-a276-b3be571c38be', []],\n\t        'Energy Drum': ['ac153ff8-e7b5-4562-a0d2-0dd81b1692e8', []],\n\t        'Fireworks': ['5cec763a-6f32-45cf-a691-b81e176b6b4a', []],\n\t        'LightCycle': ['fa987895-9612-41c6-9ff4-b1d02cf5ce18', []],\n\t        'Lightning': ['e5595601-61b5-4858-a11c-323146bb2c94', []],\n", "        'Meteor Shower': ['23e70ff4-458c-4852-826f-9315d89ee6ed', []],\n\t        'Paint Splatter': ['30018343-7587-4152-8d97-1c349ccc3e68', ['transTime']],\n\t        'Patterned Beats': ['58821d1a-5419-46cb-8a5b-c4639a8e2088', []],\n\t        'Pulse Pop Beats': ['60333927-cc36-4a5a-a682-9bd114de8bff', []],\n\t        'Radial Sound Bar': ['0349fc36-7727-4ebc-bc1b-a0021c55038e', []],\n\t        'Rhythmic Northern Lights': ['29e48ce5-fcf1-4943-b73f-fad1c09701f3', []],\n\t        'Rippl': ['9ccc92fc-f69a-48fc-81af-639bdc4cf50b', []],\n\t        'Ripple': ['bc6fe7e0-36d4-4f95-aa21-52a386daa9dc', []],\n\t        'Shooting Stars': ['7c15b20a-aa00-4c37-82c5-8fe8b1625516', []],\n\t        'Soda': ['a9288ef6-233b-4e65-837d-7de0e813809a', []],\n", "        'Sound Bar': ['fe0d0ba8-741f-4210-940c-454eceed010f', []],\n\t        'Streaking Notes': ['337784c0-6c98-447a-8a9f-fc6ac44a8024', []],\n\t    }\n\t}"]}
{"filename": "src/ui_EffectButton.py", "chunked_list": ["from nicegui import ui\n\tclass Ui_EffectButton:\n\t    def __init__(self, effect, eventHandler):\n\t        self.effect = effect\n\t        self.eventHandler = eventHandler\n\t        ui.button(effect, on_click=self.selectEffect)\n\t    def selectEffect(self):\n\t        self.eventHandler.setCurrentEffect(self.effect)\n\t        self.eventHandler.effectFactory.buildEffect()"]}
{"filename": "src/ui_Widget.py", "chunked_list": ["class Ui_Widget:\n\t    def __init__(self, childWidgets):\n\t        self.childWidgets = childWidgets\n\t    def setVisibility(self, visible=True):\n\t        for widget in self.childWidgets:\n\t            widget.set_visibility(visible)"]}
{"filename": "src/ui_Structure.py", "chunked_list": ["from colors_1000 import palettes\n\tfrom deviceInitializer import DeviceInitializer\n\tfrom effectFactory import EffectFactory\n\tfrom eventHandler import EventHandler\n\tfrom nicegui import ui, app\n\tfrom filemanager import Filemanager, File\n\tfrom uiInitilalizer import UiInitilalizer\n\tfrom ui_AnnotatedSlider import Ui_AnnotatedSlider\n\tfrom ui_EditPalette import Ui_EditPalette\n\tfrom ui_EffectButtons import Ui_EffectButtons\n", "from ui_EffectOptionsTab import Ui_EffectOptionsTab\n\tfrom ui_Notifier import Notifier\n\tfrom ui_Palette import Ui_Palette\n\timport colorConverter\n\timport matplotlib\n\tclass Ui_Structure:\n\t    def __init__(self, light):\n\t        self.secondaryColorInput = None\n\t        self.secondaryColorCheckbox = None\n\t        self.eventHandler = EventHandler()\n", "        self.effectFactory = None\n\t        self.editPalette = None\n\t        self.lightController = light\n\t        self.notifier = Notifier()\n\t        self.lightController.setNotifier(self.notifier)\n\t        self.device = DeviceInitializer(self.notifier)\n\t        self.currentPaletteId = 0\n\t        with ui.row().style('width: 100%; display: flex;justify-content: space-between;align-items: flex-start;'):\n\t            with ui.expansion(text='Colors', icon='palette').style('width: 30%;position: sticky;top: 0;'):\n\t                with ui.tabs() as tabs:\n", "                    ui.tab(name='Edit palette', icon='brush')\n\t                    ui.tab(name='Choose palette', icon='table_rows').on('click', lambda: ui.open(f'#{self.currentPaletteId + 55}'))     # + 55, to skip every html element with an id which is not a color palette\n\t                with ui.tab_panels(tabs=tabs, value='Choose palette'):\n\t                    with ui.tab_panel(name='Edit palette'):\n\t                        self.loadPaletteEditor()\n\t                    with ui.tab_panel(name='Choose palette'):\n\t                        self.loadPalettes()\n\t            with ui.expansion(text='Effects', icon='auto_awesome').style('width: 30%;position: sticky;top: 0;'):\n\t                self.effectButtons = Ui_EffectButtons(self.eventHandler)\n\t                with ui.tabs() as tabs:\n", "                    ui.tab(name='Basic', icon='invert_colors')\n\t                    ui.tab(name='Sound', icon='music_note')\n\t                with ui.tab_panels(tabs=tabs, value='Basic'):\n\t                    with ui.tab_panel(name='Basic'):\n\t                        self.effectButtons.loadEffects(effectType='color')\n\t                    with ui.tab_panel(name='Sound'):\n\t                        self.effectButtons.loadEffects(effectType='rhythm')\n\t            with ui.column().style('width: 30%;position: sticky;top: 0;'):\n\t                with ui.expansion(text='Options', icon='edit').style('width: 100%;top: 0;'):\n\t                    with ui.tabs() as tabs:\n", "                        ui.tab(name='Effect options', icon='tune')\n\t                        ui.tab(name='Settings', icon='settings')\n\t                    with ui.tab_panels(tabs=tabs, value='Effect options'):\n\t                        with ui.tab_panel(name='Effect options'):\n\t                            with ui.expansion(text='Device settings', icon='lightbulb'):\n\t                                self.powerSwitch = ui.switch(text='ON/OFF', value=True, on_change=lambda e: self.lightController.setPower(e.value)).props('icon=power_settings_new').style('margin-top: 5%;')\n\t                                self.briSlider = Ui_AnnotatedSlider(min=0, max=100, value=0, description='Brightness:', lightController=self.lightController, checkBox=self.powerSwitch)\n\t                            self.effectOptionsTab = Ui_EffectOptionsTab(self.eventHandler)\n\t                            self.eventHandler.setEffectOptionsTab(self.effectOptionsTab)\n\t                        with ui.tab_panel(name='Settings'):\n", "                            with ui.column():\n\t                                with ui.dialog().props('persistent') as dialog, ui.card():\n\t                                    ui.label(text='Language:')\n\t                                    ui.select(['English', 'German'], value='English')\n\t                                    ui.button(text='Close', on_click=dialog.close)\n\t                                ui.button('Language', on_click=dialog.open).props('icon=language').style('margin-top: 5%;')\n\t                                with ui.dialog().props('persistent') as dialog, ui.card():\n\t                                    ui.label(text='Appearance:')\n\t                                    ui.select({1: 'Light mode', 2: 'Dark mode'}, value=2 if Filemanager.getValue(File.SETTINGS, \"dark_mode\") else 1, on_change=self.setColorMode)\n\t                                    ui.color_input(label='Accent color', value=Filemanager.getValue(File.SETTINGS, \"accent_color\"), on_change=lambda e: self.setAccentColor(e.value))\n", "                                    ui.button(text='Close', on_click=dialog.close)\n\t                                ui.button(text='Appearance', on_click=dialog.open).props('icon=light_mode')\n\t                                ui.link(text='GitHub', target='https://github.com/RobinSchfr/Lightning-control-for-Nanoleaf', new_tab=True)\n\t                                with ui.dialog().props('persistent') as dialog, ui.card():\n\t                                    self.ipInput = ui.input(label='IP address', on_change=lambda e: self.device.setIP(e.value))\n\t                                    self.auth_tokenInput = ui.input(label='auth_token', password=True, password_toggle_button=True, on_change=lambda e: self.device.setAuthToken(e.value))\n\t                                    ui.button(text='Get IP from device', on_click=self.getIPFromDevice).props('icon=add')\n\t                                    ui.button(text='Create token', on_click=self.createAuthToken).props('icon=add')\n\t                                    ui.button(text='Connect', on_click=self.connect).props('icon=link')\n\t                                    ui.separator().style('margin-top: 5%')\n", "                                    ui.button(text='Identify', on_click=self.lightController.identify)\n\t                                    ui.button(text='Close', on_click=dialog.close)\n\t                                ui.button(text='Developer options', on_click=dialog.open).props('icon=build color=red').style('margin-top: 15%;')\n\t                with ui.expansion(text='Saved effects', icon='save').style('width: 100%;'):\n\t                    ui.select({1: 'Device 1', 2: 'Device 2', 3: 'Device 3'}, value=1)\n\t                    with ui.row().style('margin-top: 5%'):\n\t                        ui.label(text='Effects stored on selected device: ').style('margin-top: 2%')\n\t                        ui.circular_progress(max=50)\n\t                    with ui.tabs().style('margin-top: 5%') as tabs:\n\t                        ui.tab(name='Effect shortcuts', icon='bookmark')\n", "                        ui.tab(name='Snapshot manager', icon='storage')\n\t                    with ui.tab_panels(tabs=tabs, value='Effect shortcuts'):\n\t                        with ui.tab_panel(name='Effect shortcuts'):\n\t                            ui.button(text='Save current effect', on_click=None).props('icon=done').tooltip(text='Saves current effect as a shortcut (not on device)')\n\t                            ui.separator().style('margin-top: 5%')\n\t                        with ui.tab_panel(name='Snapshot manager'):\n\t                            ui.button(text='Create snapshot', on_click=None).props('icon=create_new_folder').tooltip(text='Saves all local effects from a device')\n\t                            ui.separator().style('margin-top: 5%')\n\t        # self.editPalette.addColor()\n\t        self.loadCredentials()\n", "        app.on_connect(lambda: self.updateValues())\n\t        self.uiInitializer = UiInitilalizer(self.effectOptionsTab, self.editPalette, self.secondaryColorCheckbox, self.secondaryColorInput)\n\t        app.native.window_args['zoomable'] = True\n\t        app.native.window_args['confirm_close'] = True\n\t        app.native.window_args['min_size'] = (900, 550)\n\t        ui.run(title='Lightning control for Nanoleaf - by Robin Schäfer', favicon='https://play-lh.googleusercontent.com/2WXa6Cwbvfrd6R1vvByeoQD5qa7zOr8g33vwxL-aPPRd9cIxZWNDqfUJQcRToz6A9Q', reload=False, dark=Filemanager.getValue(File.SETTINGS, \"dark_mode\"), window_size=(1600, 900) if Filemanager.getValue(File.SETTINGS, \"native_mode\") else None)\n\t    def loadPalettes(self):\n\t        ui.add_head_html('''<style>.palette:hover{border: 4px solid #000; box-sizing: border-box;}</style>''')\n\t        with ui.element('div').style('overflow:auto; height:80vh;padding: 20px;'):\n\t            for id, palette in enumerate(palettes):\n", "                Ui_Palette(palette, id, self.editPalette, self)\n\t    def loadPaletteEditor(self):\n\t        self.effectFactory = EffectFactory(self.lightController, self.eventHandler)\n\t        self.eventHandler.setEffectFactory(self.effectFactory)\n\t        self.editPalette = Ui_EditPalette(self.effectFactory)\n\t        ui.separator().style('margin-top: 5%')\n\t        with ui.row().style('margin-top: 5%'):\n\t            ui.button(on_click=lambda: self.editPalette.addColor()).props('icon=add').tooltip(text='Add new color (max. 10)')\n\t            ui.button(on_click=lambda: self.editPalette.remove()).props('icon=remove').tooltip(text='Remove first color')\n\t            ui.button(on_click=lambda: self.editPalette.clear()).props('icon=delete').tooltip(text='Clear palette')\n", "        with ui.row().style('margin-top: 5%'):\n\t            ui.button(on_click=lambda: self.editPalette.shiftLeft()).props('icon=arrow_left').tooltip(text='Shift palette one color to left')\n\t            ui.button(on_click=lambda: self.editPalette.shiftRight()).props('icon=arrow_right').tooltip(text='Shift palette one color to right')\n\t            ui.button(on_click=lambda: self.editPalette.shuffleColorPalette()).props('icon=shuffle').tooltip(text='Shuffle color palette')\n\t        ui.separator().style('margin-top: 5%')\n\t        with ui.column():\n\t            self.secondaryColorCheckbox = ui.checkbox(text='Add secondary color (50% ratio)', on_change=lambda e: self.setSecondaryColor(e.value)).style('margin-top: 5%').tooltip(text='After each color of the palette the secondary color will be added')\n\t            self.secondaryColorInput = ui.color_input(label='Secondary color', value='#000000', on_change=lambda e: self.setSecondaryColor(True, e.value)).bind_visibility_from(self.secondaryColorCheckbox, 'value').props('color=black')\n\t        with ui.column():\n\t            colorShadesCheckbox = ui.checkbox(text='Create color shades').style('margin-top: 5%').tooltip(text='Creates 10 shades of a specific color')\n", "            colorInput2 = ui.color_input(label='Color', value='#000000', on_change=None).bind_visibility_from(colorShadesCheckbox, 'value').props('color=black')\n\t            ui.button(on_click=lambda e: self.createShades(colorInput2.value)).props('icon=add').tooltip('Create palette').bind_visibility_from(colorShadesCheckbox, 'value')\n\t        with ui.column():\n\t            colorGradientShadesCheckbox = ui.checkbox(text='Create gradient colors based on multiple input colors (less is more)').style('margin-top: 5%').tooltip(text='Creates 10 gradient shades of given colors (less is more)')\n\t            ui.button(on_click=lambda e: self.createGradientShades()).props('icon=add').tooltip('Create palette').bind_visibility_from(colorGradientShadesCheckbox, 'value')\n\t        with ui.column():\n\t            spectralColorCheckbox = ui.checkbox(text='Create spectral colors (custom bri. & sat.)').style('margin-top: 5%').tooltip(text='Creates 10 spectral colors with specific brightness and saturation')\n\t            colorInput3 = ui.color_input(label='Color', value='#ff0000', on_change=None).bind_visibility_from(spectralColorCheckbox, 'value').props('color=black')\n\t            ui.button(on_click=lambda e: self.createSpectralColors(colorInput3.value)).props('icon=add').tooltip('Create palette').bind_visibility_from(spectralColorCheckbox, 'value')\n\t    def createShades(self, color):\n", "        h, s, l = colorConverter.HEXtoHSL(color)\n\t        self.editPalette.clear(True)\n\t        for l in range(95, 4, -10):\n\t            self.editPalette.addColor(colorConverter.HSLtoHEX(h, s, l), False)\n\t        self.editPalette.update()\n\t    def createGradientShades(self):\n\t        if len(self.editPalette.getColorPalette()) < 2:\n\t            return\n\t        colormap = matplotlib.colors.LinearSegmentedColormap.from_list(None, self.editPalette.getColorPalette())\n\t        palette = []\n", "        for i in range(5, 96, 10):\n\t            palette.append(matplotlib.colors.rgb2hex(colormap(i * 0.01)))\n\t        self.editPalette.loadPalette(palette)\n\t    def createSpectralColors(self, color):\n\t        h, s, l = colorConverter.HEXtoHSL(color)\n\t        self.editPalette.clear(True)\n\t        for h in range(0, 360, 36):\n\t            self.editPalette.addColor(colorConverter.HSLtoHEX(h, s, l), False)\n\t        self.editPalette.update()\n\t    def setSecondaryColor(self, state, color='#000000'):\n", "        if state:\n\t            self.effectFactory.secondaryColor = color\n\t        else:\n\t            self.effectFactory.secondaryColor = None\n\t        self.editPalette.update()\n\t    def getIPFromDevice(self):\n\t        self.device.getIPFromDevice()\n\t        self.ipInput.set_value(self.device.ip)\n\t    async def createAuthToken(self):\n\t        await self.device.createAuthToken()\n", "        self.auth_tokenInput.set_value(self.device.auth_token)\n\t    def connect(self):\n\t        try:\n\t            self.lightController.initialize(self.ipInput.value, self.auth_tokenInput.value)\n\t        except Exception:\n\t            self.notifier.notify(message='Can\\'t connect.', type='negative')\n\t        else:\n\t            Filemanager.setValue(File.SETTINGS, \"ip\", self.ipInput.value)\n\t            Filemanager.setValue(File.SETTINGS, \"auth_token\", self.auth_tokenInput.value)\n\t            self.notifier.notify(message='Device connected.', type='positive')\n", "    def loadCredentials(self):\n\t        ip = Filemanager.getValue(File.SETTINGS, \"ip\")\n\t        auth_token = Filemanager.getValue(File.SETTINGS, \"auth_token\")\n\t        if ip is not None and auth_token is not None:\n\t            self.ipInput.set_value(ip)\n\t            self.auth_tokenInput.set_value(auth_token)\n\t            self.connect()\n\t    async def updateValues(self):\n\t        if self.lightController.isDeviceConnected():\n\t            self.briSlider.slider.set_value(self.lightController.getBrightness())\n", "            self.powerSwitch.set_value(self.lightController.getPower())\n\t        ui.colors(primary=Filemanager.getValue(File.SETTINGS, \"accent_color\"))\n\t        await self.setColorMode(False)\n\t    @staticmethod\n\t    def setAccentColor(color):\n\t        Filemanager.setValue(File.SETTINGS, \"accent_color\", color)\n\t        ui.colors(primary=color)\n\t    @staticmethod\n\t    async def setColorMode(toggle=True):\n\t        darkMode = Filemanager.getValue(File.SETTINGS, \"dark_mode\")\n", "        if toggle:\n\t            darkMode = not darkMode\n\t            Filemanager.setValue(File.SETTINGS, \"dark_mode\", darkMode)\n\t        if darkMode:\n\t            await ui.run_javascript('''\n\t                Quasar.Dark.set(true);\n\t                tailwind.config.darkMode = \"class\";\n\t                document.body.classList.add(\"dark\");\n\t            ''', respond=False)\n\t        else:\n", "            await ui.run_javascript('''\n\t                Quasar.Dark.set(false);\n\t                tailwind.config.darkMode = \"class\"\n\t                document.body.classList.remove(\"dark\");\n\t            ''', respond=False)"]}
{"filename": "src/ui_Palette.py", "chunked_list": ["from nicegui import ui\n\tclass Ui_Palette:\n\t    def __init__(self, palette, id, editPalette, ui_Structure):\n\t        self.palette = palette\n\t        self.id = id\n\t        self.editPalette = editPalette\n\t        self.ui_Structure = ui_Structure\n\t        uiPalette = ui.html(f'<div class=\"palette\" style=\"display: flex; flex-direction: row;margin-top: 10px;\"><div style=\"width: 20%; aspect-ratio : 1 / 1; background-color: {palette[0]};\"></div><div style=\"width: 20%; aspect-ratio : 1 / 1; background-color: {palette[1]};\"></div><div style=\"width: 20%; aspect-ratio : 1 / 1; background-color: {palette[2]};\"></div><div style=\"width: 20%; aspect-ratio : 1 / 1; background-color: {palette[3]};\"></div><div style=\"width: 20%; aspect-ratio : 1 / 1; background-color: {palette[4]};\"></div></div>')\n\t        uiPalette.on('click', lambda: self.clickEvent())\n\t    def clickEvent(self):\n", "        self.editPalette.loadPalette(self.palette)\n\t        self.ui_Structure.currentPaletteId = self.id"]}
{"filename": "src/eventHandler.py", "chunked_list": ["class EventHandler:\n\t    def __init__(self):\n\t        self.effectOptionsTab = None\n\t        self.effectFactory = None\n\t    def setCurrentEffect(self, effect):\n\t        self.effectOptionsTab.setEffect(effect)\n\t    def setEffectOptionsTab(self, effectOptionsTab):\n\t        self.effectOptionsTab = effectOptionsTab\n\t    def setEffectFactory(self, effectFactory):\n\t        self.effectFactory = effectFactory"]}
{"filename": "src/ui_AnnotatedToggle.py", "chunked_list": ["from nicegui import ui\n\tfrom typing import Any, Dict, List, Union\n\tfrom ui_Widget import Ui_Widget\n\tclass Ui_AnnotatedToggle:\n\t    def __init__(self, options: Union[List, Dict], *, value: Any = None, description: str = '', effectFactory) -> None:\n\t        self.effectFactory = effectFactory\n\t        with ui.row().style('margin-top: 20px;'):\n\t            self.label = ui.label(description).style('margin-top: 20px;')\n\t            self.slider = ui.toggle(options, value=value, on_change=self.updateValue).style('width: 50%;margin-top: 14px;')\n\t            self.sep = ui.separator().style('margin-top: 5%')\n", "            self.widget = Ui_Widget([self.label, self.slider, self.sep])\n\t    def updateValue(self):\n\t        self.effectFactory.linDirection = str(self.slider.options[self.slider.value]).lower()\n\t        self.effectFactory.buildEffect()"]}
{"filename": "src/colorConverter.py", "chunked_list": ["import colorsys\n\tdef HEXtoRGB(hexCode):\n\t    rgb = []\n\t    if hexCode.startswith('#'):\n\t        hexCode = hexCode[1:]\n\t    for i in (0, 2, 4):\n\t        decimal = int(hexCode[i:i + 2], 16)\n\t        rgb.append(decimal)\n\t    return tuple(rgb)\n\tdef RGBtoHEX(r, g, b):\n", "    return '#{:02x}{:02x}{:02x}'.format(round(r), round(g), round(b))\n\tdef HSBtoRGB(h, s, b):\n\t    result = colorsys.hsv_to_rgb(h / 360, s / 100, b / 100)\n\t    return [item * 255 for item in result]\n\tdef HSLtoRGB(h, s, l):\n\t    result = colorsys.hls_to_rgb(h / 360, l / 100, s / 100)\n\t    return [item * 255 for item in result]\n\tdef RGBtoHSB(r, g, b):\n\t    result = colorsys.rgb_to_hsv(r / 255, g / 255, b / 255)\n\t    return round(result[0] * 360), round(result[1] * 100), round(result[2] * 100)\n", "def RGBtoHSL(r, g, b):\n\t    result = colorsys.rgb_to_hls(r / 255, g / 255, b / 255)\n\t    return round(result[0] * 360), round(result[2] * 100), round(result[1] * 100)\n\tdef HEXtoHSB(hexCode):\n\t    return RGBtoHSB(*HEXtoRGB(hexCode))\n\tdef HSBtoHEX(h, s, b):\n\t    return RGBtoHEX(*HSBtoRGB(h, s, b))\n\tdef HEXtoHSL(hexCode):\n\t    return RGBtoHSL(*HEXtoRGB(hexCode))\n\tdef HSLtoHEX(h, s, l):\n", "    return RGBtoHEX(*HSLtoRGB(h, s, l))"]}
{"filename": "src/ui_ColorButton.py", "chunked_list": ["from nicegui import ui\n\tclass Ui_ColorButton:\n\t    def __init__(self, color, editPalette):\n\t        self.colorCode = color\n\t        self.editPalette = editPalette\n\t        self.picker = ui.color_picker(on_pick=lambda e: self.changeColor(e.color))\n\t        self.button = ui.button(on_click=self.picker.open).props('icon=colorize color=black').style('border: 2px solid #000; width: 38px; height: 38px;')\n\t        self.changeColor(color, False)\n\t    def changeColor(self, color, updateEffect=True):\n\t        self.colorCode = color\n", "        self.button.style(f'background-color:{color}!important')\n\t        self.picker.set_color(color)\n\t        if updateEffect:\n\t            self.editPalette.update()"]}
{"filename": "src/main.py", "chunked_list": ["from lightController import LightController\n\tfrom filemanager import Filemanager\n\tfrom ui_Structure import Ui_Structure\n\tFilemanager.createFiles()\n\tlight = LightController()\n\tui = Ui_Structure(light)"]}
{"filename": "src/ui_DoubleSlider.py", "chunked_list": ["from nicegui import ui\n\tfrom ui_Widget import Ui_Widget\n\tclass Ui_DoubleSlider:\n\t    class Value:\n\t        def __init__(self):\n\t            self.smallVal = 1\n\t            self.bigVal = 0\n\t        def getValue(self):\n\t            return self.smallVal + self.bigVal\n\t    def __init__(self, description, effectFactory):\n", "        self.v = self.Value()\n\t        self.description = description\n\t        self.effectFactory = effectFactory\n\t        with ui.row().style('margin-top: 10px;'):\n\t            self.label = ui.label(description).style('margin-top: 10px;')\n\t            self.labelVal = ui.label().style('margin-top: 10px;')\n\t        self.bigValSlider = ui.slider(min=0, max=59, step=1, on_change=self.updateValue).props('label-always').bind_value(self.v, 'bigVal').style('margin-top: 10%;')\n\t        self.smallValSlider = ui.slider(min=0.1, max=1, step=0.1, on_change=self.updateValue).props('label-always').bind_value(self.v, 'smallVal').style('margin-top: 10%;')\n\t        self.sep = ui.separator().style('margin-top: 5%')\n\t        self.widget = Ui_Widget([self.label, self.labelVal, self.bigValSlider, self.smallValSlider, self.sep])\n", "    def updateValue(self):\n\t        self.labelVal.set_text(f'{self.v.getValue()} seconds')\n\t        if self.description == 'Delay Time:':\n\t            self.effectFactory.delayTime = self.v.getValue() * 10\n\t        else:\n\t            self.effectFactory.transTime = self.v.getValue() * 10\n\t        self.effectFactory.buildEffect()\n\t    def setBigValSlider(self, value):\n\t        self.bigValSlider.set_value(value)\n\t    def setSmallValSlider(self, value):\n", "        self.smallValSlider.set_value(value)"]}
{"filename": "src/ui_EditPalette.py", "chunked_list": ["from nicegui import ui\n\tfrom ui_ColorButton import Ui_ColorButton\n\timport random\n\tclass Ui_EditPalette:\n\t    def __init__(self, effectFactory):\n\t        self.effectFactory = effectFactory\n\t        self.colorButtons = []\n\t        self.container = ui.row()\n\t    def addColor(self, color='#000000', updateEffect=True):\n\t        if len(self.colorButtons) < 10:\n", "            with self.container:\n\t                cb = Ui_ColorButton(color, self)\n\t                self.colorButtons.append(cb)\n\t            if updateEffect:\n\t                self.update()\n\t    def clear(self, deepClear=False):\n\t        self.container.clear()\n\t        self.colorButtons.clear()\n\t        if not deepClear:\n\t            self.addColor(updateEffect=False)\n", "            self.update()\n\t    def remove(self):\n\t        if len(self.colorButtons) > 1:\n\t            self.colorButtons.pop(0)\n\t            self.drawPalette()\n\t            self.update()\n\t    def shiftLeft(self, updateEffect=True):\n\t        if len(self.colorButtons) > 1:\n\t            leftColor = self.colorButtons[0].colorCode\n\t            self.colorButtons.pop(0)\n", "            self.addColor(leftColor, False)\n\t            self.drawPalette()\n\t            if updateEffect:\n\t                self.update()\n\t    def shiftRight(self):\n\t        if len(self.colorButtons) > 1:\n\t            for i in range(len(self.colorButtons) - 1):\n\t                self.shiftLeft(False)\n\t            self.drawPalette()\n\t            self.update()\n", "    def drawPalette(self):\n\t        colors = self.colorButtons.copy()\n\t        self.clear(True)\n\t        for color in colors:\n\t            with self.container:\n\t                cb = Ui_ColorButton(color.colorCode, self)\n\t                self.colorButtons.append(cb)\n\t    def loadPalette(self, palette):\n\t        self.clear(True)\n\t        for color in palette:\n", "            self.addColor(color, False)\n\t        self.update()\n\t    def shuffleColorPalette(self):\n\t        if len(self.colorButtons) > 1:\n\t            random.shuffle(self.colorButtons)\n\t            self.drawPalette()\n\t            self.update()\n\t    def update(self):\n\t        self.effectFactory.colorPalette = self.getColorPalette()\n\t        self.effectFactory.buildEffect()\n", "    def getColorPalette(self):\n\t        colorPalette = []\n\t        for color in self.colorButtons:\n\t            colorPalette.append(color.colorCode)\n\t        return colorPalette"]}
{"filename": "src/effectFactory.py", "chunked_list": ["from filemanager import Filemanager, File\n\timport colorConverter\n\timport copy\n\tclass EffectFactory:\n\t    BASE_EFFECT = {\n\t        \"write\": {\"command\": \"display\", \"version\": \"2.0\", \"animType\": \"plugin\", \"colorType\": \"HSB\",\n\t                  \"palette\": [],\n\t                  \"pluginType\": \"\", \"pluginUuid\": \"\",\n\t                  \"pluginOptions\": []}}\n\t    def __init__(self, lightController, eventHandler):\n", "        self.lightController = lightController\n\t        self.eventHandler = eventHandler\n\t        self.currentEffect = list()\n\t        self.colorPalette = None\n\t        self.secondaryColor = None\n\t        self.pluginType = ''\n\t        self.delayTime = 10\n\t        self.transTime = 10\n\t        self.linDirection = 'right'\n\t        self.mainColorProb = 50\n", "        self.evolutionSpeed = 2.5\n\t        self.scale = 2.5\n\t        self.stretch = 10\n\t        self.nColorsPerFrame = 2\n\t        self.propValues = None\n\t        self.updatePropValues()\n\t    def updatePropValues(self):\n\t        self.propValues = {'delayTime': self.delayTime,\n\t                           'transTime': self.transTime,\n\t                           'linDirection': self.linDirection,\n", "                           'mainColorProb': self.mainColorProb,\n\t                           'evolutionSpeed': self.evolutionSpeed,\n\t                           'scale': self.scale,\n\t                           'stretch': self.stretch,\n\t                           'nColorsPerFrame': self.nColorsPerFrame\n\t                           }\n\t    def buildEffect(self):\n\t        if self.colorPalette is None:\n\t            return\n\t        elif self.currentEffect[0] is None:\n", "            self.lightController.setColor(self.colorPalette[0])\n\t        else:\n\t            effectJson = copy.deepcopy(self.BASE_EFFECT)\n\t            if self.secondaryColor is not None:\n\t                secondaryH, secondaryS, secondaryB = colorConverter.HEXtoHSB(self.secondaryColor)\n\t            for color in self.colorPalette:\n\t                h, s, b = colorConverter.HEXtoHSB(color)\n\t                effectJson['write']['palette'].append({\"hue\": h, \"saturation\": s, \"brightness\": b})\n\t                if self.secondaryColor is not None:\n\t                    effectJson['write']['palette'].append({\"hue\": secondaryH, \"saturation\": secondaryS, \"brightness\": secondaryB})\n", "            effectJson['write'].update({\"pluginType\": self.pluginType})\n\t            effectJson['write'].update({\"pluginUuid\": self.currentEffect[0]})\n\t            self.updatePropValues()\n\t            for prop in self.currentEffect[1]:\n\t                effectJson['write']['pluginOptions'].append({\"name\": prop, \"value\": self.propValues[prop]})\n\t            effectString = str(effectJson).replace('\\'', '\\\"')\n\t            self.lightController.setEffect(effectString)\n\t            Filemanager.setValue(File.EFFECTS, \"current_effect\", effectJson)"]}
{"filename": "src/ui_AnnotatedSlider.py", "chunked_list": ["from nicegui import ui\n\tfrom typing import Optional\n\tfrom ui_Widget import Ui_Widget\n\tclass Ui_AnnotatedSlider:\n\t    def __init__(self, *, min: float, max: float, step: float = 1.0, value: Optional[float] = None, description: str = '', effectFactory: Optional = None, lightController: Optional = None, checkBox: Optional = None) -> None:\n\t        self.effectFactory = effectFactory\n\t        self.lightController = lightController\n\t        self.description = description\n\t        self.checkBox = checkBox\n\t        with ui.row().style('margin-top: 20px;'):\n", "            self.label = ui.label(description).style('margin-top: 20px;')\n\t            self.slider = ui.slider(min=min, max=max, step=step, value=value, on_change=self.updateValue).style('width: 50%;margin-top: 18px;').props('label-always')\n\t            self.sep = ui.separator().style('margin-top: 5%')\n\t            self.widget = Ui_Widget([self.label, self.slider, self.sep])\n\t    def updateValue(self):\n\t        match self.description:\n\t            case 'Main Color Probability:':\n\t                self.effectFactory.mainColorProb = self.slider.value\n\t                self.effectFactory.buildEffect()\n\t            case 'Evolution Speed:':\n", "                self.effectFactory.evolutionSpeed = self.slider.value * 0.05\n\t                self.effectFactory.buildEffect()\n\t            case 'Scale:':\n\t                self.effectFactory.scale = self.slider.value * 0.05\n\t                self.effectFactory.buildEffect()\n\t            case 'Stretch:':\n\t                self.effectFactory.stretch = self.slider.value * 0.1\n\t                self.effectFactory.buildEffect()\n\t            case 'n Colors per frame:':\n\t                self.effectFactory.nColorsPerFrame = self.slider.value\n", "                self.effectFactory.buildEffect()\n\t            case 'Brightness:':\n\t                if self.lightController is not None:\n\t                    self.lightController.setBrightness(self.slider.value)\n\t                    self.checkBox.set_value(True)"]}
{"filename": "src/ui_Notifier.py", "chunked_list": ["from nicegui import ui\n\tclass Notifier:\n\t    @staticmethod\n\t    def notify(message, type=None):\n\t        ui.notify(message=message, type=type)"]}
{"filename": "src/deviceInitializer.py", "chunked_list": ["from ui_DeviceInitializerDialog import Ui_DeviceInitializerDialog\n\timport json\n\timport requests\n\timport socket\n\tclass DeviceInitializer:\n\t    def __init__(self, notifier):\n\t        self.ip = None\n\t        self.auth_token = None\n\t        self.notifier = notifier\n\t    def getIPFromDevice(self):\n", "        localIP = socket.gethostbyname(socket.gethostname())\n\t        localIP = localIP[:localIP.rfind('.') - len(localIP) + 1]\n\t        for i in range(255):\n\t            ip = f'http://{localIP}{i}'\n\t            try:\n\t                response = requests.get(ip, timeout=0.5)\n\t                if response.text.find('nanoleaf') != -1:\n\t                    self.ip = f'{localIP}{i}'\n\t                    self.notifier.notify(message=f'Device found: {self.ip}', type='positive')\n\t                    return self.ip\n", "            except Exception:\n\t                pass\n\t        self.notifier.notify(message='Device not found. Please try again later.', type='negative')\n\t    def setIP(self, ip):\n\t        self.ip = ip\n\t    def setAuthToken(self, token):\n\t        self.auth_token = token\n\t    async def createAuthToken(self):\n\t        dialog = Ui_DeviceInitializerDialog()\n\t        await dialog.show()\n", "        response = requests.post(f'http://{self.ip}:16021/api/v1/new')\n\t        data = json.loads(response.text)\n\t        self.notifier.notify(message='Authentication token created.', type='positive')\n\t        self.auth_token = data['auth_token']"]}
{"filename": "src/ui_DeviceInitializerDialog.py", "chunked_list": ["from nicegui import ui\n\tclass Ui_DeviceInitializerDialog:\n\t    @staticmethod\n\t    async def show():\n\t        with ui.dialog() as dialog, ui.card():\n\t            ui.label(text='The power button on the device should be held for 5-7 seconds, then you need to press \"Create token\" within 30 seconds.')\n\t            ui.button(text='Create token', on_click=lambda: dialog.submit(True))\n\t        await dialog"]}
{"filename": "src/colors_1000.py", "chunked_list": ["palettes = [\n\t    [\"#69d2e7\", \"#a7dbd8\", \"#e0e4cc\", \"#f38630\", \"#fa6900\"],\n\t    [\"#fe4365\", \"#fc9d9a\", \"#f9cdad\", \"#c8c8a9\", \"#83af9b\"],\n\t    [\"#ecd078\", \"#d95b43\", \"#c02942\", \"#542437\", \"#53777a\"],\n\t    [\"#556270\", \"#4ecdc4\", \"#c7f464\", \"#ff6b6b\", \"#c44d58\"],\n\t    [\"#774f38\", \"#e08e79\", \"#f1d4af\", \"#ece5ce\", \"#c5e0dc\"],\n\t    [\"#e8ddcb\", \"#cdb380\", \"#036564\", \"#033649\", \"#031634\"],\n\t    [\"#490a3d\", \"#bd1550\", \"#e97f02\", \"#f8ca00\", \"#8a9b0f\"],\n\t    [\"#594f4f\", \"#547980\", \"#45ada8\", \"#9de0ad\", \"#e5fcc2\"],\n\t    [\"#00a0b0\", \"#6a4a3c\", \"#cc333f\", \"#eb6841\", \"#edc951\"],\n", "    [\"#e94e77\", \"#d68189\", \"#c6a49a\", \"#c6e5d9\", \"#f4ead5\"],\n\t    [\"#3fb8af\", \"#7fc7af\", \"#dad8a7\", \"#ff9e9d\", \"#ff3d7f\"],\n\t    [\"#d9ceb2\", \"#948c75\", \"#d5ded9\", \"#7a6a53\", \"#99b2b7\"],\n\t    [\"#ffffff\", \"#cbe86b\", \"#f2e9e1\", \"#1c140d\", \"#cbe86b\"],\n\t    [\"#efffcd\", \"#dce9be\", \"#555152\", \"#2e2633\", \"#99173c\"],\n\t    [\"#343838\", \"#005f6b\", \"#008c9e\", \"#00b4cc\", \"#00dffc\"],\n\t    [\"#413e4a\", \"#73626e\", \"#b38184\", \"#f0b49e\", \"#f7e4be\"],\n\t    [\"#ff4e50\", \"#fc913a\", \"#f9d423\", \"#ede574\", \"#e1f5c4\"],\n\t    [\"#99b898\", \"#fecea8\", \"#ff847c\", \"#e84a5f\", \"#2a363b\"],\n\t    [\"#655643\", \"#80bca3\", \"#f6f7bd\", \"#e6ac27\", \"#bf4d28\"],\n", "    [\"#00a8c6\", \"#40c0cb\", \"#f9f2e7\", \"#aee239\", \"#8fbe00\"],\n\t    [\"#351330\", \"#424254\", \"#64908a\", \"#e8caa4\", \"#cc2a41\"],\n\t    [\"#554236\", \"#f77825\", \"#d3ce3d\", \"#f1efa5\", \"#60b99a\"],\n\t    [\"#5d4157\", \"#838689\", \"#a8caba\", \"#cad7b2\", \"#ebe3aa\"],\n\t    [\"#8c2318\", \"#5e8c6a\", \"#88a65e\", \"#bfb35a\", \"#f2c45a\"],\n\t    [\"#fad089\", \"#ff9c5b\", \"#f5634a\", \"#ed303c\", \"#3b8183\"],\n\t    [\"#ff4242\", \"#f4fad2\", \"#d4ee5e\", \"#e1edb9\", \"#f0f2eb\"],\n\t    [\"#f8b195\", \"#f67280\", \"#c06c84\", \"#6c5b7b\", \"#355c7d\"],\n\t    [\"#d1e751\", \"#ffffff\", \"#000000\", \"#4dbce9\", \"#26ade4\"],\n\t    [\"#1b676b\", \"#519548\", \"#88c425\", \"#bef202\", \"#eafde6\"],\n", "    [\"#5e412f\", \"#fcebb6\", \"#78c0a8\", \"#f07818\", \"#f0a830\"],\n\t    [\"#bcbdac\", \"#cfbe27\", \"#f27435\", \"#f02475\", \"#3b2d38\"],\n\t    [\"#452632\", \"#91204d\", \"#e4844a\", \"#e8bf56\", \"#e2f7ce\"],\n\t    [\"#eee6ab\", \"#c5bc8e\", \"#696758\", \"#45484b\", \"#36393b\"],\n\t    [\"#f0d8a8\", \"#3d1c00\", \"#86b8b1\", \"#f2d694\", \"#fa2a00\"],\n\t    [\"#2a044a\", \"#0b2e59\", \"#0d6759\", \"#7ab317\", \"#a0c55f\"],\n\t    [\"#f04155\", \"#ff823a\", \"#f2f26f\", \"#fff7bd\", \"#95cfb7\"],\n\t    [\"#b9d7d9\", \"#668284\", \"#2a2829\", \"#493736\", \"#7b3b3b\"],\n\t    [\"#bbbb88\", \"#ccc68d\", \"#eedd99\", \"#eec290\", \"#eeaa88\"],\n\t    [\"#b3cc57\", \"#ecf081\", \"#ffbe40\", \"#ef746f\", \"#ab3e5b\"],\n", "    [\"#a3a948\", \"#edb92e\", \"#f85931\", \"#ce1836\", \"#009989\"],\n\t    [\"#300030\", \"#480048\", \"#601848\", \"#c04848\", \"#f07241\"],\n\t    [\"#67917a\", \"#170409\", \"#b8af03\", \"#ccbf82\", \"#e33258\"],\n\t    [\"#aab3ab\", \"#c4cbb7\", \"#ebefc9\", \"#eee0b7\", \"#e8caaf\"],\n\t    [\"#e8d5b7\", \"#0e2430\", \"#fc3a51\", \"#f5b349\", \"#e8d5b9\"],\n\t    [\"#ab526b\", \"#bca297\", \"#c5ceae\", \"#f0e2a4\", \"#f4ebc3\"],\n\t    [\"#607848\", \"#789048\", \"#c0d860\", \"#f0f0d8\", \"#604848\"],\n\t    [\"#b6d8c0\", \"#c8d9bf\", \"#dadabd\", \"#ecdbbc\", \"#fedcba\"],\n\t    [\"#a8e6ce\", \"#dcedc2\", \"#ffd3b5\", \"#ffaaa6\", \"#ff8c94\"],\n\t    [\"#3e4147\", \"#fffedf\", \"#dfba69\", \"#5a2e2e\", \"#2a2c31\"],\n", "    [\"#fc354c\", \"#29221f\", \"#13747d\", \"#0abfbc\", \"#fcf7c5\"],\n\t    [\"#cc0c39\", \"#e6781e\", \"#c8cf02\", \"#f8fcc1\", \"#1693a7\"],\n\t    [\"#1c2130\", \"#028f76\", \"#b3e099\", \"#ffeaad\", \"#d14334\"],\n\t    [\"#a7c5bd\", \"#e5ddcb\", \"#eb7b59\", \"#cf4647\", \"#524656\"],\n\t    [\"#dad6ca\", \"#1bb0ce\", \"#4f8699\", \"#6a5e72\", \"#563444\"],\n\t    [\"#5c323e\", \"#a82743\", \"#e15e32\", \"#c0d23e\", \"#e5f04c\"],\n\t    [\"#edebe6\", \"#d6e1c7\", \"#94c7b6\", \"#403b33\", \"#d3643b\"],\n\t    [\"#fdf1cc\", \"#c6d6b8\", \"#987f69\", \"#e3ad40\", \"#fcd036\"],\n\t    [\"#230f2b\", \"#f21d41\", \"#ebebbc\", \"#bce3c5\", \"#82b3ae\"],\n\t    [\"#b9d3b0\", \"#81bda4\", \"#b28774\", \"#f88f79\", \"#f6aa93\"],\n", "    [\"#3a111c\", \"#574951\", \"#83988e\", \"#bcdea5\", \"#e6f9bc\"],\n\t    [\"#5e3929\", \"#cd8c52\", \"#b7d1a3\", \"#dee8be\", \"#fcf7d3\"],\n\t    [\"#1c0113\", \"#6b0103\", \"#a30006\", \"#c21a01\", \"#f03c02\"],\n\t    [\"#000000\", \"#9f111b\", \"#b11623\", \"#292c37\", \"#cccccc\"],\n\t    [\"#382f32\", \"#ffeaf2\", \"#fcd9e5\", \"#fbc5d8\", \"#f1396d\"],\n\t    [\"#e3dfba\", \"#c8d6bf\", \"#93ccc6\", \"#6cbdb5\", \"#1a1f1e\"],\n\t    [\"#f6f6f6\", \"#e8e8e8\", \"#333333\", \"#990100\", \"#b90504\"],\n\t    [\"#1b325f\", \"#9cc4e4\", \"#e9f2f9\", \"#3a89c9\", \"#f26c4f\"],\n\t    [\"#a1dbb2\", \"#fee5ad\", \"#faca66\", \"#f7a541\", \"#f45d4c\"],\n\t    [\"#c1b398\", \"#605951\", \"#fbeec2\", \"#61a6ab\", \"#accec0\"],\n", "    [\"#5e9fa3\", \"#dcd1b4\", \"#fab87f\", \"#f87e7b\", \"#b05574\"],\n\t    [\"#951f2b\", \"#f5f4d7\", \"#e0dfb1\", \"#a5a36c\", \"#535233\"],\n\t    [\"#8dccad\", \"#988864\", \"#fea6a2\", \"#f9d6ac\", \"#ffe9af\"],\n\t    [\"#2d2d29\", \"#215a6d\", \"#3ca2a2\", \"#92c7a3\", \"#dfece6\"],\n\t    [\"#413d3d\", \"#040004\", \"#c8ff00\", \"#fa023c\", \"#4b000f\"],\n\t    [\"#eff3cd\", \"#b2d5ba\", \"#61ada0\", \"#248f8d\", \"#605063\"],\n\t    [\"#ffefd3\", \"#fffee4\", \"#d0ecea\", \"#9fd6d2\", \"#8b7a5e\"],\n\t    [\"#cfffdd\", \"#b4dec1\", \"#5c5863\", \"#a85163\", \"#ff1f4c\"],\n\t    [\"#9dc9ac\", \"#fffec7\", \"#f56218\", \"#ff9d2e\", \"#919167\"],\n\t    [\"#4e395d\", \"#827085\", \"#8ebe94\", \"#ccfc8e\", \"#dc5b3e\"],\n", "    [\"#a8a7a7\", \"#cc527a\", \"#e8175d\", \"#474747\", \"#363636\"],\n\t    [\"#f8edd1\", \"#d88a8a\", \"#474843\", \"#9d9d93\", \"#c5cfc6\"],\n\t    [\"#046d8b\", \"#309292\", \"#2fb8ac\", \"#93a42a\", \"#ecbe13\"],\n\t    [\"#f38a8a\", \"#55443d\", \"#a0cab5\", \"#cde9ca\", \"#f1edd0\"],\n\t    [\"#a70267\", \"#f10c49\", \"#fb6b41\", \"#f6d86b\", \"#339194\"],\n\t    [\"#ff003c\", \"#ff8a00\", \"#fabe28\", \"#88c100\", \"#00c176\"],\n\t    [\"#ffedbf\", \"#f7803c\", \"#f54828\", \"#2e0d23\", \"#f8e4c1\"],\n\t    [\"#4e4d4a\", \"#353432\", \"#94ba65\", \"#2790b0\", \"#2b4e72\"],\n\t    [\"#0ca5b0\", \"#4e3f30\", \"#fefeeb\", \"#f8f4e4\", \"#a5b3aa\"],\n\t    [\"#4d3b3b\", \"#de6262\", \"#ffb88c\", \"#ffd0b3\", \"#f5e0d3\"],\n", "    [\"#fffbb7\", \"#a6f6af\", \"#66b6ab\", \"#5b7c8d\", \"#4f2958\"],\n\t    [\"#edf6ee\", \"#d1c089\", \"#b3204d\", \"#412e28\", \"#151101\"],\n\t    [\"#9d7e79\", \"#ccac95\", \"#9a947c\", \"#748b83\", \"#5b756c\"],\n\t    [\"#fcfef5\", \"#e9ffe1\", \"#cdcfb7\", \"#d6e6c3\", \"#fafbe3\"],\n\t    [\"#9cddc8\", \"#bfd8ad\", \"#ddd9ab\", \"#f7af63\", \"#633d2e\"],\n\t    [\"#30261c\", \"#403831\", \"#36544f\", \"#1f5f61\", \"#0b8185\"],\n\t    [\"#aaff00\", \"#ffaa00\", \"#ff00aa\", \"#aa00ff\", \"#00aaff\"],\n\t    [\"#d1313d\", \"#e5625c\", \"#f9bf76\", \"#8eb2c5\", \"#615375\"],\n\t    [\"#ffe181\", \"#eee9e5\", \"#fad3b2\", \"#ffba7f\", \"#ff9c97\"],\n\t    [\"#73c8a9\", \"#dee1b6\", \"#e1b866\", \"#bd5532\", \"#373b44\"],\n", "    [\"#805841\", \"#dcf7f3\", \"#fffcdd\", \"#ffd8d8\", \"#f5a2a2\"],\n\t    [\"#379f7a\", \"#78ae62\", \"#bbb749\", \"#e0fbac\", \"#1f1c0d\"],\n\t    [\"#caff42\", \"#ebf7f8\", \"#d0e0eb\", \"#88abc2\", \"#49708a\"],\n\t    [\"#c2412d\", \"#d1aa34\", \"#a7a844\", \"#a46583\", \"#5a1e4a\"],\n\t    [\"#75616b\", \"#bfcff7\", \"#dce4f7\", \"#f8f3bf\", \"#d34017\"],\n\t    [\"#111625\", \"#341931\", \"#571b3c\", \"#7a1e48\", \"#9d2053\"],\n\t    [\"#82837e\", \"#94b053\", \"#bdeb07\", \"#bffa37\", \"#e0e0e0\"],\n\t    [\"#7e5686\", \"#a5aad9\", \"#e8f9a2\", \"#f8a13f\", \"#ba3c3d\"],\n\t    [\"#312736\", \"#d4838f\", \"#d6abb1\", \"#d9d9d9\", \"#c4ffeb\"],\n\t    [\"#395a4f\", \"#432330\", \"#853c43\", \"#f25c5e\", \"#ffa566\"],\n", "    [\"#fde6bd\", \"#a1c5ab\", \"#f4dd51\", \"#d11e48\", \"#632f53\"],\n\t    [\"#84b295\", \"#eccf8d\", \"#bb8138\", \"#ac2005\", \"#2c1507\"],\n\t    [\"#058789\", \"#503d2e\", \"#d54b1a\", \"#e3a72f\", \"#f0ecc9\"],\n\t    [\"#6da67a\", \"#77b885\", \"#86c28b\", \"#859987\", \"#4a4857\"],\n\t    [\"#bed6c7\", \"#adc0b4\", \"#8a7e66\", \"#a79b83\", \"#bbb2a1\"],\n\t    [\"#261c21\", \"#6e1e62\", \"#b0254f\", \"#de4126\", \"#eb9605\"],\n\t    [\"#efd9b4\", \"#d6a692\", \"#a39081\", \"#4d6160\", \"#292522\"],\n\t    [\"#e21b5a\", \"#9e0c39\", \"#333333\", \"#fbffe3\", \"#83a300\"],\n\t    [\"#f2e3c6\", \"#ffc6a5\", \"#e6324b\", \"#2b2b2b\", \"#353634\"],\n\t    [\"#c75233\", \"#c78933\", \"#d6ceaa\", \"#79b5ac\", \"#5e2f46\"],\n", "    [\"#793a57\", \"#4d3339\", \"#8c873e\", \"#d1c5a5\", \"#a38a5f\"],\n\t    [\"#512b52\", \"#635274\", \"#7bb0a8\", \"#a7dbab\", \"#e4f5b1\"],\n\t    [\"#11644d\", \"#a0b046\", \"#f2c94e\", \"#f78145\", \"#f24e4e\"],\n\t    [\"#59b390\", \"#f0ddaa\", \"#e47c5d\", \"#e32d40\", \"#152b3c\"],\n\t    [\"#fdffd9\", \"#fff0b8\", \"#ffd6a3\", \"#faad8e\", \"#142f30\"],\n\t    [\"#b5ac01\", \"#ecba09\", \"#e86e1c\", \"#d41e45\", \"#1b1521\"],\n\t    [\"#c7fcd7\", \"#d9d5a7\", \"#d9ab91\", \"#e6867a\", \"#ed4a6a\"],\n\t    [\"#11766d\", \"#410936\", \"#a40b54\", \"#e46f0a\", \"#f0b300\"],\n\t    [\"#595643\", \"#4e6b66\", \"#ed834e\", \"#ebcc6e\", \"#ebe1c5\"],\n\t    [\"#f1396d\", \"#fd6081\", \"#f3ffeb\", \"#acc95f\", \"#8f9924\"],\n", "    [\"#331327\", \"#991766\", \"#d90f5a\", \"#f34739\", \"#ff6e27\"],\n\t    [\"#efeecc\", \"#fe8b05\", \"#fe0557\", \"#400403\", \"#0aabba\"],\n\t    [\"#bf496a\", \"#b39c82\", \"#b8c99d\", \"#f0d399\", \"#595151\"],\n\t    [\"#b7cbbf\", \"#8c886f\", \"#f9a799\", \"#f4bfad\", \"#f5dabd\"],\n\t    [\"#ffb884\", \"#f5df98\", \"#fff8d4\", \"#c0d1c2\", \"#2e4347\"],\n\t    [\"#e5eaa4\", \"#a8c4a2\", \"#69a5a4\", \"#616382\", \"#66245b\"],\n\t    [\"#e0eff1\", \"#7db4b5\", \"#ffffff\", \"#680148\", \"#000000\"],\n\t    [\"#b1e6d1\", \"#77b1a9\", \"#3d7b80\", \"#270a33\", \"#451a3e\"],\n\t    [\"#e4ded0\", \"#abccbd\", \"#7dbeb8\", \"#181619\", \"#e32f21\"],\n\t    [\"#e9e0d1\", \"#91a398\", \"#33605a\", \"#070001\", \"#68462b\"],\n", "    [\"#fc284f\", \"#ff824a\", \"#fea887\", \"#f6e7f7\", \"#d1d0d7\"],\n\t    [\"#ffab07\", \"#e9d558\", \"#72ad75\", \"#0e8d94\", \"#434d53\"],\n\t    [\"#6da67a\", \"#99a66d\", \"#a9bd68\", \"#b5cc6a\", \"#c0de5d\"],\n\t    [\"#311d39\", \"#67434f\", \"#9b8e7e\", \"#c3ccaf\", \"#a51a41\"],\n\t    [\"#cfb590\", \"#9e9a41\", \"#758918\", \"#564334\", \"#49281f\"],\n\t    [\"#5cacc4\", \"#8cd19d\", \"#cee879\", \"#fcb653\", \"#ff5254\"],\n\t    [\"#44749d\", \"#c6d4e1\", \"#ffffff\", \"#ebe7e0\", \"#bdb8ad\"],\n\t    [\"#807462\", \"#a69785\", \"#b8faff\", \"#e8fdff\", \"#665c49\"],\n\t    [\"#e7edea\", \"#ffc52c\", \"#fb0c06\", \"#030d4f\", \"#ceecef\"],\n\t    [\"#ccf390\", \"#e0e05a\", \"#f7c41f\", \"#fc930a\", \"#ff003d\"],\n", "    [\"#2b222c\", \"#5e4352\", \"#965d62\", \"#c7956d\", \"#f2d974\"],\n\t    [\"#cc5d4c\", \"#fffec6\", \"#c7d1af\", \"#96b49c\", \"#5b5847\"],\n\t    [\"#e4e4c5\", \"#b9d48b\", \"#8d2036\", \"#ce0a31\", \"#d3e4c5\"],\n\t    [\"#e3e8cd\", \"#bcd8bf\", \"#d3b9a3\", \"#ee9c92\", \"#fe857e\"],\n\t    [\"#360745\", \"#d61c59\", \"#e7d84b\", \"#efeac5\", \"#1b8798\"],\n\t    [\"#ec4401\", \"#cc9b25\", \"#13cd4a\", \"#7b6ed6\", \"#5e525c\"],\n\t    [\"#eb9c4d\", \"#f2d680\", \"#f3ffcf\", \"#bac9a9\", \"#697060\"],\n\t    [\"#f2e8c4\", \"#98d9b6\", \"#3ec9a7\", \"#2b879e\", \"#616668\"],\n\t    [\"#f5dd9d\", \"#bcc499\", \"#92a68a\", \"#7b8f8a\", \"#506266\"],\n\t    [\"#fff3db\", \"#e7e4d5\", \"#d3c8b4\", \"#c84648\", \"#703e3b\"],\n", "    [\"#041122\", \"#259073\", \"#7fda89\", \"#c8e98e\", \"#e6f99d\"],\n\t    [\"#8d7966\", \"#a8a39d\", \"#d8c8b8\", \"#e2ddd9\", \"#f8f1e9\"],\n\t    [\"#c6cca5\", \"#8ab8a8\", \"#6b9997\", \"#54787d\", \"#615145\"],\n\t    [\"#1d1313\", \"#24b694\", \"#d22042\", \"#a3b808\", \"#30c4c9\"],\n\t    [\"#4b1139\", \"#3b4058\", \"#2a6e78\", \"#7a907c\", \"#c9b180\"],\n\t    [\"#2d1b33\", \"#f36a71\", \"#ee887a\", \"#e4e391\", \"#9abc8a\"],\n\t    [\"#f0ffc9\", \"#a9da88\", \"#62997a\", \"#72243d\", \"#3b0819\"],\n\t    [\"#429398\", \"#6b5d4d\", \"#b0a18f\", \"#dfcdb4\", \"#fbeed3\"],\n\t    [\"#9d9e94\", \"#c99e93\", \"#f59d92\", \"#e5b8ad\", \"#d5d2c8\"],\n\t    [\"#95a131\", \"#c8cd3b\", \"#f6f1de\", \"#f5b9ae\", \"#ee0b5b\"],\n", "    [\"#322938\", \"#89a194\", \"#cfc89a\", \"#cc883a\", \"#a14016\"],\n\t    [\"#540045\", \"#c60052\", \"#ff714b\", \"#eaff87\", \"#acffe9\"],\n\t    [\"#79254a\", \"#795c64\", \"#79927d\", \"#aeb18e\", \"#e3cf9e\"],\n\t    [\"#452e3c\", \"#ff3d5a\", \"#ffb969\", \"#eaf27e\", \"#3b8c88\"],\n\t    [\"#2b2726\", \"#0a516d\", \"#018790\", \"#7dad93\", \"#bacca4\"],\n\t    [\"#027b7f\", \"#ffa588\", \"#d62957\", \"#bf1e62\", \"#572e4f\"],\n\t    [\"#fa6a64\", \"#7a4e48\", \"#4a4031\", \"#f6e2bb\", \"#9ec6b8\"],\n\t    [\"#fb6900\", \"#f63700\", \"#004853\", \"#007e80\", \"#00b9bd\"],\n\t    [\"#f06d61\", \"#da825f\", \"#c4975c\", \"#a8ab7b\", \"#8cbf99\"],\n\t    [\"#23192d\", \"#fd0a54\", \"#f57576\", \"#febf97\", \"#f5ecb7\"],\n", "    [\"#f6d76b\", \"#ff9036\", \"#d6254d\", \"#ff5475\", \"#fdeba9\"],\n\t    [\"#a3c68c\", \"#879676\", \"#6e6662\", \"#4f364a\", \"#340735\"],\n\t    [\"#a32c28\", \"#1c090b\", \"#384030\", \"#7b8055\", \"#bca875\"],\n\t    [\"#80a8a8\", \"#909d9e\", \"#a88c8c\", \"#ff0d51\", \"#7a8c89\"],\n\t    [\"#6d9788\", \"#1e2528\", \"#7e1c13\", \"#bf0a0d\", \"#e6e1c2\"],\n\t    [\"#373737\", \"#8db986\", \"#acce91\", \"#badb73\", \"#efeae4\"],\n\t    [\"#e6b39a\", \"#e6cba5\", \"#ede3b4\", \"#8b9e9b\", \"#6d7578\"],\n\t    [\"#280904\", \"#680e34\", \"#9a151a\", \"#c21b12\", \"#fc4b2a\"],\n\t    [\"#4b3e4d\", \"#1e8c93\", \"#dbd8a2\", \"#c4ac30\", \"#d74f33\"],\n\t    [\"#161616\", \"#c94d65\", \"#e7c049\", \"#92b35a\", \"#1f6764\"],\n", "    [\"#234d20\", \"#36802d\", \"#77ab59\", \"#c9df8a\", \"#f0f7da\"],\n\t    [\"#a69e80\", \"#e0ba9b\", \"#e7a97e\", \"#d28574\", \"#3b1922\"],\n\t    [\"#641f5e\", \"#676077\", \"#65ac92\", \"#c2c092\", \"#edd48e\"],\n\t    [\"#e6eba9\", \"#abbb9f\", \"#6f8b94\", \"#706482\", \"#703d6f\"],\n\t    [\"#26251c\", \"#eb0a44\", \"#f2643d\", \"#f2a73d\", \"#a0e8b7\"],\n\t    [\"#fdcfbf\", \"#feb89f\", \"#e23d75\", \"#5f0d3b\", \"#742365\"],\n\t    [\"#ff7474\", \"#f59b71\", \"#c7c77f\", \"#e0e0a8\", \"#f1f1c1\"],\n\t    [\"#4f364c\", \"#5e405f\", \"#6b6b6b\", \"#8f9e6f\", \"#b1cf72\"],\n\t    [\"#230b00\", \"#a29d7f\", \"#d4cfa5\", \"#f8ecd4\", \"#aabe9b\"],\n\t    [\"#d4f7dc\", \"#dbe7b4\", \"#dbc092\", \"#e0846d\", \"#f51441\"],\n", "    [\"#62a07b\", \"#4f8b89\", \"#536c8d\", \"#5c4f79\", \"#613860\"],\n\t    [\"#6f5846\", \"#a95a52\", \"#e35b5d\", \"#f18052\", \"#ffa446\"],\n\t    [\"#85847e\", \"#ab6a6e\", \"#f7345b\", \"#353130\", \"#cbcfb4\"],\n\t    [\"#ff3366\", \"#c74066\", \"#8f4d65\", \"#575a65\", \"#1f6764\"],\n\t    [\"#d3d5b0\", \"#b5cea4\", \"#9dc19d\", \"#8c7c62\", \"#71443f\"],\n\t    [\"#ffff99\", \"#d9cc8c\", \"#b39980\", \"#8c6673\", \"#663366\"],\n\t    [\"#ed6464\", \"#bf6370\", \"#87586c\", \"#574759\", \"#1a1b1c\"],\n\t    [\"#d24858\", \"#ea8676\", \"#eab05e\", \"#fdeecd\", \"#493831\"],\n\t    [\"#f0f0d8\", \"#b4debe\", \"#77cca4\", \"#666666\", \"#b4df37\"],\n\t    [\"#f3e7d7\", \"#f7d7cd\", \"#f8c7c9\", \"#e0c0c7\", \"#c7b9c5\"],\n", "    [\"#ccb24c\", \"#f7d683\", \"#fffdc0\", \"#fffffd\", \"#457d97\"],\n\t    [\"#1a081f\", \"#4d1d4d\", \"#05676e\", \"#489c79\", \"#ebc288\"],\n\t    [\"#c46564\", \"#f0e999\", \"#b8c99d\", \"#9b726f\", \"#eeb15b\"],\n\t    [\"#7a5b3e\", \"#fafafa\", \"#fa4b00\", \"#cdbdae\", \"#1f1f1f\"],\n\t    [\"#eeda95\", \"#b7c27e\", \"#9a927b\", \"#8a6a6b\", \"#805566\"],\n\t    [\"#d31900\", \"#ff6600\", \"#fff2af\", \"#7cb490\", \"#000000\"],\n\t    [\"#e8c382\", \"#b39d69\", \"#a86b4c\", \"#7d1a0c\", \"#340a0b\"],\n\t    [\"#ebeaa9\", \"#ebc588\", \"#7d2948\", \"#3b0032\", \"#0e0b29\"],\n\t    [\"#566965\", \"#948a71\", \"#cc9476\", \"#f2a176\", \"#ff7373\"],\n\t    [\"#595b5a\", \"#14c3a2\", \"#0de5a8\", \"#7cf49a\", \"#b8fd99\"],\n", "    [\"#063940\", \"#195e63\", \"#3e838c\", \"#8ebdb6\", \"#ece1c3\"],\n\t    [\"#411f2d\", \"#ac4147\", \"#f88863\", \"#ffc27f\", \"#ffe29a\"],\n\t    [\"#9dbcbc\", \"#f0f0af\", \"#ff370f\", \"#332717\", \"#6bacbf\"],\n\t    [\"#e7e79d\", \"#c0d890\", \"#78a890\", \"#606078\", \"#d8a878\"],\n\t    [\"#94654c\", \"#f89fa1\", \"#fabdbd\", \"#fad6d6\", \"#fefcd0\"],\n\t    [\"#cddbc2\", \"#f7e4c6\", \"#fb9274\", \"#f5565b\", \"#875346\"],\n\t    [\"#f0ddbd\", \"#ba3622\", \"#851e25\", \"#520c30\", \"#1c997f\"],\n\t    [\"#312c20\", \"#494d4b\", \"#7c7052\", \"#b3a176\", \"#e2cb92\"],\n\t    [\"#029daf\", \"#e5d599\", \"#ffc219\", \"#f07c19\", \"#e32551\"],\n\t    [\"#3f2c26\", \"#dd423e\", \"#a2a384\", \"#eac388\", \"#c5ad4b\"],\n", "    [\"#0a0310\", \"#49007e\", \"#ff005b\", \"#ff7d10\", \"#ffb238\"],\n\t    [\"#ecbe13\", \"#738c79\", \"#6a6b5f\", \"#2c2b26\", \"#a43955\"],\n\t    [\"#fff5de\", \"#b8d9c8\", \"#917081\", \"#750e49\", \"#4d002b\"],\n\t    [\"#1f1f20\", \"#2b4c7e\", \"#567ebb\", \"#606d80\", \"#dce0e6\"],\n\t    [\"#e7dd96\", \"#e16639\", \"#ad860a\", \"#b7023f\", \"#55024a\"],\n\t    [\"#cdeccc\", \"#edd269\", \"#e88460\", \"#f23460\", \"#321d2e\"],\n\t    [\"#574c41\", \"#e36b6b\", \"#e3a56b\", \"#e3c77b\", \"#96875a\"],\n\t    [\"#dde0cf\", \"#c6be9a\", \"#ad8b32\", \"#937460\", \"#8c5b7b\"],\n\t    [\"#213435\", \"#46685b\", \"#648a64\", \"#a6b985\", \"#e1e3ac\"],\n\t    [\"#181419\", \"#4a073c\", \"#9e0b41\", \"#cc3e18\", \"#f0971c\"],\n", "    [\"#413040\", \"#6c6368\", \"#b9a173\", \"#eaa353\", \"#ffefa9\"],\n\t    [\"#4d3b36\", \"#eb613b\", \"#f98f6f\", \"#c1d9cd\", \"#f7eadc\"],\n\t    [\"#ffcdb8\", \"#fdeecf\", \"#c8c696\", \"#97bea9\", \"#37260c\"],\n\t    [\"#e8d3a9\", \"#e39b7d\", \"#6e6460\", \"#89b399\", \"#bcbfa3\"],\n\t    [\"#ffffff\", \"#fffaeb\", \"#f0f0d8\", \"#cfcfcf\", \"#967c52\"],\n\t    [\"#001449\", \"#012677\", \"#005bc5\", \"#00b4fc\", \"#17f9ff\"],\n\t    [\"#ed5672\", \"#160e32\", \"#9eae8a\", \"#cdbb93\", \"#fbc599\"],\n\t    [\"#130912\", \"#3e1c33\", \"#602749\", \"#b14623\", \"#f6921d\"],\n\t    [\"#ffff00\", \"#ccd91a\", \"#99b333\", \"#668c4d\", \"#336666\"],\n\t    [\"#4dab8c\", \"#542638\", \"#8f244d\", \"#c9306b\", \"#e86f9e\"],\n", "    [\"#2b1719\", \"#02483e\", \"#057c46\", \"#9bb61b\", \"#f8be00\"],\n\t    [\"#ffabab\", \"#ffdaab\", \"#ddffab\", \"#abe4ff\", \"#d9abff\"],\n\t    [\"#e6a06f\", \"#9e9c71\", \"#5e8271\", \"#33454e\", \"#242739\"],\n\t    [\"#67be9b\", \"#95d0b8\", \"#fcfcd7\", \"#f1db42\", \"#f04158\"],\n\t    [\"#1693a5\", \"#45b5c4\", \"#7ececa\", \"#a0ded6\", \"#c7ede8\"],\n\t    [\"#cc2649\", \"#992c4b\", \"#66324c\", \"#33384e\", \"#003e4f\"],\n\t    [\"#e7eed0\", \"#cad1c3\", \"#948e99\", \"#51425f\", \"#2e1437\"],\n\t    [\"#785d56\", \"#be4c54\", \"#c6b299\", \"#e6d5c1\", \"#fff4e3\"],\n\t    [\"#f7f3d5\", \"#ffdabf\", \"#fa9b9b\", \"#e88087\", \"#635063\"],\n\t    [\"#e25858\", \"#e9d6af\", \"#ffffdd\", \"#c0efd2\", \"#384252\"],\n", "    [\"#acdeb2\", \"#e1eab5\", \"#edad9e\", \"#fe4b74\", \"#390d2d\"],\n\t    [\"#42282c\", \"#6ca19e\", \"#84abaa\", \"#ded1b6\", \"#6d997a\"],\n\t    [\"#a7cd2c\", \"#bada5f\", \"#cee891\", \"#e1f5c4\", \"#50c8c6\"],\n\t    [\"#b2cba3\", \"#e0df9f\", \"#e7a83e\", \"#9a736e\", \"#ea525f\"],\n\t    [\"#fc580c\", \"#fc6b0a\", \"#f8872e\", \"#ffa927\", \"#fdca49\"],\n\t    [\"#fdffd9\", \"#73185e\", \"#36bba6\", \"#0c0d02\", \"#8b911a\"],\n\t    [\"#9f0a28\", \"#d55c2b\", \"#f6e7d3\", \"#89a46f\", \"#55203c\"],\n\t    [\"#8a8780\", \"#e6e5c4\", \"#d6d1af\", \"#e47267\", \"#d7d8c5\"],\n\t    [\"#418e8e\", \"#5a4e3c\", \"#c4d428\", \"#d8e472\", \"#e9ebbf\"],\n\t    [\"#a69a90\", \"#4a403d\", \"#fff1c1\", \"#facf7d\", \"#ea804c\"],\n", "    [\"#faf6d0\", \"#c7d8ab\", \"#909a92\", \"#744f78\", \"#30091e\"],\n\t    [\"#aadead\", \"#bbdead\", \"#ccdead\", \"#dddead\", \"#eedead\"],\n\t    [\"#f0371a\", \"#000000\", \"#f7e6a6\", \"#3e6b48\", \"#b5b479\"],\n\t    [\"#a7321c\", \"#ffdc68\", \"#cc982a\", \"#928941\", \"#352504\"],\n\t    [\"#fa2e59\", \"#ff703f\", \"#f7bc05\", \"#ecf6bb\", \"#76bcad\"],\n\t    [\"#f1e8b4\", \"#b2bb91\", \"#d7bf5e\", \"#d16344\", \"#83555e\"],\n\t    [\"#afc7b9\", \"#ffe1c9\", \"#fac7b4\", \"#fca89d\", \"#998b82\"],\n\t    [\"#f6c7b7\", \"#f7a398\", \"#fa7f77\", \"#b42529\", \"#000000\"],\n\t    [\"#c9d1d3\", \"#f7f7f7\", \"#9dd3df\", \"#3b3737\", \"#991818\"],\n\t    [\"#000000\", \"#001f36\", \"#1c5560\", \"#79ae92\", \"#fbffcd\"],\n", "    [\"#e0dc8b\", \"#f6aa3d\", \"#ed4c57\", \"#574435\", \"#6cc4b9\"],\n\t    [\"#42393b\", \"#75c9a3\", \"#bac99a\", \"#ffc897\", \"#f7efa2\"],\n\t    [\"#f4f4f4\", \"#9ba657\", \"#f0e5c9\", \"#a68c69\", \"#594433\"],\n\t    [\"#f2cc67\", \"#f38264\", \"#f40034\", \"#5f051f\", \"#75baa8\"],\n\t    [\"#fbfee5\", \"#c91842\", \"#98173d\", \"#25232d\", \"#a8e7ca\"],\n\t    [\"#dbd9b7\", \"#c1c9c8\", \"#a5b5ab\", \"#949a8e\", \"#615566\"],\n\t    [\"#f3e6bc\", \"#f1c972\", \"#f5886b\", \"#72ae95\", \"#5a3226\"],\n\t    [\"#674f23\", \"#e48b69\", \"#e1b365\", \"#e5db84\", \"#ffeeac\"],\n\t    [\"#ff0092\", \"#ffca1b\", \"#b6ff00\", \"#228dff\", \"#ba01ff\"],\n\t    [\"#d9d4a8\", \"#d15c57\", \"#cc3747\", \"#5c374b\", \"#4a5f67\"],\n", "    [\"#998496\", \"#f7e0ae\", \"#fa748f\", \"#2d2c26\", \"#c3b457\"],\n\t    [\"#fa8cb1\", \"#fdc5c9\", \"#fffee1\", \"#cfb699\", \"#9e6d4e\"],\n\t    [\"#84c1b1\", \"#ad849a\", \"#d64783\", \"#fd135a\", \"#40202a\"],\n\t    [\"#00ccbe\", \"#09a6a3\", \"#9dbfaf\", \"#edebc9\", \"#fcf9d8\"],\n\t    [\"#020304\", \"#541f14\", \"#938172\", \"#cc9e61\", \"#626266\"],\n\t    [\"#71dbd2\", \"#eeffdb\", \"#ade4b5\", \"#d0eaa3\", \"#fff18c\"],\n\t    [\"#b88000\", \"#d56f00\", \"#f15500\", \"#ff2654\", \"#ff0c71\"],\n\t    [\"#bf2a23\", \"#a6ad3c\", \"#f0ce4e\", \"#cf872e\", \"#8a211d\"],\n\t    [\"#ffc870\", \"#f7f7c6\", \"#c8e3c5\", \"#9cad9a\", \"#755858\"],\n\t    [\"#002c2b\", \"#ff3d00\", \"#ffbc11\", \"#0a837f\", \"#076461\"],\n", "    [\"#244242\", \"#51bd9c\", \"#a3e3b1\", \"#ffe8b3\", \"#ff2121\"],\n\t    [\"#4eb3de\", \"#8de0a6\", \"#fcf09f\", \"#f27c7c\", \"#de528c\"],\n\t    [\"#001848\", \"#301860\", \"#483078\", \"#604878\", \"#906090\"],\n\t    [\"#1f0310\", \"#442433\", \"#a3d95b\", \"#aae3ab\", \"#f6f0bc\"],\n\t    [\"#b31237\", \"#f03813\", \"#ff8826\", \"#ffb914\", \"#2c9fa3\"],\n\t    [\"#fffdc0\", \"#b9d7a1\", \"#fead26\", \"#ca221f\", \"#590f0c\"],\n\t    [\"#4c3d31\", \"#f18273\", \"#f2bd76\", \"#f4f5de\", \"#c4ceb0\"],\n\t    [\"#84bfc3\", \"#fff5d6\", \"#ffb870\", \"#d96153\", \"#000511\"],\n\t    [\"#e2df9a\", \"#ebe54d\", \"#757449\", \"#4b490b\", \"#ff0051\"],\n\t    [\"#b2b39f\", \"#c8c9b5\", \"#dedfc5\", \"#f5f7bd\", \"#3d423c\"],\n", "    [\"#2f2bad\", \"#ad2bad\", \"#e42692\", \"#f71568\", \"#f7db15\"],\n\t    [\"#651366\", \"#a71a5b\", \"#e7204e\", \"#f76e2a\", \"#f0c505\"],\n\t    [\"#241811\", \"#d4a979\", \"#e3c88f\", \"#c2c995\", \"#a8bd95\"],\n\t    [\"#2197a3\", \"#f71e6c\", \"#f07868\", \"#ebb970\", \"#e7d3b0\"],\n\t    [\"#85a29e\", \"#ffebbf\", \"#f0d442\", \"#f59330\", \"#b22148\"],\n\t    [\"#15212a\", \"#99c9bd\", \"#d7b89c\", \"#feab8d\", \"#f4c9a3\"],\n\t    [\"#fe6c2b\", \"#d43b2d\", \"#9f102c\", \"#340016\", \"#020001\"],\n\t    [\"#f88f89\", \"#eec276\", \"#fbf6d0\", \"#79c3aa\", \"#1f0e1a\"],\n\t    [\"#ffffff\", \"#a1c1be\", \"#59554e\", \"#f3f4e5\", \"#e2e3d9\"],\n\t    [\"#ccded2\", \"#fffbd4\", \"#f5ddbb\", \"#e3b8b2\", \"#a18093\"],\n", "    [\"#79a687\", \"#718063\", \"#67594d\", \"#4f2b38\", \"#1d1016\"],\n\t    [\"#45aab8\", \"#e1d772\", \"#faf4b1\", \"#394240\", \"#f06b50\"],\n\t    [\"#e6e1cd\", \"#c6d8c0\", \"#d6b3b1\", \"#f97992\", \"#231b42\"],\n\t    [\"#69d0b3\", \"#9bdab3\", \"#b4dfb3\", \"#cde4b3\", \"#d9cf85\"],\n\t    [\"#332c26\", \"#db1414\", \"#e8591c\", \"#7fb8b0\", \"#c5e65c\"],\n\t    [\"#75372d\", \"#928854\", \"#96a782\", \"#d4ce9e\", \"#d8523d\"],\n\t    [\"#d1b68d\", \"#87555c\", \"#492d49\", \"#51445f\", \"#5a5c75\"],\n\t    [\"#8e407a\", \"#fe6962\", \"#f9ba84\", \"#eee097\", \"#ffffe5\"],\n\t    [\"#ffe4aa\", \"#fca699\", \"#e2869b\", \"#c9729f\", \"#583b7e\"],\n\t    [\"#9e1e4c\", \"#ff1168\", \"#25020f\", \"#8f8f8f\", \"#ececec\"],\n", "    [\"#272d4d\", \"#b83564\", \"#ff6a5a\", \"#ffb350\", \"#83b8aa\"],\n\t    [\"#b5f4bc\", \"#fff19e\", \"#ffdc8a\", \"#ffba6b\", \"#ff6543\"],\n\t    [\"#539fa2\", \"#72b1a4\", \"#abccb1\", \"#c4dbb4\", \"#d4e2b6\"],\n\t    [\"#80d3bb\", \"#bafdc2\", \"#e5f3ba\", \"#5c493d\", \"#3a352f\"],\n\t    [\"#5adb94\", \"#0ba18c\", \"#368986\", \"#8a034d\", \"#2e0331\"],\n\t    [\"#101942\", \"#80043a\", \"#f60c49\", \"#f09580\", \"#fdf2b4\"],\n\t    [\"#c9b849\", \"#c96823\", \"#be3100\", \"#6f0b00\", \"#241714\"],\n\t    [\"#ff4746\", \"#e8da5e\", \"#92b55f\", \"#487d76\", \"#4b4452\"],\n\t    [\"#a8bcbd\", \"#fcdcb3\", \"#f88d87\", \"#d65981\", \"#823772\"],\n\t    [\"#002e34\", \"#004443\", \"#00755c\", \"#00c16c\", \"#90ff17\"],\n", "    [\"#1f0a1d\", \"#334f53\", \"#45936c\", \"#9acc77\", \"#e5ead4\"],\n\t    [\"#444444\", \"#fcf7d1\", \"#a9a17a\", \"#b52c00\", \"#8c0005\"],\n\t    [\"#0fc3e8\", \"#0194be\", \"#e2d397\", \"#f07e13\", \"#481800\"],\n\t    [\"#d8d8d8\", \"#e2d9d8\", \"#ecdad8\", \"#f5dbd8\", \"#ffdcd8\"],\n\t    [\"#4b538b\", \"#15191d\", \"#f7a21b\", \"#e45635\", \"#d60257\"],\n\t    [\"#c4ddd6\", \"#d4ddd6\", \"#e4ddd6\", \"#e4e3cd\", \"#ececdd\"],\n\t    [\"#4d4a4b\", \"#f60069\", \"#ff41a1\", \"#ff90ab\", \"#ffccd1\"],\n\t    [\"#899aa1\", \"#bda2a2\", \"#fbbe9a\", \"#fad889\", \"#faf5c8\"],\n\t    [\"#000000\", \"#ff8830\", \"#d1b8a0\", \"#aeced2\", \"#cbdcdf\"],\n\t    [\"#36173d\", \"#ff4845\", \"#ff745f\", \"#ffc55f\", \"#ffec5e\"],\n", "    [\"#f8f8ec\", \"#aedd2b\", \"#066699\", \"#0a5483\", \"#02416d\"],\n\t    [\"#184848\", \"#006060\", \"#007878\", \"#a8c030\", \"#f0f0d8\"],\n\t    [\"#706767\", \"#e87474\", \"#e6a37a\", \"#d9c777\", \"#c0dbab\"],\n\t    [\"#dacdbd\", \"#f2b8a0\", \"#ef97a3\", \"#df5c7e\", \"#d4486f\"],\n\t    [\"#170132\", \"#361542\", \"#573e54\", \"#85ae72\", \"#bce1ab\"],\n\t    [\"#e9dfcc\", \"#f3a36b\", \"#cd5b51\", \"#554865\", \"#352630\"],\n\t    [\"#db5643\", \"#1c0f0e\", \"#70aa87\", \"#9fb38f\", \"#c5bd99\"],\n\t    [\"#c8d197\", \"#d89845\", \"#c54b2c\", \"#473430\", \"#11baac\"],\n\t    [\"#aab69b\", \"#9e906e\", \"#9684a3\", \"#8870ff\", \"#000000\"],\n\t    [\"#000706\", \"#00272d\", \"#134647\", \"#0c7e7e\", \"#bfac8b\"],\n", "    [\"#f1ecdf\", \"#d4c9ad\", \"#c7ba99\", \"#000000\", \"#f58723\"],\n\t    [\"#565175\", \"#538a95\", \"#67b79e\", \"#ffb727\", \"#e4491c\"],\n\t    [\"#fcfdeb\", \"#e3cebd\", \"#c1a2a0\", \"#725b75\", \"#322030\"],\n\t    [\"#d7e8d5\", \"#e6f0af\", \"#e8ed76\", \"#ffcd57\", \"#4a3a47\"],\n\t    [\"#288d85\", \"#b9d9b4\", \"#d18e8f\", \"#b05574\", \"#f0a991\"],\n\t    [\"#260729\", \"#2a2344\", \"#495168\", \"#ccbd9e\", \"#d8ccb2\"],\n\t    [\"#aef055\", \"#e0ffc3\", \"#25e4bc\", \"#3f8978\", \"#514442\"],\n\t    [\"#affbff\", \"#d2fdfe\", \"#fefac2\", \"#febf97\", \"#fe6960\"],\n\t    [\"#f7f799\", \"#e0d124\", \"#f0823f\", \"#bd374c\", \"#443a37\"],\n\t    [\"#dbda97\", \"#efae54\", \"#ef6771\", \"#4b1d37\", \"#977e77\"],\n", "    [\"#c8ce13\", \"#f8f5c1\", \"#349e97\", \"#2c0d1a\", \"#de1a72\"],\n\t    [\"#b9113f\", \"#a8636e\", \"#97b59d\", \"#cfcca8\", \"#ffe3b3\"],\n\t    [\"#ed7b83\", \"#ec8a90\", \"#eba2a4\", \"#e6d1ca\", \"#eee9c7\"],\n\t    [\"#002930\", \"#ffffff\", \"#f8f0af\", \"#ac4a00\", \"#000000\"],\n\t    [\"#913f33\", \"#ff705f\", \"#ffaa67\", \"#ffdfab\", \"#9fb9c2\"],\n\t    [\"#edeccf\", \"#f1c694\", \"#dc6378\", \"#207178\", \"#101652\"],\n\t    [\"#fee9a6\", \"#fec0ab\", \"#fa5894\", \"#660860\", \"#9380b7\"],\n\t    [\"#d3c8b4\", \"#d4f1db\", \"#eecab1\", \"#fe6c63\", \"#240910\"],\n\t    [\"#edd58f\", \"#c2bf92\", \"#66ac92\", \"#686077\", \"#641f5e\"],\n\t    [\"#e04891\", \"#e1b7ed\", \"#f5e1e2\", \"#d1e389\", \"#b9de51\"],\n", "    [\"#43777a\", \"#442432\", \"#c02948\", \"#d95b45\", \"#ecd079\"],\n\t    [\"#4180ab\", \"#ffffff\", \"#8ab3cf\", \"#bdd1de\", \"#e4ebf0\"],\n\t    [\"#f9d423\", \"#ede574\", \"#e1f5c4\", \"#add6bc\", \"#79b7b4\"],\n\t    [\"#f4f8e6\", \"#f2e9e6\", \"#4a3d3d\", \"#ff6161\", \"#d8dec3\"],\n\t    [\"#f9f6ec\", \"#88a1a8\", \"#502940\", \"#790614\", \"#0d0c0c\"],\n\t    [\"#ffab03\", \"#fc7f03\", \"#fc3903\", \"#d1024e\", \"#a6026c\"],\n\t    [\"#50232e\", \"#f77c3e\", \"#faba66\", \"#fce185\", \"#a2cca5\"],\n\t    [\"#f9ebf2\", \"#f3e2e8\", \"#fcd7da\", \"#f58f9a\", \"#3c363b\"],\n\t    [\"#ffffff\", \"#a1ac88\", \"#757575\", \"#464d70\", \"#000000\"],\n\t    [\"#736558\", \"#fd65a0\", \"#fef5c6\", \"#aaf2e4\", \"#31d5de\"],\n", "    [\"#f7f6e4\", \"#e2d5c1\", \"#5f3711\", \"#f6f6e2\", \"#d4c098\"],\n\t    [\"#95de90\", \"#cef781\", \"#f7c081\", \"#ff7857\", \"#6b6b6b\"],\n\t    [\"#f2502c\", \"#cad17a\", \"#fcf59b\", \"#91c494\", \"#c42311\"],\n\t    [\"#b2d9f7\", \"#487aa1\", \"#3d3c3b\", \"#7c8071\", \"#dde3ca\"],\n\t    [\"#f7dece\", \"#eed7c5\", \"#ccccbb\", \"#9ec4bb\", \"#2d2e2c\"],\n\t    [\"#e3ba6a\", \"#bfa374\", \"#6d756a\", \"#4d686f\", \"#364461\"],\n\t    [\"#686466\", \"#839cb5\", \"#96d7eb\", \"#b1e1e9\", \"#f2e4f9\"],\n\t    [\"#f7f1e1\", \"#ffdbd7\", \"#ffb2c1\", \"#ce7095\", \"#855e6e\"],\n\t    [\"#2e1e45\", \"#612a52\", \"#ba3259\", \"#ff695c\", \"#ccbca1\"],\n\t    [\"#8dc9b5\", \"#f6f4c2\", \"#ffc391\", \"#ff695c\", \"#8c315d\"],\n", "    [\"#0db2ac\", \"#f5dd7e\", \"#fc8d4d\", \"#fc694d\", \"#faba32\"],\n\t    [\"#fffab3\", \"#a2e5d2\", \"#63b397\", \"#9dab34\", \"#2c2321\"],\n\t    [\"#ebf2f2\", \"#d0f2e7\", \"#bcebdf\", \"#ade0db\", \"#d9dbdb\"],\n\t    [\"#e4e6c3\", \"#88baa3\", \"#ba1e4a\", \"#63203d\", \"#361f2d\"],\n\t    [\"#204b5e\", \"#426b65\", \"#baab6a\", \"#fbea80\", \"#fdfac7\"],\n\t    [\"#dadad8\", \"#fe6196\", \"#ff2c69\", \"#1ea49d\", \"#cbe65b\"],\n\t    [\"#910142\", \"#6c043c\", \"#210123\", \"#fef7d5\", \"#0ec0c1\"],\n\t    [\"#ab505e\", \"#d9a071\", \"#cfc88f\", \"#a5b090\", \"#607873\"],\n\t    [\"#43204a\", \"#7f1e47\", \"#422343\", \"#c22047\", \"#ea284b\"],\n\t    [\"#482c21\", \"#a73e2b\", \"#d07e0e\", \"#e9deb0\", \"#2f615e\"],\n", "    [\"#042608\", \"#2a5c0b\", \"#808f12\", \"#faedd9\", \"#ea2a15\"],\n\t    [\"#ff275e\", \"#e6bc56\", \"#7f440a\", \"#6a9277\", \"#f8d9bd\"],\n\t    [\"#3f324d\", \"#93c2b1\", \"#ffeacc\", \"#ff995e\", \"#de1d6a\"],\n\t    [\"#ffc2ce\", \"#80b3ff\", \"#fd6e8a\", \"#a2122f\", \"#693726\"],\n\t    [\"#f3d915\", \"#e9e4bb\", \"#bfd4b7\", \"#a89907\", \"#1a1c27\"],\n\t    [\"#9c8680\", \"#eb5e7f\", \"#f98f6f\", \"#dbbf6b\", \"#c8eb6a\"],\n\t    [\"#917f6e\", \"#efbc98\", \"#efd2be\", \"#efe1d1\", \"#d9ddcd\"],\n\t    [\"#c72546\", \"#66424c\", \"#768a4f\", \"#b3c262\", \"#d5ca98\"],\n\t    [\"#e6e8e3\", \"#d7dacf\", \"#bec3bc\", \"#8f9a9c\", \"#65727a\"],\n\t    [\"#2f3559\", \"#9a5071\", \"#e394a7\", \"#f1bbbb\", \"#e6d8cb\"],\n", "    [\"#63594d\", \"#b18272\", \"#c2b291\", \"#d6e4c3\", \"#eae3d1\"],\n\t    [\"#e8de92\", \"#810e0b\", \"#febea3\", \"#fce5b1\", \"#f6f5da\"],\n\t    [\"#f8f69f\", \"#bab986\", \"#7c7b6c\", \"#3e3e53\", \"#000039\"],\n\t    [\"#c3dfd7\", \"#c8dfd2\", \"#cddfcd\", \"#d2dfc8\", \"#d7dfc3\"],\n\t    [\"#172c3c\", \"#274862\", \"#995052\", \"#d96831\", \"#e6b33d\"],\n\t    [\"#678d6c\", \"#fc7d23\", \"#fa3c08\", \"#bd0a41\", \"#772a53\"],\n\t    [\"#dae2cb\", \"#96c3a6\", \"#6cb6a5\", \"#221d34\", \"#90425c\"],\n\t    [\"#8c0e48\", \"#80ab99\", \"#e8dbad\", \"#b39e58\", \"#99822d\"],\n\t    [\"#dbf73b\", \"#c0cc39\", \"#eb0258\", \"#a6033f\", \"#2b2628\"],\n\t    [\"#f1ebeb\", \"#eee8e8\", \"#cacaca\", \"#24c0eb\", \"#5cceee\"],\n", "    [\"#454545\", \"#743455\", \"#a22365\", \"#d11174\", \"#ff0084\"],\n\t    [\"#796c86\", \"#74aa9b\", \"#91c68d\", \"#ece488\", \"#f6f5cd\"],\n\t    [\"#7375a5\", \"#21a3a3\", \"#13c8b5\", \"#6cf3d5\", \"#2b364a\"],\n\t    [\"#efac41\", \"#de8531\", \"#b32900\", \"#6c1305\", \"#330a04\"],\n\t    [\"#fffbf0\", \"#968f4b\", \"#7a6248\", \"#ab9597\", \"#030506\"],\n\t    [\"#31827c\", \"#95c68f\", \"#f7e9aa\", \"#fc8a80\", \"#fd4e6d\"],\n\t    [\"#615050\", \"#776a6a\", \"#ad9a6f\", \"#f5f1e8\", \"#fcfcfc\"],\n\t    [\"#f26b7a\", \"#f0f2dc\", \"#d9eb52\", \"#8ac7de\", \"#87796f\"],\n\t    [\"#b877a8\", \"#b8008a\", \"#ff3366\", \"#ffcc33\", \"#ccff33\"],\n\t    [\"#b9340b\", \"#cea45c\", \"#c5be8b\", \"#498379\", \"#3f261c\"],\n", "    [\"#f4e196\", \"#a6bf91\", \"#5f9982\", \"#78576b\", \"#400428\"],\n\t    [\"#72bca5\", \"#f4ddb4\", \"#f1ae2b\", \"#bc0b27\", \"#4a2512\"],\n\t    [\"#ddcaa2\", \"#aebea3\", \"#b97479\", \"#d83957\", \"#4e5c69\"],\n\t    [\"#141827\", \"#62455b\", \"#736681\", \"#c1d9d0\", \"#fffae3\"],\n\t    [\"#2b9eb3\", \"#85cc9c\", \"#bcd9a0\", \"#edf79e\", \"#fafad7\"],\n\t    [\"#cfb698\", \"#ff5d57\", \"#dd0b64\", \"#6f0550\", \"#401c2a\"],\n\t    [\"#a8c078\", \"#a89048\", \"#a84818\", \"#61290e\", \"#330c0c\"],\n\t    [\"#171133\", \"#581e44\", \"#c5485a\", \"#d4be99\", \"#e0ffcc\"],\n\t    [\"#ebe5b2\", \"#f6f3c2\", \"#f7c69f\", \"#f89b7e\", \"#b5a28b\"],\n\t    [\"#ff0f35\", \"#f86254\", \"#fea189\", \"#f3d5a5\", \"#bab997\"],\n", "    [\"#20130a\", \"#142026\", \"#123142\", \"#3b657a\", \"#e9f0c9\"],\n\t    [\"#bdbf90\", \"#35352b\", \"#e7e9c4\", \"#ec6c2b\", \"#feae4b\"],\n\t    [\"#eeccbb\", \"#f1731f\", \"#e03e36\", \"#bd0d59\", \"#730662\"],\n\t    [\"#ffcfad\", \"#ffe4b8\", \"#e6d1b1\", \"#b8aa95\", \"#5e5a54\"],\n\t    [\"#ff9934\", \"#ffc018\", \"#f8fef4\", \"#cde54e\", \"#b3c631\"],\n\t    [\"#d1dbc8\", \"#b8c2a0\", \"#c97c7a\", \"#da3754\", \"#1f1106\"],\n\t    [\"#bda0a2\", \"#ffe6db\", \"#d1eaee\", \"#cbc8b5\", \"#efb0a9\"],\n\t    [\"#4d433d\", \"#525c5a\", \"#56877d\", \"#8ccc81\", \"#bade57\"],\n\t    [\"#262525\", \"#525252\", \"#e6ddbc\", \"#822626\", \"#690202\"],\n\t    [\"#9d9f89\", \"#84af97\", \"#8bc59b\", \"#b2de93\", \"#ccee8d\"],\n", "    [\"#52423c\", \"#ad5c70\", \"#d3ad98\", \"#edd4be\", \"#b9c3c4\"],\n\t    [\"#353437\", \"#53576b\", \"#7a7b7c\", \"#a39b7e\", \"#e2c99f\"],\n\t    [\"#a22c27\", \"#4f2621\", \"#9f8241\", \"#ebd592\", \"#929867\"],\n\t    [\"#839074\", \"#939e78\", \"#a8a878\", \"#061013\", \"#cdcd76\"],\n\t    [\"#eb9d8d\", \"#93865a\", \"#a8bb9a\", \"#c5cba6\", \"#efd8a9\"],\n\t    [\"#6a3d5a\", \"#66666e\", \"#6d8d76\", \"#b0c65a\", \"#ebf74f\"],\n\t    [\"#ff9966\", \"#d99973\", \"#b39980\", \"#8c998c\", \"#669999\"],\n\t    [\"#d1dab9\", \"#92bea5\", \"#6f646c\", \"#671045\", \"#31233e\"],\n\t    [\"#f9ded3\", \"#fdd1b6\", \"#fab4b6\", \"#c7b6be\", \"#89abb4\"],\n\t    [\"#4b4b55\", \"#f4324a\", \"#ff516c\", \"#fb9c5a\", \"#fcc755\"],\n", "    [\"#820081\", \"#fe59c2\", \"#fe40b9\", \"#fe1cac\", \"#390039\"],\n\t    [\"#000000\", \"#ed0b65\", \"#b2a700\", \"#fcae11\", \"#770493\"],\n\t    [\"#941f1f\", \"#ce6b5d\", \"#ffefb9\", \"#7b9971\", \"#34502b\"],\n\t    [\"#482344\", \"#2b5166\", \"#429867\", \"#fab243\", \"#e02130\"],\n\t    [\"#031c30\", \"#5a3546\", \"#b5485f\", \"#fc6747\", \"#fa8d3b\"],\n\t    [\"#a9b79e\", \"#e8ddbd\", \"#dba887\", \"#c25848\", \"#9d1d36\"],\n\t    [\"#666666\", \"#abdb25\", \"#999999\", \"#ffffff\", \"#cccccc\"],\n\t    [\"#27081d\", \"#47232c\", \"#66997b\", \"#a4ca8b\", \"#d2e7aa\"],\n\t    [\"#8fc9b9\", \"#d8d9c0\", \"#d18e8f\", \"#ab5c72\", \"#91334f\"],\n\t    [\"#8ba6ac\", \"#d7d7b8\", \"#e5e6c9\", \"#f8f8ec\", \"#bdcdd0\"],\n", "    [\"#ffe7bf\", \"#ffc978\", \"#c9c987\", \"#d1a664\", \"#c27b57\"],\n\t    [\"#0c0636\", \"#095169\", \"#059b9a\", \"#53ba83\", \"#9fd86b\"],\n\t    [\"#f3dcb2\", \"#facb97\", \"#f59982\", \"#ed616f\", \"#f2116c\"],\n\t    [\"#ff3366\", \"#e64066\", \"#cc4d66\", \"#b35966\", \"#996666\"],\n\t    [\"#fdf4b0\", \"#a4dcb9\", \"#5bcebf\", \"#32b9be\", \"#2e97b7\"],\n\t    [\"#302727\", \"#ba2d2d\", \"#f2511b\", \"#f2861b\", \"#c7c730\"],\n\t    [\"#fdbf5c\", \"#f69a0b\", \"#d43a00\", \"#9b0800\", \"#1d2440\"],\n\t    [\"#dfd0af\", \"#e8acac\", \"#a45785\", \"#85586c\", \"#a1c0a1\"],\n\t    [\"#f3214e\", \"#cf023b\", \"#000000\", \"#f4a854\", \"#fff8bc\"],\n\t    [\"#ec4b59\", \"#9a2848\", \"#130716\", \"#fc8c77\", \"#f8dfbd\"],\n", "    [\"#1f0b0c\", \"#e7fccf\", \"#d6c396\", \"#b3544f\", \"#300511\"],\n\t    [\"#6e9167\", \"#ffdd8c\", \"#ff8030\", \"#cc4e00\", \"#700808\"],\n\t    [\"#332e1d\", \"#5ac7aa\", \"#9adcb9\", \"#fafcd3\", \"#efeba9\"],\n\t    [\"#adeada\", \"#bdeadb\", \"#cdeadc\", \"#ddeadd\", \"#edeade\"],\n\t    [\"#ffad08\", \"#edd75a\", \"#73b06f\", \"#0c8f8f\", \"#405059\"],\n\t    [\"#295264\", \"#fad9a6\", \"#bd2f28\", \"#89373d\", \"#142433\"],\n\t    [\"#331436\", \"#7a1745\", \"#cb4f57\", \"#eb9961\", \"#fcf4b6\"],\n\t    [\"#fef0a5\", \"#f8d28b\", \"#e3b18b\", \"#a78d9e\", \"#74819d\"],\n\t    [\"#f7ead9\", \"#e1d2a9\", \"#88b499\", \"#619885\", \"#67594e\"],\n\t    [\"#210518\", \"#3d1c33\", \"#5e4b55\", \"#7c917f\", \"#93bd9a\"],\n", "    [\"#ecf8d4\", \"#e0deab\", \"#cb8e5f\", \"#85685a\", \"#0d0502\"],\n\t    [\"#a2c7bb\", \"#dde29f\", \"#ac8d49\", \"#ac0d0d\", \"#320606\"],\n\t    [\"#fce7d2\", \"#e0dbbd\", \"#c0ceaa\", \"#fd8086\", \"#eb5874\"],\n\t    [\"#ff667c\", \"#fbbaa4\", \"#f9e5c0\", \"#2c171c\", \"#b6d0a0\"],\n\t    [\"#fcf3e3\", \"#ed4c87\", \"#63526e\", \"#6cbaa4\", \"#f2ad5e\"],\n\t    [\"#a8ab84\", \"#000000\", \"#c6c99d\", \"#0c0d05\", \"#e7ebb0\"],\n\t    [\"#940533\", \"#c0012a\", \"#f5061d\", \"#ff8800\", \"#ffb300\"],\n\t    [\"#d45e80\", \"#c6838c\", \"#cfbf9e\", \"#f7dea8\", \"#f6be5f\"],\n\t    [\"#d6d578\", \"#b1bf63\", \"#9dad42\", \"#258a60\", \"#0a3740\"],\n\t    [\"#a6988a\", \"#88a19f\", \"#6aabb5\", \"#4bb4ca\", \"#1ec3ea\"],\n", "    [\"#470d3b\", \"#7e2f56\", \"#c0576f\", \"#e48679\", \"#febd84\"],\n\t    [\"#99cccc\", \"#a8bdc2\", \"#b8aeb8\", \"#c79ead\", \"#d78fa3\"],\n\t    [\"#d1f7ba\", \"#dbdea6\", \"#d1bd95\", \"#8c686b\", \"#391b4a\"],\n\t    [\"#3f264d\", \"#5d2747\", \"#9f3647\", \"#db4648\", \"#fb9553\"],\n\t    [\"#ffffff\", \"#ff97ca\", \"#ff348e\", \"#be0049\", \"#770021\"],\n\t    [\"#e1e6e3\", \"#bfd6c7\", \"#c7bd93\", \"#ff7876\", \"#574b45\"],\n\t    [\"#abece4\", \"#c4d004\", \"#ff9f15\", \"#fb7991\", \"#926d40\"],\n\t    [\"#1c0b2b\", \"#301c41\", \"#413b6b\", \"#5c65c0\", \"#6f95ff\"],\n\t    [\"#0ccaba\", \"#e3f5b7\", \"#e6ae00\", \"#d46700\", \"#9e3f00\"],\n\t    [\"#b7aea5\", \"#f77014\", \"#e33c08\", \"#433d3d\", \"#221d21\"],\n", "    [\"#fb6f24\", \"#8ca315\", \"#5191c1\", \"#1e6495\", \"#0a4b75\"],\n\t    [\"#2c2b4b\", \"#a75293\", \"#9c7a9d\", \"#9ddacb\", \"#f8dcb4\"],\n\t    [\"#de4c45\", \"#d9764d\", \"#cc9e8a\", \"#c1c5c7\", \"#ebdfc6\"],\n\t    [\"#d24d6c\", \"#ad8484\", \"#d9d5bb\", \"#c1858f\", \"#b05574\"],\n\t    [\"#060212\", \"#fe5412\", \"#fc1a1a\", \"#795c06\", \"#4f504f\"],\n\t    [\"#d9d9db\", \"#b7ae8f\", \"#978f84\", \"#4a362f\", \"#121210\"],\n\t    [\"#e9d7a9\", \"#d2d09f\", \"#d5a57f\", \"#b56a65\", \"#4b3132\"],\n\t    [\"#ff7a24\", \"#ff6d54\", \"#f76d75\", \"#e8728f\", \"#c97ba5\"],\n\t    [\"#7f135f\", \"#a0667a\", \"#c2b895\", \"#c4cab0\", \"#c7dcca\"],\n\t    [\"#5d917d\", \"#fff9de\", \"#cdd071\", \"#b81c48\", \"#632739\"],\n", "    [\"#ffe6bd\", \"#ffcc7a\", \"#e68a6c\", \"#8a2f62\", \"#260016\"],\n\t    [\"#fcd8af\", \"#fec49b\", \"#fe9b91\", \"#fd6084\", \"#045071\"],\n\t    [\"#f4fce2\", \"#d3ebc7\", \"#aabfaa\", \"#bf9692\", \"#fc0284\"],\n\t    [\"#3c515d\", \"#3d6868\", \"#40957f\", \"#a7c686\", \"#fcee8c\"],\n\t    [\"#d46419\", \"#b34212\", \"#341405\", \"#166665\", \"#83870e\"],\n\t    [\"#f19601\", \"#f21f26\", \"#251819\", \"#ebc83a\", \"#73b295\"],\n\t    [\"#27191c\", \"#2d3839\", \"#114d4d\", \"#6e9987\", \"#e0e4ce\"],\n\t    [\"#c3b68c\", \"#6e5b54\", \"#b94866\", \"#afb7a0\", \"#f4eed4\"],\n\t    [\"#f6eddc\", \"#e3e5d7\", \"#bdd6d2\", \"#a5c8ca\", \"#586875\"],\n\t    [\"#88d1ca\", \"#ded6c9\", \"#e68a2e\", \"#c90a00\", \"#452b34\"],\n", "    [\"#edf3c5\", \"#f2cc49\", \"#b7be5f\", \"#24b399\", \"#2d1c28\"],\n\t    [\"#200e38\", \"#6a0e47\", \"#b50d57\", \"#ff0d66\", \"#dec790\"],\n\t    [\"#ebebab\", \"#78bd91\", \"#4d8f81\", \"#9b4b54\", \"#f22b56\"],\n\t    [\"#efece2\", \"#81d7cd\", \"#ff0048\", \"#b13756\", \"#5b1023\"],\n\t    [\"#95aa61\", \"#121310\", \"#f6f8ee\", \"#d6e68a\", \"#899752\"],\n\t    [\"#0d0210\", \"#4d3147\", \"#866a80\", \"#c9b7c7\", \"#fffbff\"],\n\t    [\"#fffff7\", \"#e9fccf\", \"#d8fcb3\", \"#b1fcb3\", \"#89fcb3\"],\n\t    [\"#1a2b2b\", \"#332222\", \"#4d1a1a\", \"#661111\", \"#800909\"],\n\t    [\"#f7f0ba\", \"#e0dba4\", \"#a9cba6\", \"#7ebea3\", \"#53a08e\"],\n\t    [\"#fcf9ce\", \"#c4e0a6\", \"#dea37a\", \"#bd3737\", \"#d54c4a\"],\n", "    [\"#f8db7e\", \"#ec6349\", \"#ce2340\", \"#6f1b2c\", \"#310a26\"],\n\t    [\"#689195\", \"#050000\", \"#ab8288\", \"#cea4a6\", \"#ffcdc5\"],\n\t    [\"#b6d9c3\", \"#c6a9ac\", \"#d48299\", \"#e64e81\", \"#fd0a60\"],\n\t    [\"#551bb3\", \"#268fbe\", \"#2cb8b2\", \"#3ddb8f\", \"#a9f04d\"],\n\t    [\"#7e949e\", \"#aec2ab\", \"#ebcea0\", \"#fc7765\", \"#ff335f\"],\n\t    [\"#fcf6d2\", \"#fcf6d2\", \"#fbe2b9\", \"#c6c39a\", \"#281f20\"],\n\t    [\"#f5c8bf\", \"#e0d2c5\", \"#cad9ca\", \"#a7e3c1\", \"#495453\"],\n\t    [\"#8d1042\", \"#a25d47\", \"#a08447\", \"#97aa66\", \"#b8b884\"],\n\t    [\"#f9f9e7\", \"#505045\", \"#161613\", \"#c0a1ae\", \"#c1e0e0\"],\n\t    [\"#cad5ad\", \"#f9df94\", \"#f6a570\", \"#e77a77\", \"#54343f\"],\n", "    [\"#73c5aa\", \"#c6c085\", \"#f9a177\", \"#f76157\", \"#4c1b05\"],\n\t    [\"#cf3a69\", \"#8f4254\", \"#7caa96\", \"#b6c474\", \"#d4d489\"],\n\t    [\"#f5ea95\", \"#fc8e5b\", \"#fc5956\", \"#c93e4f\", \"#3d1734\"],\n\t    [\"#16c1c8\", \"#49cccc\", \"#7cd7cf\", \"#aee1d3\", \"#e1ecd6\"],\n\t    [\"#807070\", \"#9a8fc8\", \"#8dbdeb\", \"#a5e6c8\", \"#d9f5b5\"],\n\t    [\"#1f2f3a\", \"#98092b\", \"#df931b\", \"#e0daa3\", \"#9fb982\"],\n\t    [\"#020202\", \"#493d3f\", \"#bdb495\", \"#f8f2ce\", \"#d8d989\"],\n\t    [\"#d8f5d1\", \"#9ddbca\", \"#92b395\", \"#726c81\", \"#565164\"],\n\t    [\"#0f132e\", \"#19274e\", \"#536d88\", \"#b49b85\", \"#eac195\"],\n\t    [\"#e85a50\", \"#feffd6\", \"#5bb7b6\", \"#010002\", \"#fdf37a\"],\n", "    [\"#939473\", \"#4f784e\", \"#2d5e4c\", \"#13444d\", \"#252326\"],\n\t    [\"#bfe4cd\", \"#ddb37d\", \"#fa8331\", \"#fb4848\", \"#fd0a60\"],\n\t    [\"#f0f0d8\", \"#d8d8c0\", \"#7a8370\", \"#df8615\", \"#f84600\"],\n\t    [\"#ef4335\", \"#f68b36\", \"#f2cd4f\", \"#cae081\", \"#88eed0\"],\n\t    [\"#04394e\", \"#00875e\", \"#a7cc15\", \"#f5cc17\", \"#f56217\"],\n\t    [\"#5a3938\", \"#847b6d\", \"#a3ab98\", \"#d2d5af\", \"#dfa49b\"],\n\t    [\"#75727a\", \"#997f87\", \"#b88c87\", \"#d39679\", \"#f3a76d\"],\n\t    [\"#b68810\", \"#301406\", \"#7f9473\", \"#d3c795\", \"#c02c20\"],\n\t    [\"#423431\", \"#f70b17\", \"#050000\", \"#9a8c29\", \"#e7cba4\"],\n\t    [\"#f6b149\", \"#f8572d\", \"#df2a33\", \"#a22543\", \"#6b312d\"],\n", "    [\"#404467\", \"#5c627a\", \"#a3b6a2\", \"#b2ccaf\", \"#fffaac\"],\n\t    [\"#4a3333\", \"#e1473f\", \"#9a9088\", \"#80b0ab\", \"#dbd1b3\"],\n\t    [\"#9e9e9e\", \"#5ecde0\", \"#00fff2\", \"#c4ffc9\", \"#e0e0e0\"],\n\t    [\"#2f1335\", \"#620e5d\", \"#9d007a\", \"#ce3762\", \"#ff6e49\"],\n\t    [\"#ff8591\", \"#efaaa3\", \"#8caaa2\", \"#5a9b95\", \"#44878f\"],\n\t    [\"#524e4e\", \"#ff2b73\", \"#ff5a6a\", \"#ff9563\", \"#ffcd37\"],\n\t    [\"#0f7d7e\", \"#76b5a0\", \"#fffdd1\", \"#ff7575\", \"#d33649\"],\n\t    [\"#3e3742\", \"#825e65\", \"#cc8383\", \"#ebc4a9\", \"#e6e0c5\"],\n\t    [\"#eec77a\", \"#e77155\", \"#c71755\", \"#7b3336\", \"#5b9b9a\"],\n\t    [\"#d0dccb\", \"#d7c7be\", \"#b3c5ba\", \"#88c3b5\", \"#6d6168\"],\n", "    [\"#f7f4e8\", \"#daf3ea\", \"#85e6c0\", \"#6bb39b\", \"#0b0b0d\"],\n\t    [\"#541e35\", \"#df5d2e\", \"#ffb43e\", \"#a4c972\", \"#6bb38e\"],\n\t    [\"#c39738\", \"#ffff96\", \"#7f4311\", \"#5e4318\", \"#361f00\"],\n\t    [\"#d94052\", \"#ee7e4c\", \"#ead56c\", \"#94c5a5\", \"#898b75\"],\n\t    [\"#741952\", \"#fe3174\", \"#f1c15d\", \"#94bb68\", \"#09a3ad\"],\n\t    [\"#ffffff\", \"#000000\", \"#ff006f\", \"#ffb300\", \"#fff538\"],\n\t    [\"#516d7d\", \"#2a728e\", \"#9d870c\", \"#f93f03\", \"#f9eee2\"],\n\t    [\"#220114\", \"#811628\", \"#bd3038\", \"#ff7e57\", \"#f8b068\"],\n\t    [\"#33242b\", \"#e30842\", \"#fc4630\", \"#ff9317\", \"#c4ff0d\"],\n\t    [\"#f1ffd5\", \"#d6e6b7\", \"#a35481\", \"#b8136f\", \"#ea0063\"],\n", "    [\"#58534c\", \"#f1d3ab\", \"#dbce79\", \"#f95842\", \"#0eaeab\"],\n\t    [\"#fb545c\", \"#99662d\", \"#b7e1a1\", \"#cdeda1\", \"#fdf5a4\"],\n\t    [\"#ffeec2\", \"#fe9e8e\", \"#f80174\", \"#c4037a\", \"#322c8e\"],\n\t    [\"#fe9600\", \"#ffc501\", \"#ffee4a\", \"#77477e\", \"#03001c\"],\n\t    [\"#cb6f84\", \"#291d21\", \"#5d544d\", \"#cfccbb\", \"#e1daca\"],\n\t    [\"#ff8d7b\", \"#c88984\", \"#947280\", \"#d6b58c\", \"#dcd392\"],\n\t    [\"#22806b\", \"#a89f1d\", \"#facb4b\", \"#fcaf14\", \"#ed7615\"],\n\t    [\"#e0dcb8\", \"#c4bc16\", \"#918f61\", \"#c21f40\", \"#302c25\"],\n\t    [\"#79aba2\", \"#b4b943\", \"#b7833a\", \"#a04b26\", \"#301e1a\"],\n\t    [\"#3b3e37\", \"#e19563\", \"#9fb39b\", \"#d39088\", \"#f0ddb5\"],\n", "    [\"#cbdad5\", \"#89a7b1\", \"#566981\", \"#3a415a\", \"#34344e\"],\n\t    [\"#281b24\", \"#d02941\", \"#f57e67\", \"#d9c9a5\", \"#8cab94\"],\n\t    [\"#ebe7a7\", \"#a7ebc9\", \"#78b395\", \"#917c67\", \"#5e5953\"],\n\t    [\"#582770\", \"#773d94\", \"#943d8a\", \"#c22760\", \"#e81764\"],\n\t    [\"#b19676\", \"#766862\", \"#92bf9f\", \"#e3d49c\", \"#f9f0b7\"],\n\t    [\"#fef1e0\", \"#f6e6ce\", \"#3b2e2a\", \"#3f0632\", \"#a47f1a\"],\n\t    [\"#670d0f\", \"#f01945\", \"#f36444\", \"#ffce6f\", \"#ffe3c9\"],\n\t    [\"#555231\", \"#9c8c51\", \"#bcac71\", \"#e9db9c\", \"#79927d\"],\n\t    [\"#d3dbd9\", \"#a4bdbc\", \"#ffdabf\", \"#ffbf91\", \"#ff9a52\"],\n\t    [\"#d2d2d2\", \"#58afb8\", \"#269199\", \"#ec225e\", \"#020305\"],\n", "    [\"#f5d393\", \"#f39772\", \"#eb6765\", \"#261329\", \"#1a0b2a\"],\n\t    [\"#af0745\", \"#fa4069\", \"#fe9c6b\", \"#fcda90\", \"#c8b080\"],\n\t    [\"#fe958f\", \"#f3d7c2\", \"#8bb6a3\", \"#17a7a8\", \"#122f51\"],\n\t    [\"#2a1e1e\", \"#503850\", \"#aa6581\", \"#f99fa9\", \"#ffc5c1\"],\n\t    [\"#281916\", \"#e86786\", \"#f4a1b5\", \"#ffd2cb\", \"#96b5ad\"],\n\t    [\"#e4f3d8\", \"#afcacc\", \"#ffa02e\", \"#e80560\", \"#331d4a\"],\n\t    [\"#fff4ce\", \"#d0deb8\", \"#ffa492\", \"#ff7f81\", \"#ff5c71\"],\n\t    [\"#8e3f65\", \"#73738d\", \"#72a5ae\", \"#98e9d0\", \"#d8ffcc\"],\n\t    [\"#d2fae2\", \"#e6f8b1\", \"#f6d5ad\", \"#f6b794\", \"#e59da0\"],\n\t    [\"#ad2003\", \"#e0e6ae\", \"#bdd3b6\", \"#836868\", \"#5f0609\"],\n", "    [\"#942222\", \"#bd3737\", \"#d4cdad\", \"#98c3a1\", \"#25857d\"],\n\t    [\"#3d2304\", \"#7f6000\", \"#deb069\", \"#c41026\", \"#3d0604\"],\n\t    [\"#001f21\", \"#029b99\", \"#ebe7b7\", \"#de4f15\", \"#ecc039\"],\n\t    [\"#fb6a3d\", \"#fbe5ac\", \"#361d20\", \"#a2bc97\", \"#f7cd67\"],\n\t    [\"#81749c\", \"#4d3e6b\", \"#8daec3\", \"#c5dfe0\", \"#fcfce2\"],\n\t    [\"#8e978d\", \"#97c4ad\", \"#bfedbe\", \"#e6fcd9\", \"#cdf2d6\"],\n\t    [\"#5e3848\", \"#666163\", \"#a7b381\", \"#cad197\", \"#cde0bf\"],\n\t    [\"#817a8a\", \"#cdbbbb\", \"#fcddc8\", \"#fffeea\", \"#efcaba\"],\n\t    [\"#160d18\", \"#23145b\", \"#09456c\", \"#026f6e\", \"#1ca39e\"],\n\t    [\"#907071\", \"#7bbda1\", \"#a4d9a3\", \"#c6d7a0\", \"#fbdcb0\"],\n", "    [\"#420b58\", \"#fc036c\", \"#f1a20b\", \"#8d9c09\", \"#08807b\"],\n\t    [\"#cc8f60\", \"#b7a075\", \"#9eb48e\", \"#8cc2a0\", \"#77d4b6\"],\n\t    [\"#3a3232\", \"#d83018\", \"#f07848\", \"#fdfcce\", \"#c0d8d8\"],\n\t    [\"#cf0638\", \"#fa6632\", \"#fecd23\", \"#0a996f\", \"#0a6789\"],\n\t    [\"#ff4000\", \"#ffefb5\", \"#319190\", \"#ffc803\", \"#260d0d\"],\n\t    [\"#4acabb\", \"#cbe5c0\", \"#fcf9c2\", \"#edc5bd\", \"#84407b\"],\n\t    [\"#c75f77\", \"#fefab6\", \"#77a493\", \"#836177\", \"#654b49\"],\n\t    [\"#d1dc5a\", \"#e0f7e0\", \"#77f2de\", \"#6ac5cb\", \"#45444e\"],\n\t    [\"#400e28\", \"#992f4d\", \"#f25872\", \"#f08e73\", \"#e8b787\"],\n\t    [\"#6c788e\", \"#a6aec1\", \"#cfd5e1\", \"#ededf2\", \"#fcfdff\"],\n", "    [\"#96b5a6\", \"#fce1cb\", \"#febeac\", \"#4e383d\", \"#d9434f\"],\n\t    [\"#d6496c\", \"#7db8a2\", \"#d6dd90\", \"#fffad3\", \"#7e638c\"],\n\t    [\"#a2825c\", \"#88d3ab\", \"#f9fad2\", \"#f5da7a\", \"#ff985e\"],\n\t    [\"#ec6363\", \"#ec7963\", \"#ecb163\", \"#dfd487\", \"#bdebca\"],\n\t    [\"#282832\", \"#77181e\", \"#a92727\", \"#c6d6d6\", \"#dee7e7\"],\n\t    [\"#1c31a5\", \"#101f78\", \"#020f59\", \"#010937\", \"#000524\"],\n\t    [\"#2f2e30\", \"#e84b2c\", \"#e6d839\", \"#7cd164\", \"#2eb8ac\"],\n\t    [\"#becec4\", \"#688a7c\", \"#9d7c5b\", \"#e35241\", \"#e49183\"],\n\t    [\"#cdb27b\", \"#de7c04\", \"#e4211b\", \"#c00353\", \"#5e2025\"],\n\t    [\"#2a0308\", \"#924f1b\", \"#e2ac3f\", \"#f8ebbe\", \"#7ba58d\"],\n", "    [\"#966c80\", \"#96bda8\", \"#bfd4ad\", \"#f7d3a3\", \"#eca36c\"],\n\t    [\"#9aedb5\", \"#ab9a89\", \"#a3606d\", \"#4f2d4b\", \"#291e40\"],\n\t    [\"#636363\", \"#85827e\", \"#d1b39f\", \"#ffecd1\", \"#ffd1b3\"],\n\t    [\"#4d4d4d\", \"#637566\", \"#a39c67\", \"#d69e60\", \"#ff704d\"],\n\t    [\"#efd8a4\", \"#e8ae96\", \"#e49d89\", \"#e47f83\", \"#a8c99e\"],\n\t    [\"#281a1a\", \"#4e2d28\", \"#70454e\", \"#ae736f\", \"#dda8b0\"],\n\t    [\"#f2f2f2\", \"#348e91\", \"#1c5052\", \"#213635\", \"#0a0c0d\"],\n\t    [\"#c9ad9b\", \"#ffbda1\", \"#e05576\", \"#703951\", \"#452a37\"],\n\t    [\"#e0be7e\", \"#e89d10\", \"#db4b23\", \"#382924\", \"#136066\"],\n\t    [\"#40122c\", \"#656273\", \"#59baa9\", \"#d8f171\", \"#fcffd9\"],\n", "    [\"#1a110e\", \"#4e051c\", \"#f7114b\", \"#c4b432\", \"#bcb7ab\"],\n\t    [\"#f0debb\", \"#59a87d\", \"#16453f\", \"#091c1a\", \"#541734\"],\n\t    [\"#8d9c9d\", \"#e00b5b\", \"#f5b04b\", \"#fcdfbd\", \"#45373e\"],\n\t    [\"#eeaeaa\", \"#daaeaa\", \"#c6aeaa\", \"#b2aeaa\", \"#9eaeaa\"],\n\t    [\"#f67968\", \"#f67968\", \"#f68c68\", \"#f68c68\", \"#f6a168\"],\n\t    [\"#ef7270\", \"#ee9f80\", \"#f3ecbe\", \"#cdaf7b\", \"#59291b\"],\n\t    [\"#2a8b8b\", \"#75c58e\", \"#bfff91\", \"#dfe9a8\", \"#ffd2bf\"],\n\t    [\"#b0da09\", \"#f99400\", \"#f00a5e\", \"#b80090\", \"#544f51\"],\n\t    [\"#f5e1a4\", \"#d9d593\", \"#ee7f27\", \"#bc162a\", \"#302325\"],\n\t    [\"#93ba85\", \"#bda372\", \"#f49859\", \"#ff494b\", \"#5e363f\"],\n", "    [\"#eda08c\", \"#876f55\", \"#a19153\", \"#b1b080\", \"#b1ceaf\"],\n\t    [\"#fb7968\", \"#f9c593\", \"#fafad4\", \"#b0d1b2\", \"#89b2a2\"],\n\t    [\"#c0b19e\", \"#ffb48f\", \"#f68b7b\", \"#f6464a\", \"#911440\"],\n\t    [\"#ffffe5\", \"#dffda7\", \"#6ecf42\", \"#31a252\", \"#6b456c\"],\n\t    [\"#c92c2c\", \"#cf6123\", \"#f3c363\", \"#f1e9bb\", \"#5c483a\"],\n\t    [\"#ffffc2\", \"#f0ffc2\", \"#e0ffc2\", \"#d1ffc2\", \"#c2ffc2\"],\n\t    [\"#ffffff\", \"#5e9188\", \"#3e5954\", \"#253342\", \"#232226\"],\n\t    [\"#110303\", \"#c3062c\", \"#ff194b\", \"#8fa080\", \"#708066\"],\n\t    [\"#96958a\", \"#76877d\", \"#88b8a9\", \"#b2cbae\", \"#dbddb4\"],\n\t    [\"#fff7bc\", \"#fee78a\", \"#f8a348\", \"#e15244\", \"#3a7b50\"],\n", "    [\"#faf4e0\", \"#d2ff1f\", \"#ffc300\", \"#ff6a00\", \"#3b0c2c\"],\n\t    [\"#2b2318\", \"#524835\", \"#56704b\", \"#5d9e7e\", \"#78b3a4\"],\n\t    [\"#615c5c\", \"#e30075\", \"#ff4a4a\", \"#ffb319\", \"#ebe8e8\"],\n\t    [\"#f46472\", \"#f2ecc3\", \"#fff9d8\", \"#bed6ab\", \"#999175\"],\n\t    [\"#3b5274\", \"#9c667d\", \"#ce938b\", \"#e8cc9c\", \"#e3e1b1\"],\n\t    [\"#092b5a\", \"#09738a\", \"#78a890\", \"#9ed1b7\", \"#e7d9b4\"],\n\t    [\"#cde9ca\", \"#ced89d\", \"#dfba74\", \"#e8a249\", \"#575e55\"],\n\t    [\"#2f2c2b\", \"#413726\", \"#79451d\", \"#d7621a\", \"#fd8d32\"],\n\t    [\"#b7b09e\", \"#493443\", \"#eb6077\", \"#f0b49e\", \"#f0e2be\"],\n\t    [\"#d0d167\", \"#fffcff\", \"#e6dddc\", \"#ff0c66\", \"#969ba2\"],\n", "    [\"#010d23\", \"#03223f\", \"#038bbb\", \"#fccb6f\", \"#e19f41\"],\n\t    [\"#30182b\", \"#f0f1bc\", \"#60f0c0\", \"#ff360e\", \"#191f04\"],\n\t    [\"#d8c358\", \"#6d0839\", \"#d0e799\", \"#25271e\", \"#fbeff4\"],\n\t    [\"#f28a49\", \"#f7e3b2\", \"#e3967d\", \"#57342d\", \"#9dbfa4\"],\n\t    [\"#2f003f\", \"#be0001\", \"#ff8006\", \"#f3c75f\", \"#e9cfaa\"],\n\t    [\"#504375\", \"#39324d\", \"#ffe8ef\", \"#c22557\", \"#ed5887\"],\n\t    [\"#beed80\", \"#59d999\", \"#31ada1\", \"#51647a\", \"#453c5c\"],\n\t    [\"#d8d3ab\", \"#b0b19f\", \"#784d5f\", \"#ba456a\", \"#d04969\"],\n\t    [\"#548c82\", \"#d1ce95\", \"#fcfade\", \"#d55d63\", \"#452d3d\"],\n\t    [\"#becb7c\", \"#84967e\", \"#962c4c\", \"#f05d67\", \"#faa191\"],\n", "    [\"#89666d\", \"#d2c29f\", \"#e3a868\", \"#f76f6d\", \"#f2306d\"],\n\t    [\"#07f9a2\", \"#09c184\", \"#0a8967\", \"#0c5149\", \"#0d192b\"],\n\t    [\"#c3aaa5\", \"#d76483\", \"#ef9ca4\", \"#ffc2bb\", \"#f6e5cb\"],\n\t    [\"#c3d297\", \"#ffffff\", \"#c3b199\", \"#3a2d19\", \"#e8373e\"],\n\t    [\"#f7e6be\", \"#e89a80\", \"#a93545\", \"#4d4143\", \"#485755\"],\n\t    [\"#fdf2c5\", \"#efe8b2\", \"#c6d1a6\", \"#82bfa0\", \"#7a6f5d\"],\n\t    [\"#f00065\", \"#fa9f43\", \"#f9fad2\", \"#262324\", \"#b3dbc8\"],\n\t    [\"#dfcccc\", \"#ffd3d3\", \"#ffa4a4\", \"#d17878\", \"#965959\"],\n\t    [\"#a1a6aa\", \"#bd928b\", \"#de7571\", \"#ff4e44\", \"#282634\"],\n\t    [\"#fdec6f\", \"#f2e9b0\", \"#ecdfdb\", \"#ede3fb\", \"#fedfae\"],\n", "    [\"#4aedd7\", \"#705647\", \"#ed6d4a\", \"#ffca64\", \"#3fd97f\"],\n\t    [\"#352640\", \"#92394b\", \"#a9767a\", \"#d1b4a2\", \"#f1f2ce\"],\n\t    [\"#330708\", \"#e84624\", \"#e87624\", \"#e8a726\", \"#e8d826\"],\n\t    [\"#fb6066\", \"#ffefc1\", \"#fdd86e\", \"#ffa463\", \"#f66b40\"],\n\t    [\"#62462a\", \"#01ffac\", \"#8ff638\", \"#a2fa1b\", \"#855d46\"],\n\t    [\"#f7c097\", \"#829d74\", \"#de3c2f\", \"#eb5f07\", \"#f18809\"],\n\t    [\"#aaaa91\", \"#848478\", \"#5e5e5e\", \"#383845\", \"#12122b\"],\n\t    [\"#3b0503\", \"#f67704\", \"#f85313\", \"#fedc57\", \"#9ecfbc\"],\n\t    [\"#140d1a\", \"#42142a\", \"#ff2e5f\", \"#ffd452\", \"#faeeca\"],\n\t    [\"#7ebeb2\", \"#d1f3db\", \"#da9c3c\", \"#bc1953\", \"#7d144c\"],\n", "    [\"#678c99\", \"#b8c7cc\", \"#fff1cf\", \"#d6c292\", \"#b59e67\"],\n\t    [\"#21203f\", \"#fff1ce\", \"#e7bfa5\", \"#c5a898\", \"#4b3c5d\"],\n\t    [\"#81657e\", \"#3ea3af\", \"#9fd9b3\", \"#f0f6b9\", \"#ff1d44\"],\n\t    [\"#368986\", \"#e79a32\", \"#f84339\", \"#d40f60\", \"#005c81\"],\n\t    [\"#fcf7d7\", \"#fea667\", \"#ffe461\", \"#c4c776\", \"#f4d092\"],\n\t    [\"#e8608c\", \"#71cbc4\", \"#fff9f4\", \"#cdd56e\", \"#ffbd68\"],\n\t    [\"#ff5252\", \"#ff7752\", \"#ff9a52\", \"#ffb752\", \"#5e405b\"],\n\t    [\"#d5d8c7\", \"#d4d6ce\", \"#d3d5d5\", \"#d1d3dc\", \"#d0d2e3\"],\n\t    [\"#829b86\", \"#96b7a2\", \"#a6aa56\", \"#b4b969\", \"#dfdb9c\"],\n\t    [\"#050003\", \"#496940\", \"#93842f\", \"#ffa739\", \"#fce07f\"],\n", "    [\"#382a2a\", \"#ff3d3d\", \"#ff9d7d\", \"#e5ebbc\", \"#8dc4b7\"],\n\t    [\"#3d0a49\", \"#5015bd\", \"#027fe9\", \"#00caf8\", \"#e0daf7\"],\n\t    [\"#edffb3\", \"#99928e\", \"#bfe3c3\", \"#dbedc2\", \"#fff2d4\"],\n\t    [\"#471754\", \"#991d5d\", \"#f2445e\", \"#f07951\", \"#dec87a\"],\n\t    [\"#f2ecdc\", \"#574345\", \"#e3dacb\", \"#c5ffe5\", \"#f5eed4\"],\n\t    [\"#d4cdc5\", \"#5b88a5\", \"#f4f4f2\", \"#191013\", \"#243a69\"],\n\t    [\"#a6e094\", \"#e8e490\", \"#f07360\", \"#bf2a7f\", \"#5c3d5b\"],\n\t    [\"#622824\", \"#2f0618\", \"#412a9c\", \"#1b66ff\", \"#00cef5\"],\n\t    [\"#10100f\", \"#26503c\", \"#849112\", \"#9d4e0f\", \"#840943\"],\n\t    [\"#fffec7\", \"#e1f5c4\", \"#9dc9ac\", \"#919167\", \"#ff4e50\"],\n", "    [\"#dacdac\", \"#f39708\", \"#f85741\", \"#0e9094\", \"#1e1801\"],\n\t    [\"#46294a\", \"#ad4c6b\", \"#e07767\", \"#e0ae67\", \"#d4e067\"],\n\t    [\"#ff9b8f\", \"#ef7689\", \"#9e6a90\", \"#766788\", \"#71556b\"],\n\t    [\"#5e0324\", \"#692764\", \"#7b7893\", \"#7fb1a8\", \"#94f9bf\"],\n\t    [\"#2b2c30\", \"#35313b\", \"#453745\", \"#613c4c\", \"#ff1457\"],\n\t    [\"#f8dac2\", \"#f2a297\", \"#f4436f\", \"#ca1444\", \"#142738\"],\n\t    [\"#92b2a7\", \"#6e7b8c\", \"#b69198\", \"#efa09b\", \"#e7c7b0\"],\n\t    [\"#e1edd1\", \"#aab69b\", \"#9e906e\", \"#b47941\", \"#cf391d\"],\n\t    [\"#e5e6b8\", \"#c6d4b8\", \"#6ca6a3\", \"#856a6a\", \"#9c325c\"],\n\t    [\"#e81e4a\", \"#0b1d21\", \"#078a85\", \"#68baab\", \"#edd5c5\"],\n", "    [\"#6ea49b\", \"#d9d0ac\", \"#6b8f0b\", \"#7d3f60\", \"#372b2e\"],\n\t    [\"#333237\", \"#fb8351\", \"#ffad64\", \"#e9e2da\", \"#add4d3\"],\n\t    [\"#e4ffd4\", \"#ebe7a7\", \"#edc68e\", \"#a49e7e\", \"#6e8f85\"],\n\t    [\"#f2e7d2\", \"#f79eb1\", \"#ae8fba\", \"#4c5e91\", \"#473469\"],\n\t    [\"#fe495f\", \"#fe9d97\", \"#fffec8\", \"#d8fd94\", \"#bded7e\"],\n\t    [\"#240f03\", \"#4b2409\", \"#bd7a22\", \"#e79022\", \"#df621c\"],\n\t    [\"#f5f5f5\", \"#e9e9e9\", \"#006666\", \"#008584\", \"#cccccc\"],\n\t    [\"#fa7785\", \"#24211a\", \"#d5d87d\", \"#b1d4b6\", \"#53cbbf\"],\n\t    [\"#37ab98\", \"#80bc96\", \"#a6c88c\", \"#e1ce8a\", \"#37053b\"],\n\t    [\"#3b331f\", \"#ed6362\", \"#ff8e65\", \"#dceb5b\", \"#58ce74\"],\n", "    [\"#db3026\", \"#e88a25\", \"#f9e14b\", \"#efed89\", \"#7abf66\"],\n\t    [\"#24434b\", \"#fc325b\", \"#fa7f4b\", \"#bfbc84\", \"#63997a\"],\n\t    [\"#06d9b6\", \"#a4f479\", \"#d4d323\", \"#d13775\", \"#9c3c86\"],\n\t    [\"#260d33\", \"#003f69\", \"#106b87\", \"#157a8c\", \"#b3aca4\"],\n\t    [\"#d6ce8b\", \"#8fd053\", \"#02907d\", \"#03453d\", \"#2c1001\"],\n\t    [\"#402b30\", \"#faddb4\", \"#f4c790\", \"#f2977e\", \"#ba6868\"],\n\t    [\"#f5e3ae\", \"#fff5d6\", \"#e1e6d3\", \"#b1ccc4\", \"#4e5861\"],\n\t    [\"#3b4344\", \"#51615b\", \"#bbbd91\", \"#f06f6b\", \"#f12f5d\"],\n\t    [\"#85b394\", \"#a7ba59\", \"#f0f0d8\", \"#f0d890\", \"#ae2f27\"],\n\t    [\"#af162a\", \"#95003a\", \"#830024\", \"#5a0e3d\", \"#44021e\"],\n", "    [\"#b9030f\", \"#9e0004\", \"#70160e\", \"#161917\", \"#e1e3db\"],\n\t    [\"#070705\", \"#3e4b51\", \"#6f737e\", \"#89a09a\", \"#c1c0ae\"],\n\t    [\"#e4a691\", \"#f7efd8\", \"#c8c8a9\", \"#556270\", \"#273142\"],\n\t    [\"#9cd6c8\", \"#f1ffcf\", \"#f8df82\", \"#fac055\", \"#e57c3a\"],\n\t    [\"#fbe4ae\", \"#dacb8a\", \"#897632\", \"#392e0e\", \"#6bb88a\"],\n\t    [\"#c1ddc7\", \"#f5e8c6\", \"#bbcd77\", \"#dc8051\", \"#f4d279\"],\n\t    [\"#a7848b\", \"#b88f93\", \"#f5d5c6\", \"#f9efd4\", \"#b8cabe\"],\n\t    [\"#585d5d\", \"#e06f72\", \"#e7a17a\", \"#e4b17d\", \"#d1cbc0\"],\n\t    [\"#4e3150\", \"#c7777f\", \"#b6dec1\", \"#d6ecdf\", \"#fbf6b5\"],\n\t    [\"#259b9b\", \"#6fbcaa\", \"#b8d6b0\", \"#feedbf\", \"#ff1964\"],\n", "    [\"#e6626f\", \"#efae78\", \"#f5e19c\", \"#a2ca8e\", \"#66af91\"],\n\t    [\"#efe2bf\", \"#f5a489\", \"#ef8184\", \"#a76378\", \"#a8c896\"],\n\t    [\"#17181f\", \"#314d4a\", \"#0b8770\", \"#a6c288\", \"#ebe68d\"],\n\t    [\"#02fcf3\", \"#a9e4cf\", \"#cae0c8\", \"#deddc4\", \"#e8e7d2\"],\n\t    [\"#801245\", \"#f4f4dd\", \"#dcdbaf\", \"#5d5c49\", \"#3d3d34\"],\n\t    [\"#878286\", \"#88b6a3\", \"#bdba9e\", \"#e2c18d\", \"#e2bb64\"],\n\t    [\"#e5e5e5\", \"#f1dbda\", \"#fcd0cf\", \"#cfbdbf\", \"#a2a9af\"],\n\t    [\"#e7ddd3\", \"#c0c2bd\", \"#9c9994\", \"#29251c\", \"#e6aa9f\"],\n\t    [\"#000000\", \"#7890a8\", \"#304878\", \"#181848\", \"#f0a818\"],\n\t    [\"#fab96b\", \"#f19474\", \"#ea777b\", \"#94919a\", \"#69a2a8\"],\n", "    [\"#2eb3a1\", \"#4fb37c\", \"#79b36b\", \"#a2ab5e\", \"#bca95b\"],\n\t    [\"#72bab0\", \"#f0c69c\", \"#d1284f\", \"#9e0e30\", \"#301a1a\"],\n\t    [\"#6d165a\", \"#a0346e\", \"#ec5c8d\", \"#ff8c91\", \"#ffc4a6\"],\n\t    [\"#d0dcb3\", \"#dabd90\", \"#df7670\", \"#f4065e\", \"#837d72\"],\n\t    [\"#f7f3cf\", \"#c2e4cb\", \"#36cecc\", \"#27b1bf\", \"#176585\"],\n\t    [\"#61d4b0\", \"#8ee696\", \"#baf77c\", \"#e8ff65\", \"#ecedd5\"],\n\t    [\"#322f3e\", \"#e63c6d\", \"#f5b494\", \"#ede7a5\", \"#abdecb\"],\n\t    [\"#c0b698\", \"#647e37\", \"#300013\", \"#6e9a81\", \"#d2c8a7\"],\n\t    [\"#594747\", \"#6743a5\", \"#7345d6\", \"#2e2e2e\", \"#bfab93\"],\n\t    [\"#4e031e\", \"#5d2d4e\", \"#5a4c6e\", \"#447390\", \"#05a1ad\"],\n", "    [\"#f9ebc4\", \"#ffb391\", \"#fc2f68\", \"#472f5f\", \"#08295e\"],\n\t    [\"#d3c6cc\", \"#e2c3c6\", \"#eecfc4\", \"#f8e6c6\", \"#ffffcc\"],\n\t    [\"#02031a\", \"#021b2b\", \"#b10c43\", \"#ff0841\", \"#ebdfcc\"],\n\t    [\"#463a2a\", \"#5c4b37\", \"#dddd92\", \"#57c5c7\", \"#00b5b9\"],\n\t    [\"#e72313\", \"#fffcf7\", \"#67b588\", \"#65a675\", \"#141325\"],\n\t    [\"#648285\", \"#b4a68e\", \"#080d0d\", \"#f3daaa\", \"#a3c4c2\"],\n\t    [\"#3a3132\", \"#0f4571\", \"#386dbd\", \"#009ddd\", \"#05d3f8\"],\n\t    [\"#010300\", \"#314c53\", \"#5a7f78\", \"#bbdec6\", \"#f7f8fc\"],\n\t    [\"#66ffff\", \"#8cbfe6\", \"#b380cc\", \"#d940b3\", \"#ff0099\"],\n\t    [\"#63072c\", \"#910f43\", \"#a65d53\", \"#d59500\", \"#f7f7a1\"],\n", "    [\"#a69a81\", \"#e0d3b8\", \"#eb9e6e\", \"#eb6e6e\", \"#706f6b\"],\n\t    [\"#edd8bb\", \"#e2aa87\", \"#fef7e1\", \"#a2d3c7\", \"#ef8e7d\"],\n\t    [\"#070743\", \"#169d99\", \"#b9cc01\", \"#fae894\", \"#ab0768\"],\n\t    [\"#edb886\", \"#f1c691\", \"#ffe498\", \"#f9f9f1\", \"#b9a58d\"],\n\t    [\"#87b091\", \"#c4d4ab\", \"#e0e0b6\", \"#171430\", \"#eff0d5\"],\n\t    [\"#ff7c70\", \"#f2dfb1\", \"#b7c9a9\", \"#674d69\", \"#2e292e\"],\n\t    [\"#1f0441\", \"#fc1068\", \"#fcab10\", \"#f9ce07\", \"#0ce3e8\"],\n\t    [\"#2a091c\", \"#87758f\", \"#85aab0\", \"#a3c3b8\", \"#e3edd2\"],\n\t    [\"#211c33\", \"#2b818c\", \"#ffc994\", \"#ed2860\", \"#990069\"],\n\t    [\"#f75e50\", \"#eac761\", \"#e8df9c\", \"#91c09e\", \"#7d7769\"],\n", "    [\"#fff7e5\", \"#fecdd0\", \"#f8afb8\", \"#f5a3af\", \"#59483e\"],\n\t    [\"#11091a\", \"#2f2f4d\", \"#626970\", \"#bab195\", \"#e8d18e\"],\n\t    [\"#68b2f8\", \"#506ee5\", \"#7037cd\", \"#651f71\", \"#1d0c20\"],\n\t    [\"#c9031a\", \"#9d1722\", \"#4a2723\", \"#07a2a6\", \"#ffeccb\"],\n\t    [\"#fa3419\", \"#f3e1b6\", \"#7cbc9a\", \"#23998e\", \"#1d5e69\"],\n\t    [\"#000000\", \"#a69682\", \"#7e9991\", \"#737373\", \"#d8770c\"],\n\t    [\"#cc063e\", \"#e83535\", \"#fd9407\", \"#e2d9c2\", \"#10898b\"],\n\t    [\"#cbe4ea\", \"#ead1cb\", \"#af9c98\", \"#657275\", \"#000000\"],\n\t    [\"#a9baae\", \"#e6d0b1\", \"#deb297\", \"#c98d7b\", \"#8a6662\"],\n\t    [\"#fb573b\", \"#4f393c\", \"#8ea88d\", \"#9cd0ac\", \"#f4eb9e\"],\n", "    [\"#9d9382\", \"#ffc1b2\", \"#ffdbc8\", \"#fff6c7\", \"#dcd7c2\"],\n\t    [\"#a89d87\", \"#bab100\", \"#f91659\", \"#b31d6a\", \"#2e2444\"],\n\t    [\"#decba0\", \"#a0ab94\", \"#6b9795\", \"#594461\", \"#6e1538\"],\n\t    [\"#fef7d5\", \"#abee93\", \"#2d938e\", \"#0b4462\", \"#f7a48b\"],\n\t    [\"#4b1623\", \"#75233d\", \"#c4594b\", \"#f0b96b\", \"#fdf57e\"],\n\t    [\"#00686c\", \"#32c2b9\", \"#edecb3\", \"#fad928\", \"#ff9915\"],\n\t    [\"#f3ffd2\", \"#bff1ce\", \"#82bda7\", \"#6e837c\", \"#2e0527\"],\n\t    [\"#e0eebd\", \"#dae98a\", \"#e17572\", \"#ce1446\", \"#2b0b16\"],\n\t    [\"#40223c\", \"#42988f\", \"#b1c592\", \"#f1ddba\", \"#fb718a\"],\n\t    [\"#8fbfb9\", \"#649ea7\", \"#bddb88\", \"#e0f3b2\", \"#eefaa8\"],\n", "    [\"#3b1a01\", \"#a5cc7a\", \"#dcffb6\", \"#633b1c\", \"#db3c6e\"],\n\t    [\"#865a19\", \"#c4b282\", \"#85005b\", \"#520647\", \"#0e002f\"],\n\t    [\"#0e0036\", \"#4c264b\", \"#a04f62\", \"#d2a391\", \"#e6d7b8\"],\n\t    [\"#b9f8f0\", \"#b6d3a5\", \"#ee9b57\", \"#ef2b41\", \"#11130e\"],\n\t    [\"#a4f7d4\", \"#9ae07d\", \"#ada241\", \"#a13866\", \"#381c30\"],\n\t    [\"#320139\", \"#331b3b\", \"#333e50\", \"#5c6e6e\", \"#f1debd\"],\n\t    [\"#e5fec5\", \"#c5fec6\", \"#a3fec7\", \"#29ffc9\", \"#392a35\"],\n\t    [\"#e3604d\", \"#d1c8a3\", \"#acba9d\", \"#7b5d5e\", \"#c6ad71\"],\n\t    [\"#300d28\", \"#70615c\", \"#8ca38b\", \"#f7eeaa\", \"#edb552\"],\n\t    [\"#1f192f\", \"#2d6073\", \"#65b8a6\", \"#b5e8c3\", \"#f0f7da\"],\n", "    [\"#ebe5ce\", \"#ced1c0\", \"#bad1c9\", \"#8c162a\", \"#660022\"],\n\t    [\"#1a0c12\", \"#f70a71\", \"#ffdaa6\", \"#ffb145\", \"#74ab90\"],\n\t    [\"#bbaa9a\", \"#849b95\", \"#90856f\", \"#b6554c\", \"#d83a31\"],\n\t    [\"#e4e2af\", \"#ffa590\", \"#e5cbb4\", \"#fff1d7\", \"#56413e\"],\n\t    [\"#7e6762\", \"#cf5a60\", \"#f85a69\", \"#f0b593\", \"#e3dfbc\"],\n\t    [\"#484450\", \"#466067\", \"#459a96\", \"#34baab\", \"#c4c8c5\"],\n\t    [\"#f2ecb0\", \"#ebb667\", \"#d65c56\", \"#823c3c\", \"#1b1c26\"],\n\t    [\"#fbffcc\", \"#caf2be\", \"#ddc996\", \"#f67975\", \"#f13565\"],\n\t    [\"#574d4f\", \"#ffffff\", \"#969091\", \"#ffe999\", \"#ffd952\"],\n\t    [\"#caf729\", \"#79dd7e\", \"#2ecbaa\", \"#21b6b6\", \"#888dda\"],\n", "    [\"#ffe3b3\", \"#ff9a52\", \"#ff5252\", \"#c91e5a\", \"#3d2922\"],\n\t    [\"#99db49\", \"#069e8c\", \"#211d19\", \"#575048\", \"#9e064a\"],\n\t    [\"#e2e2b2\", \"#49fecf\", \"#370128\", \"#e42355\", \"#fe7945\"],\n\t    [\"#f3b578\", \"#f78376\", \"#da4c66\", \"#8f3c68\", \"#3f3557\"],\n\t    [\"#eed47f\", \"#f2e0a0\", \"#d8d8b2\", \"#8cb0b0\", \"#432332\"],\n\t    [\"#5c1b35\", \"#d43f5d\", \"#f2a772\", \"#e8d890\", \"#e2edb7\"],\n\t    [\"#79d6b7\", \"#ccd6bd\", \"#d7c3ab\", \"#f0afab\", \"#f58696\"],\n\t    [\"#cdb28a\", \"#f9f4e3\", \"#d4ddb1\", \"#b1ba8e\", \"#7a6448\"],\n\t    [\"#f1f7cd\", \"#d3f7cd\", \"#b5f7cd\", \"#403a26\", \"#81876c\"],\n\t    [\"#c7003f\", \"#f90050\", \"#f96a00\", \"#faab00\", \"#daf204\"],\n", "    [\"#412973\", \"#753979\", \"#b1476d\", \"#eb9064\", \"#bed9c8\"],\n\t    [\"#8f9044\", \"#f8a523\", \"#fc8020\", \"#cf1500\", \"#352f3d\"],\n\t    [\"#48586f\", \"#ffffc0\", \"#d6c496\", \"#d62e2e\", \"#283d3e\"],\n\t    [\"#7d677e\", \"#4f2c4d\", \"#360b41\", \"#ccc9aa\", \"#fafdea\"],\n\t    [\"#f8f8d6\", \"#b3c67f\", \"#5d7e62\", \"#50595c\", \"#fa3e3e\"],\n\t    [\"#f4fcb8\", \"#dae681\", \"#95a868\", \"#452c18\", \"#cc7254\"],\n\t    [\"#5e5473\", \"#19b5a5\", \"#ede89d\", \"#ff6933\", \"#ff0048\"],\n\t    [\"#723e4e\", \"#b03851\", \"#ef3353\", \"#f17144\", \"#f4b036\"],\n\t    [\"#f3ddb6\", \"#d6bf93\", \"#532728\", \"#ced0ba\", \"#f2efce\"],\n\t    [\"#663333\", \"#994d4d\", \"#cc6666\", \"#e6b280\", \"#ffff99\"],\n", "    [\"#fea304\", \"#909320\", \"#125a44\", \"#37192c\", \"#220315\"],\n\t    [\"#52baa7\", \"#718f85\", \"#ba5252\", \"#fc0f52\", \"#fc3d73\"],\n\t    [\"#edab8b\", \"#f5ebb0\", \"#dad061\", \"#acc59d\", \"#776c5a\"],\n\t    [\"#f8f4c4\", \"#d5e0b5\", \"#a5c3a7\", \"#6d8b89\", \"#47667b\"],\n\t    [\"#c8cfae\", \"#96b397\", \"#525574\", \"#5c3e62\", \"#9b5f7b\"],\n\t    [\"#e4b302\", \"#158fa2\", \"#de4f3a\", \"#722731\", \"#bd1b43\"],\n\t    [\"#0b110d\", \"#2c4d56\", \"#c3aa72\", \"#dc7612\", \"#bd3200\"],\n\t    [\"#52493a\", \"#7c8569\", \"#a4ab80\", \"#e8e0ae\", \"#de733e\"],\n\t    [\"#665c52\", \"#74b3a7\", \"#a3ccaf\", \"#e6e1cf\", \"#cc5b14\"],\n\t    [\"#53ac59\", \"#3b8952\", \"#0f684b\", \"#03484c\", \"#1c232e\"],\n", "    [\"#111113\", \"#d18681\", \"#acbfb7\", \"#f6ebdd\", \"#8e6d86\"],\n\t    [\"#745e50\", \"#ff948b\", \"#fdaf8a\", \"#fcd487\", \"#f79585\"],\n\t    [\"#090f13\", \"#171f25\", \"#752e2b\", \"#c90a02\", \"#f2eab7\"],\n\t    [\"#d3b390\", \"#b8a38b\", \"#a78b83\", \"#c76b79\", \"#f1416b\"],\n\t    [\"#210210\", \"#ee2853\", \"#2b0215\", \"#8f2f45\", \"#d24d6c\"],\n\t    [\"#ceebd1\", \"#b6deb9\", \"#b1ccb4\", \"#aebfaf\", \"#a6ada7\"],\n\t    [\"#545454\", \"#7b8a84\", \"#8cbfaf\", \"#ede7d5\", \"#b7cc18\"],\n\t    [\"#e6546b\", \"#da8f72\", \"#ffe792\", \"#c9daa4\", \"#8acbb5\"],\n\t    [\"#ffffea\", \"#a795a5\", \"#7a959e\", \"#424e5e\", \"#3b2b46\"],\n\t    [\"#addfd3\", \"#eae3d0\", \"#dbc4b6\", \"#ffa5aa\", \"#efd5c4\"],\n", "    [\"#c5f7f0\", \"#a9c2c9\", \"#8e8ca3\", \"#72577c\", \"#562155\"],\n\t    [\"#394736\", \"#696b46\", \"#b99555\", \"#a8462d\", \"#5c584c\"],\n\t    [\"#5a372c\", \"#8b8b70\", \"#98c7b0\", \"#f0f0d8\", \"#c94b0c\"],\n\t    [\"#ff548f\", \"#9061c2\", \"#be80ff\", \"#63d3ff\", \"#02779e\"],\n\t    [\"#9ed99e\", \"#f0dda6\", \"#eb6427\", \"#eb214e\", \"#1a1623\"],\n\t    [\"#000000\", \"#1693a5\", \"#d8d8c0\", \"#f0f0d8\", \"#ffffff\"],\n\t    [\"#383939\", \"#149c68\", \"#38c958\", \"#aee637\", \"#fffedb\"],\n\t    [\"#ffdeb3\", \"#73bc91\", \"#342220\", \"#fc370c\", \"#ff8716\"],\n\t    [\"#cce4d1\", \"#d2e1a7\", \"#d8de7d\", \"#dedb53\", \"#e4d829\"],\n\t    [\"#3b234a\", \"#523961\", \"#baafc4\", \"#c3bbc9\", \"#d4c7bf\"],\n", "    [\"#4d4250\", \"#b66e6f\", \"#cf8884\", \"#e6a972\", \"#f6d169\"],\n\t    [\"#f0c0a8\", \"#f0d8a8\", \"#a8c090\", \"#789090\", \"#787878\"],\n\t    [\"#5f545c\", \"#eb7072\", \"#f5ba90\", \"#f5e2b8\", \"#a2caa5\"],\n\t    [\"#cccc66\", \"#a6bf73\", \"#80b380\", \"#59a68c\", \"#339999\"],\n\t    [\"#fdefb0\", \"#e7a8b1\", \"#b998b3\", \"#77779d\", \"#4771a3\"],\n\t    [\"#473334\", \"#b3c8a7\", \"#ffebb9\", \"#e3536c\", \"#da1a29\"],\n\t    [\"#dae5ab\", \"#e9a385\", \"#fa154b\", \"#87313f\", \"#604e48\"],\n\t    [\"#e6e6e6\", \"#aae6d9\", \"#c8cbc1\", \"#e6b0aa\", \"#a1a1a1\"],\n\t    [\"#3b3f49\", \"#fdfaeb\", \"#faeddf\", \"#f3c6b9\", \"#f7a29e\"],\n\t    [\"#f23e02\", \"#fef5c8\", \"#00988d\", \"#2c6b74\", \"#013750\"],\n", "    [\"#332d27\", \"#8a0015\", \"#e30224\", \"#85725f\", \"#fae1c0\"],\n\t    [\"#bfe0c0\", \"#160921\", \"#f06e75\", \"#f2af60\", \"#d0d26f\"],\n\t    [\"#eddbc4\", \"#a3c9a7\", \"#ffb353\", \"#ff6e4a\", \"#5c5259\"],\n\t    [\"#fbb498\", \"#f8c681\", \"#bec47e\", \"#9bb78f\", \"#98908d\"],\n\t    [\"#cb7ca2\", \"#ed9da1\", \"#c9e5af\", \"#dceeb1\", \"#fef9f6\"],\n\t    [\"#c95c7a\", \"#de9153\", \"#d6d644\", \"#dcebaf\", \"#14888b\"],\n\t    [\"#f2d786\", \"#ff9784\", \"#c09491\", \"#a4c09a\", \"#d4d9a1\"],\n\t    [\"#f2eabc\", \"#54736e\", \"#194756\", \"#080000\", \"#ff3b58\"],\n\t    [\"#ae0c3e\", \"#afcca8\", \"#f5eec3\", \"#c7b299\", \"#33211c\"],\n\t    [\"#000000\", \"#8f1414\", \"#e50e0e\", \"#f3450f\", \"#fcac03\"],\n", "    [\"#a88914\", \"#91a566\", \"#bed084\", \"#e9e199\", \"#faedca\"],\n\t    [\"#37193b\", \"#e75a7a\", \"#f59275\", \"#f5c273\", \"#aeb395\"],\n\t    [\"#bad3c6\", \"#f9d9ac\", \"#fca483\", \"#f18886\", \"#7b7066\"],\n\t    [\"#e8d7a9\", \"#8eaa94\", \"#6b666d\", \"#6c3751\", \"#52223c\"],\n\t    [\"#f0f0f0\", \"#d8d8d8\", \"#c0c0a8\", \"#604848\", \"#484848\"],\n\t    [\"#f05c54\", \"#a17457\", \"#5c735e\", \"#3d615b\", \"#434247\"],\n\t    [\"#ff1d44\", \"#fbebaf\", \"#74bf9d\", \"#56a292\", \"#1c8080\"],\n\t    [\"#fcbf6b\", \"#a9ad94\", \"#42302e\", \"#f6daab\", \"#dabd7b\"],\n\t    [\"#ff8482\", \"#ffb294\", \"#f8d8a5\", \"#91be95\", \"#635a49\"],\n\t    [\"#484848\", \"#006465\", \"#0f928c\", \"#00c9d2\", \"#beee3b\"],\n", "    [\"#680a1d\", \"#3f1719\", \"#fcef9c\", \"#e8b666\", \"#ba2339\"],\n\t    [\"#413249\", \"#ccc591\", \"#e2b24c\", \"#eb783f\", \"#ff426a\"],\n\t    [\"#880606\", \"#d53d0c\", \"#ff8207\", \"#231d1e\", \"#fcfcfc\"],\n\t    [\"#c5b89f\", \"#feffd4\", \"#9e2d4a\", \"#450b1e\", \"#21000f\"],\n\t    [\"#f7fd91\", \"#d09e1e\", \"#fa7a32\", \"#f42a55\", \"#261323\"],\n\t    [\"#5b1d99\", \"#0074b4\", \"#00b34c\", \"#ffd41f\", \"#fc6e3d\"],\n\t    [\"#079ea6\", \"#1e0c42\", \"#f0077b\", \"#f5be58\", \"#e3e0b3\"],\n\t    [\"#fcbf6b\", \"#e58634\", \"#657a38\", \"#afab50\", \"#a9ccb9\"],\n\t    [\"#cee1d8\", \"#f6eee0\", \"#fda664\", \"#f04842\", \"#83563f\"],\n\t    [\"#e0da96\", \"#badda3\", \"#94e0b0\", \"#a6b5ae\", \"#b88bad\"],\n", "    [\"#2b2823\", \"#8fa691\", \"#d4ceaa\", \"#f9fadc\", \"#cc3917\"],\n\t    [\"#c0d88c\", \"#f7a472\", \"#f07877\", \"#fa2a3a\", \"#0a5c5a\"],\n\t    [\"#343635\", \"#d90057\", \"#e88700\", \"#77b8a6\", \"#ffe2ba\"],\n\t    [\"#3e3433\", \"#f07f83\", \"#b29a78\", \"#9eaf83\", \"#75a480\"],\n\t    [\"#ffbd87\", \"#ffd791\", \"#f7e8a6\", \"#d9e8ae\", \"#bfe3c0\"],\n\t    [\"#c3e6d4\", \"#f4f0e5\", \"#e0c4ae\", \"#e1918e\", \"#e15e6e\"],\n\t    [\"#bd2a33\", \"#d6aa26\", \"#93a31c\", \"#408156\", \"#30374f\"],\n\t    [\"#243757\", \"#3a5f6f\", \"#dad5b7\", \"#c2b79b\", \"#665e52\"],\n\t    [\"#e1c78c\", \"#eda011\", \"#db6516\", \"#7a6949\", \"#adad8e\"],\n\t    [\"#eb445b\", \"#f5938b\", \"#f0cdab\", \"#f1e7c5\", \"#b6d4bb\"],\n", "    [\"#d0cf75\", \"#f8764e\", \"#da2644\", \"#90044a\", \"#440a2a\"],\n\t    [\"#185b63\", \"#c0261c\", \"#ba460d\", \"#c59538\", \"#404040\"],\n\t    [\"#40ffdc\", \"#00a9d4\", \"#1c3166\", \"#240047\", \"#1c0021\"],\n\t    [\"#5e1f28\", \"#8a2f2e\", \"#ae5543\", \"#f7bb75\", \"#83764c\"],\n\t    [\"#f1d989\", \"#3e3932\", \"#0fbab7\", \"#000c0c\", \"#e2e3a9\"],\n\t    [\"#e46d29\", \"#ba4c57\", \"#4e3a3b\", \"#a59571\", \"#d0bc87\"],\n\t    [\"#eb7f7f\", \"#eb9a7f\", \"#ebb57f\", \"#ebd07f\", \"#ebeb7f\"],\n\t    [\"#e2d9db\", \"#f2e5f9\", \"#d9e1df\", \"#ff8a84\", \"#fe6763\"],\n\t    [\"#f3d597\", \"#b6d89c\", \"#92ccb6\", \"#f87887\", \"#9e6b7c\"],\n\t    [\"#e0d1ed\", \"#f0b9cf\", \"#e63c80\", \"#c70452\", \"#4b004c\"],\n", "    [\"#e84d5b\", \"#eae2cf\", \"#b4ccb9\", \"#26979f\", \"#3b3b3b\"],\n\t    [\"#13141a\", \"#a90448\", \"#fb3640\", \"#fda543\", \"#17c69b\"],\n\t    [\"#5a5239\", \"#190a12\", \"#b3c9c1\", \"#cec7b6\", \"#eee9c7\"],\n\t    [\"#0d0f36\", \"#294380\", \"#69d2cd\", \"#b9f1d6\", \"#f1f6ce\"],\n\t    [\"#e4e6c9\", \"#e6dac6\", \"#d6c3b9\", \"#c2b48a\", \"#b37883\"],\n\t    [\"#c9b8a8\", \"#f8af8c\", \"#a24d52\", \"#5a3044\", \"#391d34\"],\n\t    [\"#58706d\", \"#4b5757\", \"#7c8a6e\", \"#b0b087\", \"#e3e3d1\"],\n\t    [\"#faefc2\", \"#a4ac9d\", \"#a27879\", \"#a4626c\", \"#f05d77\"],\n\t    [\"#e6ac84\", \"#ad9978\", \"#619177\", \"#161618\", \"#594c2a\"],\n\t    [\"#855f30\", \"#9ec89a\", \"#eaba68\", \"#ff5248\", \"#f6ffb3\"],\n", "    [\"#5c4152\", \"#b4585d\", \"#d97f76\", \"#f7d0a9\", \"#a1c0ae\"],\n\t    [\"#bf9f88\", \"#e8c8a1\", \"#fce4be\", \"#f6a68d\", \"#f96153\"],\n\t    [\"#a8ab9b\", \"#172a38\", \"#ec4b5d\", \"#f48773\", \"#e0c590\"]\n\t]"]}
{"filename": "src/uiInitilalizer.py", "chunked_list": ["from filemanager import Filemanager, File\n\timport colorConverter\n\tclass UiInitilalizer:\n\t    def __init__(self, effectOptionsTab, editPalette, secondaryColorCheckbox, secondaryColorInput):\n\t        self.effectOptionsTab = effectOptionsTab\n\t        self.editPalette = editPalette\n\t        self.secondaryColorCheckbox = secondaryColorCheckbox\n\t        self.secondaryColorInput = secondaryColorInput\n\t        currentEffect = Filemanager.getValue(File.EFFECTS, \"current_effect\")\n\t        if currentEffect is not None:\n", "            self.loadUI(currentEffect)\n\t    def loadUI(self, effect):\n\t        palette = self.getColors(effect)\n\t        self.editPalette.loadPalette(palette)\n\t    def getColors(self, effect):\n\t        hsbColors = effect['write']['palette']\n\t        palette = []\n\t        for color in hsbColors:\n\t            palette.append(colorConverter.HSBtoHEX(color['hue'], color['saturation'], color['brightness']))\n\t        if len(palette) > 3:\n", "            containsSecondaryColor = True\n\t            comparator = palette[1]\n\t            for i in range(3, len(palette), 2):\n\t                if palette[i] != comparator:\n\t                    containsSecondaryColor = False\n\t                    break\n\t            if containsSecondaryColor:\n\t                palette = palette[::2]\n\t                self.secondaryColorCheckbox.set_value(True)\n\t                self.secondaryColorInput.set_value(comparator)\n", "        return palette"]}
{"filename": "src/ui_EffectOptionsTab.py", "chunked_list": ["from effectList import effects\n\tfrom nicegui import ui\n\tfrom ui_AnnotatedSlider import Ui_AnnotatedSlider\n\tfrom ui_AnnotatedToggle import Ui_AnnotatedToggle\n\tfrom ui_DoubleSlider import Ui_DoubleSlider\n\tclass Ui_EffectOptionsTab:\n\t    def __init__(self, eventHandler):\n\t        self.eventHandler = eventHandler\n\t        self.effectFactory = self.eventHandler.effectFactory\n\t        with ui.row().style('margin-top: 5%'):\n", "            ui.label('Current Effect:')\n\t            self.currentEffect = ui.label()\n\t            ui.separator().style('margin-top: 5%')\n\t        self.delayTime = Ui_DoubleSlider('Delay Time:', self.effectFactory)\n\t        self.transTime = Ui_DoubleSlider('Transition Time:', self.effectFactory)\n\t        self.linDirection = Ui_AnnotatedToggle({1: 'Right', 2: 'Left', 3: 'Up', 4: 'Down'}, value=1, description='Direction:', effectFactory=self.effectFactory)\n\t        self.mainColorProb = Ui_AnnotatedSlider(min=0, max=100, value=50, description='Main Color Probability:', effectFactory=self.effectFactory)\n\t        self.evolutionSpeed = Ui_AnnotatedSlider(min=0, max=100, value=50, description='Evolution Speed:', effectFactory=self.effectFactory)\n\t        self.scale = Ui_AnnotatedSlider(min=0, max=100, value=50, description='Scale:', effectFactory=self.effectFactory)\n\t        self.stretch = Ui_AnnotatedSlider(min=0, max=100, value=50, description='Stretch:', effectFactory=self.effectFactory)\n", "        self.nColorsPerFrame = Ui_AnnotatedSlider(min=2, max=10, value=2, description='n Colors per frame:', effectFactory=self.effectFactory)\n\t        self.info = ui.label('No further settings available for this effect.').style('margin-top: -20%;')\n\t        self.setEffect('Random')\n\t    def setEffect(self, effect):\n\t        self.currentEffect.set_text(effect)\n\t        self.hideOptions()\n\t        self.effectFactory.pluginType, effect = self.getEffectProps(effect)\n\t        self.effectFactory.currentEffect = effect\n\t        props = effect[1]\n\t        if 'delayTime' in props:\n", "            self.delayTime.widget.setVisibility(True)\n\t        if 'transTime' in props:\n\t            self.transTime.widget.setVisibility(True)\n\t        if 'linDirection' in props:\n\t            self.linDirection.widget.setVisibility(True)\n\t        if 'mainColorProb' in props:\n\t            self.mainColorProb.widget.setVisibility(True)\n\t        if 'evolutionSpeed' in props:\n\t            self.evolutionSpeed.widget.setVisibility(True)\n\t        if 'scale' in props:\n", "            self.scale.widget.setVisibility(True)\n\t        if 'stretch' in props:\n\t            self.stretch.widget.setVisibility(True)\n\t        if 'nColorsPerFrame' in props:\n\t            self.nColorsPerFrame.widget.setVisibility(True)\n\t        if len(props) == 0:\n\t            self.info.set_visibility(True)\n\t    def hideOptions(self):\n\t        for element in [self.delayTime, self.transTime, self.linDirection, self.mainColorProb, self.evolutionSpeed, self.scale, self.stretch, self.nColorsPerFrame]:\n\t            element.widget.setVisibility(False)\n", "        self.info.set_visibility(False)\n\t    @staticmethod\n\t    def getEffectProps(effect):\n\t        for key in effects.keys():\n\t            try:\n\t                return key, effects[key][effect]\n\t            except KeyError:\n\t                pass"]}
