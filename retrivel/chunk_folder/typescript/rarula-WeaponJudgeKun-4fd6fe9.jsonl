{"filename": "src/bot.ts", "chunked_list": ["import { Client, REST, Routes } from 'discord.js';\n\timport { VERSION } from '.';\n\timport { JudgeCommand } from './commands';\n\timport { locale } from './locales';\n\timport { Command } from './types/Command';\n\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\tconst BOT_TOKEN = process.env.BOT_TOKEN!;\n\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\tconst APP_ID = process.env.APP_ID!;\n\tconst CLIENT = new Client({\n", "    intents: [],\n\t});\n\tconst COMMANDS: Command[] = [\n\t    JudgeCommand,\n\t];\n\texport async function setupBot(): Promise<void> {\n\t    await registerCommands();\n\t    CLIENT.on('ready', () => {\n\t        CLIENT.user?.setActivity({\n\t            name: `${locale('text-judge')} | ${VERSION} `,\n", "        });\n\t    });\n\t    CLIENT.on('interactionCreate', async (interaction) => {\n\t        if (!interaction.isChatInputCommand()) return;\n\t        for (const command of COMMANDS) {\n\t            if (interaction.commandName === command.command.name) {\n\t                command.execute(interaction);\n\t            }\n\t        }\n\t    });\n", "    CLIENT.login(BOT_TOKEN);\n\t}\n\tasync function registerCommands(): Promise<void> {\n\t    const commands = COMMANDS.map((command) => {\n\t        return command.command;\n\t    });\n\t    const rest = new REST({ version: '10' }).setToken(BOT_TOKEN);\n\t    await rest.put(Routes.applicationCommands(APP_ID), {\n\t        body: commands,\n\t    });\n", "}\n"]}
{"filename": "src/index.ts", "chunked_list": ["import 'dotenv/config';\n\timport express, { Request, Response } from 'express';\n\timport { setupBot } from './bot';\n\t// バージョン情報\n\texport const VERSION = 'v1.0.0';\n\t// botを起動\n\tsetupBot();\n\tconst app = express();\n\tapp.get('/', (req: Request, res: Response) => {\n\t    res.send({ version: VERSION });\n", "});\n\tapp.listen(3000, () => {\n\t    console.log('Start on port 3000.');\n\t});\n"]}
{"filename": "src/judge.ts", "chunked_list": ["import { SpecialWeapon, SubWeapon, Weapon, WeaponType } from './types/Weapon';\n\timport { getRandomElem } from './utils/array';\n\timport { BLASTERS, BRELLAS, BRUSHES, CHARGERS, DUALIES, ROLLERS, SHOOTERS, SLOSHERS, SPLATANAS, SPLATLINGS, STRINGERS } from './weapons';\n\tconst WEAPONS = [\n\t    ...SHOOTERS,\n\t    ...SPLATLINGS,\n\t    ...CHARGERS,\n\t    ...ROLLERS,\n\t    ...BLASTERS,\n\t    ...SLOSHERS,\n", "    ...DUALIES,\n\t    ...BRUSHES,\n\t    ...STRINGERS,\n\t    ...BRELLAS,\n\t    ...SPLATANAS,\n\t];\n\texport function judge(typeFilters: WeaponType[], subFilters: SubWeapon[], specialFilters: SpecialWeapon[]): Weapon | undefined {\n\t    const weapons = WEAPONS\n\t        .filter((weapon) => {\n\t            if (typeFilters.length === 0) {\n", "                return true;\n\t            }\n\t            for (const filter of typeFilters) {\n\t                if (filter === weapon.type) {\n\t                    return true;\n\t                }\n\t            }\n\t            return false;\n\t        })\n\t        .filter((weapon) => {\n", "            if (subFilters.length === 0) {\n\t                return true;\n\t            }\n\t            for (const filter of subFilters) {\n\t                if (filter === weapon.sub) {\n\t                    return true;\n\t                }\n\t            }\n\t            return false;\n\t        })\n", "        .filter((weapon) => {\n\t            if (specialFilters.length === 0) {\n\t                return true;\n\t            }\n\t            for (const filter of specialFilters) {\n\t                if (filter === weapon.special) {\n\t                    return true;\n\t                }\n\t            }\n\t            return false;\n", "        });\n\t    return getRandomElem(weapons);\n\t}\n"]}
{"filename": "src/commands/JudgeCommand.ts", "chunked_list": ["import { SlashCommandBuilder } from 'discord.js';\n\timport { judge } from '../judge';\n\timport { locale } from '../locales';\n\timport { Command } from '../types/Command';\n\timport { SpecialWeapon, SubWeapon, WeaponType } from '../types/Weapon';\n\texport const JudgeCommand: Command = {\n\t    command: new SlashCommandBuilder()\n\t        .setName(\n\t            'judge',\n\t        )\n", "        .setDescription(\n\t            locale('text-command-judge-des-0'),\n\t        )\n\t        .addStringOption((option) =>\n\t            option\n\t                .setName(\n\t                    locale('text-command-judge-name-1'),\n\t                )\n\t                .setDescription(\n\t                    locale('text-command-judge-des-1'),\n", "                )\n\t                .addChoices(\n\t                    {\n\t                        name: locale('text-shooter'),\n\t                        value: 'SHOOTER',\n\t                    },\n\t                    {\n\t                        name: locale('text-splatling'),\n\t                        value: 'SPLATLING',\n\t                    },\n", "                    {\n\t                        name: locale('text-charger'),\n\t                        value: 'CHARGER',\n\t                    },\n\t                    {\n\t                        name: locale('text-roller'),\n\t                        value: 'ROLLER',\n\t                    },\n\t                    {\n\t                        name: locale('text-blaster'),\n", "                        value: 'BLASTER',\n\t                    },\n\t                    {\n\t                        name: locale('text-slosher'),\n\t                        value: 'SLOSHER',\n\t                    },\n\t                    {\n\t                        name: locale('text-dualie'),\n\t                        value: 'DUALIE',\n\t                    },\n", "                    {\n\t                        name: locale('text-brush'),\n\t                        value: 'BRUSH',\n\t                    },\n\t                    {\n\t                        name: locale('text-stringer'),\n\t                        value: 'STRINGER',\n\t                    },\n\t                    {\n\t                        name: locale('text-brella'),\n", "                        value: 'BRELLA',\n\t                    },\n\t                    {\n\t                        name: locale('text-splatana'),\n\t                        value: 'SPLATANA',\n\t                    },\n\t                )\n\t        )\n\t        .addStringOption((option) =>\n\t            option\n", "                .setName(\n\t                    locale('text-command-judge-name-2'),\n\t                )\n\t                .setDescription(\n\t                    locale('text-command-judge-des-2'),\n\t                )\n\t                .addChoices(\n\t                    {\n\t                        name: locale('splat-bomb'),\n\t                        value: 'splat-bomb',\n", "                    },\n\t                    {\n\t                        name: locale('suction-bomb'),\n\t                        value: 'suction-bomb',\n\t                    },\n\t                    {\n\t                        name: locale('burst-bomb'),\n\t                        value: 'burst-bomb',\n\t                    },\n\t                    {\n", "                        name: locale('curling-bomb'),\n\t                        value: 'curling-bomb',\n\t                    },\n\t                    {\n\t                        name: locale('autobomb'),\n\t                        value: 'autobomb',\n\t                    },\n\t                    {\n\t                        name: locale('ink-mine'),\n\t                        value: 'ink-mine',\n", "                    },\n\t                    {\n\t                        name: locale('toxic-mist'),\n\t                        value: 'toxic-mist',\n\t                    },\n\t                    {\n\t                        name: locale('point-sensor'),\n\t                        value: 'point-sensor',\n\t                    },\n\t                    {\n", "                        name: locale('splash-wall'),\n\t                        value: 'splash-wall',\n\t                    },\n\t                    {\n\t                        name: locale('sprinkler'),\n\t                        value: 'sprinkler',\n\t                    },\n\t                    {\n\t                        name: locale('squid-beakon'),\n\t                        value: 'squid-beakon',\n", "                    },\n\t                    {\n\t                        name: locale('fizzy-bomb'),\n\t                        value: 'fizzy-bomb',\n\t                    },\n\t                    {\n\t                        name: locale('torpedo'),\n\t                        value: 'torpedo',\n\t                    },\n\t                    {\n", "                        name: locale('angle-shooter'),\n\t                        value: 'angle-shooter',\n\t                    },\n\t                )\n\t        )\n\t        .addStringOption((option) =>\n\t            option\n\t                .setName(\n\t                    locale('text-command-judge-name-3'),\n\t                )\n", "                .setDescription(\n\t                    locale('text-command-judge-des-3'),\n\t                )\n\t                .addChoices(\n\t                    {\n\t                        name: locale('big-bubbler'),\n\t                        value: 'big-bubbler',\n\t                    },\n\t                    {\n\t                        name: locale('booyah-bomb'),\n", "                        value: 'booyah-bomb',\n\t                    },\n\t                    {\n\t                        name: locale('crab-tank'),\n\t                        value: 'crab-tank',\n\t                    },\n\t                    {\n\t                        name: locale('ink-storm'),\n\t                        value: 'ink-storm',\n\t                    },\n", "                    {\n\t                        name: locale('ink-vac'),\n\t                        value: 'ink-vac',\n\t                    },\n\t                    {\n\t                        name: locale('inkjet'),\n\t                        value: 'inkjet',\n\t                    },\n\t                    {\n\t                        name: locale('killer-wail-5.1'),\n", "                        value: 'killer-wail-5.1',\n\t                    },\n\t                    {\n\t                        name: locale('kraken-royale'),\n\t                        value: 'kraken-royale',\n\t                    },\n\t                    {\n\t                        name: locale('reefslider'),\n\t                        value: 'reefslider',\n\t                    },\n", "                    {\n\t                        name: locale('super-chump'),\n\t                        value: 'super-chump',\n\t                    },\n\t                    {\n\t                        name: locale('tacticooler'),\n\t                        value: 'tacticooler',\n\t                    },\n\t                    {\n\t                        name: locale('tenta-missiles'),\n", "                        value: 'tenta-missiles',\n\t                    },\n\t                    {\n\t                        name: locale('triple-inkstrike'),\n\t                        value: 'triple-inkstrike',\n\t                    },\n\t                    {\n\t                        name: locale('trizooka'),\n\t                        value: 'trizooka',\n\t                    },\n", "                    {\n\t                        name: locale('ultra-stamp'),\n\t                        value: 'ultra-stamp',\n\t                    },\n\t                    {\n\t                        name: locale('wave-breaker'),\n\t                        value: 'wave-breaker',\n\t                    },\n\t                    {\n\t                        name: locale('zipcaster'),\n", "                        value: 'zipcaster',\n\t                    },\n\t                )\n\t        ),\n\t    execute: async (interaction) => {\n\t        const type = interaction.options.get(locale('text-command-judge-name-1'))?.value as WeaponType | undefined;\n\t        const sub = interaction.options.get(locale('text-command-judge-name-2'))?.value as SubWeapon | undefined;\n\t        const special = interaction.options.get(locale('text-command-judge-name-3'))?.value as SpecialWeapon | undefined;\n\t        const weapon = judge(\n\t            type\n", "                ? [type]\n\t                : [],\n\t            sub\n\t                ? [sub]\n\t                : [],\n\t            special\n\t                ? [special]\n\t                : [],\n\t        );\n\t        if (weapon) {\n", "            await interaction.reply({\n\t                content: locale('text-judge'),\n\t                embeds: [\n\t                    {\n\t                        title: locale(weapon.id),\n\t                        fields: [\n\t                            {\n\t                                name: `${locale('text-sub')}:`,\n\t                                value: locale(weapon.sub),\n\t                            },\n", "                            {\n\t                                name: `${locale('text-special')}:`,\n\t                                value: locale(weapon.special),\n\t                            },\n\t                        ],\n\t                    },\n\t                ],\n\t            });\n\t        } else {\n\t            await interaction.reply({\n", "                content: locale('text-command-judge-fail'),\n\t                ephemeral: true,\n\t            });\n\t        }\n\t    },\n\t};\n"]}
{"filename": "src/commands/index.ts", "chunked_list": ["export * from './JudgeCommand';\n"]}
{"filename": "src/locales/index.ts", "chunked_list": ["import { Language } from '../types/Language';\n\timport { Locales } from '../types/Locales';\n\timport en from './languages/en.json';\n\timport ja from './languages/ja.json';\n\tconst locales: Locales = {\n\t    en: en,\n\t    ja: ja,\n\t};\n\t/**\n\t * 言語別のテキストを取得します\n", " * @param id 翻訳識別子\n\t * @param lang 言語\n\t * @returns テキスト\n\t */\n\texport function locale(id: string, lang?: Language): string {\n\t    const useLang: Language = lang ? lang : 'ja';\n\t    const ids = locales[useLang];\n\t    if (!ids) {\n\t        console.warn(`The specified language '${useLang}' was not found.`);\n\t        return id;\n", "    }\n\t    const text = ids[id];\n\t    if (!text) {\n\t        console.warn(`The specified translation identifier '${id}' was not found.`);\n\t        return id;\n\t    }\n\t    return text;\n\t}\n"]}
{"filename": "src/utils/array.ts", "chunked_list": ["import { getRandomInt } from './number';\n\texport function getRandomElem<T>(array: T[]): T | undefined {\n\t    return array[getRandomInt(array.length)];\n\t}\n"]}
{"filename": "src/utils/number.ts", "chunked_list": ["export function getRandomInt(max: number): number {\n\t    return Math.floor(Math.random() * max);\n\t}\n"]}
{"filename": "src/weapons/rollers.ts", "chunked_list": ["import { Weapon } from '../types/Weapon';\n\texport const ROLLERS: Weapon[] = [\n\t    {\n\t        type: 'ROLLER',\n\t        id: 'carbon-roller_0',\n\t        sub: 'autobomb',\n\t        special: 'zipcaster',\n\t    },\n\t    {\n\t        type: 'ROLLER',\n", "        id: 'carbon-roller_1',\n\t        sub: 'burst-bomb',\n\t        special: 'trizooka',\n\t    },\n\t    {\n\t        type: 'ROLLER',\n\t        id: 'splat-roller_0',\n\t        sub: 'curling-bomb',\n\t        special: 'big-bubbler',\n\t    },\n", "    {\n\t        type: 'ROLLER',\n\t        id: 'splat-roller_1',\n\t        sub: 'squid-beakon',\n\t        special: 'kraken-royale',\n\t    },\n\t    {\n\t        type: 'ROLLER',\n\t        id: 'dynamo-roller',\n\t        sub: 'sprinkler',\n", "        special: 'tacticooler',\n\t    },\n\t    {\n\t        type: 'ROLLER',\n\t        id: 'flingza-roller',\n\t        sub: 'ink-mine',\n\t        special: 'tenta-missiles',\n\t    },\n\t    {\n\t        type: 'ROLLER',\n", "        id: 'big-swig-roller_0',\n\t        sub: 'splash-wall',\n\t        special: 'ink-vac',\n\t    },\n\t    {\n\t        type: 'ROLLER',\n\t        id: 'big-swig-roller_1',\n\t        sub: 'angle-shooter',\n\t        special: 'ink-storm',\n\t    },\n", "];\n"]}
{"filename": "src/weapons/stringers.ts", "chunked_list": ["import { Weapon } from '../types/Weapon';\n\texport const STRINGERS: Weapon[] = [\n\t    {\n\t        type: 'STRINGER',\n\t        id: 'tri-stringer',\n\t        sub: 'toxic-mist',\n\t        special: 'killer-wail-5.1',\n\t    },\n\t    {\n\t        type: 'STRINGER',\n", "        id: 'reef-lux',\n\t        sub: 'curling-bomb',\n\t        special: 'tenta-missiles',\n\t    },\n\t];\n"]}
{"filename": "src/weapons/brushes.ts", "chunked_list": ["import { Weapon } from '../types/Weapon';\n\texport const BRUSHES: Weapon[] = [\n\t    {\n\t        type: 'BRUSH',\n\t        id: 'inkbrush_0',\n\t        sub: 'splat-bomb',\n\t        special: 'killer-wail-5.1',\n\t    },\n\t    {\n\t        type: 'BRUSH',\n", "        id: 'inkbrush_1',\n\t        sub: 'ink-mine',\n\t        special: 'ultra-stamp',\n\t    },\n\t    {\n\t        type: 'BRUSH',\n\t        id: 'octobrush',\n\t        sub: 'suction-bomb',\n\t        special: 'zipcaster',\n\t    },\n", "    {\n\t        type: 'BRUSH',\n\t        id: 'painbrush',\n\t        sub: 'curling-bomb',\n\t        special: 'wave-breaker',\n\t    },\n\t];\n"]}
{"filename": "src/weapons/brellas.ts", "chunked_list": ["import { Weapon } from '../types/Weapon';\n\texport const BRELLAS: Weapon[] = [\n\t    {\n\t        type: 'BRELLA',\n\t        id: 'splat-brella',\n\t        sub: 'sprinkler',\n\t        special: 'triple-inkstrike',\n\t    },\n\t    {\n\t        type: 'BRELLA',\n", "        id: 'tenta-brella_0',\n\t        sub: 'squid-beakon',\n\t        special: 'ink-vac',\n\t    },\n\t    {\n\t        type: 'BRELLA',\n\t        id: 'tenta-brella_1',\n\t        sub: 'ink-mine',\n\t        special: 'trizooka',\n\t    },\n", "    {\n\t        type: 'BRELLA',\n\t        id: 'undercover-brella',\n\t        sub: 'ink-mine',\n\t        special: 'reefslider',\n\t    },\n\t];\n"]}
{"filename": "src/weapons/chargers.ts", "chunked_list": ["import { Weapon } from '../types/Weapon';\n\texport const CHARGERS: Weapon[] = [\n\t    {\n\t        type: 'CHARGER',\n\t        id: 'squiffer',\n\t        sub: 'point-sensor',\n\t        special: 'big-bubbler',\n\t    },\n\t    {\n\t        type: 'CHARGER',\n", "        id: 'splat-charger_0',\n\t        sub: 'splat-bomb',\n\t        special: 'ink-vac',\n\t    },\n\t    {\n\t        type: 'CHARGER',\n\t        id: 'splat-charger_1',\n\t        sub: 'splash-wall',\n\t        special: 'triple-inkstrike',\n\t    },\n", "    {\n\t        type: 'CHARGER',\n\t        id: 'splatterscope_0',\n\t        sub: 'splat-bomb',\n\t        special: 'ink-vac',\n\t    },\n\t    {\n\t        type: 'CHARGER',\n\t        id: 'splatterscope_1',\n\t        sub: 'splash-wall',\n", "        special: 'triple-inkstrike',\n\t    },\n\t    {\n\t        type: 'CHARGER',\n\t        id: 'e-liter',\n\t        sub: 'ink-mine',\n\t        special: 'wave-breaker',\n\t    },\n\t    {\n\t        type: 'CHARGER',\n", "        id: 'e-liter-scope',\n\t        sub: 'ink-mine',\n\t        special: 'wave-breaker',\n\t    },\n\t    {\n\t        type: 'CHARGER',\n\t        id: 'bamboozler-14',\n\t        sub: 'autobomb',\n\t        special: 'killer-wail-5.1',\n\t    },\n", "    {\n\t        type: 'CHARGER',\n\t        id: 'goo-tuber',\n\t        sub: 'torpedo',\n\t        special: 'tenta-missiles',\n\t    },\n\t    {\n\t        type: 'CHARGER',\n\t        id: 'snipewriter',\n\t        sub: 'sprinkler',\n", "        special: 'tacticooler',\n\t    },\n\t];\n"]}
{"filename": "src/weapons/sloshers.ts", "chunked_list": ["import { Weapon } from '../types/Weapon';\n\texport const SLOSHERS: Weapon[] = [\n\t    {\n\t        type: 'SLOSHER',\n\t        id: 'slosher_0',\n\t        sub: 'splat-bomb',\n\t        special: 'triple-inkstrike',\n\t    },\n\t    {\n\t        type: 'SLOSHER',\n", "        id: 'slosher_1',\n\t        sub: 'angle-shooter',\n\t        special: 'zipcaster',\n\t    },\n\t    {\n\t        type: 'SLOSHER',\n\t        id: 'tri-slosher_0',\n\t        sub: 'toxic-mist',\n\t        special: 'inkjet',\n\t    },\n", "    {\n\t        type: 'SLOSHER',\n\t        id: 'tri-slosher_1',\n\t        sub: 'fizzy-bomb',\n\t        special: 'tacticooler',\n\t    },\n\t    {\n\t        type: 'SLOSHER',\n\t        id: 'sloshing-machine',\n\t        sub: 'fizzy-bomb',\n", "        special: 'booyah-bomb',\n\t    },\n\t    {\n\t        type: 'SLOSHER',\n\t        id: 'bloblobber',\n\t        sub: 'sprinkler',\n\t        special: 'ink-storm',\n\t    },\n\t    {\n\t        type: 'SLOSHER',\n", "        id: 'explosher',\n\t        sub: 'point-sensor',\n\t        special: 'ink-storm',\n\t    },\n\t];\n"]}
{"filename": "src/weapons/dualies.ts", "chunked_list": ["import { Weapon } from '../types/Weapon';\n\texport const DUALIES: Weapon[] = [\n\t    {\n\t        type: 'DUALIE',\n\t        id: 'dapple-dualies_0',\n\t        sub: 'squid-beakon',\n\t        special: 'tacticooler',\n\t    },\n\t    {\n\t        type: 'DUALIE',\n", "        id: 'dapple-dualies_1',\n\t        sub: 'torpedo',\n\t        special: 'reefslider',\n\t    },\n\t    {\n\t        type: 'DUALIE',\n\t        id: 'splat-dualies',\n\t        sub: 'suction-bomb',\n\t        special: 'crab-tank',\n\t    },\n", "    {\n\t        type: 'DUALIE',\n\t        id: 'glooga-dualies',\n\t        sub: 'splash-wall',\n\t        special: 'booyah-bomb',\n\t    },\n\t    {\n\t        type: 'DUALIE',\n\t        id: 'dualie-squelchers_0',\n\t        sub: 'splat-bomb',\n", "        special: 'wave-breaker',\n\t    },\n\t    {\n\t        type: 'DUALIE',\n\t        id: 'dualie-squelchers_1',\n\t        sub: 'squid-beakon',\n\t        special: 'super-chump',\n\t    },\n\t    {\n\t        type: 'DUALIE',\n", "        id: 'tetra-dualies_0',\n\t        sub: 'autobomb',\n\t        special: 'reefslider',\n\t    },\n\t    {\n\t        type: 'DUALIE',\n\t        id: 'tetra-dualies_1',\n\t        sub: 'sprinkler',\n\t        special: 'zipcaster',\n\t    },\n", "];\n"]}
{"filename": "src/weapons/shooters.ts", "chunked_list": ["import { Weapon } from '../types/Weapon';\n\texport const SHOOTERS: Weapon[] = [\n\t    {\n\t        type: 'SHOOTER',\n\t        id: 'sploosh-o-matic_0',\n\t        sub: 'curling-bomb',\n\t        special: 'ultra-stamp',\n\t    },\n\t    {\n\t        type: 'SHOOTER',\n", "        id: 'sploosh-o-matic_1',\n\t        sub: 'squid-beakon',\n\t        special: 'killer-wail-5.1',\n\t    },\n\t    {\n\t        type: 'SHOOTER',\n\t        id: 'splattershot-jr_0',\n\t        sub: 'splat-bomb',\n\t        special: 'big-bubbler',\n\t    },\n", "    {\n\t        type: 'SHOOTER',\n\t        id: 'splattershot-jr_1',\n\t        sub: 'torpedo',\n\t        special: 'wave-breaker',\n\t    },\n\t    {\n\t        type: 'SHOOTER',\n\t        id: 'splash-o-matic_0',\n\t        sub: 'burst-bomb',\n", "        special: 'crab-tank',\n\t    },\n\t    {\n\t        type: 'SHOOTER',\n\t        id: 'splash-o-matic_1',\n\t        sub: 'suction-bomb',\n\t        special: 'triple-inkstrike',\n\t    },\n\t    {\n\t        type: 'SHOOTER',\n", "        id: 'aerospray_0',\n\t        sub: 'fizzy-bomb',\n\t        special: 'reefslider',\n\t    },\n\t    {\n\t        type: 'SHOOTER',\n\t        id: 'aerospray_1',\n\t        sub: 'sprinkler',\n\t        special: 'booyah-bomb',\n\t    },\n", "    {\n\t        type: 'SHOOTER',\n\t        id: 'splattershot_0',\n\t        sub: 'suction-bomb',\n\t        special: 'trizooka',\n\t    },\n\t    {\n\t        type: 'SHOOTER',\n\t        id: 'splattershot_1',\n\t        sub: 'splat-bomb',\n", "        special: 'triple-inkstrike',\n\t    },\n\t    {\n\t        type: 'SHOOTER',\n\t        id: '52-gal',\n\t        sub: 'splash-wall',\n\t        special: 'killer-wail-5.1',\n\t    },\n\t    {\n\t        type: 'SHOOTER',\n", "        id: 'n-zap_0',\n\t        sub: 'suction-bomb',\n\t        special: 'tacticooler',\n\t    },\n\t    {\n\t        type: 'SHOOTER',\n\t        id: 'n-zap_1',\n\t        sub: 'autobomb',\n\t        special: 'super-chump',\n\t    },\n", "    {\n\t        type: 'SHOOTER',\n\t        id: 'splattershot-pro_0',\n\t        sub: 'angle-shooter',\n\t        special: 'crab-tank',\n\t    },\n\t    {\n\t        type: 'SHOOTER',\n\t        id: 'splattershot-pro_1',\n\t        sub: 'suction-bomb',\n", "        special: 'booyah-bomb',\n\t    },\n\t    {\n\t        type: 'SHOOTER',\n\t        id: '96-gal_0',\n\t        sub: 'sprinkler',\n\t        special: 'ink-vac',\n\t    },\n\t    {\n\t        type: 'SHOOTER',\n", "        id: '96-gal_1',\n\t        sub: 'splash-wall',\n\t        special: 'kraken-royale',\n\t    },\n\t    {\n\t        type: 'SHOOTER',\n\t        id: 'jet-squelcher_0',\n\t        sub: 'angle-shooter',\n\t        special: 'ink-vac',\n\t    },\n", "    {\n\t        type: 'SHOOTER',\n\t        id: 'jet-squelcher_1',\n\t        sub: 'toxic-mist',\n\t        special: 'ink-storm',\n\t    },\n\t    {\n\t        type: 'SHOOTER',\n\t        id: 'splattershot-nova_0',\n\t        sub: 'point-sensor',\n", "        special: 'killer-wail-5.1',\n\t    },\n\t    {\n\t        type: 'SHOOTER',\n\t        id: 'splattershot-nova_1',\n\t        sub: 'ink-mine',\n\t        special: 'inkjet',\n\t    },\n\t    {\n\t        type: 'SHOOTER',\n", "        id: 'l-3-nozzlenose_0',\n\t        sub: 'curling-bomb',\n\t        special: 'crab-tank',\n\t    },\n\t    {\n\t        type: 'SHOOTER',\n\t        id: 'l-3-nozzlenose_1',\n\t        sub: 'burst-bomb',\n\t        special: 'ultra-stamp',\n\t    },\n", "    {\n\t        type: 'SHOOTER',\n\t        id: 'h-3-nozzlenose_0',\n\t        sub: 'point-sensor',\n\t        special: 'tacticooler',\n\t    },\n\t    {\n\t        type: 'SHOOTER',\n\t        id: 'h-3-nozzlenose_1',\n\t        sub: 'splash-wall',\n", "        special: 'big-bubbler',\n\t    },\n\t    {\n\t        type: 'SHOOTER',\n\t        id: 'squeezer',\n\t        sub: 'splash-wall',\n\t        special: 'trizooka',\n\t    },\n\t];\n"]}
{"filename": "src/weapons/splatlings.ts", "chunked_list": ["import { Weapon } from '../types/Weapon';\n\texport const SPLATLINGS: Weapon[] = [\n\t    {\n\t        type: 'SPLATLING',\n\t        id: 'mini-splatling_0',\n\t        sub: 'burst-bomb',\n\t        special: 'ultra-stamp',\n\t    },\n\t    {\n\t        type: 'SPLATLING',\n", "        id: 'mini-splatling_1',\n\t        sub: 'toxic-mist',\n\t        special: 'big-bubbler',\n\t    },\n\t    {\n\t        type: 'SPLATLING',\n\t        id: 'heavy-splatling_0',\n\t        sub: 'sprinkler',\n\t        special: 'wave-breaker',\n\t    },\n", "    {\n\t        type: 'SPLATLING',\n\t        id: 'heavy-splatling_1',\n\t        sub: 'point-sensor',\n\t        special: 'kraken-royale',\n\t    },\n\t    {\n\t        type: 'SPLATLING',\n\t        id: 'hydra-splatling',\n\t        sub: 'autobomb',\n", "        special: 'booyah-bomb',\n\t    },\n\t    {\n\t        type: 'SPLATLING',\n\t        id: 'ballpoint-splatling',\n\t        sub: 'fizzy-bomb',\n\t        special: 'inkjet',\n\t    },\n\t    {\n\t        type: 'SPLATLING',\n", "        id: 'nautilus',\n\t        sub: 'point-sensor',\n\t        special: 'ink-storm',\n\t    },\n\t];\n"]}
{"filename": "src/weapons/index.ts", "chunked_list": ["export * from './blasters';\n\texport * from './brellas';\n\texport * from './brushes';\n\texport * from './chargers';\n\texport * from './dualies';\n\texport * from './rollers';\n\texport * from './shooters';\n\texport * from './sloshers';\n\texport * from './splatanas';\n\texport * from './splatlings';\n", "export * from './stringers';\n"]}
{"filename": "src/weapons/splatanas.ts", "chunked_list": ["import { Weapon } from '../types/Weapon';\n\texport const SPLATANAS: Weapon[] = [\n\t    {\n\t        type: 'SPLATANA',\n\t        id: 'splatana-stamper',\n\t        sub: 'burst-bomb',\n\t        special: 'zipcaster',\n\t    },\n\t    {\n\t        type: 'SPLATANA',\n", "        id: 'splatana-wiper_0',\n\t        sub: 'torpedo',\n\t        special: 'ultra-stamp',\n\t    },\n\t    {\n\t        type: 'SPLATANA',\n\t        id: 'splatana-wiper_1',\n\t        sub: 'squid-beakon',\n\t        special: 'tenta-missiles',\n\t    },\n", "];\n"]}
{"filename": "src/weapons/blasters.ts", "chunked_list": ["import { Weapon } from '../types/Weapon';\n\texport const BLASTERS: Weapon[] = [\n\t    {\n\t        type: 'BLASTER',\n\t        id: 'luna-blaster_0',\n\t        sub: 'splat-bomb',\n\t        special: 'zipcaster',\n\t    },\n\t    {\n\t        type: 'BLASTER',\n", "        id: 'luna-blaster_1',\n\t        sub: 'fizzy-bomb',\n\t        special: 'ultra-stamp',\n\t    },\n\t    {\n\t        type: 'BLASTER',\n\t        id: 'blaster',\n\t        sub: 'autobomb',\n\t        special: 'big-bubbler',\n\t    },\n", "    {\n\t        type: 'BLASTER',\n\t        id: 'range-blaster',\n\t        sub: 'suction-bomb',\n\t        special: 'wave-breaker',\n\t    },\n\t    {\n\t        type: 'BLASTER',\n\t        id: 'clash-blaster_0',\n\t        sub: 'splat-bomb',\n", "        special: 'trizooka',\n\t    },\n\t    {\n\t        type: 'BLASTER',\n\t        id: 'clash-blaster_1',\n\t        sub: 'curling-bomb',\n\t        special: 'super-chump',\n\t    },\n\t    {\n\t        type: 'BLASTER',\n", "        id: 'rapid-blaster_0',\n\t        sub: 'ink-mine',\n\t        special: 'triple-inkstrike',\n\t    },\n\t    {\n\t        type: 'BLASTER',\n\t        id: 'rapid-blaster_1',\n\t        sub: 'torpedo',\n\t        special: 'inkjet',\n\t    },\n", "    {\n\t        type: 'BLASTER',\n\t        id: 'rapid-blaster-pro_0',\n\t        sub: 'toxic-mist',\n\t        special: 'ink-vac',\n\t    },\n\t    {\n\t        type: 'BLASTER',\n\t        id: 'rapid-blaster-pro_1',\n\t        sub: 'angle-shooter',\n", "        special: 'killer-wail-5.1',\n\t    },\n\t    {\n\t        type: 'BLASTER',\n\t        id: 's-blast',\n\t        sub: 'sprinkler',\n\t        special: 'reefslider',\n\t    },\n\t];\n"]}
{"filename": "src/types/Locales.ts", "chunked_list": ["export type Locales = {\n\t    [lang: string]: LocaleIds;\n\t};\n\texport type LocaleIds = {\n\t    [id: string]: string;\n\t};\n"]}
{"filename": "src/types/Language.ts", "chunked_list": ["export type Language = 'en' | 'ja';\n"]}
{"filename": "src/types/Weapon.ts", "chunked_list": ["export type Weapon = {\n\t    type: WeaponType;\n\t    id: MainWeapon;\n\t    sub: SubWeapon;\n\t    special: SpecialWeapon;\n\t};\n\texport type WeaponType =\n\t    | 'SHOOTER'\n\t    | 'SPLATLING'\n\t    | 'CHARGER'\n", "    | 'ROLLER'\n\t    | 'BLASTER'\n\t    | 'SLOSHER'\n\t    | 'DUALIE'\n\t    | 'BRUSH'\n\t    | 'STRINGER'\n\t    | 'BRELLA'\n\t    | 'SPLATANA';\n\ttype MainWeapon =\n\t    | Shooter\n", "    | Splatling\n\t    | Charger\n\t    | Roller\n\t    | Blaster\n\t    | Slosher\n\t    | Dualie\n\t    | Brush\n\t    | Stringer\n\t    | Brella\n\t    | Splatana;\n", "type Shooter =\n\t    | 'sploosh-o-matic_0'\n\t    | 'sploosh-o-matic_1'\n\t    | 'splattershot-jr_0'\n\t    | 'splattershot-jr_1'\n\t    | 'splash-o-matic_0'\n\t    | 'splash-o-matic_1'\n\t    | 'aerospray_0'\n\t    | 'aerospray_1'\n\t    | 'splattershot_0'\n", "    | 'splattershot_1'\n\t    | 'hero-shot-replica'\n\t    | '52-gal'\n\t    | 'n-zap_0'\n\t    | 'n-zap_1'\n\t    | 'splattershot-pro_0'\n\t    | 'splattershot-pro_1'\n\t    | '96-gal_0'\n\t    | '96-gal_1'\n\t    | 'jet-squelcher_0'\n", "    | 'jet-squelcher_1'\n\t    | 'splattershot-nova_0'\n\t    | 'splattershot-nova_1'\n\t    | 'l-3-nozzlenose_0'\n\t    | 'l-3-nozzlenose_1'\n\t    | 'h-3-nozzlenose_0'\n\t    | 'h-3-nozzlenose_1'\n\t    | 'squeezer';\n\ttype Splatling =\n\t    | 'mini-splatling_0'\n", "    | 'mini-splatling_1'\n\t    | 'heavy-splatling_0'\n\t    | 'heavy-splatling_1'\n\t    | 'hydra-splatling'\n\t    | 'ballpoint-splatling'\n\t    | 'nautilus';\n\ttype Charger =\n\t    | 'squiffer'\n\t    | 'splat-charger_0'\n\t    | 'splat-charger_1'\n", "    | 'splatterscope_0'\n\t    | 'splatterscope_1'\n\t    | 'e-liter'\n\t    | 'e-liter-scope'\n\t    | 'bamboozler-14'\n\t    | 'goo-tuber'\n\t    | 'snipewriter';\n\ttype Roller =\n\t    | 'carbon-roller_0'\n\t    | 'carbon-roller_1'\n", "    | 'splat-roller_0'\n\t    | 'splat-roller_1'\n\t    | 'dynamo-roller'\n\t    | 'flingza-roller'\n\t    | 'big-swig-roller_0'\n\t    | 'big-swig-roller_1';\n\ttype Blaster =\n\t    | 'luna-blaster_0'\n\t    | 'luna-blaster_1'\n\t    | 'blaster'\n", "    | 'range-blaster'\n\t    | 'clash-blaster_0'\n\t    | 'clash-blaster_1'\n\t    | 'rapid-blaster_0'\n\t    | 'rapid-blaster_1'\n\t    | 'rapid-blaster-pro_0'\n\t    | 'rapid-blaster-pro_1'\n\t    | 's-blast';\n\ttype Slosher =\n\t    | 'slosher_0'\n", "    | 'slosher_1'\n\t    | 'tri-slosher_0'\n\t    | 'tri-slosher_1'\n\t    | 'sloshing-machine'\n\t    | 'bloblobber'\n\t    | 'explosher';\n\ttype Dualie =\n\t    | 'dapple-dualies_0'\n\t    | 'dapple-dualies_1'\n\t    | 'splat-dualies'\n", "    | 'glooga-dualies'\n\t    | 'dualie-squelchers_0'\n\t    | 'dualie-squelchers_1'\n\t    | 'tetra-dualies_0'\n\t    | 'tetra-dualies_1';\n\ttype Brush =\n\t    | 'inkbrush_0'\n\t    | 'inkbrush_1'\n\t    | 'octobrush'\n\t    | 'painbrush';\n", "type Stringer =\n\t    | 'tri-stringer'\n\t    | 'reef-lux';\n\ttype Brella =\n\t    | 'splat-brella'\n\t    | 'tenta-brella_0'\n\t    | 'tenta-brella_1'\n\t    | 'undercover-brella';\n\ttype Splatana =\n\t    | 'splatana-stamper'\n", "    | 'splatana-wiper_0'\n\t    | 'splatana-wiper_1';\n\texport type SubWeapon =\n\t    | 'splat-bomb'\n\t    | 'suction-bomb'\n\t    | 'burst-bomb'\n\t    | 'curling-bomb'\n\t    | 'autobomb'\n\t    | 'ink-mine'\n\t    | 'toxic-mist'\n", "    | 'point-sensor'\n\t    | 'splash-wall'\n\t    | 'sprinkler'\n\t    | 'squid-beakon'\n\t    | 'fizzy-bomb'\n\t    | 'torpedo'\n\t    | 'angle-shooter';\n\texport type SpecialWeapon =\n\t    | 'big-bubbler'\n\t    | 'booyah-bomb'\n", "    | 'crab-tank'\n\t    | 'ink-storm'\n\t    | 'ink-vac'\n\t    | 'inkjet'\n\t    | 'killer-wail-5.1'\n\t    | 'kraken-royale'\n\t    | 'reefslider'\n\t    | 'super-chump'\n\t    | 'tacticooler'\n\t    | 'tenta-missiles'\n", "    | 'triple-inkstrike'\n\t    | 'trizooka'\n\t    | 'ultra-stamp'\n\t    | 'wave-breaker'\n\t    | 'zipcaster';\n"]}
{"filename": "src/types/Command.ts", "chunked_list": ["import { CommandInteraction, SlashCommandBuilder } from 'discord.js';\n\texport type Command = {\n\t    command: SlashCommandBuilder | Omit<SlashCommandBuilder, 'addSubcommand' | 'addSubcommandGroup'>;\n\t    execute: (interaction: CommandInteraction) => void;\n\t};\n"]}
