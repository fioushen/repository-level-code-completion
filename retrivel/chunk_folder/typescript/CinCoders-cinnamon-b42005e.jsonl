{"filename": "images.d.ts", "chunked_list": ["declare module \"*.png\" {\n\t  const value: any;\n\t  export = value;\n\t}\n\tdeclare module \"*.jpg\" {\n\t  const value: any;\n\t  export = value;\n\t}\n\tdeclare module \"*.svg\" {\n\t  const value: any;\n", "  export = value;\n\t}"]}
{"filename": "fonts.d.ts", "chunked_list": ["declare module \"*.otf\"; //declare necessário para que o typescript reconheça as fontes que temos em assets, e possamos usar no styled components"]}
{"filename": "src/index.ts", "chunked_list": ["export { Navbar } from './lib-components/Navbar';\n\texport { Footer } from './lib-components/Footer';\n\texport { ImageInput } from './lib-components/ImageInput';\n\texport { Dialog } from './lib-components/Dialog';\n\texport { Page } from './lib-components/Page';\n\texport { RequireAuth } from './lib-components/RequireAuth';\n\texport { ForbiddenPage } from './lib-components/ForbiddenPage';\n\texport { AuthUtils } from './utils';\n\texport { ErrorScreen, httpErrors } from './lib-components/ErrorScreen';\n\texport { SideMenuLink } from './interfaces';\n", "export { System } from './interfaces';\n\texport { useNavbar } from './lib-components/Page/useNavbar';\n\texport { ToastContainer, toast } from './components/Toast';\n\texport { IconRenderer } from './lib-components/IconRender';\n\texport { PageWithAuth } from './lib-components/PageWithAuth';\n"]}
{"filename": "src/components/HamburgerButton/styles.ts", "chunked_list": ["import styled, { css } from 'styled-components';\n\tconst Hamb = styled.span`\n\t  width: 100%;\n\t  height: 1px;\n\t  display: inline-block;\n\t  background: #db1e2f;\n\t  position: absolute;\n\t  transition: all 0.25s ease-in-out;\n\t`;\n\texport const HambTop = styled(Hamb)`\n", "  top: 0;\n\t  left: 0;\n\t`;\n\texport const HambMiddle = styled(Hamb)`\n\t  bottom: 50%;\n\t  top: 50%;\n\t  left: 0;\n\t`;\n\texport const HambBottom = styled(Hamb)`\n\t  left: 0;\n", "  bottom: 0;\n\t`;\n\texport const Hamburger = styled.button<{ isOpen: boolean }>`\n\t  border: none;\n\t  width: 30px;\n\t  height: 16px;\n\t  display: flex;\n\t  flex-direction: column;\n\t  justify-content: space-between;\n\t  background-color: white;\n", "  position: relative;\n\t  top: 50%;\n\t  &:hover {\n\t    ${(props) => {\n\t      if (!props.isOpen) {\n\t        return css`\n\t          ${HambBottom} {\n\t            bottom: -20%;\n\t          }\n\t          ${HambTop} {\n", "            top: -20%;\n\t          }\n\t        `;\n\t      }\n\t    }}\n\t  }\n\t  ${(props) => {\n\t    if (props.isOpen) {\n\t      return css`\n\t        ${HambBottom} {\n", "          bottom: 50%;\n\t          transform: rotate(45deg);\n\t        }\n\t        ${HambMiddle} {\n\t          display: none;\n\t        }\n\t        ${HambTop} {\n\t          top: 50%;\n\t          transform: rotate(-45deg);\n\t        }\n", "      `;\n\t    }\n\t  }}\n\t`;\n"]}
{"filename": "src/components/UserPopup/styles.ts", "chunked_list": ["import styled from 'styled-components';\n\timport { Accordion, AccordionDetails, Avatar } from '@mui/material';\n\timport MuiButton from '@mui/material/Button';\n\texport const UserPopUp = styled.div`\n\t  background: #f8f8f8;\n\t  border-radius: 12px;\n\t  box-shadow: 0px 2px 10px rgba(0, 0, 0, 0.2);\n\t  width: 18rem;\n\t  max-height: 80vh;\n\t  overflow-x: hidden;\n", "  overflow-y: auto;\n\t  &::-webkit-scrollbar-thumb {\n\t    background: #dadce0;\n\t    border: 0px none #ffffff;\n\t    border-radius: 8px;\n\t  }\n\t  &::-webkit-scrollbar-thumb:hover {\n\t    background: #545454;\n\t  }\n\t  &::-webkit-scrollbar-thumb:active {\n", "    background: #545454;\n\t  }\n\t  &::-webkit-scrollbar {\n\t    width: 5px;\n\t    height: 7px;\n\t  }\n\t  &::-webkit-scrollbar-button {\n\t    width: 0px;\n\t    height: 0px;\n\t  }\n", "  &::-webkit-scrollbar-track {\n\t    background: transparent;\n\t    border: 0px none #ffffff;\n\t    border-radius: 50px;\n\t  }\n\t  &::-webkit-scrollbar-track:hover {\n\t    background: transparent;\n\t  }\n\t  &::-webkit-scrollbar-track:active {\n\t    background: transparent;\n", "  }\n\t  &::-webkit-scrollbar-corner {\n\t    background: transparent;\n\t  }\n\t`;\n\texport const UserPopUpContainer = styled.div`\n\t  display: flex;\n\t  flex-direction: column;\n\t  align-items: center;\n\t  justify-content: space-between;\n", "`;\n\texport const UserName = styled.h2`\n\t  font-size: 1rem;\n\t  text-align: center;\n\t  margin-bottom: 0.5rem;\n\t  margin-bottom: 1px;\n\t  margin-right: 5px;\n\t  margin-left: 5px;\n\t  overflow-wrap: break-word;\n\t`;\n", "export const EmailContainer = styled.div`\n\t  display: flex;\n\t  align-items: center;\n\t  justify-content: center;\n\t  margin-bottom: 1rem;\n\t`;\n\texport const IconGreen = styled.div`\n\t  height: 0.625rem;\n\t  width: 0.625rem;\n\t  border-radius: 50%;\n", "  margin-right: 0.75rem;\n\t  background: #5cb85c;\n\t`;\n\texport const StyledAvatar = styled(Avatar)`\n\t  margin: 1rem 0;\n\t  &.MuiAvatar-circular{\n\t    height: 7rem;\n\t    width: 7rem;\n\t  }\n\t  font-size: 50px;\n", "  background-size: cover;\n\t  background-clip: border-box;\n\t  background-position: center center;\n\t  background-color: #db1e2f;\n\t`;\n\texport const ManageAccount = styled.a`\n\t  color: #000000;\n\t  background: transparent;\n\t  border: 1px solid #e6e6e6;\n\t  width: 10rem;\n", "  height: 2rem;\n\t  border-radius: 2rem;\n\t  font-size: 0.8rem;\n\t  margin-bottom: 1rem;\n\t  text-decoration: none;\n\t  transition: 0.3s;\n\t  display: flex;\n\t  align-items: center;\n\t  justify-content: center;\n\t  :hover {\n", "    background: #e6e6e6;\n\t  }\n\t`;\n\texport const PositionsContainer = styled.div`\n\t  width: 100%;\n\t  margin-bottom: 1rem;\n\t`;\n\texport const StyledAccordion = styled(Accordion)`\n\t  &.MuiAccordion-root{\n\t    background-color: #f8f8f8;\n", "    box-shadow: none;\n\t  }\n\t`;\n\texport const LogoutButton = styled(MuiButton)`\n\t  color: #000000;\n\t  text-transform: none;\n\t  background: transparent;\n\t  border: 1px solid #e6e6e6;\n\t  width: 10rem;\n\t  height: 2rem;\n", "  border-radius: 2rem;\n\t  font-size: 0.8rem;\n\t  margin-bottom: 1rem;\n\t  text-decoration: none;\n\t  transition: 0.3s;\n\t  display: flex;\n\t  align-items: center;\n\t  justify-content: center;\n\t  :hover {\n\t    background: #e6e6e6;\n", "  }\n\t`;\n\texport const StyledAccordionDetails = styled(AccordionDetails)`\n\t  &.MuiAccordionDetails-root{\n\t    padding: 0px;\n\t    display: block;\n\t  }\n\t`;\n\texport const RolesContainer = styled.div`\n\t  background: #f8f8f8;\n", "  table {\n\t    display: grid;\n\t    grid-template-columns: 1fr 1fr;\n\t    grid-auto-flow: row;\n\t    thead,\n\t    tbody,\n\t    tr {\n\t      display: contents;\n\t    }\n\t    th,\n", "    td {\n\t      font-size: 0.875rem;\n\t      padding: 0 1rem;\n\t      text-align: left;\n\t    }\n\t    th {\n\t      margin: 1rem 0 0.3rem;\n\t    }\n\t    td {\n\t      width: 100%;\n", "      margin-bottom: 1rem;\n\t    }\n\t  }\n\t`;\n"]}
{"filename": "src/components/SearchDropdown/styles.ts", "chunked_list": ["import styled from 'styled-components';\n\texport const DropdownWrapper = styled.div`\n\t  position: absolute;\n\t  top: 40px;\n\t  width: 100%;\n\t`;\n\texport const SearchDropdownContainer = styled.div`\n\t  background: $background-white;\n\t  display: grid;\n\t  grid-template-rows: 1fr 1fr 1fr 1fr;\n", "  row-gap: 0.75rem;\n\t  padding: 1.5rem;\n\t  border: $border-grey 1px solid;\n\t  box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.25);\n\t`;\n\texport const Field = styled.fieldset`\n\t  border: none;\n\t  display: grid;\n\t  grid-template-columns: 15% 85%;\n\t  height: 2rem;\n", "  justify-content: end;\n\t`;\n\texport const DropdownLabel = styled.label`\n\t  font-size: 1.2rem;\n\t  height: 1.5rem;\n\t  color: $text-grey;\n\t`;\n\texport const DropdownInput = styled.input`\n\t  font-size: 1.2rem;\n\t  height: 1.5rem;\n", "  border: none;\n\t  color: $text-dark-grey;\n\t  border-bottom: $border-grey 1px solid;\n\t  outline: none;\n\t  &:focus {\n\t    border-bottom-color: #ie90ff;\n\t  }\n\t`;\n\texport const DropdownButton = styled.button`\n\t  width: 25%;\n", "  max-width: 8rem;\n\t  height: 100%;\n\t  justify-self: end;\n\t  align-self: center;\n\t  border: none;\n\t  background: $button-green;\n\t  color: $text-white;\n\t  font-size: 1.5rem;\n\t  border-radius: 5px;\n\t  box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.25);\n", "  transition: 0.3s;\n\t  &:hover {\n\t    background: $button-dark-green;\n\t  }\n\t`;\n"]}
{"filename": "src/components/Toast/style.ts", "chunked_list": ["import styled from \"styled-components\";\n\texport const ToastDiv = styled.div.attrs((props: {topSpacing: number}) => props)`\n\t.Toastify__toast-container--top-right {\n\t  top: ${props => props.topSpacing}px\n\t}\n\t`;\n"]}
{"filename": "src/components/SideMenu/styles.ts", "chunked_list": ["import styled from 'styled-components';\n\timport { Drawer } from '@mui/material';\n\timport { Link } from 'react-router-dom';\n\texport const StyledDrawer = styled(Drawer)<{ top: string }>`\n\t  margin-top: ${(props) => props.top};\n\t  .MuiDrawer-paper {\n\t    margin-top: ${(props) => props.top};\n\t    max-height: calc(100vh - ${(props) => props.top});\n\t  }\n\t  .MuiBackdrop-root {\n", "    margin-top: ${(props) => props.top};\n\t  }\n\t  .MuiPaper-root {\n\t    background-color: #272727;\n\t    min-width: auto;\n\t    overflow: clip;\n\t  }\n\t`;\n\texport const ListWrapper = styled.div`\n\t  width: 250px;\n", "  display: flex;\n\t  flex-direction: column;\n\t  padding: 0px;\n\t  padding-right: 2px;\n\t  overflow-y: auto;\n\t  overflow-x: hidden;\n\t  &::-webkit-scrollbar {\n\t    width: 0.5em;\n\t    align: center;\n\t    margin: 3px;\n", "    background: rgb(80, 80, 80);\n\t  }\n\t  &::-webkit-scrollbar-track {\n\t    boxshadow: inset 0 0 6px rgba(0, 0, 0, 0.9);\n\t    webkitboxshadow: inset 0 0 6px rgba(0, 0, 0, 0.9);\n\t    scrollbar-color: white;\n\t  }\n\t  &::-webkit-scrollbar-thumb {\n\t    outline: 1px solid #444;\n\t    border-radius: 10px;\n", "    border: 3px solid rgb(50, 50, 50);\n\t    scrollbar-color: white;\n\t    background: rgb(50, 50, 50);\n\t    align: center;\n\t    margin: 3px;\n\t  }\n\t  &::-webkit-scrollbar-button {\n\t  }\n\t`;\n\texport const SameTabLink = styled(Link)`\n", "  display: flex;\n\t  justify-content: space-evenly;\n\t  align-items: center;\n\t  color: #ffffff;\n\t  text-transform: none;\n\t  text-decoration: none;\n\t  min-width: 100%;\n\t`;\n\texport const NewTabLink = styled.a`\n\t  display: flex;\n", "  justify-content: space-evenly;\n\t  align-items: center;\n\t  color: #ffffff;\n\t  text-transform: none;\n\t  text-decoration: none;\n\t  min-width: 100%;\n\t`;\n"]}
{"filename": "src/components/SystemsPopup/styles.ts", "chunked_list": ["import styled from 'styled-components';\n\texport const SystemsPopupContainer = styled.div`\n\t  background: #F8F8F8;\n\t  border-radius: 12px;\n\t  box-shadow: 0px 2px 10px rgba(0, 0, 0, 0.2);\n\t  width: 18rem;\n\t  min-height: max-content;\n\t`;\n\texport const SystemsPopupContent = styled.div`\n\t  display: grid;\n", "  grid-template-columns: repeat(3, 1fr);\n\t  gap: 0.5rem;\n\t  padding: 0.25rem;\n\t  min-height: max-content;\n\t`;\n\texport const SystemItem = styled.a`\n\t  display: flex;\n\t  align-items: center;\n\t  justify-content: center;\n\t  flex-direction: column;\n", "  height: 6rem;\n\t  padding: 0.5rem;\n\t  border: none;\n\t  border-radius: 5px;\n\t  background: transparent;\n\t  transition: 0.3s;\n\t  position: relative;\n\t  text-decoration: none;\n\t  &:hover {\n\t    background: #E6E6E6;\n", "  }\n\t`;\n\texport const SystemIcon = styled.img`\n\t  width: 2.5rem;\n\t  height: 2.5rem;\n\t  margin-bottom: 0.5rem;\n\t`;\n\texport const SystemTitle = styled.h3`\n\t  color: #000000;\n\t  font-size: 62.25%;\n", "  text-align: center;\n\t  margin: 0;\n\t`;"]}
{"filename": "src/stories/utils/argTypes.ts", "chunked_list": ["export const footerArgTypes = {\n\t  footerTitle: {\n\t    name: 'title',\n\t    type: { name: 'string', required: false },\n\t    description: \"String wich defines footer's title\",\n\t    control: { type: 'text' },\n\t    table: {\n\t      category: 'Footer'\n\t    }\n\t  },\n", "  footerTelephone: {\n\t    name: 'telephone',\n\t    type: { name: 'string', required: false },\n\t    description: \"String wich defines footer's telephone\",\n\t    control: { type: 'text' },\n\t    table: {\n\t      category: 'Footer'\n\t    }\n\t  },\n\t  footerTelephoneComplement: {\n", "    name: 'telephone complement',\n\t    type: { name: 'string', required: false },\n\t    description: \"String wich defines footer's telephone complement\",\n\t    control: { type: 'text' },\n\t    table: {\n\t      category: 'Footer'\n\t    }\n\t  },\n\t  footerEmail: {\n\t    name: 'email',\n", "    type: { name: 'string', required: false },\n\t    description: \"String wich defines footer's email\",\n\t    control: { type: 'text' },\n\t    table: {\n\t      category: 'Footer'\n\t    }\n\t  },\n\t  footerLink: {\n\t    name: 'link',\n\t    type: { name: 'string', required: false },\n", "    description: \"String wich defines footer's link\",\n\t    control: { type: 'text' },\n\t    table: {\n\t      category: 'Footer'\n\t    }\n\t  },\n\t  footerTextLink: {\n\t    name: 'text link',\n\t    type: { name: 'string', required: false },\n\t    description: \"String wich defines footer's text link\",\n", "    control: { type: 'text' },\n\t    table: {\n\t      category: 'Footer'\n\t    }\n\t  },\n\t  footerDescription: {\n\t    name: 'description',\n\t    type: { name: 'string', required: false },\n\t    description: \"String wich defines footer's description\",\n\t    control: { type: 'text' },\n", "    table: {\n\t      category: 'Footer'\n\t    }\n\t  },\n\t  footerCopyrightText: {\n\t    name: 'copyright text',\n\t    type: { name: 'string', required: false },\n\t    description: \"String wich defines footer's copyright text\",\n\t    control: { type: 'text' },\n\t    table: {\n", "      category: 'Footer'\n\t    }\n\t  },\n\t  footerSignatureText: {\n\t    name: 'signature text',\n\t    type: { name: 'string', required: false },\n\t    description: \"String wich defines footer's signature text\",\n\t    control: { type: 'text' },\n\t    table: {\n\t      category: 'Footer'\n", "    }\n\t  },\n\t  footerSignatureLink: {\n\t    name: 'signature link',\n\t    type: { name: 'string', required: false },\n\t    description: \"String wich defines footer's signature link\",\n\t    control: { type: 'text' },\n\t    table: {\n\t      category: 'Footer'\n\t    }\n", "  },\n\t  footerLargeFooter: {\n\t    name: 'large footer',\n\t    type: { name: 'boolean', required: false },\n\t    description: 'Boolean which defines if the footer is large or tiny',\n\t    options: [true, false],\n\t    control: { type: 'boolean' },\n\t    table: {\n\t      category: 'Footer'\n\t    }\n", "  }\n\t};\n\texport const navbarArgTypes = {\n\t  isLandingPage: {\n\t    name: 'isLandingPage',\n\t    type: { name: 'boolean', required: false },\n\t    description: 'Boolean which defines if the navbar is for a landing page.',\n\t    options: [true, false],\n\t    control: { type: 'boolean' },\n\t    table: {\n", "      category: 'Navbar'\n\t    }\n\t  },\n\t  haveSearchBar: {\n\t    name: 'haveSearchBar',\n\t    type: { name: 'boolean', required: false },\n\t    description: 'Boolean which defines if the navbar has a search bar.',\n\t    options: [true, false],\n\t    control: { type: 'boolean' },\n\t    table: {\n", "      category: 'Navbar'\n\t    }\n\t  },\n\t  hiddenUser: {\n\t    name: 'hiddenUser',\n\t    type: { name: 'boolean', required: false },\n\t    description: 'Boolean which defines if the navbar hides the user.',\n\t    options: [true, false],\n\t    control: { type: 'boolean' },\n\t    table: {\n", "      category: 'Navbar'\n\t    }\n\t  },\n\t  user: {\n\t    name: 'user',\n\t    control: 'object',\n\t    description:\n\t      'Object wich defines all the informations about the current user',\n\t    table: {\n\t      category: 'Navbar'\n", "    },\n\t    if: {\n\t      arg: 'hiddenUser',\n\t      eq: false,\n\t      table: {\n\t        disable: true\n\t      }\n\t    }\n\t  },\n\t  h1: {\n", "    name: 'h1',\n\t    type: { name: 'boolean', required: false },\n\t    description: \"Boolean wich defines the height of navbar's title\",\n\t    options: [true, false],\n\t    control: { type: 'boolean' },\n\t    table: {\n\t      category: 'Navbar'\n\t    }\n\t  },\n\t  title: {\n", "    name: 'title',\n\t    type: { name: 'string', required: true },\n\t    description: \"String wich defines navbar's title\",\n\t    control: { type: 'text' },\n\t    table: {\n\t      category: 'Navbar'\n\t    }\n\t  },\n\t  sideMenuLinks: {\n\t    name: 'sideMenuLinks',\n", "    control: 'object',\n\t    description: 'Array of Object which defines the custom side menu',\n\t    table: {\n\t      category: 'Navbar'\n\t    }\n\t  },\n\t  systemsList: {\n\t    name: 'systemsList',\n\t    control: 'object',\n\t    description: 'Array which defines the systems contained in popup',\n", "    table: {\n\t      category: 'Navbar'\n\t    }\n\t  },\n\t  systemsListPopup: {\n\t    name: 'systemsListPopup',\n\t    type: { name: 'boolean', required: false },\n\t    options: [true, false],\n\t    control: { type: 'boolean' },\n\t    description: 'Boolean which defines if the navbar has a menu popup',\n", "    table: {\n\t      category: 'Navbar'\n\t    }\n\t  },\n\t  iconComponent: {\n\t    name: 'iconComponent',\n\t    description: 'Icon of system that appears in navbar',\n\t    table: {\n\t      category: 'Navbar'\n\t    }\n", "  }\n\t};\n"]}
{"filename": "src/utils/index.ts", "chunked_list": ["export * as AuthUtils from 'src/utils/authUtils';\n"]}
{"filename": "src/utils/authUtils.ts", "chunked_list": ["import { Buffer } from 'buffer';\n\timport { AuthContextProps } from 'react-oidc-context';\n\texport function jwtDecode(token: string): KeycloakPayload {\n\t  const parsedToken = JSON.parse(\n\t    Buffer.from(token.split('.')[1], 'base64').toString('utf-8')\n\t  );\n\t  return parsedToken;\n\t}\n\texport function hasAccess(auth: AuthContextProps, roles: Array<string>) {\n\t  if (auth.user) {\n", "    const { realm_access } = jwtDecode(auth.user.access_token);\n\t    for (const role of roles) {\n\t      if (realm_access.roles?.includes(role) || role === '*') {\n\t        return true;\n\t      }\n\t    }\n\t  }\n\t  return false;\n\t}\n\texport interface KeycloakPayload {\n", "  acr?: string | string[];\n\t  'allowed-origins'?: string[];\n\t  auth_time?: number;\n\t  azp?: string;\n\t  email: string;\n\t  email_verified: boolean;\n\t  given_name: string;\n\t  name: string;\n\t  preferred_username?: string;\n\t  realm_access: {\n", "    roles?: string[];\n\t  };\n\t  resource_access: {\n\t    account: {\n\t      roles?: string[];\n\t    };\n\t  };\n\t  scope?: string;\n\t  session_state: string;\n\t  sid?: string;\n", "  type: string;\n\t  iss?: string;\n\t  sub?: string;\n\t  aud?: string[] | string;\n\t  exp?: number;\n\t  nbf?: number;\n\t  iat?: number;\n\t  jti?: string;\n\t}\n"]}
{"filename": "src/interfaces/index.ts", "chunked_list": ["import { JSXElementConstructor } from 'react';\n\texport interface Role {\n\t  id: number;\n\t  name: string;\n\t  description: string;\n\t}\n\texport interface Position {\n\t  id: number;\n\t  name: string;\n\t  roles?: Role[];\n", "}\n\texport interface User {\n\t  name: string;\n\t  email: string;\n\t  username?: string;\n\t  profilePictureUrl?: string;\n\t  positions?: Position[];\n\t}\n\texport interface System {\n\t  title: string;\n", "  iconUrl?: string;\n\t  IconComponent?: JSXElementConstructor<any>;\n\t  description: string;\n\t  href: string;\n\t  visibleRole?: string;\n\t}\n\texport interface Link {\n\t  id: number;\n\t  iconUrl?: string;\n\t  IconComponent?: JSXElementConstructor<any>;\n", "  title: string;\n\t  href?: string;\n\t  external?: boolean;\n\t}\n\texport interface SideMenuLink extends Link {\n\t  children?: Link[];\n\t}\n\texport interface Option {\n\t  value: string;\n\t  text: string;\n", "}\n"]}
{"filename": "src/lib-components/Navbar/styles.ts", "chunked_list": ["import styled from 'styled-components';\n\timport AppBar from '@mui/material/AppBar';\n\timport Toolbar from '@mui/material/Toolbar';\n\timport Menu from '@mui/material/Menu';\n\timport InputBase from '@mui/material/InputBase';\n\texport const ParentNav = styled.div`\n\t  display: inline;\n\t`;\n\texport const StyledAppBar = styled(AppBar)`\n\t  min-width: max-content;\n", "  width: 100%;\n\t  top: 0;\n\t  &.MuiAppBar-root {\n\t    position: sticky;\n\t    background-color: #ffffff;\n\t  }\n\t`;\n\texport const StyledToolbar = styled(Toolbar)`\n\t  display: flex;\n\t  justify-content: space-between;\n", "`;\n\texport const LeftContainer = styled.div`\n\t  margin: 0px 0.75rem;\n\t  margin-right: 0;\n\t  display: flex;\n\t  align-items: center;\n\t`;\n\texport const TitleContainer = styled.div`\n\t  color: #2c2c2c;\n\t  margin: 0 2rem;\n", "  @media (min-width: 800px) {\n\t    margin-right: auto;\n\t  }\n\t`;\n\texport const SearchBarContainer = styled.div`\n\t  justify-self: center;\n\t  display: flex;\n\t  margin: 0 2rem;\n\t`;\n\texport const Search = styled.div`\n", "  position: 'relative';\n\t  border-radius: 5px;\n\t  margin-right: 2px;\n\t  margin-left: 0;\n\t  width: '100%';\n\t`;\n\texport const StyledInputBase = styled(InputBase)`\n\t  border: none;\n\t  height: 2.7rem;\n\t  border-radius: 10px;\n", "  padding-left: 2rem;\n\t  padding-right: 12%;\n\t  background-color: #f2f2f2;\n\t  width: 25vw;\n\t  max-width: 30rem;\n\t`;\n\texport const RightContainer = styled.div`\n\t  margin: 0px 0.75rem;\n\t  display: flex;\n\t  align-items: center;\n", "`;\n\texport const SystemsButton = styled.div`\n\t  border: none;\n\t  background: transparent;\n\t  width: 2.5rem;\n\t  height: 2.5rem;\n\t  cursor: pointer;\n\t  filter: invert(18%) sepia(64%) saturate(3884%) hue-rotate(342deg)\n\t    brightness(101%) contrast(98%);\n\t  transition: all 0.5s;\n", "  &.open {\n\t    filter: invert(25%) sepia(69%) saturate(1960%) hue-rotate(342deg)\n\t      brightness(92%) contrast(81%);\n\t  }\n\t  img {\n\t    height: 100%;\n\t    width: 100%;\n\t  }\n\t`;\n\texport const Logo = styled.img`\n", "  max-width: 120px;\n\t  min-width: 60px;\n\t  width: 100%;\n\t  align-items: flex-start;\n\t  margin: 0 0.75rem;\n\t`;\n\texport const StyledUserMenu = styled(Menu)`\n\t  margin-top: 40px;\n\t  .MuiPaper-rounded {\n\t    border-radius: 10px;\n", "  }\n\t  .MuiMenu-paper {\n\t    max-height: 100%;\n\t  }\n\t  .MuiList-padding {\n\t    padding-top: 0px;\n\t    padding-bottom: 0px;\n\t  }\n\t`;\n\texport const StyledSystemMenu = styled(Menu)`\n", "  margin-top: 40px;\n\t  margin-right: 100px;\n\t  .MuiPaper-rounded {\n\t    border-radius: 10px;\n\t  }\n\t  .MuiMenu-paper {\n\t    max-height: 100%;\n\t  }\n\t  .MuiList-padding {\n\t    padding-top: 0px;\n", "    padding-bottom: 0px;\n\t  }\n\t`;\n"]}
{"filename": "src/lib-components/ImageInput/styles.ts", "chunked_list": ["import styled from 'styled-components';\n\texport const StyledImage = styled.img`\n\t  height: 100%;\n\t  width: 100%;\n\t  border-radius: 15px;\n\t  align-self: center;\n\t`;\n\texport const StyledFieldset = styled.fieldset`\n\t  margin: 0;\n\t  padding: 0;\n", "  box-sizing: border-box;\n\t  text-decoration: none;\n\t  position: relative;\n\t  border: none;\n\t  width: 100%;\n\t  aspect-ratio: 3/4;\n\t  border-radius: 15px;\n\t  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.25);\n\t  background-color: #ffffff;\n\t  display: flex;\n", "  flex-direction: column;\n\t  align-items: center;\n\t  justify-content: center;\n\t`;\n\texport const StyledLabel = styled.label`\n\t  background-color: rgba(0, 0, 0, 0.25);\n\t  position: absolute;\n\t  height: 100%;\n\t  width: 100%;\n\t  border-radius: 15px;\n", "  display: flex;\n\t  align-items: center;\n\t  justify-content: center;\n\t  cursor: pointer;\n\t`;\n\texport const StyledSpan = styled.span`\n\t  color: #ffffff;\n\t  font-size: 1.5rem;\n\t  text-align: center;\n\t`;\n"]}
{"filename": "src/lib-components/Page/styles.ts", "chunked_list": ["import styled from 'styled-components';\n\texport const MainDiv = styled.main`\n\t  display: flex;\n\t  padding: 20px clamp(10px, 2%, 40px);\n\t  z-index: 1000;\n\t  background-color: #ffffff;\n\t`;\n\texport const Parent = styled.div`\n\t  display: inline;\n\t`;\n"]}
{"filename": "src/lib-components/Page/useNavbar.ts", "chunked_list": ["import { SideMenuLink, System, User } from '@/interfaces';\n\timport { useContext } from 'react';\n\timport { NavbarContext } from '.';\n\timport { NavbarProps } from '../Navbar';\n\timport { AuthContextProps } from 'react-oidc-context';\n\texport class NavbarContextValue implements NavbarProps {\n\t  auth?: AuthContextProps;\n\t  logoRedirectUrl?: string;\n\t  logoSrc?: string;\n\t  haveSearchBar?: boolean;\n", "  hiddenUser?: boolean;\n\t  title?: string;\n\t  h1?: boolean;\n\t  searchFunction?: (searchString: string) => void;\n\t  searchDropdownLabelsList?: string[];\n\t  logoutFunction?: () => void;\n\t  user?: User;\n\t  sideMenuLinks?: SideMenuLink[];\n\t  isLandingPage?: boolean;\n\t  systemsList?: System[];\n", "  currentSystemIconUrl?: string;\n\t  children?: JSX.Element;\n\t  accountManagementUrl?: string;\n\t  setNavbarProps: React.Dispatch<React.SetStateAction<NavbarProps>>;\n\t  constructor(\n\t    navbarProps: NavbarProps,\n\t    setNavbarProps: React.Dispatch<React.SetStateAction<NavbarProps>>\n\t  ) {\n\t    this.auth = navbarProps.auth;\n\t    this.logoRedirectUrl = navbarProps.logoRedirectUrl;\n", "    this.logoSrc = navbarProps.logoSrc;\n\t    this.haveSearchBar = navbarProps.haveSearchBar;\n\t    this.hiddenUser = navbarProps.hiddenUser;\n\t    this.title = navbarProps.title;\n\t    this.h1 = navbarProps.h1;\n\t    this.searchFunction = navbarProps.searchFunction;\n\t    this.searchDropdownLabelsList = navbarProps.searchDropdownLabelsList;\n\t    this.logoutFunction = navbarProps.logoutFunction;\n\t    this.user = navbarProps.user;\n\t    this.sideMenuLinks = navbarProps.sideMenuLinks;\n", "    this.isLandingPage = navbarProps.isLandingPage;\n\t    this.systemsList = navbarProps.systemsList;\n\t    this.currentSystemIconUrl = navbarProps.currentSystemIconUrl;\n\t    this.children = navbarProps.children;\n\t    this.accountManagementUrl = navbarProps.accountManagementUrl;\n\t    this.setNavbarProps = setNavbarProps;\n\t  }\n\t  setTitle(newTitle: string) {\n\t    if (newTitle !== this.title) {\n\t      this.title = newTitle;\n", "      this.setNavbarProps({ ...this });\n\t    }\n\t  }\n\t  setSearchFuncion(newSearchFunction: (searchString: string) => void) {\n\t    if (newSearchFunction !== this.searchFunction) {\n\t      this.searchFunction = newSearchFunction;\n\t      this.setNavbarProps({ ...this });\n\t    }\n\t  }\n\t  setHaveSearchBar(newHaveSearchBar: boolean) {\n", "    if (newHaveSearchBar !== this.haveSearchBar) {\n\t      this.haveSearchBar = newHaveSearchBar;\n\t      this.setNavbarProps({ ...this });\n\t    }\n\t  }\n\t  setSideMenuLinks(newSideMenuLinks: SideMenuLink[]) {\n\t    if (newSideMenuLinks !== this.sideMenuLinks) {\n\t      this.sideMenuLinks = newSideMenuLinks;\n\t      this.setNavbarProps({ ...this });\n\t    }\n", "  }\n\t}\n\texport const useNavbar = (): NavbarContextValue | undefined => {\n\t  const contextValue: NavbarContextValue | undefined =\n\t    useContext(NavbarContext);\n\t  if (!contextValue) {\n\t    throw new Error('Navbar context not available.');\n\t  }\n\t  return contextValue;\n\t};\n"]}
{"filename": "src/lib-components/Footer/styles.ts", "chunked_list": ["import styled from \"styled-components\";\n\texport const ParentFooter = styled.div`\n\t  display: inline;\n\t  z-index: -10;\n\t`;\n\texport const StyledFooter = styled.div`\n\t  position: sticky;\n\t  min-width: max-content;\n\t  width: 100%;\n\t  bottom: 0;\n", "`;\n\texport const LargeDiv = styled.div`\n\t  height: 110px;\n\t  width: 100%;\n\t  color: white;\n\t  background-color: #424242;\n\t  @media (max-width: 801px) and (min-width: 502px) {\n\t    height: 15vh;\n\t  }\n\t  @media (max-width: 501px) {\n", "    height: 30vh;\n\t  }\n\t`;\n\texport const Columns = styled.div`\n\t  display: flex;\n\t  justify-content: space-around;\n\t  height: 100%;\n\t  align-items: center;\n\t  @media (max-width: 801px) and (min-width: 502px) {\n\t    flex-direction: row;\n", "    flex-wrap: wrap;\n\t  }\n\t  @media (max-width: 501px) {\n\t    flex-direction: column;\n\t    flex-wrap: wrap;\n\t  }\n\t`;\n\texport const LeftColumn = styled.div`\n\t  width: 35.5%;\n\t  @media (max-width: 801px) {\n", "    width: 100%;\n\t  }\n\t`;\n\texport const MiddleColumn = styled.div`\n\t  width: 29%;\n\t  @media (max-width: 801px) and (min-width: 502px) {\n\t    flex: 0 0 50%;\n\t    padding-left: 10%;\n\t    width: 100%;\n\t  }\n", "  @media (max-width: 501px) {\n\t    width: 100%;\n\t  }\n\t`;\n\texport const RightColumn = styled.div`\n\t  width: 35.5%;\n\t  white-space: pre-line;\n\t  @media (max-width: 801px) and (min-width: 502px) {\n\t    flex: 0 0 50%;\n\t    padding-right: 10%;\n", "    width: 100%;\n\t  }\n\t  @media (max-width: 501px) {\n\t    width: 100%;\n\t  }\n\t`;\n\texport const LeftColumnText = styled.div`\n\t  display: flex;\n\t  justify-content: flex-end;\n\t  font-size: 1rem;\n", "  font-weight: bold;\n\t  white-space: pre-line;\n\t  @media (max-width: 1001px) and (min-width: 802px) {\n\t    justify-content: center;\n\t  }\n\t  @media (max-width: 801px) {\n\t    width: 100%;\n\t    justify-content: center;\n\t  }\n\t`;\n", "export const MiddleColumnText = styled.div`\n\t  text-align: center;\n\t  font-size: 0.8rem;\n\t  white-space: pre-line;\n\t  @media (max-width: 801px) {\n\t    width: 100%;\n\t    justify-content: center;\n\t  }\n\t`;\n\texport const RightColumnText = styled.div`\n", "  display: flex;\n\t  justify-content: flex-start;\n\t  text-align: center;\n\t  font-size: 0.8rem;\n\t  @media (max-width: 1001px) and (min-width: 802px) {\n\t    justify-content: center;\n\t  }\n\t  @media (max-width: 801px) {\n\t    width: 100%;\n\t    justify-content: center;\n", "  }\n\t  pre {\n\t    display: inherit;\n\t    font-family: inherit;\n\t    margin: inherit;\n\t  }\n\t`;\n\texport const SmallDiv = styled.div`\n\t  height: 40px;\n\t  width: 100hw;\n", "  color: white;\n\t  font-size: 11px;\n\t  line-height: 40px;\n\t  background-color: #616161;\n\t  display: flex;\n\t  justify-content: space-between;\n\t  padding-inline: 30px;\n\t`;\n\texport const CopyrightText = styled.div`\n\t  display: inline-block;\n", "  text-align: left;\n\t`;\n\texport const SignatureText = styled.div`\n\t  display: inline-block;\n\t  text-align: right;\n\t  @media (max-width: 601px) {\n\t    display: none;\n\t  }\n\t`;\n"]}
{"filename": "src/lib-components/ErrorScreen/style.ts", "chunked_list": ["import styled from \"styled-components\";\n\texport const NotFoundWrapper = styled.div`\n\tdisplay: flex;\n\tjustify-content: center;\n\twidth: 80%;\n\t`;\n\texport const ComingSoonWrapper = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n", "justify-content:space-between;\n\twidth: 80%;\n\t`;\n\texport const InactiveWrapper = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tjustify-content:space-between;\n\twidth: 80%;\n\t`;\n", "export const MaintenanceWrapper = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tjustify-content:space-between;\n\twidth: 80%;\n\t`;\n\texport const LargeText = styled.p`\n\tfont-size: max(2vw, 1.5rem);\n\tfont-weight: bold;\n", "margin: 1vh;\n\ttext-align: center;\n\t`;\n\texport const ErrorImg = styled.img`\n\twidth: 75%;\n\theight: 75%;\n\tmax-width: 450px;\n\tmax-height: 450px;\n\tmin-width: 350px;\n\tmin-height: 350px;\n", "`;\n"]}
{"filename": "src/lib-components/Dialog/styles.ts", "chunked_list": ["import styled from 'styled-components';\n\timport { Dialog as DialogMui } from '@mui/material';\n\texport const StyledDialog = styled(DialogMui)`\n\t  //Componente estilizado criado para tirar o padding do dialog e permitir que a barrinha cole nas margens\n\t  .MuiDialogTitle-root {\n\t    padding: 0;\n\t  }\n\t  .MuiPaper-root {\n\t    max-width: 100vw;\n\t  }\n", "`;\n\texport const HeaderBar = styled.div`\n\t  //Componente estilizado correspondente à barrinha com a cor do dialog\n\t  width: 100%;\n\t  height: 2rem;\n\t  background-color: ${(props) => props.color};\n\t  border-top-left-radius: 3px;\n\t  border-top-right-radius: 3px;\n\t  margin-bottom: 1.5rem;\n\t`;\n", "export const Title = styled.h3`\n\t  padding: 0 24px; //padding usado para alinhar o título com a descrição\n\t`;\n"]}
{"filename": "src/lib-components/ForbiddenPage/styles.ts", "chunked_list": ["import styled from 'styled-components';\n\texport const ErrorImg = styled.img`\n\twidth: 75%;\n\theight: 75%;\n\tmax-width: 450px;\n\tmax-height: 450px;\n\tmin-width: 350px;\n\tmin-height: 350px;\n\t`;\n\texport const MediumText = styled.p`\n", "font-size: max(1.5vw, 1.2rem);\n\tfont-weight: bold;\n\ttext-align: center;\n\tmargin: 1vh;\n\t`;\n\texport const EmailText = styled.p`\n\tfont-size: max(1.3vw, 1.1rem);\n\ttext-align: center;\n\tmargin: 1vh;\n\tcolor: #DB1E2F;\n", "`;\n\texport const EmailContainer = styled.div`\n\tdisplay: flex;\n\twidth: 50%;\n\tjustify-content: center;\n\talign-items: center;\n\t`;\n\texport const PageContent = styled.div`\n\twidth: 100%;\n\theight: 100%;\n", "display: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: center;\n\t`;\n"]}
