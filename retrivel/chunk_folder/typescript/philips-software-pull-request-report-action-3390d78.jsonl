{"filename": "tests/report.config.test.ts", "chunked_list": ["// for license and copyright look at the repository\n\timport { table, tsMarkdown } from 'ts-markdown'\n\timport { GetActiveMeasures, ReportConfigurationTable, UpdateConfigValues } from '../src/Report.Measures'\n\timport * as fs from 'fs'\n\timport { ConfigurationCategory, ReportConfigurationEntry } from '../src/Report.Definitions'\n\timport yaml from 'js-yaml'\n\timport { ConfigurationInputs } from '../src/action.config.type'\n\tlet rows: { Name: string; Description: string; DefaultValue: string | number; Category: string }[] = []\n\tbeforeAll(() => {\n\t  const configItems = ReportConfigurationTable.map((item) => {\n", "    return {\n\t      description: item.Info.Description,\n\t      name: item.Info.ConfigurationName,\n\t      category: ConfigurationCategory[item.Info.ConfigurationCategory],\n\t      defaultValue: item.Info.ConfigValue,\n\t    }\n\t  })\n\t  rows = configItems\n\t    .map((entry) => ({\n\t      Name: entry.name,\n", "      Description: entry.description,\n\t      DefaultValue: entry.defaultValue,\n\t      Category: entry.category,\n\t    }))\n\t    .sort((a, b) => {\n\t      if (a.Category < b.Category) {\n\t        return -1\n\t      }\n\t      if (a.Category > b.Category) {\n\t        return 1\n", "      }\n\t      return 0\n\t    })\n\t})\n\ttest('Generate documentation for configuration items', () => {\n\t  const configValues = table({\n\t    columns: [{ name: 'Name' }, { name: 'Description' }, { name: 'Category' }, { name: 'DefaultValue' }],\n\t    rows: rows,\n\t  })\n\t  const defaultConfigMeasures = tsMarkdown([configValues])\n", "  expect(defaultConfigMeasures.length).toBeGreaterThan(0)\n\t  // read content from file\n\t  const fileContent = fs.readFileSync('config.values.default.md', 'utf8')\n\t  const mergedContent = fileContent.concat('\\n').concat(defaultConfigMeasures)\n\t  // write to file\n\t  fs.writeFileSync('config.md', mergedContent)\n\t})\n\ttest('Generate valid input keys and patch the action.yml file', () => {\n\t  const inputValues: { [index: string]: { description: string; default: string | number; required: boolean } } = {}\n\t  rows.map((row) => {\n", "    inputValues[row.Name] = { description: row.Description, default: row.DefaultValue, required: false }\n\t  })\n\t  // load action yaml file\n\t  const actions = yaml.load(fs.readFileSync('action.yml', 'utf8')) as {\n\t    inputs: { [index: string]: { description: string; default: string | number; required: boolean } }\n\t  }\n\t  actions.inputs = inputValues\n\t  const serializedString = yaml.dump(actions)\n\t  expect(serializedString.length).toBeGreaterThan(0)\n\t  fs.writeFileSync('action.yml', serializedString)\n", "})\n\tconst CreateMetricTableCopy = (table: ReportConfigurationEntry[]): ReportConfigurationEntry[] => {\n\t  const tableAsJson = JSON.stringify(table)\n\t  return JSON.parse(tableAsJson) as ReportConfigurationEntry[]\n\t}\n\ttest('Update the MetricTable with config values from workflow', () => {\n\t  const inputValuesFromWorkflow = {} as ConfigurationInputs\n\t  inputValuesFromWorkflow.ShowAdditions = 'yes'\n\t  inputValuesFromWorkflow.ShowDeleted = 'yes'\n\t  inputValuesFromWorkflow.ShowNumberOfChangedFiles = 'yes'\n", "  inputValuesFromWorkflow.ShowNumberOfCommits = 'no'\n\t  inputValuesFromWorkflow.ShowNumberOfReviews = 'no'\n\t  inputValuesFromWorkflow.ShowNumberOfComments = 'no'\n\t  inputValuesFromWorkflow.ShowPRLeadTime = 'yes'\n\t  inputValuesFromWorkflow.ShowTimeSpendOnBranchBeforePrCreated = 'no'\n\t  inputValuesFromWorkflow.ShowTimeSpendOnBranchBeforePrMerged = 'no'\n\t  inputValuesFromWorkflow.ShowTimeToMergeAfterLastReview = 'no'\n\t  // create copy of MetricTable\n\t  const myMetricTable: ReportConfigurationEntry[] = CreateMetricTableCopy(ReportConfigurationTable)\n\t  expect(\n", "    ReportConfigurationTable.filter((item) => item.Info.ConfigurationName === 'ShowTimeToMergeAfterLastReview')[0].Info\n\t      .ConfigValue,\n\t  ).toBe('yes')\n\t  UpdateConfigValues(inputValuesFromWorkflow, myMetricTable)\n\t  expect(\n\t    myMetricTable.filter((item) => item.Info.ConfigurationName === 'ShowTimeToMergeAfterLastReview')[0].Info\n\t      .ConfigValue,\n\t  ).toBe('no')\n\t})\n\ttest('Filter the MetricTable with config values from workflow', () => {\n", "  const inputValuesFromWorkflow = {} as ConfigurationInputs\n\t  inputValuesFromWorkflow.ShowAdditions = 'yes'\n\t  inputValuesFromWorkflow.ShowDeleted = 'yes'\n\t  inputValuesFromWorkflow.ShowNumberOfChangedFiles = 'yes'\n\t  inputValuesFromWorkflow.ShowNumberOfCommits = 'no'\n\t  inputValuesFromWorkflow.ShowNumberOfReviews = 'no'\n\t  inputValuesFromWorkflow.ShowNumberOfComments = 'no'\n\t  inputValuesFromWorkflow.ShowPRLeadTime = 'yes'\n\t  inputValuesFromWorkflow.ShowTimeSpendOnBranchBeforePrCreated = 'no'\n\t  inputValuesFromWorkflow.ShowTimeSpendOnBranchBeforePrMerged = 'no'\n", "  inputValuesFromWorkflow.ShowTimeToMergeAfterLastReview = 'yes'\n\t  // create copy of MetricTable\n\t  const myMetricTable: ReportConfigurationEntry[] = CreateMetricTableCopy(ReportConfigurationTable)\n\t  UpdateConfigValues(inputValuesFromWorkflow, myMetricTable)\n\t  const activeMeasures = GetActiveMeasures(myMetricTable)\n\t  expect(\n\t    activeMeasures.filter((item) => item.Info.ConfigurationName === 'ShowTimeToMergeAfterLastReview')[0].Info\n\t      .ConfigValue,\n\t  ).toBe('yes')\n\t  expect(\n", "    activeMeasures.filter((item) => item.Info.ConfigurationName === 'ShowTimeSpendOnBranchBeforePrMerged').length,\n\t  ).toBe(0)\n\t})\n\ttest('Generate configuration arguments for action code', () => {\n\t  const inputValues: { [index: string]: { description: string; default: string | number; required: boolean } } = {}\n\t  rows.map((row) => {\n\t    inputValues[row.Name] = { description: row.Description, default: row.DefaultValue, required: false }\n\t  })\n\t  const generatedArgumentFile = 'src/action.config.args.ts'\n\t  const generatedTypeFile = 'src/action.config.type.ts'\n", "  // first call is write to generate a new new file (with overwrite)\n\t  fs.writeFileSync(generatedArgumentFile, '//GENERATED FILE FROM report.config.tests.ts - DO NOT EDIT!!!\\n\\n')\n\t  fs.writeFileSync(generatedTypeFile, '//GENERATED FILE FROM report.config.tests.ts - DO NOT EDIT!!!\\n\\n')\n\t  // from now on we append to the files\n\t  fs.appendFileSync(generatedArgumentFile, \"import * as core from '@actions/core'\\n\\n\")\n\t  fs.appendFileSync(generatedArgumentFile, 'export const config = {\\n')\n\t  fs.appendFileSync(generatedTypeFile, 'export type ConfigurationInputs = {\\n')\n\t  for (const key in inputValues) {\n\t    fs.appendFileSync(\n\t      generatedArgumentFile,\n", "      `  ${key}: core.getInput('${key}', { required: ${inputValues[key].required.toString()} }),\\n`,\n\t    )\n\t    fs.appendFileSync(generatedTypeFile, `  ${key}: string | number\\n`)\n\t  }\n\t  fs.appendFileSync(generatedArgumentFile, '}\\n')\n\t  fs.appendFileSync(generatedTypeFile, '}\\n')\n\t  expect(fs.statSync(generatedArgumentFile).size).toBeGreaterThan(10)\n\t})\n"]}
{"filename": "tests/report.test.ts", "chunked_list": ["// for license and copyright look at the repository\n\timport { IPullRequest } from '../src/Interfaces/PullRequestTypes'\n\timport { PullRequest } from '../src/PullRequest.Definitions'\n\timport {\n\t  GetAddedLines,\n\t  GetChangedFilesCount,\n\t  GetCommentCount,\n\t  GetCommitsCount,\n\t  GetDeletedLines,\n\t} from '../src/Report.Functions'\n", "import { DataFromBigPullRequest } from './pr_sample_data'\n\tlet PullRequestJsonModel: unknown\n\tlet PullRequestStatModel: IPullRequest\n\tbeforeAll(() => {\n\t  PullRequestJsonModel = DataFromBigPullRequest\n\t  PullRequestStatModel = PullRequest.CreateFromJson(PullRequestJsonModel)\n\t})\n\ttest('Check number of added lines', () => {\n\t  const additions = DataFromBigPullRequest as { additions: number }\n\t  expect(GetAddedLines(PullRequestStatModel)).toBe(additions['additions'])\n", "})\n\ttest('Check number of deleted lines', () => {\n\t  const deletions = DataFromBigPullRequest as { deletions: number }\n\t  expect(GetDeletedLines(PullRequestStatModel)).toBe(deletions['deletions'])\n\t})\n\ttest('Check number changed files', () => {\n\t  const changedFiles = DataFromBigPullRequest as { changedFiles: number }\n\t  expect(GetChangedFilesCount(PullRequestStatModel)).toBe(changedFiles['changedFiles'])\n\t})\n\ttest('Check number commits', () => {\n", "  const commits = DataFromBigPullRequest as { commits: unknown[] }\n\t  expect(GetCommitsCount(PullRequestStatModel)).toBe(commits['commits'].length)\n\t})\n\ttest('Check number comments', () => {\n\t  const comments = DataFromBigPullRequest as { comments: unknown[] }\n\t  expect(GetCommentCount(PullRequestStatModel)).toBe(comments['comments'].length)\n\t})\n"]}
{"filename": "tests/github.cli.helper.test.ts", "chunked_list": ["// for license and copyright look at the repository\n\timport { GetPullRequestData } from '../src/GitHubCliHelper'\n\timport { PullRequest } from '../src/PullRequest.Definitions'\n\tdescribe('CliIntegrationTest', () => {\n\t  test('Check that we can request from CLI tool', async () => {\n\t    const pullRequestData = await GetPullRequestData(381, 'aertslab/SCope')\n\t    expect(pullRequestData).toBeDefined()\n\t  })\n\t  test('Check that we can request, and read the data in our data model', async () => {\n\t    const pullRequestJson = await GetPullRequestData(381, 'aertslab/SCope')\n", "    const pullRequest = PullRequest.CreateFromJson(pullRequestJson)\n\t    expect(pullRequest.id).toBe(381)\n\t    expect(pullRequest.reviews.length).toBeGreaterThan(0)\n\t    expect(pullRequest.comments.length).toBeGreaterThan(0)\n\t    expect(pullRequest.commits.length).toBeGreaterThan(0)\n\t  })\n\t})\n"]}
{"filename": "tests/report.generation.test.ts", "chunked_list": ["// for license and copyright look at the repository\n\timport { IPullRequest } from '../src/Interfaces/PullRequestTypes'\n\timport { PullRequest } from '../src/PullRequest.Definitions'\n\timport { Report } from '../src/Report.Definitions'\n\timport { ReportGenerator } from '../src/Report.Generation'\n\timport { ReportConfigurationTable } from '../src/Report.Measures'\n\timport { DataFromBigPullRequest } from './pr_sample_data'\n\timport { tsMarkdown } from 'ts-markdown'\n\tlet PullRequestJsonModel: unknown\n\tlet PullRequestStatModel: IPullRequest\n", "beforeAll(() => {\n\t  PullRequestJsonModel = DataFromBigPullRequest\n\t  PullRequestStatModel = PullRequest.CreateFromJson(PullRequestJsonModel)\n\t})\n\ttest('Check if header is generated as expected', () => {\n\t  const generator = new ReportGenerator()\n\t  const report = new Report()\n\t  report.Description = 'Pull Request Report for PR'\n\t  expect(tsMarkdown([generator.GenerateHeader(PullRequestStatModel, report)])).toBe(\n\t    '# Pull Request Report for PR (#381)',\n", "  )\n\t})\n\ttest('Check if table is generated as expected', () => {\n\t  const generator = new ReportGenerator()\n\t  const report = new Report()\n\t  report.Entries = ReportConfigurationTable\n\t  report.Description = 'Test report'\n\t  report.Id = PullRequestStatModel.id.toString()\n\t  const table = generator.GenerateMeasureTable(PullRequestStatModel, report)\n\t  const result = tsMarkdown(table)\n", "  expect(result.length).toBeGreaterThan(0)\n\t})\n\ttest('Check if whole report is generated as expected', () => {\n\t  const generator = new ReportGenerator()\n\t  const report = new Report()\n\t  report.Entries = ReportConfigurationTable\n\t  report.Description = 'Test report'\n\t  report.Id = PullRequestStatModel.id.toString()\n\t  const result = generator.Generate(PullRequestStatModel, report)\n\t  expect(result.length).toBeGreaterThan(0)\n", "})\n"]}
{"filename": "tests/report.parser.test.ts", "chunked_list": ["// for license and copyright look at the repository\n\timport { GetPullRequestData } from '../src/GitHubCliHelper'\n\timport * as fs from 'fs'\n\timport { DataFromBigPullRequest } from './pr_sample_data'\n\timport { PullRequest } from '../src/PullRequest.Definitions'\n\timport {\n\t  IPullRequestComment,\n\t  IPullRequestCommit,\n\t  IPullRequestReview,\n\t  IStatusCheck,\n", "} from '../src/Interfaces/PullRequestTypes'\n\t// This method can be used to update the sample data\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tconst UpdateSampleData = async () => {\n\t  const prData = await GetPullRequestData(381, 'aertslab/SCope')\n\t  // write json to file\n\t  fs.writeFileSync('prDatams.json', JSON.stringify(prData, null, 2))\n\t}\n\ttest('Gather PR-Data for unknown Repo', async () => {\n\t  let exceptionRaised = false\n", "  try {\n\t    const jsonData = await GetPullRequestData(381, 'aertslab437598493-qn/SCope-154d7884f5')\n\t    const data = PullRequest.CreateFromJson(jsonData)\n\t    console.log(data)\n\t  } catch (e) {\n\t    exceptionRaised = true\n\t  }\n\t  expect(exceptionRaised).toBeTruthy()\n\t})\n\ttest('Transfer to internal object model', () => {\n", "  const data = PullRequest.CreateFromJson(DataFromBigPullRequest)\n\t  expect(data).toBeDefined()\n\t})\n\ttest('Check if DataFromBigPullRequest is parsed correctly and reflected by the object model consistently', () => {\n\t  const SampleData = DataFromBigPullRequest as {\n\t    number: number\n\t    title: string\n\t    createdAt: string\n\t    updatedAt: string\n\t    closedAt: string\n", "    mergedAt: string\n\t    body: string\n\t    author: string\n\t    state: string\n\t    mergeable: string\n\t    mergeStateStatus: string\n\t    isDraft: boolean\n\t    baseRefName: string\n\t    headRefName: string\n\t    headRefOid: string\n", "    headRepository: string\n\t    headRepositoryOwner: string\n\t    commits: unknown[]\n\t    reviews: unknown[]\n\t    comments: unknown[]\n\t    statusCheckRollup: unknown[]\n\t  }\n\t  // parse data from DataFromBigPullRequest\n\t  const data = PullRequest.CreateFromJson(DataFromBigPullRequest)\n\t  // check if the data is parsed correctly\n", "  expect(data.id).toBe(SampleData['number'])\n\t  expect(data.title).toBe(SampleData['title'])\n\t  expect(data.createdAt).toBe(SampleData['createdAt'])\n\t  expect(data.updatedAt).toBe(SampleData['updatedAt'])\n\t  expect(data.closedAt).toBe(SampleData['closedAt'])\n\t  expect(data.mergedAt).toBe(SampleData['mergedAt'])\n\t  expect(data.body).toBe(SampleData['body'])\n\t  expect(data.author).toBe(SampleData['author'])\n\t  expect(data.state).toBe(SampleData['state'])\n\t  expect(data.mergeable).toBe(SampleData['mergeable'])\n", "  expect(data.mergeStateStatus).toBe(SampleData['mergeStateStatus'])\n\t  expect(data.isDraft).toBe(SampleData['isDraft'])\n\t  expect(data.baseRefName).toBe(SampleData['baseRefName'])\n\t  expect(data.headRefName).toBe(SampleData['headRefName'])\n\t  expect(data.headRefOid).toBe(SampleData['headRefOid'])\n\t  expect(data.headRepository).toBe(SampleData['headRepository'])\n\t  expect(data.headRepositoryOwner).toBe(SampleData['headRepositoryOwner'])\n\t  expect(data.commits.length).toBe(SampleData['commits'].length)\n\t  expect(data.reviews.length).toBe(SampleData['reviews'].length)\n\t  expect(data.comments.length).toBe(SampleData['comments'].length)\n", "  expect(data.statusChecks.length).toBe(SampleData['statusCheckRollup'].length)\n\t  CheckCommits(data.commits, 1)\n\t  CheckReviews(data.reviews, 0)\n\t  CheckComments(data.comments, 1)\n\t  CheckStatusChecks(data.statusChecks, 1)\n\t})\n\tconst CheckStatusChecks = (checks: IStatusCheck[], index: number) => {\n\t  const SampleData = DataFromBigPullRequest as { statusCheckRollup: unknown[] }\n\t  expect(checks.length).toBe(SampleData['statusCheckRollup'].length)\n\t  const statusCheck = checks[index]\n", "  const statusCheckFromSampleData = SampleData['statusCheckRollup'][index] as {\n\t    completedAt: string\n\t    conclusion: string\n\t    name: string\n\t    startedAt: string\n\t    status: string\n\t    workflowName: string\n\t  }\n\t  expect(statusCheck.completedAt).toBe(statusCheckFromSampleData['completedAt'])\n\t  expect(statusCheck.conclusion).toBe(statusCheckFromSampleData['conclusion'])\n", "  expect(statusCheck.name).toBe(statusCheckFromSampleData['name'])\n\t  expect(statusCheck.startedAt).toBe(statusCheckFromSampleData['startedAt'])\n\t  expect(statusCheck.status).toBe(statusCheckFromSampleData['status'])\n\t  expect(statusCheck.workflowName).toBe(statusCheckFromSampleData['workflowName'])\n\t}\n\tconst CheckComments = (comments: IPullRequestComment[], index: number) => {\n\t  const SampleData = DataFromBigPullRequest as { comments: unknown[] }\n\t  expect(comments.length).toBe(SampleData['comments'].length)\n\t  const comment = comments[index]\n\t  const commentFromSampleData = SampleData['comments'][index] as {\n", "    author: { login: string }\n\t    authorAssociation: string\n\t    body: string\n\t    createdAt: string\n\t    id: string\n\t    url: string\n\t    viewerDidAuthor: string\n\t  }\n\t  expect(comment.authorAssociation).toBe(commentFromSampleData['authorAssociation'])\n\t  expect(comment.authorLogin).toBe(commentFromSampleData['author']['login'])\n", "  expect(comment.body).toBe(commentFromSampleData['body'])\n\t  expect(comment.createdAt).toBe(commentFromSampleData['createdAt'])\n\t  expect(comment.id).toBe(commentFromSampleData['id'])\n\t  expect(comment.url).toBe(commentFromSampleData['url'])\n\t  expect(comment.viewerDidAuthor).toBe(commentFromSampleData['viewerDidAuthor'] == 'true')\n\t}\n\tconst CheckCommits = (commits: IPullRequestCommit[], index: number) => {\n\t  const SampleData = DataFromBigPullRequest as { commits: unknown[] }\n\t  expect(commits.length).toBe(SampleData['commits'].length)\n\t  const commit = commits[index]\n", "  const commitFromSampleData = SampleData['commits'][index] as {\n\t    oid: string\n\t    messageHeadline: string\n\t    messageBody: string\n\t    authors: { email: string; name: string; login: string; id: string }[]\n\t  }\n\t  const authorIndex = 0\n\t  expect(commit.commitId).toBe(commitFromSampleData['oid'])\n\t  expect(commit.commitHeader).toBe(commitFromSampleData['messageHeadline'])\n\t  expect(commit.commitBody).toBe(commitFromSampleData['messageBody'])\n", "  expect(commit.authors[authorIndex].email).toBe(commitFromSampleData['authors'][authorIndex]['email'])\n\t  expect(commit.authors[authorIndex].name).toBe(commitFromSampleData['authors'][authorIndex]['name'])\n\t  expect(commit.authors[authorIndex].login).toBe(commitFromSampleData['authors'][authorIndex]['login'])\n\t  expect(commit.authors[authorIndex].id).toBe(commitFromSampleData['authors'][authorIndex]['id'])\n\t}\n\tconst CheckReviews = (reviews: IPullRequestReview[], index: number) => {\n\t  const SampleData = DataFromBigPullRequest as { reviews: unknown[] }\n\t  expect(reviews.length).toBe(SampleData['reviews'].length)\n\t  const review = reviews[index]\n\t  const reviewFromSampleData = SampleData['reviews'][0] as {\n", "    author: { login: string }\n\t    body: string\n\t    state: string\n\t    submittedAt: string\n\t  }\n\t  expect(review.authorLogin).toBe(reviewFromSampleData['author']['login'])\n\t  expect(review.body).toBe(reviewFromSampleData['body'])\n\t  expect(review.state).toBe(reviewFromSampleData['state'])\n\t  expect(review.submittedAt).toBe(reviewFromSampleData['submittedAt'])\n\t}\n"]}
{"filename": "tests/run.test.ts", "chunked_list": ["import { SanitizeMarkdownComment } from '../src/run'\n\tdescribe('SanitizeMarkdownComment', () => {\n\t  it('should replace opening HTML comment tags with HTML entities', () => {\n\t    const input = '<!-- This is a comment'\n\t    const expectedOutput = '&lt;!-- This is a comment'\n\t    const output = SanitizeMarkdownComment(input)\n\t    expect(output).toEqual(expectedOutput)\n\t  })\n\t  it('should replace closing HTML comment tags with HTML entities', () => {\n\t    const input = 'This is a comment -->'\n", "    const expectedOutput = 'This is a comment --&gt;'\n\t    const output = SanitizeMarkdownComment(input)\n\t    expect(output).toEqual(expectedOutput)\n\t  })\n\t  it('should replace both opening and closing HTML comment tags with HTML entities', () => {\n\t    const input = '<!-- This is a comment -->'\n\t    const expectedOutput = '&lt;!-- This is a comment --&gt;'\n\t    const output = SanitizeMarkdownComment(input)\n\t    expect(output).toEqual(expectedOutput)\n\t  })\n", "  it('should not modify input that does not contain HTML comment tags', () => {\n\t    const input = 'This is not a comment'\n\t    const expectedOutput = 'This is not a comment'\n\t    const output = SanitizeMarkdownComment(input)\n\t    expect(output).toEqual(expectedOutput)\n\t  })\n\t})\n"]}
{"filename": "tests/pr_sample_data.ts", "chunked_list": ["// for license and copyright look at the repository\n\texport const DataFromBigPullRequest: unknown = JSON.parse(\n\t  '{\\n  \"additions\": 36540,\\n  \"assignees\": [],\\n  \"author\": {\\n    \"id\": \"MDQ6VXNlcjI2NDQ0MzEy\",\\n    \"is_bot\": false,\\n    \"login\": \"MaybeJustJames\",\\n    \"name\": \"James Collier\"\\n  },\\n  \"baseRefName\": \"develop\",\\n  \"body\": \"This branch begins a large-scale move of the app to redux and redux sagas for state management. It also restructures the app in a way I think is easier to navigate and think about.\\\\r\\\\n\\\\r\\\\n### Cleanup\\\\r\\\\n* Webpack config based on [this](https://github.com/taniarascia/webpack-boilerplate).\\\\r\\\\n* Remove unnecessary/unused build machinery and unused files.\\\\r\\\\n* Remove Google Analytics integration\\\\r\\\\n* Dynamically generate artifact and use default WebPack output directory\\\\r\\\\n* Update most dependencies, removed unused or unnecessary dependincies\\\\r\\\\n* Add a script to visualise the size of the compiled build artifact (bundle-size-analyse)\\\\r\\\\n* Use ts-loader rather than babel to compile ts/tsx (type-checking)\\\\r\\\\n* Upgrade to webpack 5\\\\r\\\\n* Remove reliance on polyfilled Node APIs (path and zip)\\\\r\\\\n* Add linting for use of abstract equality and block delimiters with braces\\\\r\\\\n* Add tests for the front-end using Jest and react-testing-library. Including tests for `fetch()` And GProfiler previously introduced.\\\\r\\\\n* Use `jest-css-modules-transform` to handle imports for CSS. Version is intentionally pinned as \\\\\"4.0.2\\\\\" breaks tests.\\\\r\\\\n* Wrap the old API in a scary `LegacyAPI` name\\\\r\\\\n* Extract some of the complexity in the `App` component in new `Main` and `FullPageNotify` components.\\\\r\\\\n* Turn on strict TypeScript type checking and fix all type errors.\\\\r\\\\n* Remove as much CSS as possible and simplify DOM structure\\\\r\\\\n* Introduce a TEST_ONLY flag to avoid hard-to-test side-effects from the legacy API while testing.\\\\r\\\\n* Add local CSS imported only by the component that uses it.\\\\r\\\\n* Remove as many uses of Lodash as possible\\\\r\\\\n* Add a utility function `zipLists` to `zip()` a list of lists.\\\\r\\\\n* Refactor the UploadModal to be responsive.\\\\r\\\\n* Reduce use of `default exports`\\\\r\\\\n\\\\r\\\\n### Code structure and redesign\\\\r\\\\n* Document code style and design decisions in CONTRIBUTING.md\\\\r\\\\n* Change the structure of `getFeature()` requests and responses\\\\r\\\\n* Add a \\\\\"filter by type/category\\\\\" argument to `getFeature()` requests\\\\r\\\\n* Redisign of FeatureSearchBox components following the guidelines outlines in CONTRIBUTING.md\\\\r\\\\n* LegacyAPI no longer tracks UUID, sessionMode, sidebar visibility, and cookie consent. These have been moved to Redux.\\\\r\\\\n* Wire in Redux to existing components where useful.\\\\r\\\\n* Use `immer` to update Redux state.\\\\r\\\\n* Add a `Result` type similar to the backend `Result` type.\\\\r\\\\n\\\\r\\\\n### UI\\\\r\\\\n* Viewer component is now responsive and does less work to render data\\\\r\\\\n* Redisign of UI, the whole UI is a little more responsive and more traditionally \\\\\"single-page\\\\\".\\\\r\\\\n* Centre the Welcome page and make it scrollable.\\\\r\\\\n\\\\r\\\\n### Breaking changes and known issues\\\\r\\\\n* Does not keep (removes) the functionality for \\\\\"locking\\\\\" related search entries on searches like \\\\\"batch\\\\\" and \\\\\"All clusters\\\\\" (#447)\\\\r\\\\n* ~~This PR breaks ViewerSidebar \\\\\"Clustering Controls\\\\\". Fixing this is out of scope for the PR, this should instead be fixed after @dweemx cleanup of the ViewerSidebar is merged.~~\\\\r\\\\n* Lasso selections are not \\\\\"remembered\\\\\" when switching between tabs.\\\\r\\\\n* The Babel config file is necessary for Jest. It duplicates the webpack config. If you have a solution to remove the duplication please let me know.\\\\r\\\\n* [VISUAL/STYLING] Annotation voting popup does not persist on mouseover (#427)\\\\r\\\\n* ~~Compare tab break when performing a DnD of one of the annotation onto a viewer.~~\\\\r\\\\n* [VISUAL/STYLING] Styling changes cause text to overlap in many locations (i.e. Loom selection in sidebar) (#428)\\\\r\\\\n* [BREAKING] Getting metadata from a cell section fails (#429)\\\\r\\\\n* [MINOR] Settings in sidebar do not display when selecting a loom, only after selecting a gene or changing loom (#430) \\\\r\\\\n* [BREAKING] Selecting a cluster in the results, always selects the first result by name (#431)\\\\r\\\\n* [BREAKING] Adding annotations fails with python error (#432)\\\\r\\\\n* [MINOR] Annotation labels remain after clearing feature (#433)\\\\r\\\\n* [VISUAL/STYLING] Regulon tab plots done fill screen (#434)\\\\r\\\\n* [MAJOR] Selecting a regulon causes an infinite loop in the backend (#435)\\\\r\\\\n* [BREAKING] Regulon histogram never displays data (#436)\\\\r\\\\n* [MAJOR] Unable to search for clusters by annotation name (#437)\\\\r\\\\n* [MINOR] Permalink button does nothing (#438)\\\\r\\\\n* [MAJOR] Compare tab does not work with more that one annotation per viewer (#439)\",\\n  \"changedFiles\": 109,\\n  \"closed\": true,\\n  \"closedAt\": \"2021-05-28T08:23:55Z\",\\n  \"comments\": [\\n    {\\n      \"id\": \"MDEyOklzc3VlQ29tbWVudDcxNTA5MDAyNg==\",\\n      \"author\": {\\n        \"login\": \"MaybeJustJames\"\\n      },\\n      \"authorAssociation\": \"COLLABORATOR\",\\n      \"body\": \"Add PR summary points to documentation (conribution manual??)\",\\n      \"createdAt\": \"2020-10-23T07:42:19Z\",\\n      \"includesCreatedEdit\": false,\\n      \"isMinimized\": false,\\n      \"minimizedReason\": \"\",\\n      \"reactionGroups\": [],\\n      \"url\": \"https://github.com/aertslab/SCope/pull/381#issuecomment-715090026\",\\n      \"viewerDidAuthor\": false\\n    },\\n    {\\n      \"id\": \"MDEyOklzc3VlQ29tbWVudDcxNjU2ODQxMw==\",\\n      \"author\": {\\n        \"login\": \"dweemx\"\\n      },\\n      \"authorAssociation\": \"CONTRIBUTOR\",\\n      \"body\": \"/!\\\\\\\\ I noticed that `<- Pevious` and  `Next ->` buttons of the cluster controls (right side bar) don\\'t work anymore. They work in the `master` branch\",\\n      \"createdAt\": \"2020-10-26T14:05:36Z\",\\n      \"includesCreatedEdit\": false,\\n      \"isMinimized\": false,\\n      \"minimizedReason\": \"\",\\n      \"reactionGroups\": [],\\n      \"url\": \"https://github.com/aertslab/SCope/pull/381#issuecomment-716568413\",\\n      \"viewerDidAuthor\": false\\n    },\\n    {\\n      \"id\": \"MDEyOklzc3VlQ29tbWVudDc0MDUyMzMxNQ==\",\\n      \"author\": {\\n        \"login\": \"MaybeJustJames\"\\n      },\\n      \"authorAssociation\": \"COLLABORATOR\",\\n      \"body\": \"> /!\\\\\\\\ I noticed that `<- Pevious` and `Next ->` buttons of the cluster controls (right side bar) don\\'t work anymore. They work in the `master` branch\\\\r\\\\n\\\\r\\\\nReproductions steps:\\\\r\\\\n1. Query \\\\\"Unannotated Cluster 0\\\\\"\\\\r\\\\n1. Click on \\\\\"Next ->\\\\\" button in the right side bar should take you to the next cluster i.e.: \\\\\"Unannotated Cluster 1\\\\\"\\\\r\\\\n1. Click on \\\\\"<- Previous\\\\\" button in the right side bar should take you to the previous cluster i.e.: \\\\\"Unannotated Cluster 0\\\\\"\",\\n      \"createdAt\": \"2020-12-08T10:09:53Z\",\\n      \"includesCreatedEdit\": false,\\n      \"isMinimized\": false,\\n      \"minimizedReason\": \"\",\\n      \"reactionGroups\": [],\\n      \"url\": \"https://github.com/aertslab/SCope/pull/381#issuecomment-740523315\",\\n      \"viewerDidAuthor\": false\\n    },\\n    {\\n      \"id\": \"MDEyOklzc3VlQ29tbWVudDgxMjQ3MzY4OA==\",\\n      \"author\": {\\n        \"login\": \"MaybeJustJames\"\\n      },\\n      \"authorAssociation\": \"COLLABORATOR\",\\n      \"body\": \"@dweemx wrt an `.nvmrc` Node 10 is EOL end of this month. I\\'m fine leaving this out. What about you?\",\\n      \"createdAt\": \"2021-04-02T10:31:14Z\",\\n      \"includesCreatedEdit\": false,\\n      \"isMinimized\": false,\\n      \"minimizedReason\": \"\",\\n      \"reactionGroups\": [],\\n      \"url\": \"https://github.com/aertslab/SCope/pull/381#issuecomment-812473688\",\\n      \"viewerDidAuthor\": false\\n    },\\n    {\\n      \"id\": \"MDEyOklzc3VlQ29tbWVudDgxMjQ3NDcyNw==\",\\n      \"author\": {\\n        \"login\": \"MaybeJustJames\"\\n      },\\n      \"authorAssociation\": \"COLLABORATOR\",\\n      \"body\": \"@dweemx Can you elaborate on what \\\\\"switch from loom\\\\\" means?\",\\n      \"createdAt\": \"2021-04-02T10:34:27Z\",\\n      \"includesCreatedEdit\": false,\\n      \"isMinimized\": false,\\n      \"minimizedReason\": \"\",\\n      \"reactionGroups\": [],\\n      \"url\": \"https://github.com/aertslab/SCope/pull/381#issuecomment-812474727\",\\n      \"viewerDidAuthor\": false\\n    },\\n    {\\n      \"id\": \"MDEyOklzc3VlQ29tbWVudDgxMjQ4NTAzOQ==\",\\n      \"author\": {\\n        \"login\": \"dweemx\"\\n      },\\n      \"authorAssociation\": \"CONTRIBUTOR\",\\n      \"body\": \"> @dweemx wrt an `.nvmrc` Node 10 is EOL end of this month. I\\'m fine leaving this out. What about you?\\\\r\\\\n\\\\r\\\\nYou mean not having a `.nvmrc` file or just upgrade to use higher Node version ?\",\\n      \"createdAt\": \"2021-04-02T11:09:36Z\",\\n      \"includesCreatedEdit\": false,\\n      \"isMinimized\": false,\\n      \"minimizedReason\": \"\",\\n      \"reactionGroups\": [],\\n      \"url\": \"https://github.com/aertslab/SCope/pull/381#issuecomment-812485039\",\\n      \"viewerDidAuthor\": false\\n    },\\n    {\\n      \"id\": \"MDEyOklzc3VlQ29tbWVudDgxMjUxMTAyMA==\",\\n      \"author\": {\\n        \"login\": \"MaybeJustJames\"\\n      },\\n      \"authorAssociation\": \"COLLABORATOR\",\\n      \"body\": \"> > @dweemx wrt an `.nvmrc` Node 10 is EOL end of this month. I\\'m fine leaving this out. What about you?\\\\r\\\\n> \\\\r\\\\n> You mean not having a `.nvmrc` file or just upgrade to use higher Node version ?\\\\r\\\\n\\\\r\\\\nNo I mean it\\'s a users fault if they use an EOL node version. So why have an `.nvmrc`?\",\\n      \"createdAt\": \"2021-04-02T12:34:39Z\",\\n      \"includesCreatedEdit\": true,\\n      \"isMinimized\": false,\\n      \"minimizedReason\": \"\",\\n      \"reactionGroups\": [],\\n      \"url\": \"https://github.com/aertslab/SCope/pull/381#issuecomment-812511020\",\\n      \"viewerDidAuthor\": false\\n    },\\n    {\\n      \"id\": \"MDEyOklzc3VlQ29tbWVudDgxNTA1MzQzOA==\",\\n      \"author\": {\\n        \"login\": \"dweemx\"\\n      },\\n      \"authorAssociation\": \"CONTRIBUTOR\",\\n      \"body\": \"> > > @dweemx wrt an `.nvmrc` Node 10 is EOL end of this month. I\\'m fine leaving this out. What about you?\\\\r\\\\n> > \\\\r\\\\n> > \\\\r\\\\n> > You mean not having a `.nvmrc` file or just upgrade to use higher Node version ?\\\\r\\\\n> \\\\r\\\\n> No I mean it\\'s a users fault if they use an EOL node version. So why have an `.nvmrc`?\\\\r\\\\n\\\\r\\\\nBecause the user will be sure that the software will work with that version of Node. \",\\n      \"createdAt\": \"2021-04-07T16:30:26Z\",\\n      \"includesCreatedEdit\": true,\\n      \"isMinimized\": false,\\n      \"minimizedReason\": \"\",\\n      \"reactionGroups\": [],\\n      \"url\": \"https://github.com/aertslab/SCope/pull/381#issuecomment-815053438\",\\n      \"viewerDidAuthor\": false\\n    }\\n  ],\\n  \"commits\": [\\n    {\\n      \"authoredDate\": \"2020-08-13T14:49:05Z\",\\n      \"authors\": [\\n        {\\n          \"email\": \"james.collier@vib.be\",\\n          \"id\": \"MDQ6VXNlcjI2NDQ0MzEy\",\\n          \"login\": \"MaybeJustJames\",\\n          \"name\": \"James Collier\"\\n        }\\n      ],\\n      \"committedDate\": \"2021-05-28T08:11:20Z\",\\n      \"messageBody\": \"* Move to typescript\\\\n* Remove unnecessary and unused code\\\\n* Upgrade semantic-ui-react to a more recent version\\\\n* Re-organise some dependant code\\\\n* Update packages and install immer\",\\n      \"messageHeadline\": \"Simplify and organise the FeatureSearchBox component\",\\n      \"oid\": \"1b9216d8b9d228c727c3e5736c5daaab2fe0c78f\"\\n    },\\n    {\\n      \"authoredDate\": \"2020-08-14T12:10:02Z\",\\n      \"authors\": [\\n        {\\n          \"email\": \"james.collier@vib.be\",\\n          \"id\": \"MDQ6VXNlcjI2NDQ0MzEy\",\\n          \"login\": \"MaybeJustJames\",\\n          \"name\": \"James Collier\"\\n        }\\n      ],\\n      \"committedDate\": \"2021-05-28T08:11:29Z\",\\n      \"messageBody\": \"\",\\n      \"messageHeadline\": \"Us ESLint to replace use of `let` with `const` where possible\",\\n      \"oid\": \"53d6870ec4fd54c89c83dd478fe11825f22a6c37\"\\n    },\\n    {\\n      \"authoredDate\": \"2020-08-25T07:00:03Z\",\\n      \"authors\": [\\n        {\\n          \"email\": \"james.collier@vib.be\",\\n          \"id\": \"MDQ6VXNlcjI2NDQ0MzEy\",\\n          \"login\": \"MaybeJustJames\",\\n          \"name\": \"James Collier\"\\n        }\\n      ],\\n      \"committedDate\": \"2021-05-28T08:11:29Z\",\\n      \"messageBody\": \"This can be used to only search for genes or regulons, etc. that match\\\\nthe search query rather than everything that matches the search query.\\\\n\\\\n* Add \\\\\"MENU\\\\\" text to the header menu button\\\\n* Default session mode should be \\\\\"read\\\\\"\\\\n* Remove dropdown on the FeatureSearchBox. Filter is imposed by the\\\\n  page and is not user selectable.\\\\n* Adjust getFeatures gRPC/protocol buffers interface\\\\n* Modify the gRPC definition of getFeatures to be more convenient\\\\n* Fix a react warning\\\\n     The warning triggered when trying to update the old state management\\\\n     system using onResultSelect() while rendering. This is a no-no\\\\n     so now it just calls the old state management update API.\\\\n     This also moves remaining logic out of the component\\\\n* Do some error handling\\\\n* Some documentation\",\\n      \"messageHeadline\": \"Implement filtering in the FeatureSearchBox\",\\n      \"oid\": \"8c6c87ba4bbf3d46d52dcb7bbada7e6bcf19e3a0\"\\n    },\\n    {\\n      \"authoredDate\": \"2020-09-14T09:03:34Z\",\\n      \"authors\": [\\n        {\\n          \"email\": \"james.collier@vib.be\",\\n          \"id\": \"MDQ6VXNlcjI2NDQ0MzEy\",\\n          \"login\": \"MaybeJustJames\",\\n          \"name\": \"James Collier\"\\n        }\\n      ],\\n      \"committedDate\": \"2021-05-28T08:11:30Z\",\\n      \"messageBody\": \"* Add basic Saga side-effect generation testing\\\\n* Add Reducer type annotation (thanks @dweemx)\\\\n* Use a clearer variable name for search results\\\\n* Prefer `type` over `interface`\\\\n* Use constants in App\\\\n* The name \\\\\"handleUpdateScatterPlot\\\\\" is a more accurate than \\\\\"handleUpdateTSNE\\\\\"\\\\n* Do not open the bundle analyzer by default\\\\n* Bump semantic-ui-react version\\\\n* use Sagas debounce() rather than throttle()\\\\n* Remove unused import of lodash\\\\n* Fix bug: Cannot model category as strict type, revert to string\\\\n* Fix bug: Correct ordering in displayed search results\",\\n      \"messageHeadline\": \"Add some testing for the Search related components\",\\n      \"oid\": \"74f7dad14a74ca6b866d857406bf23584ebbbd2d\"\\n    },\\n    {\\n      \"authoredDate\": \"2020-11-02T16:13:44Z\",\\n      \"authors\": [\\n        {\\n          \"email\": \"james.collier@vib.be\",\\n          \"id\": \"MDQ6VXNlcjI2NDQ0MzEy\",\\n          \"login\": \"MaybeJustJames\",\\n          \"name\": \"James Collier\"\\n        }\\n      ],\\n      \"committedDate\": \"2021-05-28T08:11:50Z\",\\n      \"messageBody\": \"* Add some tests\\\\n* Wire up redux hooks and fix tests\\\\n* Fix \\\\\"cancel\\\\\" button in search box\\\\n* Track cookie consent in redux\",\\n      \"messageHeadline\": \"Turn on strict type checking and start fixing errors\",\\n      \"oid\": \"f4df49b536783683828696f4e4500165f87ab307\"\\n    },\\n    {\\n      \"authoredDate\": \"2020-11-04T10:03:53Z\",\\n      \"authors\": [\\n        {\\n          \"email\": \"james.collier@vib.be\",\\n          \"id\": \"MDQ6VXNlcjI2NDQ0MzEy\",\\n          \"login\": \"MaybeJustJames\",\\n          \"name\": \"James Collier\"\\n        }\\n      ],\\n      \"committedDate\": \"2021-05-28T08:11:50Z\",\\n      \"messageBody\": \"\",\\n      \"messageHeadline\": \"Wrap filenames in the AppSidebar\",\\n      \"oid\": \"b4842a01f6c29fc143dc75a89fc01c07beb04d4b\"\\n    },\\n    {\\n      \"authoredDate\": \"2020-11-04T10:33:38Z\",\\n      \"authors\": [\\n        {\\n          \"email\": \"james.collier@vib.be\",\\n          \"id\": \"MDQ6VXNlcjI2NDQ0MzEy\",\\n          \"login\": \"MaybeJustJames\",\\n          \"name\": \"James Collier\"\\n        }\\n      ],\\n      \"committedDate\": \"2021-05-28T08:11:51Z\",\\n      \"messageBody\": \"So that users immediately see where to load their data.\\\\nAlso centres content in the Welcome screen so still\\\\nvisible with the sidebar open.\",\\n      \"messageHeadline\": \"Display the sidebar by default\",\\n      \"oid\": \"9e5515266e081a95125f6a6129e69820921c59c4\"\\n    },\\n    {\\n      \"authoredDate\": \"2020-11-12T15:23:52Z\",\\n      \"authors\": [\\n        {\\n          \"email\": \"james.collier@vib.be\",\\n          \"id\": \"MDQ6VXNlcjI2NDQ0MzEy\",\\n          \"login\": \"MaybeJustJames\",\\n          \"name\": \"James Collier\"\\n        }\\n      ],\\n      \"committedDate\": \"2021-05-28T08:11:52Z\",\\n      \"messageBody\": \"* Remove all uses of abstract (in)equality\\\\n     Abstract (in)equality is not type-safe and leads to\\\\n     weird type coercion.\\\\n* eslint eqeqeq check\\\\n* Enforce all blocks should have brace delimiters\\\\n* Move definition of FEATURE_COLOURS constant\\\\n* Remove GeneSet page\\\\n* Use ts-loader instead of babel for typescript (ts-loader does type checking)\\\\n* Use pako for zlib compression\\\\n* Replace some uses of Lodash with Ramda\\\\n* Upgrade from Webpack 4 to Webpack 5\\\\n* Add another zipLists test\\\\n* Looping requests when selecting search result\\\\n  \\\\\"Unnannotated clustrer 0\\\\\"\\\\n* UI disappears when ViewerSidebar is too tall\\\\n* Fix non-display of data in gene tab\\\\n* Add a contributing file\\\\n* Add a new contributing style rule\",\\n      \"messageHeadline\": \"Remove a lot of unused/unnecessary scaffolding\",\\n      \"oid\": \"73756b02ae0e0874935846d9d2a8d0944e1702bb\"\\n    },\\n    {\\n      \"authoredDate\": \"2021-03-31T09:11:33Z\",\\n      \"authors\": [\\n        {\\n          \"email\": \"james.collier@vib.be\",\\n          \"id\": \"MDQ6VXNlcjI2NDQ0MzEy\",\\n          \"login\": \"MaybeJustJames\",\\n          \"name\": \"James Collier\"\\n        }\\n      ],\\n      \"committedDate\": \"2021-05-28T08:12:06Z\",\\n      \"messageBody\": \"Concern for discoverability with the sidebar defaulted to hidden means\\\\nthat it should default to visible. The animation can make styling the\\\\nrest of the app difficult. So this commit reduces/removes these\\\\ncomplexities by making the sidebar permanently visible.\\\\n\\\\n* Finally remove the bin/ directory\",\\n      \"messageHeadline\": \"Make the sidebar permanently visible.\",\\n      \"oid\": \"7f3152b27fe4191f3ef345c11e4ce94f8dbf1d1f\"\\n    },\\n    {\\n      \"authoredDate\": \"2021-03-31T10:08:28Z\",\\n      \"authors\": [\\n        {\\n          \"email\": \"james.collier@vib.be\",\\n          \"id\": \"MDQ6VXNlcjI2NDQ0MzEy\",\\n          \"login\": \"MaybeJustJames\",\\n          \"name\": \"James Collier\"\\n        }\\n      ],\\n      \"committedDate\": \"2021-05-28T08:12:06Z\",\\n      \"messageBody\": \"\",\\n      \"messageHeadline\": \"npm audit found a high severity vuln\",\\n      \"oid\": \"ad30c518d93116c6ee70e2b2bb6d56f9e886eeb4\"\\n    },\\n    {\\n      \"authoredDate\": \"2021-03-31T15:44:54Z\",\\n      \"authors\": [\\n        {\\n          \"email\": \"james.collier@vib.be\",\\n          \"id\": \"MDQ6VXNlcjI2NDQ0MzEy\",\\n          \"login\": \"MaybeJustJames\",\\n          \"name\": \"James Collier\"\\n        }\\n      ],\\n      \"committedDate\": \"2021-05-28T08:12:06Z\",\\n      \"messageBody\": \"\",\\n      \"messageHeadline\": \"Properly seperate webpack dev and prod configurations\",\\n      \"oid\": \"0f83545daea668a00f9fdfef6349cb0138dc9298\"\\n    },\\n    {\\n      \"authoredDate\": \"2021-04-02T10:23:59Z\",\\n      \"authors\": [\\n        {\\n          \"email\": \"james.collier@vib.be\",\\n          \"id\": \"MDQ6VXNlcjI2NDQ0MzEy\",\\n          \"login\": \"MaybeJustJames\",\\n          \"name\": \"James Collier\"\\n        }\\n      ],\\n      \"committedDate\": \"2021-05-28T08:12:07Z\",\\n      \"messageBody\": \"GServer.py::getNextCluster had not been updated to match the\\\\nchange in results returned by get_search_results(). This issue is\\\\nfixed along with having ViewerSidebar dispatch the Search \\'SELECT\\'\\\\naction. This action updates the search box ui.\",\\n      \"messageHeadline\": \"Fix bug moving between clusters using \\'next\\' and \\'previous\\' buttons\",\\n      \"oid\": \"55bc0628f1c9a7417ccb5f7afa40fadb71a7a1a5\"\\n    },\\n    {\\n      \"authoredDate\": \"2021-04-12T11:26:09Z\",\\n      \"authors\": [\\n        {\\n          \"email\": \"james.collier@vib.be\",\\n          \"id\": \"MDQ6VXNlcjI2NDQ0MzEy\",\\n          \"login\": \"MaybeJustJames\",\\n          \"name\": \"James Collier\"\\n        }\\n      ],\\n      \"committedDate\": \"2021-05-28T08:12:07Z\",\\n      \"messageBody\": \"\",\\n      \"messageHeadline\": \"Make sure display is updated when switching loom or coordinates\",\\n      \"oid\": \"41d48a86c417de33a5d1ce46c5520bc539e44476\"\\n    },\\n    {\\n      \"authoredDate\": \"2021-04-12T11:58:06Z\",\\n      \"authors\": [\\n        {\\n          \"email\": \"james.collier@vib.be\",\\n          \"id\": \"MDQ6VXNlcjI2NDQ0MzEy\",\\n          \"login\": \"MaybeJustJames\",\\n          \"name\": \"James Collier\"\\n        }\\n      ],\\n      \"committedDate\": \"2021-05-28T08:12:07Z\",\\n      \"messageBody\": \"\",\\n      \"messageHeadline\": \"Don\\'t show Cluster Marker table when active feature is: All Clusters\",\\n      \"oid\": \"57bf4eb9bfece2add9d06b124470d77a3fd6e60f\"\\n    },\\n    {\\n      \"authoredDate\": \"2021-04-12T12:54:40Z\",\\n      \"authors\": [\\n        {\\n          \"email\": \"james.collier@vib.be\",\\n          \"id\": \"MDQ6VXNlcjI2NDQ0MzEy\",\\n          \"login\": \"MaybeJustJames\",\\n          \"name\": \"James Collier\"\\n        }\\n      ],\\n      \"committedDate\": \"2021-05-28T08:12:08Z\",\\n      \"messageBody\": \"\",\\n      \"messageHeadline\": \"Make sure the annotations page can be displayed\",\\n      \"oid\": \"dd2a97794b5ee6f68038ee04e17139387f80de55\"\\n    },\\n    {\\n      \"authoredDate\": \"2021-05-28T08:19:36Z\",\\n      \"authors\": [\\n        {\\n          \"email\": \"james.collier@vib.be\",\\n          \"id\": \"MDQ6VXNlcjI2NDQ0MzEy\",\\n          \"login\": \"MaybeJustJames\",\\n          \"name\": \"James Collier\"\\n        }\\n      ],\\n      \"committedDate\": \"2021-05-28T08:19:36Z\",\\n      \"messageBody\": \"\",\\n      \"messageHeadline\": \"Update `dns-packet` dependency to fix an audit vuln\",\\n      \"oid\": \"3f7f5fddc4ee634c3aec57f5ce1410a733990517\"\\n    }\\n  ],\\n  \"createdAt\": \"2020-09-14T10:29:04Z\",\\n  \"deletions\": 13178,\\n  \"files\": [\\n    {\\n      \"path\": \".github/workflows/continuous-integration-client.yml\",\\n      \"additions\": 1,\\n      \"deletions\": 1\\n    },\\n    {\\n      \"path\": \"CONTRIBUTING.md\",\\n      \"additions\": 21,\\n      \"deletions\": 0\\n    },\\n    {\\n      \"path\": \"README.md\",\\n      \"additions\": 5,\\n      \"deletions\": 13\\n    },\\n    {\\n      \"path\": \"babel.config.js\",\\n      \"additions\": 15,\\n      \"deletions\": 0\\n    },\\n    {\\n      \"path\": \"bin/configure.js\",\\n      \"additions\": 0,\\n      \"deletions\": 6\\n    },\\n    {\\n      \"path\": \"bin/install.js\",\\n      \"additions\": 0,\\n      \"deletions\": 18\\n    },\\n    {\\n      \"path\": \"bin/launch.js\",\\n      \"additions\": 0,\\n      \"deletions\": 320\\n    },\\n    {\\n      \"path\": \"bin/utils.js\",\\n      \"additions\": 0,\\n      \"deletions\": 80\\n    },\\n    {\\n      \"path\": \"config/paths.js\",\\n      \"additions\": 9,\\n      \"deletions\": 0\\n    },\\n    {\\n      \"path\": \"config/webpack.common.js\",\\n      \"additions\": 120,\\n      \"deletions\": 0\\n    },\\n    {\\n      \"path\": \"config/webpack.dev.js\",\\n      \"additions\": 31,\\n      \"deletions\": 0\\n    },\\n    {\\n      \"path\": \"config/webpack.prod.js\",\\n      \"additions\": 24,\\n      \"deletions\": 0\\n    },\\n    {\\n      \"path\": \"index.js\",\\n      \"additions\": 0,\\n      \"deletions\": 540\\n    },\\n    {\\n      \"path\": \"opt/scopeserver/bindserver/package-lock.json\",\\n      \"additions\": 831,\\n      \"deletions\": 9\\n    },\\n    {\\n      \"path\": \"opt/scopeserver/dataserver/modules/gserver/GServer.py\",\\n      \"additions\": 30,\\n      \"deletions\": 19\\n    },\\n    {\\n      \"path\": \"opt/scopeserver/dataserver/modules/gserver/s_pb2.py\",\\n      \"additions\": 305,\\n      \"deletions\": 178\\n    },\\n    {\\n      \"path\": \"opt/scopeserver/dataserver/modules/gserver/s_pb2.pyi\",\\n      \"additions\": 46,\\n      \"deletions\": 13\\n    },\\n    {\\n      \"path\": \"opt/scopeserver/dataserver/modules/pserver/PServer.py\",\\n      \"additions\": 1,\\n      \"deletions\": 3\\n    },\\n    {\\n      \"path\": \"opt/scopeserver/dataserver/utils/data.py\",\\n      \"additions\": 1,\\n      \"deletions\": 1\\n    },\\n    {\\n      \"path\": \"opt/scopeserver/dataserver/utils/labels.py\",\\n      \"additions\": 2,\\n      \"deletions\": 2\\n    },\\n    {\\n      \"path\": \"opt/scopeserver/dataserver/utils/loom.py\",\\n      \"additions\": 2,\\n      \"deletions\": 8\\n    },\\n    {\\n      \"path\": \"opt/scopeserver/dataserver/utils/search.py\",\\n      \"additions\": 47,\\n      \"deletions\": 26\\n    },\\n    {\\n      \"path\": \"opt/scopeserver/result.py\",\\n      \"additions\": 0,\\n      \"deletions\": 2\\n    },\\n    {\\n      \"path\": \"package-lock.json\",\\n      \"additions\": 31303,\\n      \"deletions\": 8281\\n    },\\n    {\\n      \"path\": \"package.json\",\\n      \"additions\": 113,\\n      \"deletions\": 88\\n    },\\n    {\\n      \"path\": \"src/api/error.ts\",\\n      \"additions\": 7,\\n      \"deletions\": 0\\n    },\\n    {\\n      \"path\": \"src/api/features.ts\",\\n      \"additions\": 48,\\n      \"deletions\": 0\\n    },\\n    {\\n      \"path\": \"src/api/fetch.test.ts\",\\n      \"additions\": 76,\\n      \"deletions\": 0\\n    },\\n    {\\n      \"path\": \"src/api/fetch.ts\",\\n      \"additions\": 10,\\n      \"deletions\": 6\\n    },\\n    {\\n      \"path\": \"src/api/index.ts\",\\n      \"additions\": 2,\\n      \"deletions\": 0\\n    },\\n    {\\n      \"path\": \"src/components/App.jsx\",\\n      \"additions\": 153,\\n      \"deletions\": 354\\n    },\\n    {\\n      \"path\": \"src/components/AppContent.jsx\",\\n      \"additions\": 0,\\n      \"deletions\": 25\\n    },\\n    {\\n      \"path\": \"src/components/AppHeader.jsx\",\\n      \"additions\": 35,\\n      \"deletions\": 71\\n    },\\n    {\\n      \"path\": \"src/components/AppSidebar.jsx\",\\n      \"additions\": 44,\\n      \"deletions\": 93\\n    },\\n    {\\n      \"path\": \"src/components/GProfiler/GProfilerModal.tsx\",\\n      \"additions\": 27,\\n      \"deletions\": 11\\n    },\\n    {\\n      \"path\": \"src/components/GProfiler/TopGeneListsSelectionTable.tsx\",\\n      \"additions\": 4,\\n      \"deletions\": 6\\n    },\\n    {\\n      \"path\": \"src/components/GProfiler/link.test.ts\",\\n      \"additions\": 22,\\n      \"deletions\": 0\\n    },\\n    {\\n      \"path\": \"src/components/GProfiler/link.ts\",\\n      \"additions\": 24,\\n      \"deletions\": 13\\n    },\\n    {\\n      \"path\": \"src/components/GProfiler/model.ts\",\\n      \"additions\": 27,\\n      \"deletions\": 31\\n    },\\n    {\\n      \"path\": \"src/components/GProfiler/reducer.ts\",\\n      \"additions\": 3,\\n      \"deletions\": 1\\n    },\\n    {\\n      \"path\": \"src/components/GProfiler/sagas.ts\",\\n      \"additions\": 6,\\n      \"deletions\": 12\\n    },\\n    {\\n      \"path\": \"src/components/Main.tsx\",\\n      \"additions\": 104,\\n      \"deletions\": 0\\n    },\\n    {\\n      \"path\": \"src/components/Search/FeatureSearch.tsx\",\\n      \"additions\": 46,\\n      \"deletions\": 0\\n    },\\n    {\\n      \"path\": \"src/components/Search/FeatureSearchBox.css\",\\n      \"additions\": 12,\\n      \"deletions\": 0\\n    },\\n    {\\n      \"path\": \"src/components/Search/FeatureSearchBox.test.tsx\",\\n      \"additions\": 66,\\n      \"deletions\": 0\\n    },\\n    {\\n      \"path\": \"src/components/Search/FeatureSearchBox.tsx\",\\n      \"additions\": 192,\\n      \"deletions\": 0\\n    },\\n    {\\n      \"path\": \"src/components/Search/Search.test.ts\",\\n      \"additions\": 224,\\n      \"deletions\": 0\\n    },\\n    {\\n      \"path\": \"src/components/Search/actionTypes.ts\",\\n      \"additions\": 7,\\n      \"deletions\": 0\\n    },\\n    {\\n      \"path\": \"src/components/Search/actions.ts\",\\n      \"additions\": 91,\\n      \"deletions\": 0\\n    },\\n    {\\n      \"path\": \"src/components/Search/constants.ts\",\\n      \"additions\": 5,\\n      \"deletions\": 0\\n    },\\n    {\\n      \"path\": \"src/components/Search/effects.test.ts\",\\n      \"additions\": 98,\\n      \"deletions\": 0\\n    },\\n    {\\n      \"path\": \"src/components/Search/effects.ts\",\\n      \"additions\": 25,\\n      \"deletions\": 0\\n    },\\n    {\\n      \"path\": \"src/components/Search/index.ts\",\\n      \"additions\": 15,\\n      \"deletions\": 0\\n    },\\n    {\\n      \"path\": \"src/components/Search/model.ts\",\\n      \"additions\": 102,\\n      \"deletions\": 0\\n    },\\n    {\\n      \"path\": \"src/components/Search/reducer.ts\",\\n      \"additions\": 69,\\n      \"deletions\": 0\\n    },\\n    {\\n      \"path\": \"src/components/Search/selectors.ts\",\\n      \"additions\": 46,\\n      \"deletions\": 0\\n    },\\n    {\\n      \"path\": \"src/components/common/API.jsx\",\\n      \"additions\": 186,\\n      \"deletions\": 168\\n    },\\n    {\\n      \"path\": \"src/components/common/Annotation.jsx\",\\n      \"additions\": 10,\\n      \"deletions\": 6\\n    },\\n    {\\n      \"path\": \"src/components/common/AnnotationDropContainer.jsx\",\\n      \"additions\": 3,\\n      \"deletions\": 3\\n    },\\n    {\\n      \"path\": \"src/components/common/ClusterOverlapsTable.tsx\",\\n      \"additions\": 2,\\n      \"deletions\": 2\\n    },\\n    {\\n      \"path\": \"src/components/common/ClusteringAddPopup.tsx\",\\n      \"additions\": 4,\\n      \"deletions\": 4\\n    },\\n    {\\n      \"path\": \"src/components/common/CollabAnnoGeneSearch.jsx\",\\n      \"additions\": 23,\\n      \"deletions\": 17\\n    },\\n    {\\n      \"path\": \"src/components/common/CollaborativeAnnotation.jsx\",\\n      \"additions\": 34,\\n      \"deletions\": 34\\n    },\\n    {\\n      \"path\": \"src/components/common/FeatureSearchBox.jsx\",\\n      \"additions\": 0,\\n      \"deletions\": 303\\n    },\\n    {\\n      \"path\": \"src/components/common/FeatureSearchInput.jsx\",\\n      \"additions\": 0,\\n      \"deletions\": 69\\n    },\\n    {\\n      \"path\": \"src/components/common/Histogram.jsx\",\\n      \"additions\": 26,\\n      \"deletions\": 30\\n    },\\n    {\\n      \"path\": \"src/components/common/Metadata.jsx\",\\n      \"additions\": 29,\\n      \"deletions\": 45\\n    },\\n    {\\n      \"path\": \"src/components/common/OLSAutocomplete.jsx\",\\n      \"additions\": 6,\\n      \"deletions\": 2\\n    },\\n    {\\n      \"path\": \"src/components/common/OptionsPopup.tsx\",\\n      \"additions\": 20,\\n      \"deletions\": 19\\n    },\\n    {\\n      \"path\": \"src/components/common/UploadModal.jsx\",\\n      \"additions\": 49,\\n      \"deletions\": 60\\n    },\\n    {\\n      \"path\": \"src/components/common/Uploader.jsx\",\\n      \"additions\": 7,\\n      \"deletions\": 4\\n    },\\n    {\\n      \"path\": \"src/components/common/Viewer.jsx\",\\n      \"additions\": 251,\\n      \"deletions\": 368\\n    },\\n    {\\n      \"path\": \"src/components/common/ViewerDropContainer.jsx\",\\n      \"additions\": 11,\\n      \"deletions\": 5\\n    },\\n    {\\n      \"path\": \"src/components/common/ViewerSidebar.css\",\\n      \"additions\": 9,\\n      \"deletions\": 0\\n    },\\n    {\\n      \"path\": \"src/components/common/ViewerSidebar.jsx\",\\n      \"additions\": 230,\\n      \"deletions\": 176\\n    },\\n    {\\n      \"path\": \"src/components/common/ViewerToolbar.jsx\",\\n      \"additions\": 38,\\n      \"deletions\": 36\\n    },\\n    {\\n      \"path\": \"src/components/constants.ts\",\\n      \"additions\": 10,\\n      \"deletions\": 0\\n    },\\n    {\\n      \"path\": \"src/components/pages/Annotations.jsx\",\\n      \"additions\": 6,\\n      \"deletions\": 6\\n    },\\n    {\\n      \"path\": \"src/components/pages/Compare.jsx\",\\n      \"additions\": 192,\\n      \"deletions\": 221\\n    },\\n    {\\n      \"path\": \"src/components/pages/Expression.jsx\",\\n      \"additions\": 0,\\n      \"deletions\": 102\\n    },\\n    {\\n      \"path\": \"src/components/pages/FullPageNotify.tsx\",\\n      \"additions\": 74,\\n      \"deletions\": 0\\n    },\\n    {\\n      \"path\": \"src/components/pages/Gene.jsx\",\\n      \"additions\": 23,\\n      \"deletions\": 60\\n    },\\n    {\\n      \"path\": \"src/components/pages/Geneset.jsx\",\\n      \"additions\": 0,\\n      \"deletions\": 420\\n    },\\n    {\\n      \"path\": \"src/components/pages/Regulon.jsx\",\\n      \"additions\": 76,\\n      \"deletions\": 85\\n    },\\n    {\\n      \"path\": \"src/components/pages/Welcome.jsx\",\\n      \"additions\": 352,\\n      \"deletions\": 336\\n    },\\n    {\\n      \"path\": \"src/components/pages/index.ts\",\\n      \"additions\": 21,\\n      \"deletions\": 0\\n    },\\n    {\\n      \"path\": \"src/components/pages/pages.css\",\\n      \"additions\": 19,\\n      \"deletions\": 0\\n    },\\n    {\\n      \"path\": \"src/components/utils.ts\",\\n      \"additions\": 6,\\n      \"deletions\": 0\\n    },\\n    {\\n      \"path\": \"src/css/header.css\",\\n      \"additions\": 1,\\n      \"deletions\": 5\\n    },\\n    {\\n      \"path\": \"src/css/sidebar.css\",\\n      \"additions\": 2,\\n      \"deletions\": 34\\n    },\\n    {\\n      \"path\": \"src/css/styles.css\",\\n      \"additions\": 17,\\n      \"deletions\": 0\\n    },\\n    {\\n      \"path\": \"src/css/viewer.css\",\\n      \"additions\": 15,\\n      \"deletions\": 144\\n    },\\n    {\\n      \"path\": \"src/js/http.js\",\\n      \"additions\": 1,\\n      \"deletions\": 2\\n    },\\n    {\\n      \"path\": \"src/main.tsx\",\\n      \"additions\": 5,\\n      \"deletions\": 4\\n    },\\n    {\\n      \"path\": \"src/proto/s.proto\",\\n      \"additions\": 10,\\n      \"deletions\": 3\\n    },\\n    {\\n      \"path\": \"src/redux/actionTypes.ts\",\\n      \"additions\": 6,\\n      \"deletions\": 0\\n    },\\n    {\\n      \"path\": \"src/redux/actions.ts\",\\n      \"additions\": 19,\\n      \"deletions\": 6\\n    },\\n    {\\n      \"path\": \"src/redux/reducers/index.ts\",\\n      \"additions\": 4,\\n      \"deletions\": 0\\n    },\\n    {\\n      \"path\": \"src/redux/reducers/main.ts\",\\n      \"additions\": 21,\\n      \"deletions\": 16\\n    },\\n    {\\n      \"path\": \"src/redux/sagas/index.ts\",\\n      \"additions\": 2,\\n      \"deletions\": 1\\n    }\\n  ],\\n  \"headRefName\": \"cleanup/373-frontend-stage3\",\\n  \"headRefOid\": \"3f7f5fddc4ee634c3aec57f5ce1410a733990517\",\\n  \"headRepository\": {\\n    \"id\": \"MDEwOlJlcG9zaXRvcnkxMjEzNjYxMDI=\",\\n    \"name\": \"SCope\"\\n  },\\n  \"headRepositoryOwner\": {\\n    \"id\": \"MDEyOk9yZ2FuaXphdGlvbjM5NDA4MTc=\",\\n    \"login\": \"aertslab\"\\n  },\\n  \"id\": \"MDExOlB1bGxSZXF1ZXN0NDg2NTA4NTM3\",\\n  \"isCrossRepository\": false,\\n  \"isDraft\": false,\\n  \"labels\": [],\\n  \"latestReviews\": [\\n    {\\n      \"id\": \"\",\\n      \"author\": {\\n        \"login\": \"KrisDavie\"\\n      },\\n      \"authorAssociation\": \"CONTRIBUTOR\",\\n      \"body\": \"\",\\n      \"submittedAt\": \"2021-05-28T07:37:17Z\",\\n      \"includesCreatedEdit\": false,\\n      \"reactionGroups\": [],\\n      \"state\": \"APPROVED\",\\n      \"commit\": {\\n        \"oid\": \"\"\\n      }\\n    },\\n    {\\n      \"id\": \"\",\\n      \"author\": {\\n        \"login\": \"dweemx\"\\n      },\\n      \"authorAssociation\": \"CONTRIBUTOR\",\\n      \"body\": \"\",\\n      \"submittedAt\": \"2021-05-28T07:24:50Z\",\\n      \"includesCreatedEdit\": false,\\n      \"reactionGroups\": [],\\n      \"state\": \"APPROVED\",\\n      \"commit\": {\\n        \"oid\": \"\"\\n      }\\n    }\\n  ],\\n  \"maintainerCanModify\": false,\\n  \"mergeCommit\": {\\n    \"oid\": \"8413fa7107ab109be119784b4bfd393da2788e91\"\\n  },\\n  \"mergeStateStatus\": \"UNKNOWN\",\\n  \"mergeable\": \"UNKNOWN\",\\n  \"mergedAt\": \"2021-05-28T08:23:55Z\",\\n  \"mergedBy\": {\\n    \"id\": \"MDQ6VXNlcjI2NDQ0MzEy\",\\n    \"is_bot\": false,\\n    \"login\": \"MaybeJustJames\",\\n    \"name\": \"James Collier\"\\n  },\\n  \"milestone\": null,\\n  \"number\": 381,\\n  \"potentialMergeCommit\": null,\\n  \"projectCards\": [],\\n  \"projectItems\": [],\\n  \"reactionGroups\": [],\\n  \"reviewDecision\": \"APPROVED\",\\n  \"reviewRequests\": [],\\n  \"reviews\": [\\n    {\\n      \"id\": \"MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkxMjQ3MzEz\",\\n      \"author\": {\\n        \"login\": \"dweemx\"\\n      },\\n      \"authorAssociation\": \"CONTRIBUTOR\",\\n      \"body\": \"Minor things that I picked up.\\\\r\\\\nOtherwise nice stuff in there: cleanup & testing :+1: \\\\r\\\\n\\\\r\\\\nExperienced a problem when trying to run SCope:\\\\r\\\\n```\\\\r\\\\n> SCope@1.8.2 dev ~/SCope/master\\\\r\\\\n> cross-env NODE_ENV=development NODE_TYPE=local webpack-dev-server --hot\\\\r\\\\n\\\\r\\\\n~/SCope/master/node_modules/terser-webpack-plugin/node_modules/p-limit/index.js:30\\\\r\\\\n\\\\t\\\\t} catch {}\\\\r\\\\n\\\\t\\\\t        ^\\\\r\\\\n\\\\r\\\\nSyntaxError: Unexpected token {\\\\r\\\\n    at new Script (vm.js:51:7)\\\\r\\\\n    at createScript (vm.js:136:10)\\\\r\\\\n    at Object.runInThisContext (vm.js:197:10)\\\\r\\\\n    at Module._compile (internal/modules/cjs/loader.js:618:28)\\\\r\\\\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:665:10)\\\\r\\\\n    at Module.load (internal/modules/cjs/loader.js:566:32)\\\\r\\\\n    at tryModuleLoad (internal/modules/cjs/loader.js:506:12)\\\\r\\\\n    at Function.Module._load (internal/modules/cjs/loader.js:498:3)\\\\r\\\\n    at Module.require (internal/modules/cjs/loader.js:598:17)\\\\r\\\\n    at require (internal/modules/cjs/helpers.js:11:18)\\\\r\\\\nnpm ERR! code ELIFECYCLE\\\\r\\\\nnpm ERR! errno 1\\\\r\\\\nnpm ERR! SCope@1.8.2 dev: `cross-env NODE_ENV=development NODE_TYPE=local webpack-dev-server --hot`\\\\r\\\\nnpm ERR! Exit status 1\\\\r\\\\nnpm ERR! \\\\r\\\\nnpm ERR! Failed at the SCope@1.8.2 dev script.\\\\r\\\\nnpm ERR! This is probably not a problem with npm. There is likely additional logging output above.\\\\r\\\\n\\\\r\\\\nnpm ERR! A complete log of this run can be found in:\\\\r\\\\nnpm ERR!    ~/.npm/_logs/2020-09-18T12_47_32_043Z-debug.lo\\\\r\\\\n```\\\\r\\\\neven after removing `node_modules` and `package-lock.json`\",\\n      \"submittedAt\": \"2020-09-18T12:50:10Z\",\\n      \"includesCreatedEdit\": false,\\n      \"reactionGroups\": [],\\n      \"state\": \"CHANGES_REQUESTED\",\\n      \"commit\": {\\n        \"oid\": \"c226293afce8c9e0ed2aa18da382a83f55c0a69a\"\\n      }\\n    },\\n    {\\n      \"id\": \"MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkxNTY2NTQ2\",\\n      \"author\": {\\n        \"login\": \"MaybeJustJames\"\\n      },\\n      \"authorAssociation\": \"COLLABORATOR\",\\n      \"body\": \"\",\\n      \"submittedAt\": \"2020-09-18T15:25:32Z\",\\n      \"includesCreatedEdit\": false,\\n      \"reactionGroups\": [],\\n      \"state\": \"COMMENTED\",\\n      \"commit\": {\\n        \"oid\": \"fc0f1dfed570f9dbf38d813c611567da2cdcf2e6\"\\n      }\\n    },\\n    {\\n      \"id\": \"MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkxNTY2Njg5\",\\n      \"author\": {\\n        \"login\": \"MaybeJustJames\"\\n      },\\n      \"authorAssociation\": \"COLLABORATOR\",\\n      \"body\": \"\",\\n      \"submittedAt\": \"2020-09-18T15:25:43Z\",\\n      \"includesCreatedEdit\": false,\\n      \"reactionGroups\": [],\\n      \"state\": \"COMMENTED\",\\n      \"commit\": {\\n        \"oid\": \"fc0f1dfed570f9dbf38d813c611567da2cdcf2e6\"\\n      }\\n    },\\n    {\\n      \"id\": \"MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkxNTgyNzQw\",\\n      \"author\": {\\n        \"login\": \"MaybeJustJames\"\\n      },\\n      \"authorAssociation\": \"COLLABORATOR\",\\n      \"body\": \"\",\\n      \"submittedAt\": \"2020-09-18T15:46:03Z\",\\n      \"includesCreatedEdit\": false,\\n      \"reactionGroups\": [],\\n      \"state\": \"COMMENTED\",\\n      \"commit\": {\\n        \"oid\": \"fc668cae15fca4e75b24ff4fcf12c23d2cf85224\"\\n      }\\n    },\\n    {\\n      \"id\": \"MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkxNTg1NDEz\",\\n      \"author\": {\\n        \"login\": \"dweemx\"\\n      },\\n      \"authorAssociation\": \"CONTRIBUTOR\",\\n      \"body\": \"\",\\n      \"submittedAt\": \"2020-09-18T15:49:29Z\",\\n      \"includesCreatedEdit\": false,\\n      \"reactionGroups\": [],\\n      \"state\": \"COMMENTED\",\\n      \"commit\": {\\n        \"oid\": \"fc668cae15fca4e75b24ff4fcf12c23d2cf85224\"\\n      }\\n    },\\n    {\\n      \"id\": \"MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk1NDczMDU0\",\\n      \"author\": {\\n        \"login\": \"KrisDavie\"\\n      },\\n      \"authorAssociation\": \"CONTRIBUTOR\",\\n      \"body\": \"Really nice changes, but still some work to get it functional and user friendly.\\\\r\\\\n\\\\r\\\\nI couldn\\'t exhaustively test the regulon/compare pages or the clusters etc. with the broken bits, will test them once they\\'re functional.\",\\n      \"submittedAt\": \"2020-09-24T13:34:26Z\",\\n      \"includesCreatedEdit\": false,\\n      \"reactionGroups\": [],\\n      \"state\": \"CHANGES_REQUESTED\",\\n      \"commit\": {\\n        \"oid\": \"fc668cae15fca4e75b24ff4fcf12c23d2cf85224\"\\n      }\\n    },\\n    {\\n      \"id\": \"MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk1NjU3Nzg4\",\\n      \"author\": {\\n        \"login\": \"MaybeJustJames\"\\n      },\\n      \"authorAssociation\": \"COLLABORATOR\",\\n      \"body\": \"\",\\n      \"submittedAt\": \"2020-09-24T14:51:39Z\",\\n      \"includesCreatedEdit\": false,\\n      \"reactionGroups\": [],\\n      \"state\": \"COMMENTED\",\\n      \"commit\": {\\n        \"oid\": \"fc668cae15fca4e75b24ff4fcf12c23d2cf85224\"\\n      }\\n    },\\n    {\\n      \"id\": \"MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk1NjYwNDI0\",\\n      \"author\": {\\n        \"login\": \"MaybeJustJames\"\\n      },\\n      \"authorAssociation\": \"COLLABORATOR\",\\n      \"body\": \"\",\\n      \"submittedAt\": \"2020-09-24T14:54:12Z\",\\n      \"includesCreatedEdit\": false,\\n      \"reactionGroups\": [],\\n      \"state\": \"COMMENTED\",\\n      \"commit\": {\\n        \"oid\": \"fc668cae15fca4e75b24ff4fcf12c23d2cf85224\"\\n      }\\n    },\\n    {\\n      \"id\": \"MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk1Njc2NTAx\",\\n      \"author\": {\\n        \"login\": \"KrisDavie\"\\n      },\\n      \"authorAssociation\": \"CONTRIBUTOR\",\\n      \"body\": \"\",\\n      \"submittedAt\": \"2020-09-24T15:09:53Z\",\\n      \"includesCreatedEdit\": false,\\n      \"reactionGroups\": [],\\n      \"state\": \"COMMENTED\",\\n      \"commit\": {\\n        \"oid\": \"fc668cae15fca4e75b24ff4fcf12c23d2cf85224\"\\n      }\\n    },\\n    {\\n      \"id\": \"MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk1Njg3NTI1\",\\n      \"author\": {\\n        \"login\": \"dweemx\"\\n      },\\n      \"authorAssociation\": \"CONTRIBUTOR\",\\n      \"body\": \"\",\\n      \"submittedAt\": \"2020-09-24T15:21:17Z\",\\n      \"includesCreatedEdit\": false,\\n      \"reactionGroups\": [],\\n      \"state\": \"COMMENTED\",\\n      \"commit\": {\\n        \"oid\": \"fc668cae15fca4e75b24ff4fcf12c23d2cf85224\"\\n      }\\n    },\\n    {\\n      \"id\": \"MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAwMzc2NDU3\",\\n      \"author\": {\\n        \"login\": \"MaybeJustJames\"\\n      },\\n      \"authorAssociation\": \"COLLABORATOR\",\\n      \"body\": \"\",\\n      \"submittedAt\": \"2020-10-01T13:58:57Z\",\\n      \"includesCreatedEdit\": false,\\n      \"reactionGroups\": [],\\n      \"state\": \"COMMENTED\",\\n      \"commit\": {\\n        \"oid\": \"1445bd3ceda18db3b2630b989a37adfffbdd5078\"\\n      }\\n    },\\n    {\\n      \"id\": \"MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAwMzc2NjEz\",\\n      \"author\": {\\n        \"login\": \"MaybeJustJames\"\\n      },\\n      \"authorAssociation\": \"COLLABORATOR\",\\n      \"body\": \"\",\\n      \"submittedAt\": \"2020-10-01T13:59:06Z\",\\n      \"includesCreatedEdit\": false,\\n      \"reactionGroups\": [],\\n      \"state\": \"COMMENTED\",\\n      \"commit\": {\\n        \"oid\": \"1445bd3ceda18db3b2630b989a37adfffbdd5078\"\\n      }\\n    },\\n    {\\n      \"id\": \"MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAwNDMyNzk5\",\\n      \"author\": {\\n        \"login\": \"MaybeJustJames\"\\n      },\\n      \"authorAssociation\": \"COLLABORATOR\",\\n      \"body\": \"\",\\n      \"submittedAt\": \"2020-10-01T14:52:59Z\",\\n      \"includesCreatedEdit\": false,\\n      \"reactionGroups\": [],\\n      \"state\": \"COMMENTED\",\\n      \"commit\": {\\n        \"oid\": \"63b0d3697d50ac676fce659e6ff73626bd04735d\"\\n      }\\n    },\\n    {\\n      \"id\": \"MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAwNDMzODgx\",\\n      \"author\": {\\n        \"login\": \"MaybeJustJames\"\\n      },\\n      \"authorAssociation\": \"COLLABORATOR\",\\n      \"body\": \"\",\\n      \"submittedAt\": \"2020-10-01T14:54:00Z\",\\n      \"includesCreatedEdit\": false,\\n      \"reactionGroups\": [],\\n      \"state\": \"COMMENTED\",\\n      \"commit\": {\\n        \"oid\": \"63b0d3697d50ac676fce659e6ff73626bd04735d\"\\n      }\\n    },\\n    {\\n      \"id\": \"MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAwNDM0MDYy\",\\n      \"author\": {\\n        \"login\": \"MaybeJustJames\"\\n      },\\n      \"authorAssociation\": \"COLLABORATOR\",\\n      \"body\": \"\",\\n      \"submittedAt\": \"2020-10-01T14:54:11Z\",\\n      \"includesCreatedEdit\": false,\\n      \"reactionGroups\": [],\\n      \"state\": \"COMMENTED\",\\n      \"commit\": {\\n        \"oid\": \"63b0d3697d50ac676fce659e6ff73626bd04735d\"\\n      }\\n    },\\n    {\\n      \"id\": \"MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAwNDM0MTk5\",\\n      \"author\": {\\n        \"login\": \"MaybeJustJames\"\\n      },\\n      \"authorAssociation\": \"COLLABORATOR\",\\n      \"body\": \"\",\\n      \"submittedAt\": \"2020-10-01T14:54:19Z\",\\n      \"includesCreatedEdit\": false,\\n      \"reactionGroups\": [],\\n      \"state\": \"COMMENTED\",\\n      \"commit\": {\\n        \"oid\": \"63b0d3697d50ac676fce659e6ff73626bd04735d\"\\n      }\\n    },\\n    {\\n      \"id\": \"MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAwNDQyNzE4\",\\n      \"author\": {\\n        \"login\": \"MaybeJustJames\"\\n      },\\n      \"authorAssociation\": \"COLLABORATOR\",\\n      \"body\": \"\",\\n      \"submittedAt\": \"2020-10-01T15:02:39Z\",\\n      \"includesCreatedEdit\": false,\\n      \"reactionGroups\": [],\\n      \"state\": \"COMMENTED\",\\n      \"commit\": {\\n        \"oid\": \"9bb527e2ef9ae2601d09d77d6cffc617f462d80b\"\\n      }\\n    },\\n    {\\n      \"id\": \"MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAwNDQ2NTA1\",\\n      \"author\": {\\n        \"login\": \"MaybeJustJames\"\\n      },\\n      \"authorAssociation\": \"COLLABORATOR\",\\n      \"body\": \"\",\\n      \"submittedAt\": \"2020-10-01T15:06:22Z\",\\n      \"includesCreatedEdit\": false,\\n      \"reactionGroups\": [],\\n      \"state\": \"COMMENTED\",\\n      \"commit\": {\\n        \"oid\": \"9bb527e2ef9ae2601d09d77d6cffc617f462d80b\"\\n      }\\n    },\\n    {\\n      \"id\": \"MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAwOTk0ODQ5\",\\n      \"author\": {\\n        \"login\": \"MaybeJustJames\"\\n      },\\n      \"authorAssociation\": \"COLLABORATOR\",\\n      \"body\": \"\",\\n      \"submittedAt\": \"2020-10-02T09:39:13Z\",\\n      \"includesCreatedEdit\": false,\\n      \"reactionGroups\": [],\\n      \"state\": \"COMMENTED\",\\n      \"commit\": {\\n        \"oid\": \"3ffa92a17a45aa1ea6d2f0af1bb274962745cb29\"\\n      }\\n    },\\n    {\\n      \"id\": \"MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAwOTk1NjAx\",\\n      \"author\": {\\n        \"login\": \"MaybeJustJames\"\\n      },\\n      \"authorAssociation\": \"COLLABORATOR\",\\n      \"body\": \"\",\\n      \"submittedAt\": \"2020-10-02T09:40:30Z\",\\n      \"includesCreatedEdit\": false,\\n      \"reactionGroups\": [],\\n      \"state\": \"COMMENTED\",\\n      \"commit\": {\\n        \"oid\": \"3ffa92a17a45aa1ea6d2f0af1bb274962745cb29\"\\n      }\\n    },\\n    {\\n      \"id\": \"MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxMDMwOTA1\",\\n      \"author\": {\\n        \"login\": \"MaybeJustJames\"\\n      },\\n      \"authorAssociation\": \"COLLABORATOR\",\\n      \"body\": \"\",\\n      \"submittedAt\": \"2020-10-02T10:40:20Z\",\\n      \"includesCreatedEdit\": false,\\n      \"reactionGroups\": [],\\n      \"state\": \"COMMENTED\",\\n      \"commit\": {\\n        \"oid\": \"7f298d5cccb27d00aea4ed87d9a4b35077a0b16a\"\\n      }\\n    },\\n    {\\n      \"id\": \"MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxMDYzNDAx\",\\n      \"author\": {\\n        \"login\": \"MaybeJustJames\"\\n      },\\n      \"authorAssociation\": \"COLLABORATOR\",\\n      \"body\": \"\",\\n      \"submittedAt\": \"2020-10-02T11:41:29Z\",\\n      \"includesCreatedEdit\": false,\\n      \"reactionGroups\": [],\\n      \"state\": \"COMMENTED\",\\n      \"commit\": {\\n        \"oid\": \"93d5ef79cc3e068b98cb9d7b7dbf3ce24306c4dc\"\\n      }\\n    },\\n    {\\n      \"id\": \"MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxMDY5MzMx\",\\n      \"author\": {\\n        \"login\": \"MaybeJustJames\"\\n      },\\n      \"authorAssociation\": \"COLLABORATOR\",\\n      \"body\": \"\",\\n      \"submittedAt\": \"2020-10-02T11:52:09Z\",\\n      \"includesCreatedEdit\": false,\\n      \"reactionGroups\": [],\\n      \"state\": \"COMMENTED\",\\n      \"commit\": {\\n        \"oid\": \"9084c70cec3b6e50557ff20e2e905eaa5c9289e3\"\\n      }\\n    },\\n    {\\n      \"id\": \"MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxMDcxNDI0\",\\n      \"author\": {\\n        \"login\": \"MaybeJustJames\"\\n      },\\n      \"authorAssociation\": \"COLLABORATOR\",\\n      \"body\": \"\",\\n      \"submittedAt\": \"2020-10-02T11:55:54Z\",\\n      \"includesCreatedEdit\": false,\\n      \"reactionGroups\": [],\\n      \"state\": \"COMMENTED\",\\n      \"commit\": {\\n        \"oid\": \"9084c70cec3b6e50557ff20e2e905eaa5c9289e3\"\\n      }\\n    },\\n    {\\n      \"id\": \"MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxMTYzMTIz\",\\n      \"author\": {\\n        \"login\": \"dweemx\"\\n      },\\n      \"authorAssociation\": \"CONTRIBUTOR\",\\n      \"body\": \"\",\\n      \"submittedAt\": \"2020-10-02T14:02:30Z\",\\n      \"includesCreatedEdit\": false,\\n      \"reactionGroups\": [],\\n      \"state\": \"COMMENTED\",\\n      \"commit\": {\\n        \"oid\": \"9084c70cec3b6e50557ff20e2e905eaa5c9289e3\"\\n      }\\n    },\\n    {\\n      \"id\": \"MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE1NTM0MzU1\",\\n      \"author\": {\\n        \"login\": \"MaybeJustJames\"\\n      },\\n      \"authorAssociation\": \"COLLABORATOR\",\\n      \"body\": \"\",\\n      \"submittedAt\": \"2020-10-23T10:20:00Z\",\\n      \"includesCreatedEdit\": false,\\n      \"reactionGroups\": [],\\n      \"state\": \"COMMENTED\",\\n      \"commit\": {\\n        \"oid\": \"463e6788a8ab6565ccad3259a384395ef498f744\"\\n      }\\n    },\\n    {\\n      \"id\": \"MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE1NTM1MjEx\",\\n      \"author\": {\\n        \"login\": \"MaybeJustJames\"\\n      },\\n      \"authorAssociation\": \"COLLABORATOR\",\\n      \"body\": \"\",\\n      \"submittedAt\": \"2020-10-23T10:21:18Z\",\\n      \"includesCreatedEdit\": false,\\n      \"reactionGroups\": [],\\n      \"state\": \"COMMENTED\",\\n      \"commit\": {\\n        \"oid\": \"463e6788a8ab6565ccad3259a384395ef498f744\"\\n      }\\n    },\\n    {\\n      \"id\": \"MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIzMTg3MDcz\",\\n      \"author\": {\\n        \"login\": \"MaybeJustJames\"\\n      },\\n      \"authorAssociation\": \"COLLABORATOR\",\\n      \"body\": \"\",\\n      \"submittedAt\": \"2020-11-04T09:37:08Z\",\\n      \"includesCreatedEdit\": false,\\n      \"reactionGroups\": [],\\n      \"state\": \"COMMENTED\",\\n      \"commit\": {\\n        \"oid\": \"5d06844a35af958a0a87d87b48b0239498ea075f\"\\n      }\\n    },\\n    {\\n      \"id\": \"MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIzMTk0NDE0\",\\n      \"author\": {\\n        \"login\": \"MaybeJustJames\"\\n      },\\n      \"authorAssociation\": \"COLLABORATOR\",\\n      \"body\": \"\",\\n      \"submittedAt\": \"2020-11-04T09:46:14Z\",\\n      \"includesCreatedEdit\": false,\\n      \"reactionGroups\": [],\\n      \"state\": \"COMMENTED\",\\n      \"commit\": {\\n        \"oid\": \"93b7472d4a1934153360c415eb9738d4316b6ef6\"\\n      }\\n    },\\n    {\\n      \"id\": \"MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIzMjA5OTUw\",\\n      \"author\": {\\n        \"login\": \"MaybeJustJames\"\\n      },\\n      \"authorAssociation\": \"COLLABORATOR\",\\n      \"body\": \"\",\\n      \"submittedAt\": \"2020-11-04T10:04:20Z\",\\n      \"includesCreatedEdit\": false,\\n      \"reactionGroups\": [],\\n      \"state\": \"COMMENTED\",\\n      \"commit\": {\\n        \"oid\": \"fb249598d3c99a9b8122f4a2e4cccf13a4db5a9d\"\\n      }\\n    },\\n    {\\n      \"id\": \"MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIzMjEwMjI1\",\\n      \"author\": {\\n        \"login\": \"MaybeJustJames\"\\n      },\\n      \"authorAssociation\": \"COLLABORATOR\",\\n      \"body\": \"\",\\n      \"submittedAt\": \"2020-11-04T10:04:43Z\",\\n      \"includesCreatedEdit\": false,\\n      \"reactionGroups\": [],\\n      \"state\": \"COMMENTED\",\\n      \"commit\": {\\n        \"oid\": \"fb249598d3c99a9b8122f4a2e4cccf13a4db5a9d\"\\n      }\\n    },\\n    {\\n      \"id\": \"MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIzMjM1MzEx\",\\n      \"author\": {\\n        \"login\": \"MaybeJustJames\"\\n      },\\n      \"authorAssociation\": \"COLLABORATOR\",\\n      \"body\": \"\",\\n      \"submittedAt\": \"2020-11-04T10:36:09Z\",\\n      \"includesCreatedEdit\": false,\\n      \"reactionGroups\": [],\\n      \"state\": \"COMMENTED\",\\n      \"commit\": {\\n        \"oid\": \"c5513f98eb43f4695c591ecfd7a0d3363c95f015\"\\n      }\\n    },\\n    {\\n      \"id\": \"MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIzMjU3NzIz\",\\n      \"author\": {\\n        \"login\": \"MaybeJustJames\"\\n      },\\n      \"authorAssociation\": \"COLLABORATOR\",\\n      \"body\": \"\",\\n      \"submittedAt\": \"2020-11-04T11:04:53Z\",\\n      \"includesCreatedEdit\": false,\\n      \"reactionGroups\": [],\\n      \"state\": \"COMMENTED\",\\n      \"commit\": {\\n        \"oid\": \"c5513f98eb43f4695c591ecfd7a0d3363c95f015\"\\n      }\\n    },\\n    {\\n      \"id\": \"MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIzMjYzMzUx\",\\n      \"author\": {\\n        \"login\": \"MaybeJustJames\"\\n      },\\n      \"authorAssociation\": \"COLLABORATOR\",\\n      \"body\": \"\",\\n      \"submittedAt\": \"2020-11-04T11:12:51Z\",\\n      \"includesCreatedEdit\": false,\\n      \"reactionGroups\": [],\\n      \"state\": \"COMMENTED\",\\n      \"commit\": {\\n        \"oid\": \"c5513f98eb43f4695c591ecfd7a0d3363c95f015\"\\n      }\\n    },\\n    {\\n      \"id\": \"MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMxMjA1MDE0\",\\n      \"author\": {\\n        \"login\": \"dweemx\"\\n      },\\n      \"authorAssociation\": \"CONTRIBUTOR\",\\n      \"body\": \"In general, nice cleanup and refactoring! I noticed a few bugs across the app tough:\\\\r\\\\n\\\\r\\\\n- [x] Running the app using Node `v10.22.1` fails with a huge stack trace. I was able to run it using `v11.15.1`. So I suggest we use `.nvmrc` file to properly state which Node version this app requires.\\\\r\\\\n- [x] The markers table should not be displayed (actually not exist) when querying for `All Clusters` in the `Gene` page.\\\\r\\\\n![image](https://user-images.githubusercontent.com/16015936/103792400-e205e480-5043-11eb-9586-714691ff627f.png)\\\\r\\\\n- [x] When switching from loom, the viewer is not reloaded with the embedding\\\\r\\\\n- [x] After having switched from loom, colors are not properly assigned to dots anymore:\\\\r\\\\n  - To reproduce:\\\\r\\\\n    1. Load one loom, search for `All Clusters`\\\\r\\\\n    2. Load other loom, clear search box and search for `All Clusters`\\\\r\\\\n- [x] When switching from embeddings/coordinates, the scatterplot is not updated.\\\\r\\\\n- [x] All annotations page is empty/blank while loom contains community annotations\\\\r\\\\n- [x] Some viewers are missing in the compare tab. When switching to the `Compare` tab only 2 are shown.\\\\r\\\\n- [ ] Compare tab break when performing a DnD of one of the annotation onto a viewer.\\\\r\\\\n\\\\r\\\\n\",\\n      \"submittedAt\": \"2021-01-06T16:33:16Z\",\\n      \"includesCreatedEdit\": false,\\n      \"reactionGroups\": [],\\n      \"state\": \"CHANGES_REQUESTED\",\\n      \"commit\": {\\n        \"oid\": \"e9e249ca22eda56866b01b030c3376c570bc844b\"\\n      }\\n    },\\n    {\\n      \"id\": \"MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY0MTY1MTMy\",\\n      \"author\": {\\n        \"login\": \"KrisDavie\"\\n      },\\n      \"authorAssociation\": \"CONTRIBUTOR\",\\n      \"body\": \"Overall nice changes and restructuring. As discussed, the remaining issues can be dealt with in `develop` in order to get this merged after the main bits above are resolved.\",\\n      \"submittedAt\": \"2021-01-14T16:21:01Z\",\\n      \"includesCreatedEdit\": false,\\n      \"reactionGroups\": [],\\n      \"state\": \"CHANGES_REQUESTED\",\\n      \"commit\": {\\n        \"oid\": \"2c33076639c1afa900181a2cbfa92990f9f3c267\"\\n      }\\n    },\\n    {\\n      \"id\": \"MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTg0MTU1MDE0\",\\n      \"author\": {\\n        \"login\": \"MaybeJustJames\"\\n      },\\n      \"authorAssociation\": \"COLLABORATOR\",\\n      \"body\": \"\",\\n      \"submittedAt\": \"2021-02-05T09:21:20Z\",\\n      \"includesCreatedEdit\": false,\\n      \"reactionGroups\": [],\\n      \"state\": \"COMMENTED\",\\n      \"commit\": {\\n        \"oid\": \"2c33076639c1afa900181a2cbfa92990f9f3c267\"\\n      }\\n    },\\n    {\\n      \"id\": \"MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjI1MDcyMDc1\",\\n      \"author\": {\\n        \"login\": \"MaybeJustJames\"\\n      },\\n      \"authorAssociation\": \"COLLABORATOR\",\\n      \"body\": \"\",\\n      \"submittedAt\": \"2021-03-31T09:18:36Z\",\\n      \"includesCreatedEdit\": false,\\n      \"reactionGroups\": [],\\n      \"state\": \"COMMENTED\",\\n      \"commit\": {\\n        \"oid\": \"1f93c7b2253956cbe49a8884b19653a290d715d4\"\\n      }\\n    },\\n    {\\n      \"id\": \"MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjI1MDg4NDc5\",\\n      \"author\": {\\n        \"login\": \"MaybeJustJames\"\\n      },\\n      \"authorAssociation\": \"COLLABORATOR\",\\n      \"body\": \"\",\\n      \"submittedAt\": \"2021-03-31T09:36:26Z\",\\n      \"includesCreatedEdit\": false,\\n      \"reactionGroups\": [],\\n      \"state\": \"COMMENTED\",\\n      \"commit\": {\\n        \"oid\": \"e8c5c53abf82dfbc81001c6e2cf15b794aa8b8b0\"\\n      }\\n    },\\n    {\\n      \"id\": \"MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjI1MDkxNDEz\",\\n      \"author\": {\\n        \"login\": \"MaybeJustJames\"\\n      },\\n      \"authorAssociation\": \"COLLABORATOR\",\\n      \"body\": \"\",\\n      \"submittedAt\": \"2021-03-31T09:39:39Z\",\\n      \"includesCreatedEdit\": false,\\n      \"reactionGroups\": [],\\n      \"state\": \"COMMENTED\",\\n      \"commit\": {\\n        \"oid\": \"e8c5c53abf82dfbc81001c6e2cf15b794aa8b8b0\"\\n      }\\n    },\\n    {\\n      \"id\": \"MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjI1MDkxNzA1\",\\n      \"author\": {\\n        \"login\": \"MaybeJustJames\"\\n      },\\n      \"authorAssociation\": \"COLLABORATOR\",\\n      \"body\": \"\",\\n      \"submittedAt\": \"2021-03-31T09:39:57Z\",\\n      \"includesCreatedEdit\": false,\\n      \"reactionGroups\": [],\\n      \"state\": \"COMMENTED\",\\n      \"commit\": {\\n        \"oid\": \"e8c5c53abf82dfbc81001c6e2cf15b794aa8b8b0\"\\n      }\\n    },\\n    {\\n      \"id\": \"MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjI1MDk3OTI0\",\\n      \"author\": {\\n        \"login\": \"MaybeJustJames\"\\n      },\\n      \"authorAssociation\": \"COLLABORATOR\",\\n      \"body\": \"\",\\n      \"submittedAt\": \"2021-03-31T09:46:34Z\",\\n      \"includesCreatedEdit\": false,\\n      \"reactionGroups\": [],\\n      \"state\": \"COMMENTED\",\\n      \"commit\": {\\n        \"oid\": \"e8c5c53abf82dfbc81001c6e2cf15b794aa8b8b0\"\\n      }\\n    },\\n    {\\n      \"id\": \"MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjI1MTAyODQ0\",\\n      \"author\": {\\n        \"login\": \"MaybeJustJames\"\\n      },\\n      \"authorAssociation\": \"COLLABORATOR\",\\n      \"body\": \"\",\\n      \"submittedAt\": \"2021-03-31T09:51:50Z\",\\n      \"includesCreatedEdit\": false,\\n      \"reactionGroups\": [],\\n      \"state\": \"COMMENTED\",\\n      \"commit\": {\\n        \"oid\": \"e8c5c53abf82dfbc81001c6e2cf15b794aa8b8b0\"\\n      }\\n    },\\n    {\\n      \"id\": \"MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjI1MTA1Njkx\",\\n      \"author\": {\\n        \"login\": \"MaybeJustJames\"\\n      },\\n      \"authorAssociation\": \"COLLABORATOR\",\\n      \"body\": \"\",\\n      \"submittedAt\": \"2021-03-31T09:55:01Z\",\\n      \"includesCreatedEdit\": false,\\n      \"reactionGroups\": [],\\n      \"state\": \"COMMENTED\",\\n      \"commit\": {\\n        \"oid\": \"e8c5c53abf82dfbc81001c6e2cf15b794aa8b8b0\"\\n      }\\n    },\\n    {\\n      \"id\": \"MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjI1MTA3NzE0\",\\n      \"author\": {\\n        \"login\": \"MaybeJustJames\"\\n      },\\n      \"authorAssociation\": \"COLLABORATOR\",\\n      \"body\": \"\",\\n      \"submittedAt\": \"2021-03-31T09:57:18Z\",\\n      \"includesCreatedEdit\": false,\\n      \"reactionGroups\": [],\\n      \"state\": \"COMMENTED\",\\n      \"commit\": {\\n        \"oid\": \"b44b3e86f8fb6fa95ae2db7dd55271075e4a1dfc\"\\n      }\\n    },\\n    {\\n      \"id\": \"MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjI1MTEzMjA2\",\\n      \"author\": {\\n        \"login\": \"MaybeJustJames\"\\n      },\\n      \"authorAssociation\": \"COLLABORATOR\",\\n      \"body\": \"\",\\n      \"submittedAt\": \"2021-03-31T10:03:30Z\",\\n      \"includesCreatedEdit\": false,\\n      \"reactionGroups\": [],\\n      \"state\": \"COMMENTED\",\\n      \"commit\": {\\n        \"oid\": \"b44b3e86f8fb6fa95ae2db7dd55271075e4a1dfc\"\\n      }\\n    },\\n    {\\n      \"id\": \"MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjI1MTE1MDA2\",\\n      \"author\": {\\n        \"login\": \"MaybeJustJames\"\\n      },\\n      \"authorAssociation\": \"COLLABORATOR\",\\n      \"body\": \"\",\\n      \"submittedAt\": \"2021-03-31T10:05:36Z\",\\n      \"includesCreatedEdit\": false,\\n      \"reactionGroups\": [],\\n      \"state\": \"COMMENTED\",\\n      \"commit\": {\\n        \"oid\": \"b44b3e86f8fb6fa95ae2db7dd55271075e4a1dfc\"\\n      }\\n    },\\n    {\\n      \"id\": \"MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjI2OTE0MjAy\",\\n      \"author\": {\\n        \"login\": \"MaybeJustJames\"\\n      },\\n      \"authorAssociation\": \"COLLABORATOR\",\\n      \"body\": \"\",\\n      \"submittedAt\": \"2021-04-02T10:33:11Z\",\\n      \"includesCreatedEdit\": false,\\n      \"reactionGroups\": [],\\n      \"state\": \"COMMENTED\",\\n      \"commit\": {\\n        \"oid\": \"7afe7e41c93bedaa8b81949ff75341e14fa641da\"\\n      }\\n    },\\n    {\\n      \"id\": \"MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjI2OTcxNDkw\",\\n      \"author\": {\\n        \"login\": \"KrisDavie\"\\n      },\\n      \"authorAssociation\": \"CONTRIBUTOR\",\\n      \"body\": \"\",\\n      \"submittedAt\": \"2021-04-02T13:05:21Z\",\\n      \"includesCreatedEdit\": false,\\n      \"reactionGroups\": [],\\n      \"state\": \"COMMENTED\",\\n      \"commit\": {\\n        \"oid\": \"7afe7e41c93bedaa8b81949ff75341e14fa641da\"\\n      }\\n    },\\n    {\\n      \"id\": \"MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjY4NzEyOTI3\",\\n      \"author\": {\\n        \"login\": \"dweemx\"\\n      },\\n      \"authorAssociation\": \"CONTRIBUTOR\",\\n      \"body\": \"\",\\n      \"submittedAt\": \"2021-05-28T07:24:50Z\",\\n      \"includesCreatedEdit\": false,\\n      \"reactionGroups\": [],\\n      \"state\": \"APPROVED\",\\n      \"commit\": {\\n        \"oid\": \"aad17cb2ce846e49895c1655d36d9af1d5c9c254\"\\n      }\\n    },\\n    {\\n      \"id\": \"MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjcxMDE1NjUw\",\\n      \"author\": {\\n        \"login\": \"KrisDavie\"\\n      },\\n      \"authorAssociation\": \"CONTRIBUTOR\",\\n      \"body\": \"\",\\n      \"submittedAt\": \"2021-05-28T07:37:17Z\",\\n      \"includesCreatedEdit\": false,\\n      \"reactionGroups\": [],\\n      \"state\": \"APPROVED\",\\n      \"commit\": {\\n        \"oid\": \"aad17cb2ce846e49895c1655d36d9af1d5c9c254\"\\n      }\\n    }\\n  ],\\n  \"state\": \"MERGED\",\\n  \"statusCheckRollup\": [\\n    {\\n      \"__typename\": \"CheckRun\",\\n      \"completedAt\": \"2021-05-28T08:22:21Z\",\\n      \"conclusion\": \"SUCCESS\",\\n      \"detailsUrl\": \"https://github.com/aertslab/SCope/actions/runs/884919804/jobs/887085154\",\\n      \"name\": \"client-quality-checks\",\\n      \"startedAt\": \"2021-05-28T08:21:26Z\",\\n      \"status\": \"COMPLETED\",\\n      \"workflowName\": \"Client CI\"\\n    },\\n    {\\n      \"__typename\": \"CheckRun\",\\n      \"completedAt\": \"2021-05-28T08:23:06Z\",\\n      \"conclusion\": \"SUCCESS\",\\n      \"detailsUrl\": \"https://github.com/aertslab/SCope/actions/runs/884919803/jobs/887085234\",\\n      \"name\": \"quality-checks (3.7)\",\\n      \"startedAt\": \"2021-05-28T08:20:22Z\",\\n      \"status\": \"COMPLETED\",\\n      \"workflowName\": \"Server CI\"\\n    },\\n    {\\n      \"__typename\": \"CheckRun\",\\n      \"completedAt\": \"2021-05-28T08:22:52Z\",\\n      \"conclusion\": \"SUCCESS\",\\n      \"detailsUrl\": \"https://github.com/aertslab/SCope/actions/runs/884919803/jobs/887085272\",\\n      \"name\": \"quality-checks (3.8)\",\\n      \"startedAt\": \"2021-05-28T08:20:22Z\",\\n      \"status\": \"COMPLETED\",\\n      \"workflowName\": \"Server CI\"\\n    }\\n  ],\\n  \"title\": \"Initial front-end restructure and code re-design\",\\n  \"updatedAt\": \"2021-06-24T14:41:45Z\",\\n  \"url\": \"https://github.com/aertslab/SCope/pull/381\"\\n}',\n\t)\n"]}
{"filename": "tests/report.calculation.test.ts", "chunked_list": ["// for license and copyright look at the repository\n\timport { IPullRequest } from '../src/Interfaces/PullRequestTypes'\n\timport { PullRequest } from '../src/PullRequest.Definitions'\n\timport {\n\t  GenerateEventTimeline,\n\t  GetLeadTimeForPullRequest,\n\t  GetNumberOfApprovedReviews,\n\t  GetNumberOfCommentOnlyReviews,\n\t  GetTotalNumberOfParticipants,\n\t  GetNumberOfRequestedChangeReviews,\n", "  GetTimeSpendInPrForLastStatusCheckRun,\n\t  GetTimeSpendOnBranchBeforePRCreated,\n\t  GetTimeSpendOnBranchBeforePRMerged,\n\t  GetTimeToMergeAfterLastReview,\n\t  GetTotalRuntimeForLastStatusCheckRun,\n\t} from '../src/Report.Calculation'\n\timport { DataFromBigPullRequest } from './pr_sample_data'\n\tlet PullRequestJsonModel: unknown\n\tlet PullRequestStatModel: IPullRequest\n\tconst CreatePrCopy = (pr: IPullRequest): IPullRequest => {\n", "  const prAsJson = JSON.stringify(pr)\n\t  return JSON.parse(prAsJson) as IPullRequest\n\t}\n\tconst CreatePrCopyWithoutStatusChecks = (pr: IPullRequest): IPullRequest => {\n\t  const prCopy = CreatePrCopy(pr)\n\t  prCopy.statusChecks = []\n\t  return prCopy\n\t}\n\tbeforeAll(() => {\n\t  PullRequestJsonModel = DataFromBigPullRequest\n", "  PullRequestStatModel = PullRequest.CreateFromJson(PullRequestJsonModel)\n\t})\n\ttest('Check calculation of Pull Request lead time', () => {\n\t  const leadTime = GetLeadTimeForPullRequest(PullRequestStatModel)\n\t  expect(leadTime).toBe(22110891000)\n\t})\n\ttest(\"Check error hanlding of 'Check calculation of Pull Request lead time'\", () => {\n\t  const prCopy = CreatePrCopy(PullRequestStatModel)\n\t  prCopy.createdAt = ''\n\t  const leadTime = GetLeadTimeForPullRequest(prCopy)\n", "  expect(leadTime).toBe(0)\n\t})\n\ttest('Check event timeline generation', () => {\n\t  const eventTimeline = GenerateEventTimeline(PullRequestStatModel)\n\t  expect(eventTimeline.length).toBeGreaterThan(0)\n\t})\n\ttest('Check calculation of \"Time spend on branch before PR is created\"', () => {\n\t  const timeSpend = GetTimeSpendOnBranchBeforePRCreated(PullRequestStatModel)\n\t  expect(timeSpend).toBeGreaterThan(0)\n\t})\n", "test('Check error handling for \"Time spend on branch before PR is created\"', () => {\n\t  const prCopy = CreatePrCopy(PullRequestStatModel)\n\t  prCopy.createdAt = ''\n\t  const timeSpend = GetTimeSpendOnBranchBeforePRCreated(prCopy)\n\t  expect(timeSpend).toBe(0)\n\t})\n\ttest('Check calculation error handling of \"Time spend on branch before PR is merged\"', () => {\n\t  const pr = CreatePrCopy(PullRequestStatModel)\n\t  pr.mergedAt = ''\n\t  pr.closedAt = ''\n", "  const timeSpend = GetTimeSpendOnBranchBeforePRMerged(pr)\n\t  expect(timeSpend).toBe(-1)\n\t})\n\ttest('Check calculation of \"Time to merge after the last review\"', () => {\n\t  const timeSpend = GetTimeToMergeAfterLastReview(PullRequestStatModel)\n\t  expect(timeSpend).toBeGreaterThan(0)\n\t})\n\ttest('Check error handling of \"Time to merge after the last review\"', () => {\n\t  let pr = CreatePrCopy(PullRequestStatModel)\n\t  pr.mergedAt = ''\n", "  pr.closedAt = ''\n\t  expect(GetTimeToMergeAfterLastReview(pr)).toBe(-1)\n\t  pr = CreatePrCopy(PullRequestStatModel)\n\t  pr.reviews = []\n\t  expect(GetTimeToMergeAfterLastReview(pr)).toBe(-1)\n\t})\n\ttest('Check calculation of \"Total runtime for last status check run\"', () => {\n\t  const timeSpend = GetTotalRuntimeForLastStatusCheckRun(PullRequestStatModel)\n\t  expect(timeSpend).toBeGreaterThan(0)\n\t})\n", "test('Check empty list handling of \"Total runtime for last status check run\"', () => {\n\t  const pr = CreatePrCopyWithoutStatusChecks(PullRequestStatModel)\n\t  expect(GetTotalRuntimeForLastStatusCheckRun(pr)).toBe(0)\n\t})\n\ttest('Check calculation of \"Total time spend in last status check run\"', () => {\n\t  const timeSpend = GetTimeSpendInPrForLastStatusCheckRun(PullRequestStatModel)\n\t  expect(timeSpend).toBeGreaterThan(0)\n\t})\n\ttest('Check empty list handling of  \"Total time spend in last status check run\"', () => {\n\t  const pr = CreatePrCopyWithoutStatusChecks(PullRequestStatModel)\n", "  expect(GetTimeSpendInPrForLastStatusCheckRun(pr)).toBe(0)\n\t})\n\ttest('Check calculation of \"Number of reviews that contains a comment to resolve\"', () => {\n\t  const numberOfReviews = GetNumberOfCommentOnlyReviews(PullRequestStatModel)\n\t  expect(numberOfReviews).toBeGreaterThan(0)\n\t})\n\ttest('Check calculation of \"Number of reviews that contains a comment to resolve (with no comments)\"', () => {\n\t  const pr = CreatePrCopy(PullRequestStatModel)\n\t  // check the pr.reviews for all 'COMMENTED' reviews and remove them\n\t  pr.reviews = pr.reviews.filter((review) => review.state !== 'COMMENTED')\n", "  const numberOfReviews = GetNumberOfCommentOnlyReviews(pr)\n\t  expect(numberOfReviews).toBe(0)\n\t})\n\ttest('of reviews that contains a comment to resolve (with no comments)\"', () => {\n\t  const pr = CreatePrCopy(PullRequestStatModel)\n\t  // check the pr.reviews for all 'COMMENTED' reviews and remove them\n\t  pr.reviews = []\n\t  const numberOfReviews = GetNumberOfCommentOnlyReviews(pr)\n\t  expect(numberOfReviews).toBe(0)\n\t})\n", "test('Check calculation of \"Number of reviews that requested a change from the author\"', () => {\n\t  const numberOfReviews = GetNumberOfRequestedChangeReviews(PullRequestStatModel)\n\t  expect(numberOfReviews).toBeGreaterThan(0)\n\t})\n\ttest('Check calculation of \"Number of reviews that requested a change from the author (with no reviews that requires a change)\"', () => {\n\t  const pr = CreatePrCopy(PullRequestStatModel)\n\t  // check the pr.reviews for all 'CHANGES_REQUESTED' reviews and remove them\n\t  pr.reviews = pr.reviews.filter((review) => review.state !== 'CHANGES_REQUESTED')\n\t  const numberOfReviews = GetNumberOfRequestedChangeReviews(pr)\n\t  expect(numberOfReviews).toBe(0)\n", "})\n\ttest('Check calculation of \"Number of reviews that approved the Pull Request\"', () => {\n\t  const numberOfReviews = GetNumberOfApprovedReviews(PullRequestStatModel)\n\t  expect(numberOfReviews).toBeGreaterThan(0)\n\t})\n\ttest('Check calculation of \"Number of reviews that requested a change from the author (with no reviews that approves)\"', () => {\n\t  const pr = CreatePrCopy(PullRequestStatModel)\n\t  // check the pr.reviews for all 'APPROVED' reviews and remove them\n\t  pr.reviews = pr.reviews.filter((review) => review.state !== 'APPROVED')\n\t  const numberOfReviews = GetNumberOfApprovedReviews(pr)\n", "  expect(numberOfReviews).toBe(0)\n\t})\n\ttest('Get the total number of participants of a Pull Request', () => {\n\t  const numberOfParticipants = GetTotalNumberOfParticipants(PullRequestStatModel)\n\t  expect(numberOfParticipants).toBeGreaterThan(0)\n\t})\n"]}
{"filename": "src/Report.Generation.ts", "chunked_list": ["// for license and copyright look at the repository\n\timport { IPullRequest } from './Interfaces/PullRequestTypes'\n\timport { IReport, IReportConfigurationEntry } from './Interfaces/ReportTypes'\n\timport { tsMarkdown, table, TableEntry, H1Entry, H3Entry, MarkdownEntry } from 'ts-markdown'\n\timport { ConfigurationCategory, ConfigurationCategoryTitleMap } from './Report.Definitions'\n\texport class ReportGenerator {\n\t  DescriptionHeaderLabel = 'Description'\n\t  ValueHeaderLabel = 'Value'\n\t  public Generate(pr: IPullRequest, report: IReport): string {\n\t    const header = this.GenerateHeader(pr, report)\n", "    const table = this.GenerateMeasureTable(pr, report)\n\t    const reportElements = [header, ...table]\n\t    return tsMarkdown(reportElements)\n\t  }\n\t  public GenerateHeader(pr: IPullRequest, report: IReport): H1Entry {\n\t    const title = { h1: `${report.Description} (#${pr.id})` }\n\t    return title\n\t  }\n\t  public GetMeasurementEntries(entries: IReportConfigurationEntry[]): IReportConfigurationEntry[] {\n\t    if (entries !== undefined && entries !== null && entries.length > 0) {\n", "      return entries.filter((entry) => ConfigurationCategory[entry.Info.ConfigurationCategory].endsWith('Measures'))\n\t    }\n\t    return []\n\t  }\n\t  public GenerateMeasureTable(pr: IPullRequest, report: IReport): MarkdownEntry[] {\n\t    const tables: MarkdownEntry[] = []\n\t    const entries = this.GetMeasurementEntries(report.Entries)\n\t    const categories = new Set(entries.map((entry) => entry.Info.ConfigurationCategory))\n\t    categories.forEach((category) => {\n\t      tables.push(this.GenerateCategoryTitle(category))\n", "      tables.push(this.GenerateCategoryTable(pr, report, category))\n\t    })\n\t    return tables\n\t  }\n\t  private GenerateCategoryTitle(measureCategory: ConfigurationCategory): H3Entry {\n\t    const title = { h3: `${ConfigurationCategoryTitleMap.get(measureCategory) || 'No category'}` }\n\t    return title\n\t  }\n\t  private GenerateCategoryTable(pr: IPullRequest, report: IReport, measureCategory: ConfigurationCategory): TableEntry {\n\t    const entries = this.GetMeasurementEntries(report.Entries)\n", "    const categoryEntries = entries.filter((entry) => entry.Info.ConfigurationCategory === measureCategory)\n\t    categoryEntries.forEach((entry) => {\n\t      entry.Info.Value = entry.PullRequestCallback(pr)\n\t    })\n\t    const rows = categoryEntries.map((entry) => ({\n\t      Description: entry.Info.Description,\n\t      Value: entry.Info.Value,\n\t    }))\n\t    return table({\n\t      columns: [{ name: this.DescriptionHeaderLabel }, { name: this.ValueHeaderLabel }],\n", "      rows: rows,\n\t    })\n\t  }\n\t}\n"]}
{"filename": "src/run.ts", "chunked_list": ["import * as core from '@actions/core'\n\timport * as github from '@actions/github'\n\timport { AddCommentToPR, GetPullRequestData } from './GitHubCliHelper'\n\timport { ReportGenerator } from './Report.Generation'\n\timport { Report, ReportConfigurationEntry } from './Report.Definitions'\n\timport { GetActiveMeasures, ReportConfigurationTable, UpdateConfigValues as UpdateConfig } from './Report.Measures'\n\timport { PullRequest } from './PullRequest.Definitions'\n\timport * as fs from 'fs'\n\timport { ConfigurationInputs } from './action.config.type'\n\timport { IPullRequest } from './Interfaces/PullRequestTypes'\n", "import { IReport } from './Interfaces/ReportTypes'\n\texport const SanitizeMarkdownComment = (comment: string): string => {\n\t  return comment.replaceAll(/<!--/g, '&lt;!--').replaceAll(/-->/g, '--&gt;')\n\t}\n\tconst CreatePRCommentFile = (raw_json_data: string, commentText: string, include_raw_data: boolean): string => {\n\t  // generate random file name\n\t  const fileName = Math.random().toString(36).substring(7) + '.md'\n\t  let jsonString = ''\n\t  if (include_raw_data) {\n\t    jsonString = raw_json_data\n", "  }\n\t  // write report string to file\n\t  fs.writeFileSync(fileName, `<!-- ${jsonString} -->\\n${commentText}`)\n\t  return `${process.env.GITHUB_WORKSPACE || './'}/${fileName}`\n\t}\n\tconst GenerateReport = (\n\t  activeConfigValues: ReportConfigurationEntry[],\n\t  pullRequestDataModel: IPullRequest,\n\t): IReport => {\n\t  const report = new Report()\n", "  report.Entries = activeConfigValues\n\t  report.Description = 'Test report'\n\t  report.Id = pullRequestDataModel.id.toString()\n\t  return report\n\t}\n\tconst IsConfigValueYes = (configValue: string): boolean => {\n\t  return configValue.trim().toLowerCase() === 'yes'\n\t}\n\texport const run = async (inputsFromWorkflow: ConfigurationInputs): Promise<number> => {\n\t  // take care that action is running only in PR context\n", "  if (process.env.GITHUB_EVENT_NAME !== 'pull_request') {\n\t    core.setFailed('Action is running outside of PR context')\n\t    return 0\n\t  }\n\t  UpdateConfig(inputsFromWorkflow, ReportConfigurationTable)\n\t  const activeConfigValues = GetActiveMeasures(ReportConfigurationTable)\n\t  // get PR data from github cli\n\t  const cliPullRequestData = await GetPullRequestData(github.context.issue.number)\n\t  const cliPullRequestDataAsString = SanitizeMarkdownComment(JSON.stringify(cliPullRequestData))\n\t  // transform PR data to a typed model\n", "  const pullRequestDataModel = PullRequest.CreateFromJson(cliPullRequestData)\n\t  // generate the report of the typed model\n\t  const generator = new ReportGenerator()\n\t  const report = GenerateReport(activeConfigValues, pullRequestDataModel)\n\t  // create report\n\t  report.Description = inputsFromWorkflow.ReportTitle as string\n\t  const reportAsString = generator.Generate(pullRequestDataModel, report)\n\t  const commentPath = CreatePRCommentFile(\n\t    cliPullRequestDataAsString,\n\t    reportAsString,\n", "    IsConfigValueYes(inputsFromWorkflow.IncludeRawDataAsMarkdownComment as string),\n\t  )\n\t  if (IsConfigValueYes(inputsFromWorkflow.AddPrReportAsComment as string)) {\n\t    await AddCommentToPR(commentPath, pullRequestDataModel.id)\n\t  }\n\t  const jsonPath = commentPath.replace(/\\.md$/, '.json')\n\t  fs.writeFileSync(jsonPath, cliPullRequestDataAsString)\n\t  core.setOutput('json_report_path', jsonPath)\n\t  return 0\n\t}\n"]}
{"filename": "src/main.ts", "chunked_list": ["import * as core from '@actions/core'\n\timport { run } from './run'\n\timport { config } from './action.config.args'\n\tconst main = async (): Promise<void> => {\n\t  await run(config)\n\t}\n\tmain().catch((e) => core.setFailed(e instanceof Error ? e : String(e)))\n"]}
{"filename": "src/Report.Definitions.ts", "chunked_list": ["// for license and copyright look at the repository\n\timport { IReport, IReportConfigurationEntry, IReportConfigInfo, PullRequestCallback } from './Interfaces/ReportTypes'\n\texport enum ConfigurationCategory {\n\t  None,\n\t  StaticMeasures,\n\t  TimeRelatedMeasures,\n\t  StatusCheckRelatedMeasures,\n\t  ReportGeneratorValue,\n\t}\n\texport const ConfigurationCategoryTitleMap = new Map<ConfigurationCategory, string>([\n", "  [ConfigurationCategory.None, 'None'],\n\t  [ConfigurationCategory.StaticMeasures, 'Static measures'],\n\t  [ConfigurationCategory.TimeRelatedMeasures, 'Time related measures'],\n\t  [ConfigurationCategory.StatusCheckRelatedMeasures, 'Status check related measures'],\n\t  [ConfigurationCategory.ReportGeneratorValue, 'Report generator related predefined strings'],\n\t])\n\texport class ConfigurationInfo implements IReportConfigInfo {\n\t  public Description\n\t  public PresentationValue\n\t  public Value\n", "  public ConfigurationName\n\t  public ConfigValue\n\t  public ConfigurationCategory\n\t  constructor(\n\t    label: string,\n\t    presentationValue: string | number,\n\t    value: string | number,\n\t    configName: string,\n\t    defaultConfigValue: string | number,\n\t    configurationCategory: ConfigurationCategory,\n", "  ) {\n\t    this.Description = label\n\t    this.PresentationValue = presentationValue\n\t    this.Value = value\n\t    this.ConfigurationName = configName\n\t    this.ConfigValue = defaultConfigValue\n\t    this.ConfigurationCategory = configurationCategory\n\t  }\n\t}\n\texport class ReportConfigurationEntry implements IReportConfigurationEntry {\n", "  public Id\n\t  public Info\n\t  public PullRequestCallback: PullRequestCallback\n\t  constructor(id = '', info: IReportConfigInfo, measureCallback: PullRequestCallback = () => '') {\n\t    this.Id = id\n\t    this.Info = info\n\t    this.PullRequestCallback = measureCallback\n\t  }\n\t}\n\texport class Report implements IReport {\n", "  public Id = ''\n\t  public Description = ''\n\t  public Entries: ReportConfigurationEntry[] = []\n\t}\n"]}
{"filename": "src/action.config.args.ts", "chunked_list": ["//GENERATED FILE FROM report.config.tests.ts - DO NOT EDIT!!!\n\timport * as core from '@actions/core'\n\texport const config = {\n\t  IncludeRawDataAsMarkdownComment: core.getInput('IncludeRawDataAsMarkdownComment', { required: false }),\n\t  AddPrReportAsComment: core.getInput('AddPrReportAsComment', { required: false }),\n\t  ReportTitle: core.getInput('ReportTitle', { required: false }),\n\t  ShowAdditions: core.getInput('ShowAdditions', { required: false }),\n\t  ShowDeleted: core.getInput('ShowDeleted', { required: false }),\n\t  ShowNumberOfChangedFiles: core.getInput('ShowNumberOfChangedFiles', { required: false }),\n\t  ShowNumberOfCommits: core.getInput('ShowNumberOfCommits', { required: false }),\n", "  ShowNumberOfReviews: core.getInput('ShowNumberOfReviews', { required: false }),\n\t  ShowNumberOfComments: core.getInput('ShowNumberOfComments', { required: false }),\n\t  ShowNumberOfCommentOnlyReviews: core.getInput('ShowNumberOfCommentOnlyReviews', { required: false }),\n\t  ShowNumberOfRequestedChangeReviews: core.getInput('ShowNumberOfRequestedChangeReviews', { required: false }),\n\t  ShowNumberOfApprovedReviews: core.getInput('ShowNumberOfApprovedReviews', { required: false }),\n\t  ShowTotalNumberOfParticipants: core.getInput('ShowTotalNumberOfParticipants', { required: false }),\n\t  ShowTimeTotalRuntimeForLastStatusCheckRun: core.getInput('ShowTimeTotalRuntimeForLastStatusCheckRun', { required: false }),\n\t  ShowTimeSpendOnPrForLastStatusCheckRun: core.getInput('ShowTimeSpendOnPrForLastStatusCheckRun', { required: false }),\n\t  ShowPRLeadTime: core.getInput('ShowPRLeadTime', { required: false }),\n\t  ShowTimeSpendOnBranchBeforePrCreated: core.getInput('ShowTimeSpendOnBranchBeforePrCreated', { required: false }),\n", "  ShowTimeSpendOnBranchBeforePrMerged: core.getInput('ShowTimeSpendOnBranchBeforePrMerged', { required: false }),\n\t  ShowTimeToMergeAfterLastReview: core.getInput('ShowTimeToMergeAfterLastReview', { required: false }),\n\t}\n"]}
{"filename": "src/PullRequest.Definitions.ts", "chunked_list": ["// for license and copyright look at the repository\n\timport {\n\t  type IPullRequest,\n\t  type IFileChangeSummary,\n\t  type IPullRequestComment,\n\t  type IPullRequestCommit,\n\t  type IPullRequestReview,\n\t  type IStatusCheck,\n\t  ICommitAuthor,\n\t} from './Interfaces/PullRequestTypes'\n", "export class FileChangeSummary implements IFileChangeSummary {\n\t  public additions = 0\n\t  public deletions = 0\n\t  public commits = 0\n\t  public changedFilesList = 0\n\t  public static CreateFromJson(json: unknown): IFileChangeSummary {\n\t    const jsonObject = json as { additions: number; deletions: number; commits: object[]; changedFiles: number }\n\t    const summary = new FileChangeSummary()\n\t    summary.additions = jsonObject['additions']\n\t    summary.deletions = jsonObject['deletions']\n", "    summary.commits = jsonObject['commits'].length\n\t    summary.changedFilesList = jsonObject['changedFiles']\n\t    return summary\n\t  }\n\t}\n\texport class PullRequestReview implements IPullRequestReview {\n\t  public authorLogin = ''\n\t  public state = ''\n\t  public submittedAt = ''\n\t  public body = ''\n", "  public static CreateFromJson(json: unknown): IPullRequestReview {\n\t    const jsonObject = json as { author: { login: string }; state: string; submittedAt: string; body: string }\n\t    const review = new PullRequestReview()\n\t    review.authorLogin = jsonObject['author']['login']\n\t    review.state = jsonObject['state']\n\t    review.submittedAt = jsonObject['submittedAt']\n\t    review.body = jsonObject['body']\n\t    return review\n\t  }\n\t}\n", "export class PullRequestComment implements IPullRequestComment {\n\t  public authorLogin = ''\n\t  public createdAt = ''\n\t  public body = ''\n\t  public authorAssociation = ''\n\t  public id = ''\n\t  public url = ''\n\t  public viewerDidAuthor = false\n\t  public static CreateFromJson(json: unknown): IPullRequestComment {\n\t    const jsonObject = json as {\n", "      author: { login: string }\n\t      createdAt: string\n\t      body: string\n\t      authorAssociation: string\n\t      id: string\n\t      url: string\n\t      viewerDidAuthor: boolean\n\t    }\n\t    const comment = new PullRequestComment()\n\t    comment.authorLogin = jsonObject['author']['login']\n", "    comment.createdAt = jsonObject['createdAt']\n\t    comment.body = jsonObject['body']\n\t    comment.authorAssociation = jsonObject['authorAssociation']\n\t    comment.id = jsonObject['id']\n\t    comment.url = jsonObject['url']\n\t    comment.viewerDidAuthor = jsonObject['viewerDidAuthor']\n\t    return comment\n\t  }\n\t}\n\tfunction ParseArrayOfType<T>(array: unknown[], cb: (wa: unknown) => T): T[] {\n", "  const parsedArray: T[] = []\n\t  for (const item of array) {\n\t    parsedArray.push(cb(item))\n\t  }\n\t  return parsedArray\n\t}\n\texport class CommitAuthor implements ICommitAuthor {\n\t  public email = ''\n\t  public name = ''\n\t  public login = ''\n", "  public id = ''\n\t  public static CreateFromJson(json: unknown): ICommitAuthor {\n\t    const jsonObject = json as { email: string; name: string; login: string; id: string }\n\t    const author = new CommitAuthor()\n\t    author.email = jsonObject['email']\n\t    author.name = jsonObject['name']\n\t    author.login = jsonObject['login']\n\t    author.id = jsonObject['id']\n\t    return author\n\t  }\n", "}\n\texport class PullRequestCommit implements IPullRequestCommit {\n\t  public authors: ICommitAuthor[] = []\n\t  public committer = ''\n\t  public authorDate = ''\n\t  public commitDate = ''\n\t  public commitHeader = ''\n\t  public commitBody = ''\n\t  public commitId = ''\n\t  public static CreateFromJson(json: unknown): IPullRequestCommit {\n", "    const jsonObject = json as {\n\t      authoredDate: string\n\t      authors: unknown[]\n\t      committedDate: string\n\t      messageHeadline: string\n\t      messageBody: string\n\t      oid: string\n\t    }\n\t    const commit = new PullRequestCommit()\n\t    commit.authorDate = jsonObject['authoredDate']\n", "    // eslint-disable-next-line @typescript-eslint/unbound-method\n\t    commit.authors = ParseArrayOfType<ICommitAuthor>(jsonObject['authors'], CommitAuthor.CreateFromJson)\n\t    commit.commitDate = jsonObject['committedDate']\n\t    commit.commitHeader = jsonObject['messageHeadline']\n\t    commit.commitBody = jsonObject['messageBody']\n\t    commit.commitId = jsonObject['oid']\n\t    return commit\n\t  }\n\t}\n\texport class StatusCheck implements IStatusCheck {\n", "  public workflowName = ''\n\t  public startedAt = ''\n\t  public completedAt = ''\n\t  public conclusion = ''\n\t  public status = ''\n\t  public name = ''\n\t  public detailsUrl = ''\n\t  public static CreateFromJson(json: unknown): IStatusCheck {\n\t    const jsonObject = json as {\n\t      workflowName: string\n", "      startedAt: string\n\t      completedAt: string\n\t      conclusion: string\n\t      status: string\n\t      name: string\n\t      detailsUrl: string\n\t    }\n\t    const statusCheck = new StatusCheck()\n\t    statusCheck.workflowName = jsonObject['workflowName']\n\t    statusCheck.startedAt = jsonObject['startedAt']\n", "    statusCheck.completedAt = jsonObject['completedAt']\n\t    statusCheck.conclusion = jsonObject['conclusion']\n\t    statusCheck.status = jsonObject['status']\n\t    statusCheck.name = jsonObject['name']\n\t    return statusCheck\n\t  }\n\t}\n\texport class PullRequest implements IPullRequest {\n\t  public id = 0\n\t  public title = ''\n", "  public createdAt = ''\n\t  public updatedAt = ''\n\t  public closedAt = ''\n\t  public mergedAt = ''\n\t  public body = ''\n\t  public author = ''\n\t  public state = ''\n\t  public mergeable = ''\n\t  public mergeStateStatus = ''\n\t  public isDraft = false\n", "  public baseRefName = ''\n\t  public headRefName = ''\n\t  public headRefOid = ''\n\t  public headRepository = ''\n\t  public headRepositoryOwner = ''\n\t  public commits: IPullRequestCommit[] = []\n\t  public reviews: IPullRequestReview[] = []\n\t  public comments: IPullRequestComment[] = []\n\t  public statusChecks: IStatusCheck[] = []\n\t  public fileChangeSummary: IFileChangeSummary = new FileChangeSummary()\n", "  public static CreateFromJson(cliPullRequest: unknown): IPullRequest {\n\t    const cliPullRequestObject = cliPullRequest as {\n\t      number: number\n\t      title: string\n\t      createdAt: string\n\t      updatedAt: string\n\t      closedAt: string\n\t      mergedAt: string\n\t      body: string\n\t      author: string\n", "      state: string\n\t      mergeable: string\n\t      mergeStateStatus: string\n\t      isDraft: boolean\n\t      baseRefName: string\n\t      headRefName: string\n\t      headRefOid: string\n\t      headRepository: string\n\t      headRepositoryOwner: string\n\t      commits: unknown[]\n", "      reviews: unknown[]\n\t      comments: unknown[]\n\t      statusCheckRollup: unknown[]\n\t      fileChangeSummary: unknown\n\t    }\n\t    const pr = new PullRequest()\n\t    pr.id = cliPullRequestObject['number']\n\t    pr.title = cliPullRequestObject['title']\n\t    pr.createdAt = cliPullRequestObject['createdAt']\n\t    pr.updatedAt = cliPullRequestObject['updatedAt']\n", "    pr.closedAt = cliPullRequestObject['closedAt']\n\t    pr.mergedAt = cliPullRequestObject['mergedAt']\n\t    pr.body = cliPullRequestObject['body']\n\t    pr.author = cliPullRequestObject['author']\n\t    pr.state = cliPullRequestObject['state']\n\t    pr.mergeable = cliPullRequestObject['mergeable']\n\t    pr.mergeStateStatus = cliPullRequestObject['mergeStateStatus']\n\t    pr.isDraft = cliPullRequestObject['isDraft']\n\t    pr.baseRefName = cliPullRequestObject['baseRefName']\n\t    pr.headRefName = cliPullRequestObject['headRefName']\n", "    pr.headRefOid = cliPullRequestObject['headRefOid']\n\t    pr.headRepository = cliPullRequestObject['headRepository']\n\t    pr.headRepositoryOwner = cliPullRequestObject['headRepositoryOwner']\n\t    pr.commits = ParseArrayOfType<IPullRequestCommit>(cliPullRequestObject['commits'], (commit) =>\n\t      PullRequestCommit.CreateFromJson(commit),\n\t    )\n\t    pr.reviews = ParseArrayOfType<IPullRequestReview>(cliPullRequestObject['reviews'], (review) =>\n\t      PullRequestReview.CreateFromJson(review),\n\t    )\n\t    pr.comments = ParseArrayOfType<IPullRequestComment>(cliPullRequestObject['comments'], (comment) =>\n", "      PullRequestComment.CreateFromJson(comment),\n\t    )\n\t    pr.statusChecks = ParseArrayOfType<IStatusCheck>(cliPullRequestObject['statusCheckRollup'], (statusCheck) =>\n\t      StatusCheck.CreateFromJson(statusCheck),\n\t    )\n\t    pr.fileChangeSummary = FileChangeSummary.CreateFromJson(cliPullRequestObject)\n\t    return pr\n\t  }\n\t}\n"]}
{"filename": "src/Report.Functions.ts", "chunked_list": ["// for license and copyright look at the repository\n\timport { IPullRequest } from './Interfaces/PullRequestTypes'\n\texport const GetAddedLines = (pr: IPullRequest): number => {\n\t  return pr.fileChangeSummary.additions\n\t}\n\texport const GetDeletedLines = (pr: IPullRequest): number => {\n\t  return pr.fileChangeSummary.deletions\n\t}\n\texport const GetChangedFilesCount = (pr: IPullRequest): number => {\n\t  return pr.fileChangeSummary.changedFilesList\n", "}\n\texport const GetCommitsCount = (pr: IPullRequest): number => {\n\t  return pr.fileChangeSummary.commits\n\t}\n\texport const GetReviewCount = (pr: IPullRequest): number => {\n\t  return pr.reviews.length\n\t}\n\texport const GetCommentCount = (pr: IPullRequest): number => {\n\t  return pr.comments.length\n\t}\n"]}
{"filename": "src/GitHubCliHelper.ts", "chunked_list": ["// for license and copyright look at the repository\n\t// use util to make exec a promise\n\timport * as util from 'util'\n\timport { exec } from 'child_process'\n\tconst execAsync = util.promisify(exec)\n\tconst gh_cli_arguments = `--json \"additions,assignees,author,baseRefName,body,changedFiles,closed,closedAt,comments,commits,createdAt,deletions,files,headRefName,headRefOid,headRepository,headRepositoryOwner,id,isCrossRepository,isDraft,labels,latestReviews,maintainerCanModify,mergeCommit,mergeStateStatus,mergeable,mergedAt,mergedBy,milestone,number,potentialMergeCommit,projectCards,projectItems,reactionGroups,reviewDecision,reviewRequests,reviews,state,statusCheckRollup,title,updatedAt,url\"`\n\texport const GetPullRequestData = async (pullRequestNumber: number, repo = ''): Promise<unknown> => {\n\t  let pullRequestData = undefined\n\t  let repoName = ''\n\t  if (repo !== '') {\n", "    repoName = `--repo ${repo}`\n\t  }\n\t  const ghCliCommand = `gh pr view ${pullRequestNumber} ${gh_cli_arguments} ${repoName}`\n\t  const { stdout, stderr } = await execAsync(ghCliCommand)\n\t  if (stdout === ``) {\n\t    throw new Error(`No data returned from GitHub CLI. Command: ${ghCliCommand} \\n Stderr: ${stderr}`)\n\t  }\n\t  pullRequestData = stdout\n\t  return JSON.parse(pullRequestData) as unknown\n\t}\n", "export const AddCommentToPR = async (commentFile: string, prNumber: number): Promise<void> => {\n\t  const ghCliCommand = `gh pr comment ${prNumber} --body-file ${commentFile}`\n\t  const { stdout, stderr } = await execAsync(ghCliCommand)\n\t  if (stdout === ``) {\n\t    throw new Error(`No data returned from GitHub CLI. Command: ${ghCliCommand} \\n Stderr: ${stderr}`)\n\t  }\n\t}\n"]}
{"filename": "src/Report.Measures.ts", "chunked_list": ["// for license and copyright look at the repository\n\timport {\n\t  MillisecondsToReadableDuration,\n\t  GetLeadTimeForPullRequest,\n\t  GetTimeSpendOnBranchBeforePRCreated,\n\t  GetTimeSpendOnBranchBeforePRMerged,\n\t  GetTimeToMergeAfterLastReview,\n\t  GetTotalRuntimeForLastStatusCheckRun,\n\t  GetTimeSpendInPrForLastStatusCheckRun,\n\t  GetNumberOfCommentOnlyReviews,\n", "  GetNumberOfRequestedChangeReviews,\n\t  GetNumberOfApprovedReviews,\n\t  GetTotalNumberOfParticipants,\n\t} from './Report.Calculation'\n\timport { ConfigurationCategory, ConfigurationInfo, ReportConfigurationEntry } from './Report.Definitions'\n\timport {\n\t  GetAddedLines,\n\t  GetDeletedLines,\n\t  GetChangedFilesCount,\n\t  GetCommitsCount,\n", "  GetReviewCount,\n\t  GetCommentCount,\n\t} from './Report.Functions'\n\timport { ConfigurationInputs } from './action.config.type'\n\texport const UpdateConfigValues = (\n\t  configValues: ConfigurationInputs,\n\t  measurementEntries: Array<ReportConfigurationEntry>,\n\t): Array<ReportConfigurationEntry> => {\n\t  // Update measurementEntries with config values from inputs\n\t  measurementEntries.forEach((entry) => {\n", "    // get the property value of inputs\n\t    entry.Info.ConfigValue = (configValues as { [key: string]: string | number })[entry.Info.ConfigurationName]\n\t  })\n\t  return measurementEntries\n\t}\n\texport const GetActiveMeasures = (entries: Array<ReportConfigurationEntry>): Array<ReportConfigurationEntry> => {\n\t  return entries.filter((entry) => entry.Info.ConfigValue === 'yes')\n\t}\n\texport const ReportConfigurationTable = new Array<ReportConfigurationEntry>()\n\tReportConfigurationTable.push(\n", "  new ReportConfigurationEntry(\n\t    'include_raw_data_as_md_comment',\n\t    new ConfigurationInfo(\n\t      'Add raw PR data as markdown comment in the PR Report (of the PR)',\n\t      0,\n\t      0,\n\t      'IncludeRawDataAsMarkdownComment',\n\t      'yes',\n\t      ConfigurationCategory.ReportGeneratorValue,\n\t    ),\n", "    () => 0,\n\t  ),\n\t)\n\tReportConfigurationTable.push(\n\t  new ReportConfigurationEntry(\n\t    'create_report_comment',\n\t    new ConfigurationInfo(\n\t      'Add PR report to the PR as comment',\n\t      0,\n\t      0,\n", "      'AddPrReportAsComment',\n\t      'yes',\n\t      ConfigurationCategory.ReportGeneratorValue,\n\t    ),\n\t    () => 0,\n\t  ),\n\t)\n\tReportConfigurationTable.push(\n\t  new ReportConfigurationEntry(\n\t    'title_string',\n", "    new ConfigurationInfo(\n\t      'Pull Request Report',\n\t      0,\n\t      0,\n\t      'ReportTitle',\n\t      'Pull Request Report',\n\t      ConfigurationCategory.ReportGeneratorValue,\n\t    ),\n\t    () => 0,\n\t  ),\n", ")\n\tReportConfigurationTable.push(\n\t  new ReportConfigurationEntry(\n\t    'additions',\n\t    new ConfigurationInfo('Number of added lines', 0, 0, 'ShowAdditions', 'yes', ConfigurationCategory.StaticMeasures),\n\t    GetAddedLines,\n\t  ),\n\t)\n\tReportConfigurationTable.push(\n\t  new ReportConfigurationEntry(\n", "    'deleted',\n\t    new ConfigurationInfo('Number of deleted lines', 0, 0, 'ShowDeleted', 'yes', ConfigurationCategory.StaticMeasures),\n\t    GetDeletedLines,\n\t  ),\n\t)\n\tReportConfigurationTable.push(\n\t  new ReportConfigurationEntry(\n\t    'changedFiles',\n\t    new ConfigurationInfo(\n\t      'Number of changed files',\n", "      0,\n\t      0,\n\t      'ShowNumberOfChangedFiles',\n\t      'yes',\n\t      ConfigurationCategory.StaticMeasures,\n\t    ),\n\t    GetChangedFilesCount,\n\t  ),\n\t)\n\tReportConfigurationTable.push(\n", "  new ReportConfigurationEntry(\n\t    'commits',\n\t    new ConfigurationInfo(\n\t      'Number of commits',\n\t      0,\n\t      0,\n\t      'ShowNumberOfCommits',\n\t      'yes',\n\t      ConfigurationCategory.StaticMeasures,\n\t    ),\n", "    GetCommitsCount,\n\t  ),\n\t)\n\tReportConfigurationTable.push(\n\t  new ReportConfigurationEntry(\n\t    'reviews',\n\t    new ConfigurationInfo(\n\t      'Number of reviews',\n\t      0,\n\t      0,\n", "      'ShowNumberOfReviews',\n\t      'yes',\n\t      ConfigurationCategory.StaticMeasures,\n\t    ),\n\t    GetReviewCount,\n\t  ),\n\t)\n\tReportConfigurationTable.push(\n\t  new ReportConfigurationEntry(\n\t    'comments',\n", "    new ConfigurationInfo(\n\t      'Number of comments (w/o review comments)',\n\t      0,\n\t      0,\n\t      'ShowNumberOfComments',\n\t      'yes',\n\t      ConfigurationCategory.StaticMeasures,\n\t    ),\n\t    GetCommentCount,\n\t  ),\n", ")\n\tReportConfigurationTable.push(\n\t  new ReportConfigurationEntry(\n\t    'pr_lead_time',\n\t    new ConfigurationInfo(\n\t      'PR lead time (from creation to close of PR)',\n\t      0,\n\t      0,\n\t      'ShowPRLeadTime',\n\t      'yes',\n", "      ConfigurationCategory.TimeRelatedMeasures,\n\t    ),\n\t    (pr) => MillisecondsToReadableDuration(GetLeadTimeForPullRequest(pr)),\n\t  ),\n\t)\n\tReportConfigurationTable.push(\n\t  new ReportConfigurationEntry(\n\t    'pr_time_branch_before_pr',\n\t    new ConfigurationInfo(\n\t      'Time that was spend on the branch before the PR was created',\n", "      0,\n\t      0,\n\t      'ShowTimeSpendOnBranchBeforePrCreated',\n\t      'yes',\n\t      ConfigurationCategory.TimeRelatedMeasures,\n\t    ),\n\t    (pr) => MillisecondsToReadableDuration(GetTimeSpendOnBranchBeforePRCreated(pr)),\n\t  ),\n\t)\n\tReportConfigurationTable.push(\n", "  new ReportConfigurationEntry(\n\t    'pr_time_branch_before_merge',\n\t    new ConfigurationInfo(\n\t      'Time that was spend on the branch before the PR was merged',\n\t      0,\n\t      0,\n\t      'ShowTimeSpendOnBranchBeforePrMerged',\n\t      'yes',\n\t      ConfigurationCategory.TimeRelatedMeasures,\n\t    ),\n", "    (pr) => MillisecondsToReadableDuration(GetTimeSpendOnBranchBeforePRMerged(pr)),\n\t  ),\n\t)\n\tReportConfigurationTable.push(\n\t  new ReportConfigurationEntry(\n\t    'pr_time_to_merge_after_last_review',\n\t    new ConfigurationInfo(\n\t      'Time to merge after last review',\n\t      0,\n\t      0,\n", "      'ShowTimeToMergeAfterLastReview',\n\t      'yes',\n\t      ConfigurationCategory.TimeRelatedMeasures,\n\t    ),\n\t    (pr) => MillisecondsToReadableDuration(GetTimeToMergeAfterLastReview(pr)),\n\t  ),\n\t)\n\tReportConfigurationTable.push(\n\t  new ReportConfigurationEntry(\n\t    'no_of_comment_only_reviews',\n", "    new ConfigurationInfo(\n\t      'Number of reviews that contains a comment to resolve',\n\t      0,\n\t      0,\n\t      'ShowNumberOfCommentOnlyReviews',\n\t      'yes',\n\t      ConfigurationCategory.StaticMeasures,\n\t    ),\n\t    (pr) => GetNumberOfCommentOnlyReviews(pr),\n\t  ),\n", ")\n\tReportConfigurationTable.push(\n\t  new ReportConfigurationEntry(\n\t    'no_of_change_requested_reviews',\n\t    new ConfigurationInfo(\n\t      'Number of reviews that requested a change from the author',\n\t      0,\n\t      0,\n\t      'ShowNumberOfRequestedChangeReviews',\n\t      'yes',\n", "      ConfigurationCategory.StaticMeasures,\n\t    ),\n\t    (pr) => GetNumberOfRequestedChangeReviews(pr),\n\t  ),\n\t)\n\tReportConfigurationTable.push(\n\t  new ReportConfigurationEntry(\n\t    'no_of_approved_reviews',\n\t    new ConfigurationInfo(\n\t      'Number of reviews that approved the Pull Request',\n", "      0,\n\t      0,\n\t      'ShowNumberOfApprovedReviews',\n\t      'yes',\n\t      ConfigurationCategory.StaticMeasures,\n\t    ),\n\t    (pr) => GetNumberOfApprovedReviews(pr),\n\t  ),\n\t)\n\tReportConfigurationTable.push(\n", "  new ReportConfigurationEntry(\n\t    'pr_time_total_runtime_for_last_status_check_run',\n\t    new ConfigurationInfo(\n\t      'Total runtime for last status check run (Workflow for PR)',\n\t      0,\n\t      0,\n\t      'ShowTimeTotalRuntimeForLastStatusCheckRun',\n\t      'yes',\n\t      ConfigurationCategory.StatusCheckRelatedMeasures,\n\t    ),\n", "    (pr) => MillisecondsToReadableDuration(GetTotalRuntimeForLastStatusCheckRun(pr)),\n\t  ),\n\t)\n\tReportConfigurationTable.push(\n\t  new ReportConfigurationEntry(\n\t    'pr_time_spend_in_pr_for_last_status_check_run',\n\t    new ConfigurationInfo(\n\t      'Total time spend in last status check run on PR',\n\t      0,\n\t      0,\n", "      'ShowTimeSpendOnPrForLastStatusCheckRun',\n\t      'yes',\n\t      ConfigurationCategory.StatusCheckRelatedMeasures,\n\t    ),\n\t    (pr) => MillisecondsToReadableDuration(GetTimeSpendInPrForLastStatusCheckRun(pr)),\n\t  ),\n\t)\n\tReportConfigurationTable.push(\n\t  new ReportConfigurationEntry(\n\t    'pr_total_number_of_participants',\n", "    new ConfigurationInfo(\n\t      'Get the total number of participants of a Pull Request',\n\t      0,\n\t      0,\n\t      'ShowTotalNumberOfParticipants',\n\t      'yes',\n\t      ConfigurationCategory.StaticMeasures,\n\t    ),\n\t    (pr) => GetTotalNumberOfParticipants(pr),\n\t  ),\n", ")\n"]}
{"filename": "src/Report.Calculation.ts", "chunked_list": ["// for license and copyright look at the repository\n\timport {\n\t  IPullRequest,\n\t  IPullRequestComment,\n\t  IPullRequestCommit,\n\t  IPullRequestReview,\n\t} from './Interfaces/PullRequestTypes'\n\timport { EventWithTime } from './Interfaces/ReportTypes'\n\timport { StatusCheck } from './PullRequest.Definitions'\n\texport const GenerateEventTimeline = (pullRequest: IPullRequest): EventWithTime[] => {\n", "  const events: EventWithTime[][] = []\n\t  // merge all interesting events into a single list\n\t  events.push([\n\t    { type: 'createAt', date: new Date(pullRequest.createdAt), event_instance: pullRequest.createdAt, time: 0 },\n\t  ])\n\t  events.push(\n\t    pullRequest.commits.map((commit) => ({\n\t      type: 'commit',\n\t      date: new Date(commit.authorDate),\n\t      event_instance: commit,\n", "      time: 0,\n\t    })),\n\t  )\n\t  events.push(\n\t    pullRequest.reviews.map((review) => ({\n\t      type: 'review',\n\t      date: new Date(review.submittedAt),\n\t      event_instance: review,\n\t      time: 0,\n\t    })),\n", "  )\n\t  events.push(\n\t    pullRequest.statusChecks.map((statusCheck) => ({\n\t      type: 'statusCheck',\n\t      date: new Date(statusCheck.completedAt),\n\t      event_instance: statusCheck,\n\t      time: 0,\n\t    })),\n\t  )\n\t  events.push(\n", "    pullRequest.comments.map((comment) => ({\n\t      type: 'comment',\n\t      date: new Date(comment.createdAt),\n\t      event_instance: comment,\n\t      time: 0,\n\t    })),\n\t  )\n\t  events.push([\n\t    { type: 'mergedAt', date: new Date(pullRequest.mergedAt), event_instance: pullRequest.mergedAt, time: 0 },\n\t  ])\n", "  events.push([\n\t    { type: 'closedAt', date: new Date(pullRequest.closedAt), event_instance: pullRequest.closedAt, time: 0 },\n\t  ])\n\t  // flatten the list\n\t  const flattenedEvents = events.flat()\n\t  // filter out events that don't have a valid date\n\t  const filteredEvents = flattenedEvents.filter((event) => event.date !== null)\n\t  // sort the events by date\n\t  filteredEvents.sort((a, b) => a.date.getTime() - b.date.getTime())\n\t  // now, create a list of events with the time between events\n", "  const eventsWithTime: EventWithTime[] = []\n\t  // calculate the time between events\n\t  for (let i = 0; i < filteredEvents.length; i++) {\n\t    if (i === 0) {\n\t      eventsWithTime.push({\n\t        type: filteredEvents[i].type,\n\t        date: filteredEvents[i].date,\n\t        time: 0,\n\t        event_instance: filteredEvents[i].event_instance,\n\t      })\n", "    } else {\n\t      eventsWithTime.push({\n\t        type: filteredEvents[i].type,\n\t        date: filteredEvents[i].date,\n\t        time: (filteredEvents[i].date.getTime() - filteredEvents[i - 1].date.getTime()) / 1000,\n\t        event_instance: filteredEvents[i].event_instance,\n\t      })\n\t    }\n\t  }\n\t  return eventsWithTime\n", "}\n\texport const MillisecondsToReadableDuration = (leadTimeInMSec: number) => {\n\t  const seconds = +(leadTimeInMSec / 1000).toFixed(1)\n\t  const minutes = +(leadTimeInMSec / (1000 * 60)).toFixed(1)\n\t  const hours = +(leadTimeInMSec / (1000 * 60 * 60)).toFixed(1)\n\t  const days = +(leadTimeInMSec / (1000 * 60 * 60 * 24)).toFixed(1)\n\t  if (seconds < 60) return `${seconds} Sec`\n\t  else if (minutes < 60) return `${minutes} Min`\n\t  else if (hours < 24) return `${hours} Hours`\n\t  else return `${days} Days`\n", "}\n\texport const GetMergedOrClosedDate = (pullRequest: IPullRequest): string => {\n\t  let mergedOrClosedAt = pullRequest.mergedAt\n\t  if (mergedOrClosedAt == null) mergedOrClosedAt = pullRequest.closedAt\n\t  return mergedOrClosedAt\n\t}\n\texport const GetLeadTimeForPullRequest = (pullRequest: IPullRequest) => {\n\t  // parse createAt as date from string\n\t  const createAt = new Date(pullRequest.createdAt)\n\t  const mergedOrClosedAt = new Date(GetMergedOrClosedDate(pullRequest))\n", "  const duration = mergedOrClosedAt.getTime() - createAt.getTime()\n\t  if (duration <= 0 || isNaN(duration)) return 0\n\t  return duration\n\t}\n\texport const GetTimeSpendOnBranchBeforePRCreated = (pullRequest: IPullRequest) => {\n\t  const eventTimeline = GenerateEventTimeline(pullRequest)\n\t  const createAtEvent = eventTimeline.find((event) => event.type === 'createAt')\n\t  const firstCommitEvent = eventTimeline.find((event) => event.type === 'commit')\n\t  if (!createAtEvent || !firstCommitEvent) return 0\n\t  const duration = createAtEvent.date.getTime() - firstCommitEvent.date.getTime()\n", "  if (duration <= 0 || isNaN(duration)) return 0\n\t  return duration\n\t}\n\texport const GetTimeSpendOnBranchBeforePRMerged = (pullRequest: IPullRequest) => {\n\t  const eventTimeline = GenerateEventTimeline(pullRequest)\n\t  const mergedAtEvent = eventTimeline.find((event) => event.type === 'mergedAt')\n\t  const firstCommitEvent = eventTimeline.find((event) => event.type === 'commit')\n\t  if (mergedAtEvent && firstCommitEvent && mergedAtEvent.date.getTime() > firstCommitEvent.date.getTime()) {\n\t    return mergedAtEvent.date.getTime() - firstCommitEvent.date.getTime()\n\t  }\n", "  return -1\n\t}\n\texport const GetTimeToMergeAfterLastReview = (pullRequest: IPullRequest) => {\n\t  const eventTimeline = GenerateEventTimeline(pullRequest)\n\t  const mergedAtEvent = eventTimeline.find((event) => event.type === 'mergedAt')\n\t  const reviewEvents = eventTimeline.filter((event) => event.type === 'review')\n\t  if (reviewEvents.length <= 0) {\n\t    return -1\n\t  }\n\t  const lastReviewEvent = reviewEvents.reverse()[0]\n", "  if (mergedAtEvent && lastReviewEvent && mergedAtEvent.date.getTime() > lastReviewEvent.date.getTime()) {\n\t    return mergedAtEvent.date.getTime() - lastReviewEvent.date.getTime()\n\t  }\n\t  return -1\n\t}\n\texport const GetTotalRuntimeForLastStatusCheckRun = (pullRequest: IPullRequest) => {\n\t  const eventTimeline = GenerateEventTimeline(pullRequest)\n\t  const statusCheckEvents = eventTimeline\n\t    .filter((event) => event.type === 'statusCheck')\n\t    .map((event) => event.event_instance as StatusCheck)\n", "    .filter((statusCheck) => statusCheck.status == 'COMPLETED')\n\t  if (statusCheckEvents.length <= 0) {\n\t    return 0\n\t  }\n\t  let totalTime = 0\n\t  statusCheckEvents.forEach((statusCheck) => {\n\t    totalTime += new Date(statusCheck.completedAt).getTime() - new Date(statusCheck.startedAt).getTime()\n\t  })\n\t  return totalTime\n\t}\n", "export const GetTimeSpendInPrForLastStatusCheckRun = (pullRequest: IPullRequest) => {\n\t  const eventTimeline = GenerateEventTimeline(pullRequest)\n\t  const statusCheckEvents = eventTimeline\n\t    .filter((event) => event.type === 'statusCheck')\n\t    .map((event) => event.event_instance as StatusCheck)\n\t    .filter((statusCheck) => statusCheck.status == 'COMPLETED')\n\t  if (statusCheckEvents.length <= 0) {\n\t    return 0\n\t  }\n\t  let earliestStart = new Date()\n", "  let latestCompletion = new Date(0, 0, 0)\n\t  statusCheckEvents.forEach((statusCheckEvent) => {\n\t    const completedDate = new Date(statusCheckEvent.completedAt)\n\t    const startedDate = new Date(statusCheckEvent.startedAt)\n\t    if (startedDate < earliestStart) {\n\t      earliestStart = startedDate\n\t    }\n\t    if (completedDate > latestCompletion) {\n\t      latestCompletion = completedDate\n\t    }\n", "  })\n\t  return latestCompletion.getTime() - earliestStart.getTime()\n\t}\n\tconst FilterReviewsByState = (pullRequest: IPullRequest, state: string) => {\n\t  const eventTimeline = GenerateEventTimeline(pullRequest)\n\t  const reviewEvents = eventTimeline.filter((event) => event.type === 'review')\n\t  if (reviewEvents.length <= 0) {\n\t    return []\n\t  }\n\t  const filteredReviews = reviewEvents.filter((reviewEvent) => {\n", "    const review = reviewEvent.event_instance as IPullRequestReview\n\t    return review.state === state\n\t  })\n\t  return filteredReviews\n\t}\n\texport const GetNumberOfCommentOnlyReviews = (pullRequest: IPullRequest) => {\n\t  return FilterReviewsByState(pullRequest, 'COMMENTED').length\n\t}\n\texport const GetNumberOfRequestedChangeReviews = (pullRequest: IPullRequest) => {\n\t  return FilterReviewsByState(pullRequest, 'CHANGES_REQUESTED').length\n", "}\n\texport const GetNumberOfApprovedReviews = (pullRequest: IPullRequest) => {\n\t  return FilterReviewsByState(pullRequest, 'APPROVED').length\n\t}\n\texport const GetUniqueReviewParticipants = (pullRequest: IPullRequest) => {\n\t  const eventTimeline = GenerateEventTimeline(pullRequest)\n\t  const reviewEvents = eventTimeline.filter((event) => event.type === 'review')\n\t  // extract unique reviewers from review events\n\t  return reviewEvents\n\t    .map((reviewEvent) => reviewEvent.event_instance as IPullRequestReview)\n", "    .map((review) => review.authorLogin)\n\t    .filter((value, index, self) => self.indexOf(value) === index)\n\t}\n\texport const GetUniqueCommentParticipants = (pullRequest: IPullRequest) => {\n\t  const eventTimeline = GenerateEventTimeline(pullRequest)\n\t  const commentEvents = eventTimeline.filter((event) => event.type === 'comment')\n\t  // extract unique commenter from review events\n\t  return commentEvents\n\t    .map((commentEvent) => commentEvent.event_instance as IPullRequestComment)\n\t    .map((comment) => comment.authorLogin)\n", "    .filter((value, index, self) => self.indexOf(value) === index)\n\t}\n\texport const GetUniqueCommitterParticipants = (pullRequest: IPullRequest) => {\n\t  const eventTimeline = GenerateEventTimeline(pullRequest)\n\t  const commitEvents = eventTimeline.filter((event) => event.type === 'commit')\n\t  // extract unique reviewers from review events\n\t  return commitEvents\n\t    .map((commitEvent) => commitEvent.event_instance as IPullRequestCommit)\n\t    .map((commit) => commit.authors.filter((author) => author.login !== null).map((author) => author.login))\n\t    .flat()\n", "    .filter((value, index, self) => self.indexOf(value) === index)\n\t}\n\texport const GetNumberOfActivePullRequestReviewParticipants = (pullRequest: IPullRequest) => {\n\t  const uniqueReviewers = GetUniqueReviewParticipants(pullRequest)\n\t  const uniqueCommenter = GetUniqueCommentParticipants(pullRequest)\n\t  return uniqueReviewers.concat(uniqueCommenter).filter((value, index, self) => self.indexOf(value) === index).length\n\t}\n\texport const GetNumberOfPullRequestCommitter = (pullRequest: IPullRequest) => {\n\t  return GetUniqueCommitterParticipants(pullRequest).length\n\t}\n", "export const GetTotalNumberOfParticipants = (pullRequest: IPullRequest) => {\n\t  return GetNumberOfActivePullRequestReviewParticipants(pullRequest) + GetNumberOfPullRequestCommitter(pullRequest)\n\t}\n"]}
{"filename": "src/action.config.type.ts", "chunked_list": ["//GENERATED FILE FROM report.config.tests.ts - DO NOT EDIT!!!\n\texport type ConfigurationInputs = {\n\t  IncludeRawDataAsMarkdownComment: string | number\n\t  AddPrReportAsComment: string | number\n\t  ReportTitle: string | number\n\t  ShowAdditions: string | number\n\t  ShowDeleted: string | number\n\t  ShowNumberOfChangedFiles: string | number\n\t  ShowNumberOfCommits: string | number\n\t  ShowNumberOfReviews: string | number\n", "  ShowNumberOfComments: string | number\n\t  ShowNumberOfCommentOnlyReviews: string | number\n\t  ShowNumberOfRequestedChangeReviews: string | number\n\t  ShowNumberOfApprovedReviews: string | number\n\t  ShowTotalNumberOfParticipants: string | number\n\t  ShowTimeTotalRuntimeForLastStatusCheckRun: string | number\n\t  ShowTimeSpendOnPrForLastStatusCheckRun: string | number\n\t  ShowPRLeadTime: string | number\n\t  ShowTimeSpendOnBranchBeforePrCreated: string | number\n\t  ShowTimeSpendOnBranchBeforePrMerged: string | number\n", "  ShowTimeToMergeAfterLastReview: string | number\n\t}\n"]}
{"filename": "src/Interfaces/PullRequestTypes.ts", "chunked_list": ["// for license and copyright look at the repository\n\texport interface IFileChangeSummary {\n\t  additions: number\n\t  deletions: number\n\t  commits: number\n\t  changedFilesList: number\n\t}\n\texport interface IPullRequestReview {\n\t  authorLogin: string\n\t  state: string\n", "  submittedAt: string\n\t  body: string\n\t}\n\texport interface IPullRequestComment {\n\t  authorAssociation: string\n\t  authorLogin: string\n\t  createdAt: string\n\t  body: string\n\t  id: string\n\t  url: string\n", "  viewerDidAuthor: boolean\n\t}\n\texport interface ICommitAuthor {\n\t  email: string\n\t  name: string\n\t  login: string\n\t  id: string\n\t}\n\texport interface IPullRequestCommit {\n\t  authors: ICommitAuthor[]\n", "  committer: string\n\t  authorDate: string\n\t  commitDate: string\n\t  commitHeader: string\n\t  commitBody: string\n\t  commitId: string\n\t}\n\texport interface IStatusCheck {\n\t  workflowName: string\n\t  startedAt: string\n", "  completedAt: string\n\t  conclusion: string\n\t  status: string\n\t  name: string\n\t}\n\texport interface IPullRequest {\n\t  id: number\n\t  title: string\n\t  createdAt: string\n\t  updatedAt: string\n", "  closedAt: string\n\t  mergedAt: string\n\t  body: string\n\t  author: string\n\t  state: string\n\t  mergeable: string\n\t  mergeStateStatus: string\n\t  isDraft: boolean\n\t  baseRefName: string\n\t  headRefName: string\n", "  headRefOid: string\n\t  headRepository: string\n\t  headRepositoryOwner: string\n\t  commits: IPullRequestCommit[]\n\t  reviews: IPullRequestReview[]\n\t  comments: IPullRequestComment[]\n\t  statusChecks: IStatusCheck[]\n\t  fileChangeSummary: IFileChangeSummary\n\t}\n"]}
{"filename": "src/Interfaces/ReportTypes.ts", "chunked_list": ["// for license and copyright look at the repository\n\timport { ConfigurationCategory } from '../Report.Definitions'\n\timport { IPullRequest } from './PullRequestTypes'\n\texport type PullRequestCallback = (pr: IPullRequest) => string | number\n\texport interface IReportConfigInfo {\n\t  Description: string\n\t  PresentationValue: string | number\n\t  Value: string | number\n\t  ConfigurationName: string\n\t  ConfigurationCategory: ConfigurationCategory\n", "  ConfigValue: string | number\n\t}\n\texport interface IReportConfigurationEntry {\n\t  Id: string\n\t  Info: IReportConfigInfo\n\t  PullRequestCallback: PullRequestCallback\n\t}\n\texport interface IReport {\n\t  Id: string\n\t  Description: string\n", "  Entries: IReportConfigurationEntry[]\n\t}\n\texport interface EventWithTime {\n\t  type: string\n\t  date: Date\n\t  time: number\n\t  event_instance: unknown\n\t}\n"]}
