{"filename": "test/contains.spec.ts", "chunked_list": ["/*\n\tCopyright 2023 Adobe. All rights reserved.\n\tThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n\tyou may not use this file except in compliance with the License. You may obtain a copy\n\tof the License at http://www.apache.org/licenses/LICENSE-2.0\n\tUnless required by applicable law or agreed to in writing, software distributed under\n\tthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n\tOF ANY KIND, either express or implied. See the License for the specific language\n\tgoverning permissions and limitations under the License.\n\t*/\n", "import RulesEngine from \"../src/index\";\n\timport { RuleSet } from \"../src/types/schema\";\n\tconst RULE_DEFINITION: RuleSet = {\n\t  version: 1,\n\t  rules: [\n\t    {\n\t      condition: {\n\t        type: \"matcher\",\n\t        definition: {\n\t          key: \"color\",\n", "          matcher: \"co\",\n\t          values: [\n\t            \"red\",\n\t            \"blue\",\n\t            \"GREEN\",\n\t            {},\n\t            new Set(),\n\t            undefined,\n\t            null,\n\t            true,\n", "            \"🙃\",\n\t          ],\n\t        },\n\t      },\n\t      consequences: [\n\t        {\n\t          id: \"123\",\n\t          type: \"data\",\n\t          detail: {\n\t            html: \"<h1>Hello World of color!</h1>\",\n", "          },\n\t        },\n\t      ],\n\t    },\n\t  ],\n\t};\n\tdescribe(\"matcher type - contains (co)\", () => {\n\t  it(\"returns consequences when any of the condition definition values contains the relevant key's value of given context\", () => {\n\t    const result = RulesEngine(RULE_DEFINITION).execute({\n\t      fabric: \"cotton\",\n", "      brand: \"Nike\",\n\t      color: \"Stay green, stay in the woods, and stay safe\",\n\t    });\n\t    expect(result).toEqual([RULE_DEFINITION.rules[0].consequences]);\n\t  });\n\t  it(\"returns consequences irrespective of casing when any of the condition definition values contains the relevant key's value of given context\", () => {\n\t    const result = RulesEngine(RULE_DEFINITION).execute({\n\t      fabric: \"cotton\",\n\t      brand: \"Nike\",\n\t      color: \"Water Is Blue \",\n", "    });\n\t    expect(result).toEqual([RULE_DEFINITION.rules[0].consequences]);\n\t  });\n\t  it(\"returns empty consequence when any of the condition definition values does not contain the relevant key's value of given context\", () => {\n\t    const result = RulesEngine(RULE_DEFINITION).execute({\n\t      fabric: \"cotton\",\n\t      brand: \"Polo\",\n\t      color: \"yellow yellow \",\n\t    });\n\t    expect(result).toEqual([]);\n", "  });\n\t  it(\"returns empty consequence when the input context key's value is null\", () => {\n\t    const result = RulesEngine(RULE_DEFINITION).execute({\n\t      fabric: \"cotton\",\n\t      brand: \"Polo\",\n\t      color: null,\n\t    });\n\t    expect(result).toEqual([]);\n\t  });\n\t  it(\"returns empty consequence when the input context key's value is undefined\", () => {\n", "    const result = RulesEngine(RULE_DEFINITION).execute({\n\t      fabric: \"cotton\",\n\t      brand: \"Polo\",\n\t      color: undefined,\n\t    });\n\t    expect(result).toEqual([]);\n\t  });\n\t  it(\"returns empty consequence when the input context key's value is new Set()\", () => {\n\t    const result = RulesEngine(RULE_DEFINITION).execute({\n\t      fabric: \"cotton\",\n", "      brand: \"Polo\",\n\t      color: new Set(),\n\t    });\n\t    expect(result).toEqual([]);\n\t  });\n\t  it(\"returns empty consequence when the input context key's value is an object\", () => {\n\t    const result = RulesEngine(RULE_DEFINITION).execute({\n\t      fabric: \"cotton\",\n\t      brand: \"Polo\",\n\t      color: {},\n", "    });\n\t    expect(result).toEqual([]);\n\t  });\n\t  it(\"returns consequences when the input context key's value is emoji\", () => {\n\t    const result = RulesEngine(RULE_DEFINITION).execute({\n\t      fabric: \"cotton\",\n\t      brand: \"Polo\",\n\t      color: \"🙃\",\n\t    });\n\t    expect(result).toEqual([RULE_DEFINITION.rules[0].consequences]);\n", "  });\n\t  it(\"returns consequence when the input context key's value is true in double quote\", () => {\n\t    const ruleSet: RuleSet = {\n\t      version: 1,\n\t      rules: [\n\t        {\n\t          condition: {\n\t            type: \"matcher\",\n\t            definition: {\n\t              key: \"color\",\n", "              matcher: \"co\",\n\t              values: [true],\n\t            },\n\t          },\n\t          consequences: [\n\t            {\n\t              id: \"123\",\n\t              type: \"data\",\n\t              detail: {},\n\t            },\n", "          ],\n\t        },\n\t      ],\n\t    };\n\t    expect(RulesEngine(ruleSet).execute({ color: \"true\" })).toEqual([\n\t      [\n\t        {\n\t          id: \"123\",\n\t          type: \"data\",\n\t          detail: {},\n", "        },\n\t      ],\n\t    ]);\n\t  });\n\t  it(\"returns  consequence when the input context key's value is true\", () => {\n\t    const ruleSet: RuleSet = {\n\t      version: 1,\n\t      rules: [\n\t        {\n\t          condition: {\n", "            type: \"matcher\",\n\t            definition: {\n\t              key: \"color\",\n\t              matcher: \"co\",\n\t              values: [\"true\"],\n\t            },\n\t          },\n\t          consequences: [\n\t            {\n\t              id: \"123\",\n", "              type: \"data\",\n\t              detail: {},\n\t            },\n\t          ],\n\t        },\n\t      ],\n\t    };\n\t    expect(RulesEngine(ruleSet).execute({ color: true })).toEqual([\n\t      [\n\t        {\n", "          id: \"123\",\n\t          type: \"data\",\n\t          detail: {},\n\t        },\n\t      ],\n\t    ]);\n\t  });\n\t});\n"]}
{"filename": "test/exists.spec.ts", "chunked_list": ["/*\n\tCopyright 2023 Adobe. All rights reserved.\n\tThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n\tyou may not use this file except in compliance with the License. You may obtain a copy\n\tof the License at http://www.apache.org/licenses/LICENSE-2.0\n\tUnless required by applicable law or agreed to in writing, software distributed under\n\tthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n\tOF ANY KIND, either express or implied. See the License for the specific language\n\tgoverning permissions and limitations under the License.\n\t*/\n", "import RulesEngine from \"../src/index\";\n\timport { RuleSet } from \"../src/types/schema\";\n\tconst RULE_SET: RuleSet = {\n\t  version: 1.1,\n\t  rules: [\n\t    {\n\t      condition: {\n\t        type: \"matcher\",\n\t        definition: {\n\t          key: \"os\",\n", "          matcher: \"ex\",\n\t        },\n\t      },\n\t      consequences: [\n\t        {\n\t          id: \"b2023\",\n\t          type: \"data\",\n\t          detail: {\n\t            html: \"<h1>Special offer for windows laptop owners!</h1>\",\n\t          },\n", "        },\n\t      ],\n\t    },\n\t  ],\n\t};\n\tdescribe(\"matcher type - exists (ex)\", () => {\n\t  let ruleset;\n\t  beforeEach(() => {\n\t    ruleset = RulesEngine(RULE_SET);\n\t  });\n", "  it(\"it returns consequences when key does exist\", () => {\n\t    const result = ruleset.execute({\n\t      browser: \"firefox\",\n\t      timeSpentOnPage: 5,\n\t      os: \"windows\",\n\t    });\n\t    expect(result).toEqual([RULE_SET.rules[0].consequences]);\n\t  });\n\t  it(\"it returns empty when key does not exist\", () => {\n\t    const result = ruleset.execute({\n", "      browser: \"safari\",\n\t      timeSpentOnPage: \"5 seconds\",\n\t      os1: \"mac\",\n\t    });\n\t    expect(result).toEqual([]);\n\t  });\n\t  it(\"returns empty consequence when key exist but value of key is undefined in the context\", () => {\n\t    const result = ruleset.execute({\n\t      browser: \"chrome\",\n\t      timeSpentOnPage: \"10 seconds\",\n", "      os: undefined,\n\t    });\n\t    expect(result).toEqual([]);\n\t  });\n\t  it(\"returns empty consequence when key exist but value of key is null in the context\", () => {\n\t    const result = ruleset.execute({\n\t      browser: \"IE11\",\n\t      timeSpentOnPage: \"20 seconds\",\n\t      os: null,\n\t    });\n", "    expect(result).toEqual([]);\n\t  });\n\t});\n"]}
{"filename": "test/nested-group.spec.ts", "chunked_list": ["/*\n\tCopyright 2023 Adobe. All rights reserved.\n\tThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n\tyou may not use this file except in compliance with the License. You may obtain a copy\n\tof the License at http://www.apache.org/licenses/LICENSE-2.0\n\tUnless required by applicable law or agreed to in writing, software distributed under\n\tthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n\tOF ANY KIND, either express or implied. See the License for the specific language\n\tgoverning permissions and limitations under the License.\n\t*/\n", "import RulesEngine from \"../src/index\";\n\timport { RuleSet } from \"../src/types/schema\";\n\tconst RULE_DEFINITION: RuleSet = {\n\t  version: 1,\n\t  rules: [\n\t    {\n\t      condition: {\n\t        type: \"group\",\n\t        definition: {\n\t          logic: \"and\",\n", "          conditions: [\n\t            {\n\t              type: \"group\",\n\t              definition: {\n\t                logic: \"or\",\n\t                conditions: [\n\t                  {\n\t                    type: \"matcher\",\n\t                    definition: {\n\t                      key: \"key1\",\n", "                      matcher: \"eq\",\n\t                      values: [\"value1\", \"value2\"],\n\t                    },\n\t                  },\n\t                  {\n\t                    type: \"group\",\n\t                    definition: {\n\t                      logic: \"and\",\n\t                      conditions: [\n\t                        {\n", "                          type: \"matcher\",\n\t                          definition: {\n\t                            key: \"key2\",\n\t                            matcher: \"ne\",\n\t                            values: [\"value3\"],\n\t                          },\n\t                        },\n\t                        {\n\t                          type: \"matcher\",\n\t                          definition: {\n", "                            key: \"key2\",\n\t                            matcher: \"ne\",\n\t                            values: [\"value4\"],\n\t                          },\n\t                        },\n\t                      ],\n\t                    },\n\t                  },\n\t                ],\n\t              },\n", "            },\n\t            {\n\t              type: \"matcher\",\n\t              definition: {\n\t                key: \"key3\",\n\t                matcher: \"eq\",\n\t                values: [\"value5\", \"value6\"],\n\t              },\n\t            },\n\t          ],\n", "        },\n\t      },\n\t      consequences: [\n\t        {\n\t          id: \"11111111\",\n\t          type: \"data\",\n\t          detail: {\n\t            html: \"<h1>Hola el Mundo!</h1>\",\n\t          },\n\t        },\n", "      ],\n\t    },\n\t  ],\n\t};\n\tlet ruleset;\n\tdescribe(\"nested group\", () => {\n\t  beforeEach(() => {\n\t    ruleset = RulesEngine(RULE_DEFINITION);\n\t  });\n\t  it(\"execute all conditions true\", () => {\n", "    const result = ruleset.execute({\n\t      key1: \"value1\",\n\t      key2: \"value2\",\n\t      key3: \"value5\",\n\t    });\n\t    expect(result).toEqual([RULE_DEFINITION.rules[0].consequences]);\n\t  });\n\t  it(\"execute all conditions true, nested or first true second false\", () => {\n\t    const result = ruleset.execute({\n\t      key1: \"value1\",\n", "      key2: \"value3\",\n\t      key3: \"value5\",\n\t    });\n\t    expect(result).toEqual([RULE_DEFINITION.rules[0].consequences]);\n\t  });\n\t  it(\"execute all conditions true, nested or first false second true\", () => {\n\t    const result = ruleset.execute({\n\t      key1: \"valueX\",\n\t      key2: \"value2\",\n\t      key3: \"value5\",\n", "    });\n\t    expect(result).toEqual([RULE_DEFINITION.rules[0].consequences]);\n\t  });\n\t  it(\"execute first condition false\", () => {\n\t    const result = ruleset.execute({\n\t      key1: \"valueX\",\n\t      key2: \"value3\",\n\t      key3: \"value5\",\n\t    });\n\t    expect(result).toEqual([]);\n", "  });\n\t  it(\"execute second condition false\", () => {\n\t    const result = ruleset.execute({\n\t      key1: \"value1\",\n\t      key2: \"value2\",\n\t      key3: \"valueX\",\n\t    });\n\t    expect(result).toEqual([]);\n\t  });\n\t});\n"]}
{"filename": "test/trackState.spec.ts", "chunked_list": ["/*\n\tCopyright 2023 Adobe. All rights reserved.\n\tThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n\tyou may not use this file except in compliance with the License. You may obtain a copy\n\tof the License at http://www.apache.org/licenses/LICENSE-2.0\n\tUnless required by applicable law or agreed to in writing, software distributed under\n\tthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n\tOF ANY KIND, either express or implied. See the License for the specific language\n\tgoverning permissions and limitations under the License.\n\t*/\n", "import RulesEngine from \"../src/index\";\n\timport { Consequence, RuleSet } from \"../src/types/schema\";\n\tlet CONSEQUENCE: Consequence = {\n\t  id: \"c5001836-1b57-4992-af20-52d7962a1494\",\n\t  type: \"cjmiam\",\n\t  detail: {\n\t    mobileParameters: {\n\t      verticalAlign: \"top\",\n\t      dismissAnimation: \"top\",\n\t      verticalInset: 2,\n", "      backdropOpacity: 0.2,\n\t      gestures: {\n\t        swipeUp: \"adbinapp://dismiss?interaction=swipeUp\",\n\t      },\n\t      cornerRadius: 15,\n\t      horizontalInset: 0,\n\t      uiTakeover: false,\n\t      horizontalAlign: \"center\",\n\t      displayAnimation: \"top\",\n\t      width: 95,\n", "      backdropColor: \"#000000\",\n\t      height: 17,\n\t    },\n\t    html: '<!doctype html>\\n<html><head>\\n    <meta type=\"templateProperties\" name=\"banner\" label=\"adobe-label:banner\" icon=\"adobe-icon:banner\">\\n    <meta type=\"templateZone\" name=\"default\" label=\"Default\" classname=\"body\" definition=\"[&quot;Image&quot;, &quot;Text&quot;, &quot;CloseBtn&quot;]\">\\n\\n    <meta type=\"templateDefaultAnimations\" displayanimation=\"top\" dismissanimation=\"top\">\\n    <meta type=\"templateDefaultSize\" width=\"95\" height=\"17\">\\n    <meta type=\"templateDefaultPosition\" verticalalign=\"top\" verticalinset=\"2\" horizontalalign=\"center\" horizontalinset=\"0\">\\n    <meta type=\"templateDefaultUiTakeover\" enable=\"false\">\\n\\n    <meta type=\"templateVariation\" default=\"true\" name=\"top\" label=\"adobe-label:banner-variation-top\" classname=\"variationTop\">\\n    <meta type=\"templateVariation\" name=\"bottom\" label=\"adobe-label:banner-variation-bottom\" classname=\"variationBottom\">\\n\\n    <meta type=\"templateDefaultGesture\" variation=\"top\" swipeup=\"adbinapp://dismiss?interaction=swipeUp\">\\n    <meta type=\"templateDefaultAnimations\" variation=\"bottom\" displayanimation=\"bottom\" dismissanimation=\"bottom\">\\n    <meta type=\"templateDefaultPosition\" variation=\"bottom\" verticalalign=\"bottom\">\\n    <meta type=\"templateDefaultGesture\" variation=\"bottom\" swipedown=\"adbinapp://dismiss?interaction=swipeDown\">\\n\\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\\n    <meta charset=\"UTF-8\">\\n    <style>\\n      html,\\n      body {\\n        margin: 0;\\n        padding: 0;\\n        text-align: center;\\n        width: 100%;\\n        height: 100%;\\n        font-family: adobe-clean, \\'Source Sans Pro\\', -apple-system, BlinkMacSystemFont, \\'Segoe UI\\',\\n          Roboto, sans-serif;\\n      }\\n\\n      h3 {\\n        margin: 0.1rem auto;\\n      }\\n      p {\\n        margin: 0;\\n      }\\n\\n      a {\\n        text-decoration: none;\\n      }\\n\\n      .wrapper {\\n        background-color: #fff;\\n        border-radius: 0.3125rem;\\n        color: #333333;\\n        width: 100%;\\n        min-height: 100%;\\n        display: flex;\\n        justify-content: center;\\n        flex-direction: column;\\n        position: relative;\\n        background-size: \\'cover\\';\\n      }\\n\\n      .content {\\n        height: 100vh;\\n        width: 100vw;\\n      }\\n\\n      .text {\\n        flex-grow: 1;\\n        text-align: left;\\n        line-height: 1.25rem;\\n        font-size: 0.875rem;\\n        color: #333333;\\n        letter-spacing: 0;\\n      }\\n\\n      .text:first-child {\\n        line-height: 1.3125rem;\\n        font-size: 1.025rem;\\n      }\\n\\n      .btnClose {\\n        color: #000000;\\n      }\\n\\n      .closeBtn {\\n        align-self: flex-start;\\n        order: 999;\\n      }\\n      .closeBtn img {\\n        width: 100%;\\n        height: 100%;\\n      }\\n\\n      .image {\\n        height: 100%;\\n        padding-right: 0.8rem;\\n        align-items: center;\\n        flex-grow: 0;\\n        display: flex;\\n      }\\n      .image img {\\n        height: 100%;\\n        max-width: 100%;\\n      }\\n\\n      .image.empty-image {\\n        display: none;\\n      }\\n\\n      .empty-image ~ .text {\\n        flex-grow: 1;\\n      }\\n\\n      .body {\\n        flex-grow: 1;\\n        width: 100%;\\n        height: 100%;\\n        display: flex;\\n        flex-direction: row;\\n        padding: 0.8rem;\\n        box-sizing: border-box;\\n        align-items: center;\\n        justify-content: space-between;\\n      }\\n\\n      .buttons {\\n        width: 100%;\\n        display: flex;\\n        flex-direction: column;\\n        font-size: 1rem;\\n        line-height: 1.3rem;\\n        text-decoration: none;\\n        text-align: center;\\n        box-sizing: border-box;\\n        padding: 0.8rem;\\n        padding-top: 0.4rem;\\n      }\\n\\n      .button {\\n        flex-grow: 1;\\n        background-color: #1473e6;\\n        color: #ffffff;\\n        border-radius: 0.25rem;\\n        cursor: pointer;\\n        padding: 0.3rem;\\n        gap: 0.5rem;\\n      }\\n    </style>\\n    <style type=\"text/css\" id=\"editor-styles\">\\n\\n</style>\\n  </head>\\n\\n  <body>\\n    <div class=\"wrapper\">\\n      <div class=\"content\">\\n        <div class=\"body\"><div class=\"image\" data-uuid=\"8163d13c-1e4e-4b07-94c7-18271bc02099\"><img src=\"https://exc-unifiedcontent.experience-stage.adobe.net/solutions/cjm-message-ui/static-assets/inapp/InAppBlockImageDefault.svg\" alt=\"Hello World\"></div><div class=\"text\" data-uuid=\"ebe691ce-3c1e-4f3e-87bd-010bc4a4033a\"><h3>Lion king</h3><p>Hakuna Matata! What a wonderful phrase Hakuna Matata!iption text</p></div><div class=\"closeBtn\" data-uuid=\"771eff8c-e85a-4072-8988-51f2008b8381\" data-btn-style=\"circle\"><a aria-label=\"Close\" class=\"btnClose\" href=\"adbinapp://dismiss?interaction=cancel\"><svg xmlns=\"http://www.w3.org/2000/svg\" height=\"18\" viewbox=\"0 0 18 18\" width=\"18\" class=\"close\">\\n  <rect id=\"Canvas\" fill=\"#ffffff\" opacity=\"0\" width=\"18\" height=\"18\"></rect>\\n  <path fill=\"currentColor\" d=\"M14.657,3.343a8,8,0,1,0-.00021,11.31371l.00021-.00021A8,8,0,0,0,14.657,3.343Zm-1.3435,9.265-.707.7055a.6.6,0,0,1-.84853.00147l-.00147-.00147L9,10.5555l-2.758,2.758a.6.6,0,0,1-.84853.00147L5.392,13.3135l-.7045-.7075a.6.6,0,0,1-.00147-.84853L4.6875,11.756,7.4445,9,4.6875,6.242A.6.6,0,0,1,4.686,5.39347L4.6875,5.392l.707-.707A.6.6,0,0,1,6.243,4.68353L6.2445,4.685,9,7.444l2.758-2.7575a.6.6,0,0,1,.84853-.00147l.00147.00147.707.707a.6.6,0,0,1,.00147.84853L13.315,6.2435,10.5555,9l2.758,2.758a.6.6,0,0,1,.00147.84853Z\"></path>\\n</svg></a></div></div>\\n      </div>\\n    </div>\\n  \\n\\n</body></html>',\n\t    remoteAssets: [\n\t      \"https://exc-unifiedcontent.experience-stage.adobe.net/solutions/cjm-message-ui/static-assets/inapp/InAppBlockImageDefault.svg\",\n\t    ],\n\t  },\n\t};\n\tconst RULE_SET: RuleSet = {\n", "  version: 1,\n\t  rules: [\n\t    {\n\t      condition: {\n\t        definition: {\n\t          conditions: [\n\t            {\n\t              definition: {\n\t                conditions: [\n\t                  {\n", "                    definition: {\n\t                      key: \"~type\",\n\t                      matcher: \"eq\",\n\t                      values: [\"com.adobe.eventType.generic.track\"],\n\t                    },\n\t                    type: \"matcher\",\n\t                  },\n\t                  {\n\t                    definition: {\n\t                      key: \"~source\",\n", "                      matcher: \"eq\",\n\t                      values: [\"com.adobe.eventSource.requestContent\"],\n\t                    },\n\t                    type: \"matcher\",\n\t                  },\n\t                  {\n\t                    definition: { key: \"state\", matcher: \"ex\" },\n\t                    type: \"matcher\",\n\t                  },\n\t                ],\n", "                logic: \"and\",\n\t              },\n\t              type: \"group\",\n\t            },\n\t            {\n\t              definition: {\n\t                key: \"contextdata.summer\",\n\t                matcher: \"co\",\n\t                values: [\"discount on flights\", \"travels\", \"Hawaii\"],\n\t              },\n", "              type: \"matcher\",\n\t            },\n\t            {\n\t              definition: {\n\t                conditions: [\n\t                  {\n\t                    definition: {\n\t                      key: \"state\",\n\t                      matcher: \"eq\",\n\t                      values: [\"CA\"],\n", "                    },\n\t                    type: \"matcher\",\n\t                  },\n\t                  {\n\t                    definition: {\n\t                      key: \"state\",\n\t                      matcher: \"eq\",\n\t                      values: [\"UT\"],\n\t                    },\n\t                    type: \"matcher\",\n", "                  },\n\t                ],\n\t                logic: \"or\",\n\t              },\n\t              type: \"group\",\n\t            },\n\t          ],\n\t          logic: \"and\",\n\t        },\n\t        type: \"group\",\n", "      },\n\t      consequences: [CONSEQUENCE],\n\t    },\n\t  ],\n\t};\n\tdescribe(\"( Track state event happens) AND ( Context data summer contains discount on flights, travels, or Hawaii ) AND (( State = CA ) OR ( State = UT ))\", () => {\n\t  let ruleset;\n\t  beforeEach(() => {\n\t    ruleset = RulesEngine(RULE_SET);\n\t  });\n", "  it(\"should display message for context data passed in all CAPS\", () => {\n\t    const result = ruleset.execute({\n\t      \"~type\": \"com.adobe.eventType.generic.track\",\n\t      \"~source\": \"com.adobe.eventSource.requestContent\",\n\t      \"contextdata.summer\": \"BIG DISCOUNT ON FLIGHTS THIS SUMMER\",\n\t      state: \"ca\",\n\t    });\n\t    expect(result).toEqual([RULE_SET.rules[0].consequences]);\n\t  });\n\t  it(\"shouldn't display message for unsupported type\", () => {\n", "    const result = ruleset.execute({\n\t      \"~type\": \"com.adobe.eventType.generic.track\",\n\t      \"~source\": \"com.adobe.eventSource.requestContent\",\n\t      \"contextdata.summer\": \"DISCOUNT ON FLIGHTS\",\n\t      state: \"[]\",\n\t    });\n\t    expect(result).toEqual([]);\n\t  });\n\t});\n"]}
{"filename": "test/endsWith.spec.ts", "chunked_list": ["/*\n\tCopyright 2023 Adobe. All rights reserved.\n\tThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n\tyou may not use this file except in compliance with the License. You may obtain a copy\n\tof the License at http://www.apache.org/licenses/LICENSE-2.0\n\tUnless required by applicable law or agreed to in writing, software distributed under\n\tthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n\tOF ANY KIND, either express or implied. See the License for the specific language\n\tgoverning permissions and limitations under the License.\n\t*/\n", "import RulesEngine from \"../src/index\";\n\timport { RuleSet } from \"../types/types/rules\";\n\tconst RULE_DEFINITION: RuleSet = {\n\t  version: 1,\n\t  rules: [\n\t    {\n\t      condition: {\n\t        type: \"matcher\",\n\t        definition: {\n\t          key: \"text\",\n", "          matcher: \"ew\",\n\t          values: [\"Hello\", \"Mahalo\", \"Aloha\", \"Ohana\", \"true\"],\n\t        },\n\t      },\n\t      consequences: [\n\t        {\n\t          id: \"123\",\n\t          type: \"data\",\n\t          detail: {\n\t            html: \"<h1>Ua ola loko i ke aloha!</h1>\",\n", "          },\n\t        },\n\t      ],\n\t    },\n\t  ],\n\t};\n\tdescribe(\"matcher type - ends with (ew)\", () => {\n\t  let ruleset;\n\t  beforeEach(() => {\n\t    ruleset = RulesEngine(RULE_DEFINITION);\n", "  });\n\t  it(\"returns consequences when any of the condition definition values ends with the relevant key's value of given context\", () => {\n\t    const result = ruleset.execute({\n\t      state: \"Hawaii\",\n\t      weather: \"Tropical\",\n\t      text: \"Ohana is a human circle of complete aloha\",\n\t    });\n\t    expect(result).toEqual([RULE_DEFINITION.rules[0].consequences]);\n\t  });\n\t  it(\"returns consequences when boolean true is passed\", () => {\n", "    const result = ruleset.execute({\n\t      state: \"Hawaii\",\n\t      weather: \"Tropical\",\n\t      text: true,\n\t    });\n\t    expect(result).toEqual([RULE_DEFINITION.rules[0].consequences]);\n\t  });\n\t  it(\"returns empty consequence when condition definition values does not ends with the relevant key's value of given context\", () => {\n\t    const result = ruleset.execute({\n\t      state: \"Hawaii\",\n", "      weather: \"Tropical\",\n\t      text: \"Ho'omaluhia\",\n\t    });\n\t    expect(result).toEqual([]);\n\t  });\n\t  it(\"returns empty consequence for context key's value is null\", () => {\n\t    const result = ruleset.execute({\n\t      state: \"Hawaii\",\n\t      weather: \"Tropical\",\n\t      text: null,\n", "    });\n\t    expect(result).toEqual([]);\n\t  });\n\t  it(\"returns  empty consequence for input context key's value is undefined\", () => {\n\t    const result = ruleset.execute({\n\t      state: \"Hawaii\",\n\t      weather: \"Tropical\",\n\t      text: undefined,\n\t    });\n\t    expect(result).toEqual([]);\n", "  });\n\t});\n"]}
{"filename": "test/index.spec.ts", "chunked_list": ["/*\n\tCopyright 2023 Adobe. All rights reserved.\n\tThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n\tyou may not use this file except in compliance with the License. You may obtain a copy\n\tof the License at http://www.apache.org/licenses/LICENSE-2.0\n\tUnless required by applicable law or agreed to in writing, software distributed under\n\tthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n\tOF ANY KIND, either express or implied. See the License for the specific language\n\tgoverning permissions and limitations under the License.\n\t*/\n", "import RulesEngine from \"../src\";\n\tdescribe(\"RulesEngine\", () => {\n\t  it(\"evaluates a ruleset and returns consequences\", () => {\n\t    const ruleset = RulesEngine({\n\t      version: 1,\n\t      rules: [\n\t        {\n\t          condition: {\n\t            definition: {\n\t              conditions: [\n", "                {\n\t                  definition: {\n\t                    conditions: [\n\t                      {\n\t                        definition: {\n\t                          key: \"color\",\n\t                          matcher: \"eq\",\n\t                          values: [\"orange\", \"blue\"],\n\t                        },\n\t                        type: \"matcher\",\n", "                      },\n\t                      {\n\t                        definition: {\n\t                          key: \"action\",\n\t                          matcher: \"eq\",\n\t                          values: [\"greet\"],\n\t                        },\n\t                        type: \"matcher\",\n\t                      },\n\t                    ],\n", "                    logic: \"and\",\n\t                  },\n\t                  type: \"group\",\n\t                },\n\t              ],\n\t              logic: \"and\",\n\t            },\n\t            type: \"group\",\n\t          },\n\t          consequences: [\n", "            {\n\t              type: \"item\",\n\t              detail: {\n\t                hello: \"world\",\n\t              },\n\t              id: \"abc123\",\n\t            },\n\t          ],\n\t        },\n\t      ],\n", "    });\n\t    expect(ruleset.execute({ color: \"blue\", action: \"greet\" })).toEqual([\n\t      [\n\t        {\n\t          type: \"item\",\n\t          detail: {\n\t            hello: \"world\",\n\t          },\n\t          id: \"abc123\",\n\t        },\n", "      ],\n\t    ]);\n\t    expect(ruleset.execute({ color: \"pink\", action: \"greet\" })).toEqual([]);\n\t  });\n\t  it(\"evaluates multiple rulesets and returns consequences\", () => {\n\t    const ruleset = RulesEngine({\n\t      version: 1,\n\t      rules: [\n\t        {\n\t          condition: {\n", "            definition: {\n\t              conditions: [\n\t                {\n\t                  definition: {\n\t                    conditions: [\n\t                      {\n\t                        definition: {\n\t                          key: \"color\",\n\t                          matcher: \"eq\",\n\t                          values: [\"orange\", \"blue\"],\n", "                        },\n\t                        type: \"matcher\",\n\t                      },\n\t                      {\n\t                        definition: {\n\t                          key: \"action\",\n\t                          matcher: \"eq\",\n\t                          values: [\"greet\"],\n\t                        },\n\t                        type: \"matcher\",\n", "                      },\n\t                    ],\n\t                    logic: \"and\",\n\t                  },\n\t                  type: \"group\",\n\t                },\n\t              ],\n\t              logic: \"and\",\n\t            },\n\t            type: \"group\",\n", "          },\n\t          consequences: [\n\t            {\n\t              type: \"item\",\n\t              detail: {\n\t                greet: true,\n\t              },\n\t              id: \"abc123\",\n\t            },\n\t          ],\n", "        },\n\t        {\n\t          condition: {\n\t            definition: {\n\t              conditions: [\n\t                {\n\t                  definition: {\n\t                    conditions: [\n\t                      {\n\t                        definition: {\n", "                          key: \"color\",\n\t                          matcher: \"eq\",\n\t                          values: [\"orange\", \"blue\"],\n\t                        },\n\t                        type: \"matcher\",\n\t                      },\n\t                      {\n\t                        definition: {\n\t                          key: \"action\",\n\t                          matcher: \"eq\",\n", "                          values: [\"farewell\"],\n\t                        },\n\t                        type: \"matcher\",\n\t                      },\n\t                    ],\n\t                    logic: \"and\",\n\t                  },\n\t                  type: \"group\",\n\t                },\n\t              ],\n", "              logic: \"and\",\n\t            },\n\t            type: \"group\",\n\t          },\n\t          consequences: [\n\t            {\n\t              type: \"item\",\n\t              detail: {\n\t                farewell: true,\n\t              },\n", "              id: \"abc123\",\n\t            },\n\t          ],\n\t        },\n\t      ],\n\t    });\n\t    expect(ruleset.execute({ color: \"blue\", action: \"greet\" })).toEqual([\n\t      [\n\t        {\n\t          type: \"item\",\n", "          detail: {\n\t            greet: true,\n\t          },\n\t          id: \"abc123\",\n\t        },\n\t      ],\n\t    ]);\n\t    expect(ruleset.execute({ color: \"orange\", action: \"farewell\" })).toEqual([\n\t      [\n\t        {\n", "          type: \"item\",\n\t          detail: {\n\t            farewell: true,\n\t          },\n\t          id: \"abc123\",\n\t        },\n\t      ],\n\t    ]);\n\t  });\n\t});\n"]}
{"filename": "test/startsWith.spec.ts", "chunked_list": ["/*\n\tCopyright 2023 Adobe. All rights reserved.\n\tThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n\tyou may not use this file except in compliance with the License. You may obtain a copy\n\tof the License at http://www.apache.org/licenses/LICENSE-2.0\n\tUnless required by applicable law or agreed to in writing, software distributed under\n\tthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n\tOF ANY KIND, either express or implied. See the License for the specific language\n\tgoverning permissions and limitations under the License.\n\t*/\n", "import RulesEngine from \"../src/index\";\n\timport { RuleSet } from \"../src/types/schema\";\n\tconst RULE_DEFINITION: RuleSet = {\n\t  version: 1,\n\t  rules: [\n\t    {\n\t      condition: {\n\t        type: \"matcher\",\n\t        definition: {\n\t          key: \"text\",\n", "          matcher: \"sw\",\n\t          values: [\"Hello\", \"Mahalo\", \"Aloha\", \"Ohana\", true],\n\t        },\n\t      },\n\t      consequences: [\n\t        {\n\t          id: \"123\",\n\t          type: \"data\",\n\t          detail: {\n\t            html: \"<h1>Ua ola loko i ke aloha!</h1>\",\n", "          },\n\t        },\n\t      ],\n\t    },\n\t  ],\n\t};\n\tdescribe(\"matcher type - starts with (sw)\", () => {\n\t  let ruleset;\n\t  beforeEach(() => {\n\t    ruleset = RulesEngine(RULE_DEFINITION);\n", "  });\n\t  it(\"returns consequences when any of the condition definition values starts with the relevant key's value of given context\", () => {\n\t    const result = ruleset.execute({\n\t      state: \"Hawaii\",\n\t      weather: \"Tropical\",\n\t      text: \"Ohana is a human circle of complete Aloha\",\n\t    });\n\t    expect(result).toEqual([RULE_DEFINITION.rules[0].consequences]);\n\t  });\n\t  it(\"returns consequences when  condition definition values starts with the true\", () => {\n", "    const result = ruleset.execute({\n\t      state: \"Hawaii\",\n\t      weather: \"Tropical\",\n\t      text: \"true\",\n\t    });\n\t    expect(result).toEqual([RULE_DEFINITION.rules[0].consequences]);\n\t  });\n\t  it(\"returns empty consequence when condition definition values does not starts with the relevant key's value of given context\", () => {\n\t    const result = ruleset.execute({\n\t      state: \"Hawaii\",\n", "      weather: \"Tropical\",\n\t      text: \"Ho'omaluhia\",\n\t    });\n\t    expect(result).toEqual([]);\n\t  });\n\t  it(\"returns empty consequence when the input context key's value is null\", () => {\n\t    const result = ruleset.execute({\n\t      state: \"Hawaii\",\n\t      weather: \"Tropical\",\n\t      text: null,\n", "    });\n\t    expect(result).toEqual([]);\n\t  });\n\t  it(\"returns  empty consequence when the input context key's value is undefined\", () => {\n\t    const result = ruleset.execute({\n\t      state: \"Hawaii\",\n\t      weather: \"Tropical\",\n\t      text: undefined,\n\t    });\n\t    expect(result).toEqual([]);\n", "  });\n\t});\n"]}
{"filename": "test/notexists.spec.ts", "chunked_list": ["/*\n\tCopyright 2023 Adobe. All rights reserved.\n\tThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n\tyou may not use this file except in compliance with the License. You may obtain a copy\n\tof the License at http://www.apache.org/licenses/LICENSE-2.0\n\tUnless required by applicable law or agreed to in writing, software distributed under\n\tthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n\tOF ANY KIND, either express or implied. See the License for the specific language\n\tgoverning permissions and limitations under the License.\n\t*/\n", "import RulesEngine from \"../src/index\";\n\timport { RuleSet } from \"../src/types/schema\";\n\tconst RULE_SET: RuleSet = {\n\t  version: 1.1,\n\t  rules: [\n\t    {\n\t      condition: {\n\t        type: \"matcher\",\n\t        definition: {\n\t          key: \"children\",\n", "          matcher: \"nx\",\n\t        },\n\t      },\n\t      consequences: [\n\t        {\n\t          id: \"b2023\",\n\t          type: \"data\",\n\t          detail: {\n\t            html: \"<h1> Enjoy 10% off on first visit to this upscale casino hotel!</h1>\",\n\t          },\n", "        },\n\t      ],\n\t    },\n\t  ],\n\t};\n\tdescribe(\"matcher type - not exists (nx)\", () => {\n\t  let ruleset;\n\t  beforeEach(() => {\n\t    ruleset = RulesEngine(RULE_SET);\n\t  });\n", "  it(\"returns consequence when key doesn't exists\", () => {\n\t    const result = ruleset.execute({\n\t      country: \"USA\",\n\t      city: \"Wendover\",\n\t      state: \"NV\",\n\t    });\n\t    expect(result).toEqual([RULE_SET.rules[0].consequences]);\n\t  });\n\t  it(\"returns empty consequence when key does exist\", () => {\n\t    const result = ruleset.execute({\n", "      country: \"USA\",\n\t      city: \"Wendover\",\n\t      state: \"NV\",\n\t      children: \"of any city\",\n\t    });\n\t    expect(result).toEqual([]);\n\t  });\n\t  it(\"returns consequence when key does exist but key's value in the context is null\", () => {\n\t    const result = ruleset.execute({\n\t      country: \"USA\",\n", "      city: \"Wendover\",\n\t      state: \"NV\",\n\t      children: null,\n\t    });\n\t    expect(result).toEqual([RULE_SET.rules[0].consequences]);\n\t  });\n\t  it(\"returns consequence when key does exist but key's value in the context is undefined\", () => {\n\t    const result = ruleset.execute({\n\t      country: \"USA\",\n\t      city: \"Wendover\",\n", "      state: \"NV\",\n\t      children: undefined,\n\t    });\n\t    expect(result).toEqual([RULE_SET.rules[0].consequences]);\n\t  });\n\t});\n"]}
{"filename": "test/trackAction.spec.ts", "chunked_list": ["/*\n\tCopyright 2023 Adobe. All rights reserved.\n\tThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n\tyou may not use this file except in compliance with the License. You may obtain a copy\n\tof the License at http://www.apache.org/licenses/LICENSE-2.0\n\tUnless required by applicable law or agreed to in writing, software distributed under\n\tthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n\tOF ANY KIND, either express or implied. See the License for the specific language\n\tgoverning permissions and limitations under the License.\n\t*/\n", "import RulesEngine from \"../src/index\";\n\timport { Consequence } from \"../src/types/schema\";\n\tlet CONSEQUENCE: Consequence = {\n\t  id: \"d2788421-7b30-4895-aeae-2df42b9e993c\",\n\t  type: \"cjmiam\",\n\t  detail: {\n\t    mobileParameters: {\n\t      verticalAlign: \"center\",\n\t      dismissAnimation: \"top\",\n\t      verticalInset: 0,\n", "      backdropOpacity: 0.2,\n\t      cornerRadius: 15,\n\t      gestures: {\n\t        swipeUp: \"adbinapp://dismiss?interaction=swipeUp\",\n\t        swipeDown: \"adbinapp://dismiss?interaction=swipeDown\",\n\t        swipeLeft: \"adbinapp://dismiss?interaction=swipeLeft\",\n\t        swipeRight: \"adbinapp://dismiss?interaction=swipeRight\",\n\t        tapBackground: \"adbinapp://dismiss?interaction=tapBackground\",\n\t      },\n\t      horizontalInset: 0,\n", "      uiTakeover: true,\n\t      horizontalAlign: \"center\",\n\t      width: 80,\n\t      displayAnimation: \"top\",\n\t      backdropColor: \"#000000\",\n\t      height: 60,\n\t    },\n\t    html: '<!doctype html>\\n<html><head>\\n    <meta type=\"templateProperties\" name=\"modal\" label=\"adobe-label:modal\" icon=\"adobe-icon:modal\">\\n    <meta type=\"templateZone\" name=\"default\" label=\"Default\" classname=\"body\" definition=\"[&quot;CloseBtn&quot;, &quot;Image&quot;, &quot;Text&quot;, &quot;Buttons&quot;]\">\\n\\n    <meta type=\"templateDefaultAnimations\" displayanimation=\"top\" dismissanimation=\"top\">\\n    <meta type=\"templateDefaultSize\" width=\"80\" height=\"60\">\\n    <meta type=\"templateDefaultPosition\" verticalalign=\"center\" verticalinset=\"0\" horizontalalign=\"center\" horizontalinset=\"0\">\\n    <meta type=\"templateDefaultGesture\" swipeup=\"adbinapp://dismiss?interaction=swipeUp\" swipedown=\"adbinapp://dismiss?interaction=swipeDown\" swipeleft=\"adbinapp://dismiss?interaction=swipeLeft\" swiperight=\"adbinapp://dismiss?interaction=swipeRight\" tapbackground=\"adbinapp://dismiss?interaction=tapBackground\">\\n    <meta type=\"templateDefaultUiTakeover\" enable=\"true\">\\n\\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\\n    <meta charset=\"UTF-8\">\\n    <style>\\n      html,\\n      body {\\n        margin: 0;\\n        padding: 0;\\n        text-align: center;\\n        width: 100%;\\n        height: 100%;\\n        font-family: adobe-clean, \\'Source Sans Pro\\', -apple-system, BlinkMacSystemFont, \\'Segoe UI\\',\\n          Roboto, sans-serif;\\n      }\\n      h3 {\\n        margin: 0.4rem auto;\\n      }\\n      p {\\n        margin: 0.4rem auto;\\n      }\\n\\n      .body {\\n        display: flex;\\n        flex-direction: column;\\n        background-color: #fff;\\n        border-radius: 0.3rem;\\n        color: #333333;\\n        width: 100vw;\\n        height: 100vh;\\n        text-align: center;\\n        align-items: center;\\n        background-size: \\'cover\\';\\n      }\\n\\n      .content {\\n        width: 100%;\\n        height: 100%;\\n        display: flex;\\n        justify-content: center;\\n        flex-direction: column;\\n        position: relative;\\n      }\\n\\n      a {\\n        text-decoration: none;\\n      }\\n\\n      .image {\\n        height: 1rem;\\n        flex-grow: 4;\\n        flex-shrink: 1;\\n        display: flex;\\n        justify-content: center;\\n        width: 90%;\\n        flex-direction: column;\\n        align-items: center;\\n      }\\n      .image img {\\n        max-height: 100%;\\n        max-width: 100%;\\n      }\\n\\n      .image.empty-image {\\n        display: none;\\n      }\\n\\n      .empty-image ~ .text {\\n        flex-grow: 1;\\n      }\\n\\n      .text {\\n        text-align: center;\\n        color: #333333;\\n        line-height: 1.25rem;\\n        font-size: 0.875rem;\\n        padding: 0 0.8rem;\\n        width: 100%;\\n        box-sizing: border-box;\\n      }\\n      .title {\\n        line-height: 1.3125rem;\\n        font-size: 1.025rem;\\n      }\\n\\n      .buttons {\\n        width: 100%;\\n        display: flex;\\n        flex-direction: column;\\n        font-size: 1rem;\\n        line-height: 1.3rem;\\n        text-decoration: none;\\n        text-align: center;\\n        box-sizing: border-box;\\n        padding: 0.8rem;\\n        padding-top: 0.4rem;\\n        gap: 0.3125rem;\\n      }\\n\\n      .button {\\n        flex-grow: 1;\\n        background-color: #1473e6;\\n        color: #ffffff;\\n        border-radius: 0.25rem;\\n        cursor: pointer;\\n        padding: 0.3rem;\\n        gap: 0.5rem;\\n      }\\n\\n      .btnClose {\\n        color: #000000;\\n      }\\n\\n      .closeBtn {\\n        align-self: flex-end;\\n        color: #000000;\\n        width: 1.8rem;\\n        height: 1.8rem;\\n        margin-top: 1rem;\\n        margin-right: 0.3rem;\\n      }\\n      .closeBtn img {\\n        width: 100%;\\n        height: 100%;\\n      }\\n    </style>\\n    <style type=\"text/css\" id=\"editor-styles\">\\n\\n</style>\\n  </head>\\n\\n  <body>\\n    <div class=\"body\"><div class=\"closeBtn\" data-uuid=\"771eff8c-e85a-4072-8988-51f2008b8381\" data-btn-style=\"plain\"><a aria-label=\"Close\" class=\"btnClose\" href=\"adbinapp://dismiss?interaction=cancel\"><svg xmlns=\"http://www.w3.org/2000/svg\" height=\"18\" viewbox=\"0 0 18 18\" width=\"18\" class=\"close\">\\n  <rect id=\"Canvas\" fill=\"#ffffff\" opacity=\"0\" width=\"18\" height=\"18\"></rect>\\n  <path fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\" d=\"M13.2425,3.343,9,7.586,4.7575,3.343a.5.5,0,0,0-.707,0L3.343,4.05a.5.5,0,0,0,0,.707L7.586,9,3.343,13.2425a.5.5,0,0,0,0,.707l.707.7075a.5.5,0,0,0,.707,0L9,10.414l4.2425,4.243a.5.5,0,0,0,.707,0l.7075-.707a.5.5,0,0,0,0-.707L10.414,9l4.243-4.2425a.5.5,0,0,0,0-.707L13.95,3.343a.5.5,0,0,0-.70711-.00039Z\"></path>\\n</svg></a></div><div class=\"image\" data-uuid=\"8163d13c-1e4e-4b07-94c7-18271bc02099\"><img src=\"https://exc-unifiedcontent.experience-stage.adobe.net/solutions/cjm-message-ui/static-assets/inapp/InAppBlockImageDefault.svg\" alt=\"\"></div><div class=\"text\" data-uuid=\"ebe691ce-3c1e-4f3e-87bd-010bc4a4033a\"><h3>Lion king</h3><p>DescrHakuna Matata! What a wonderful phrase Hakuna Matata!iption text</p></div><div class=\"buttons\" data-uuid=\"03ea1149-f436-4530-9b04-04a50b1d492f\"><a class=\"button\" data-uuid=\"a6a3853c-aeb6-4d72-8aa5-9c9acbaf687b\" href=\"adbinapp://dismiss?interaction=clicked\">Button</a></div></div>\\n  \\n\\n</body></html>',\n\t    remoteAssets: [\n\t      \"https://exc-unifiedcontent.experience-stage.adobe.net/solutions/cjm-message-ui/static-assets/inapp/InAppBlockImageDefault.svg\",\n", "    ],\n\t  },\n\t};\n\tdescribe(\"Message Trigger Track Action\", () => {\n\t  it(\"on specific days show messages\", () => {\n\t    expect(\n\t      RulesEngine({\n\t        version: 1,\n\t        rules: [\n\t          {\n", "            condition: {\n\t              definition: {\n\t                conditions: [\n\t                  {\n\t                    definition: {\n\t                      conditions: [\n\t                        {\n\t                          definition: {\n\t                            key: \"~type\",\n\t                            matcher: \"eq\",\n", "                            values: [\"com.adobe.eventType.generic.track\"],\n\t                          },\n\t                          type: \"matcher\",\n\t                        },\n\t                        {\n\t                          definition: {\n\t                            key: \"~source\",\n\t                            matcher: \"eq\",\n\t                            values: [\"com.adobe.eventSource.requestContent\"],\n\t                          },\n", "                          type: \"matcher\",\n\t                        },\n\t                        {\n\t                          definition: { key: \"action\", matcher: \"ex\" },\n\t                          type: \"matcher\",\n\t                        },\n\t                      ],\n\t                      logic: \"and\",\n\t                    },\n\t                    type: \"group\",\n", "                  },\n\t                  {\n\t                    definition: {\n\t                      key: \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.dayofweek\",\n\t                      matcher: \"eq\",\n\t                      values: [3, 4, 5, 6],\n\t                    },\n\t                    type: \"matcher\",\n\t                  },\n\t                ],\n", "                logic: \"and\",\n\t              },\n\t              type: \"group\",\n\t            },\n\t            consequences: [CONSEQUENCE],\n\t          },\n\t        ],\n\t      }).execute({\n\t        \"~type\": \"com.adobe.eventType.generic.track\",\n\t        \"~source\": \"com.adobe.eventSource.requestContent\",\n", "        action: {},\n\t        \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.dayofweek\": 3,\n\t      })\n\t    ).toEqual([[CONSEQUENCE]]);\n\t  });\n\t  it(\"empty consequence when desired day of week is not passed in\", () => {\n\t    expect(\n\t      RulesEngine({\n\t        version: 1,\n\t        rules: [\n", "          {\n\t            condition: {\n\t              definition: {\n\t                conditions: [\n\t                  {\n\t                    definition: {\n\t                      conditions: [\n\t                        {\n\t                          definition: {\n\t                            key: \"~type\",\n", "                            matcher: \"eq\",\n\t                            values: [\"com.adobe.eventType.generic.track\"],\n\t                          },\n\t                          type: \"matcher\",\n\t                        },\n\t                        {\n\t                          definition: {\n\t                            key: \"~source\",\n\t                            matcher: \"eq\",\n\t                            values: [\"com.adobe.eventSource.requestContent\"],\n", "                          },\n\t                          type: \"matcher\",\n\t                        },\n\t                        {\n\t                          definition: { key: \"action\", matcher: \"ex\" },\n\t                          type: \"matcher\",\n\t                        },\n\t                      ],\n\t                      logic: \"and\",\n\t                    },\n", "                    type: \"group\",\n\t                  },\n\t                  {\n\t                    definition: {\n\t                      key: \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.dayofweek\",\n\t                      matcher: \"eq\",\n\t                      values: [3, 4, 5, 6],\n\t                    },\n\t                    type: \"matcher\",\n\t                  },\n", "                ],\n\t                logic: \"and\",\n\t              },\n\t              type: \"group\",\n\t            },\n\t            consequences: [CONSEQUENCE],\n\t          },\n\t        ],\n\t      }).execute({\n\t        \"~type\": \"com.adobe.eventType.generic.track\",\n", "        \"~source\": \"com.adobe.eventSource.requestContent\",\n\t        action: {},\n\t        \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.dayofweek\": 1,\n\t      })\n\t    ).toEqual([]);\n\t  });\n\t});\n"]}
{"filename": "test/simple-group-and.spec.ts", "chunked_list": ["/*\n\tCopyright 2023 Adobe. All rights reserved.\n\tThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n\tyou may not use this file except in compliance with the License. You may obtain a copy\n\tof the License at http://www.apache.org/licenses/LICENSE-2.0\n\tUnless required by applicable law or agreed to in writing, software distributed under\n\tthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n\tOF ANY KIND, either express or implied. See the License for the specific language\n\tgoverning permissions and limitations under the License.\n\t*/\n", "import RulesEngine from \"../src/index\";\n\timport { RuleSet } from \"../src/types/schema\";\n\tconst RULE_DEFINITION: RuleSet = {\n\t  version: 1,\n\t  rules: [\n\t    {\n\t      condition: {\n\t        type: \"group\",\n\t        definition: {\n\t          logic: \"and\",\n", "          conditions: [\n\t            {\n\t              type: \"matcher\",\n\t              definition: {\n\t                key: \"key1\",\n\t                matcher: \"eq\",\n\t                values: [\"value1\", \"value2\"],\n\t              },\n\t            },\n\t            {\n", "              type: \"matcher\",\n\t              definition: {\n\t                key: \"key3\",\n\t                matcher: \"eq\",\n\t                values: [\"value5\", \"value6\"],\n\t              },\n\t            },\n\t          ],\n\t        },\n\t      },\n", "      consequences: [\n\t        {\n\t          id: \"2222222\",\n\t          type: \"data\",\n\t          detail: {\n\t            html: \"<h1>Hello World!</h1>\",\n\t          },\n\t        },\n\t      ],\n\t    },\n", "  ],\n\t};\n\tdescribe(\"simple group-and\", () => {\n\t  let ruleset;\n\t  beforeEach(() => {\n\t    ruleset = RulesEngine(RULE_DEFINITION);\n\t  });\n\t  it(\"execute true\", () => {\n\t    const result = ruleset.execute({\n\t      key1: \"value1\",\n", "      key2: \"value2\",\n\t      key3: \"value5\",\n\t    });\n\t    expect(result).toEqual([RULE_DEFINITION.rules[0].consequences]);\n\t  });\n\t  it(\"execute first condition false\", () => {\n\t    const result = ruleset.execute({\n\t      key1: \"valueX\",\n\t      key2: \"value2\",\n\t      key3: \"value6\",\n", "    });\n\t    expect(result).toEqual([]);\n\t  });\n\t  it(\"execute second condition false\", () => {\n\t    const result = ruleset.execute({\n\t      key1: \"value1\",\n\t      key2: \"value2\",\n\t      key3: \"valueX\",\n\t    });\n\t    expect(result).toEqual([]);\n", "  });\n\t});\n"]}
{"filename": "test/notContains.spec.ts", "chunked_list": ["/*\n\tCopyright 2023 Adobe. All rights reserved.\n\tThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n\tyou may not use this file except in compliance with the License. You may obtain a copy\n\tof the License at http://www.apache.org/licenses/LICENSE-2.0\n\tUnless required by applicable law or agreed to in writing, software distributed under\n\tthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n\tOF ANY KIND, either express or implied. See the License for the specific language\n\tgoverning permissions and limitations under the License.\n\t*/\n", "import RulesEngine from \"../src/index\";\n\timport { RuleSet } from \"../src/types/schema\";\n\tconst RULE_DEFINITION: RuleSet = {\n\t  version: 1,\n\t  rules: [\n\t    {\n\t      condition: {\n\t        type: \"matcher\",\n\t        definition: {\n\t          key: \"color\",\n", "          matcher: \"nc\",\n\t          values: [\n\t            \"Red\",\n\t            \"blue\",\n\t            \"GREEN\",\n\t            {},\n\t            new Set(),\n\t            undefined,\n\t            null,\n\t            true,\n", "            \"🙃\",\n\t          ],\n\t        },\n\t      },\n\t      consequences: [\n\t        {\n\t          id: \"123\",\n\t          type: \"data\",\n\t          detail: {\n\t            html: \"<h1>Hello World of color!</h1>\",\n", "          },\n\t        },\n\t      ],\n\t    },\n\t  ],\n\t};\n\tdescribe(\"matcher type - not contains (nc)\", () => {\n\t  let ruleset;\n\t  beforeEach(() => {\n\t    ruleset = RulesEngine(RULE_DEFINITION);\n", "  });\n\t  it(\"returns consequences when none of the condition definition values partially matches the relevant key's value of given context\", () => {\n\t    const result = ruleset.execute({\n\t      fabric: \"cotton\",\n\t      brand: \"Nike\",\n\t      color:\n\t        \"Light and electromagnetic radiation both create additive color. \" +\n\t        \"In this model of color theory, the combination of all colors creates the perception of white\",\n\t    });\n\t    expect(result).toEqual([RULE_DEFINITION.rules[0].consequences]);\n", "  });\n\t  it(\"returns empty consequence when any of the condition definition values partially matches the relevant key's value of given context\", () => {\n\t    const result = ruleset.execute({\n\t      fabric: \"cotton\",\n\t      brand: \"Polo\",\n\t      color: \"red is my favorite\",\n\t    });\n\t    expect(result).toEqual([]);\n\t  });\n\t  it(\"returns empty consequence when the input context key's value is null\", () => {\n", "    const result = ruleset.execute({\n\t      fabric: \"cotton\",\n\t      brand: \"Polo\",\n\t      color: null,\n\t    });\n\t    expect(result).toEqual([]);\n\t  });\n\t  it(\"returns empty consequence when the input context key's value is undefined\", () => {\n\t    const result = ruleset.execute({\n\t      fabric: \"cotton\",\n", "      brand: \"Polo\",\n\t      color: undefined,\n\t    });\n\t    expect(result).toEqual([]);\n\t  });\n\t  it(\"returns empty consequence when the input context key's value is new Set()\", () => {\n\t    const result = ruleset.execute({\n\t      fabric: \"cotton\",\n\t      brand: \"Polo\",\n\t      color: new Set(),\n", "    });\n\t    expect(result).toEqual([]);\n\t  });\n\t  it(\"returns empty consequence when the input context key's value is an object\", () => {\n\t    const result = ruleset.execute({\n\t      fabric: \"cotton\",\n\t      brand: \"Polo\",\n\t      color: {},\n\t    });\n\t    expect(result).toEqual([]);\n", "  });\n\t  it(\"returns empty consequence when the input context key's value is boolean false\", () => {\n\t    const result = ruleset.execute({\n\t      fabric: \"cotton\",\n\t      brand: \"Polo\",\n\t      color: true,\n\t    });\n\t    expect(result).toEqual([]);\n\t  });\n\t  it(\"returns empty consequences when the input context key's value is emoji\", () => {\n", "    const result = ruleset.execute({\n\t      fabric: \"cotton\",\n\t      brand: \"Polo\",\n\t      color: \"🙃\",\n\t    });\n\t    expect(result).toEqual([]);\n\t  });\n\t});\n"]}
{"filename": "test/real.spec.ts", "chunked_list": ["/*\n\tCopyright 2023 Adobe. All rights reserved.\n\tThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n\tyou may not use this file except in compliance with the License. You may obtain a copy\n\tof the License at http://www.apache.org/licenses/LICENSE-2.0\n\tUnless required by applicable law or agreed to in writing, software distributed under\n\tthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n\tOF ANY KIND, either express or implied. See the License for the specific language\n\tgoverning permissions and limitations under the License.\n\t*/\n", "import RulesEngine from \"../src\";\n\timport { Consequence, RuleSet } from \"../src/types/schema\";\n\tlet CONSEQUENCE: Consequence = {\n\t  id: \"1ba6ce8f-5a1c-4ce3-9689-098adb26b8d8\",\n\t  type: \"cjmiam\",\n\t  detail: {\n\t    mobileParameters: {\n\t      verticalAlign: \"top\",\n\t      dismissAnimation: \"top\",\n\t      verticalInset: 2,\n", "      backdropOpacity: 0.2,\n\t      cornerRadius: 15,\n\t      gestures: {\n\t        swipeUp: \"adbinapp://dismiss?interaction=swipeUp\",\n\t      },\n\t      horizontalInset: 0,\n\t      uiTakeover: false,\n\t      horizontalAlign: \"center\",\n\t      width: 95,\n\t      displayAnimation: \"top\",\n", "      backdropColor: \"#000000\",\n\t      height: 17,\n\t    },\n\t    html: \"<div>oh hai</div>\",\n\t    remoteAssets: [\"https://media1.giphy.com/media/zIOdLMZDcBDc2gk6vV/200.gif\"],\n\t  },\n\t};\n\tdescribe(\"rules from AJO\", () => {\n\t  it(\"supports  'generic track action'\", () => {\n\t    expect(\n", "      RulesEngine({\n\t        version: 1,\n\t        rules: [\n\t          {\n\t            condition: {\n\t              definition: {\n\t                conditions: [\n\t                  {\n\t                    definition: {\n\t                      conditions: [\n", "                        {\n\t                          definition: {\n\t                            key: \"~type\",\n\t                            matcher: \"eq\",\n\t                            values: [\"com.adobe.eventType.generic.track\"],\n\t                          },\n\t                          type: \"matcher\",\n\t                        },\n\t                        {\n\t                          definition: {\n", "                            key: \"~source\",\n\t                            matcher: \"eq\",\n\t                            values: [\"com.adobe.eventSource.requestContent\"],\n\t                          },\n\t                          type: \"matcher\",\n\t                        },\n\t                        {\n\t                          definition: {\n\t                            key: \"action\",\n\t                            matcher: \"ex\",\n", "                          },\n\t                          type: \"matcher\",\n\t                        },\n\t                      ],\n\t                      logic: \"and\",\n\t                    },\n\t                    type: \"group\",\n\t                  },\n\t                  {\n\t                    definition: {\n", "                      key: \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.carriername\",\n\t                      matcher: \"eq\",\n\t                      values: [\"Verizon\", \"AT&T\"],\n\t                    },\n\t                    type: \"matcher\",\n\t                  },\n\t                  {\n\t                    definition: {\n\t                      key: \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.dayofweek\",\n\t                      matcher: \"eq\",\n", "                      values: [1, 3, 5],\n\t                    },\n\t                    type: \"matcher\",\n\t                  },\n\t                  {\n\t                    definition: {\n\t                      key: \"contextdata.color\",\n\t                      matcher: \"co\",\n\t                      values: [\"orange\"],\n\t                    },\n", "                    type: \"matcher\",\n\t                  },\n\t                ],\n\t                logic: \"and\",\n\t              },\n\t              type: \"group\",\n\t            },\n\t            consequences: [CONSEQUENCE],\n\t          },\n\t        ],\n", "      }).execute({\n\t        \"~type\": \"com.adobe.eventType.generic.track\",\n\t        \"~source\": \"com.adobe.eventSource.requestContent\",\n\t        action: {},\n\t        \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.carriername\":\n\t          \"Verizon\",\n\t        \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.dayofweek\": 3,\n\t        \"contextdata.color\": \"orange is great\",\n\t      })\n\t    ).toEqual([[CONSEQUENCE]]);\n", "  });\n\t  it(\"supports 'Sent data to Platform'\", () => {\n\t    const ruleset: RuleSet = {\n\t      version: 1,\n\t      rules: [\n\t        {\n\t          condition: {\n\t            definition: {\n\t              conditions: [\n\t                {\n", "                  definition: {\n\t                    conditions: [\n\t                      {\n\t                        definition: {\n\t                          key: \"~type\",\n\t                          matcher: \"eq\",\n\t                          values: [\"com.adobe.eventType.edge\"],\n\t                        },\n\t                        type: \"matcher\",\n\t                      },\n", "                      {\n\t                        definition: {\n\t                          key: \"~source\",\n\t                          matcher: \"eq\",\n\t                          values: [\"com.adobe.eventSource.requestContent\"],\n\t                        },\n\t                        type: \"matcher\",\n\t                      },\n\t                    ],\n\t                    logic: \"and\",\n", "                  },\n\t                  type: \"group\",\n\t                },\n\t                {\n\t                  definition: {\n\t                    conditions: [\n\t                      {\n\t                        definition: {\n\t                          key: \"xdm.eventType\",\n\t                          matcher: \"eq\",\n", "                          values: [\"advertising.clicks\"],\n\t                        },\n\t                        type: \"matcher\",\n\t                      },\n\t                      {\n\t                        definition: {\n\t                          key: \"xdm.personID\",\n\t                          matcher: \"eq\",\n\t                          values: [\"abc\"],\n\t                        },\n", "                        type: \"matcher\",\n\t                      },\n\t                      {\n\t                        definition: {\n\t                          key: \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.devicename\",\n\t                          matcher: \"eq\",\n\t                          values: [\"iphone\"],\n\t                        },\n\t                        type: \"matcher\",\n\t                      },\n", "                      {\n\t                        definition: {\n\t                          key: \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.dayssincefirstuse\",\n\t                          matcher: \"ge\",\n\t                          values: [10],\n\t                        },\n\t                        type: \"matcher\",\n\t                      },\n\t                    ],\n\t                    logic: \"or\",\n", "                  },\n\t                  type: \"group\",\n\t                },\n\t              ],\n\t              logic: \"and\",\n\t            },\n\t            type: \"group\",\n\t          },\n\t          consequences: [CONSEQUENCE],\n\t        },\n", "      ],\n\t    };\n\t    expect(\n\t      RulesEngine(ruleset).execute({\n\t        \"~type\": \"com.adobe.eventType.edge\",\n\t        \"~source\": \"com.adobe.eventSource.requestContent\",\n\t        // \"xdm.eventType\": \"advertising.clicks\",\n\t        // \"xdm.personID\": \"abc\",\n\t        // \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.devicename\":\n\t        //   \"iphone\",\n", "        \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.dayssincefirstuse\": 15,\n\t      })\n\t    ).toEqual([[CONSEQUENCE]]);\n\t  });\n\t});\n"]}
{"filename": "test/greaterThanEquals.spec.ts", "chunked_list": ["/*\n\tCopyright 2023 Adobe. All rights reserved.\n\tThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n\tyou may not use this file except in compliance with the License. You may obtain a copy\n\tof the License at http://www.apache.org/licenses/LICENSE-2.0\n\tUnless required by applicable law or agreed to in writing, software distributed under\n\tthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n\tOF ANY KIND, either express or implied. See the License for the specific language\n\tgoverning permissions and limitations under the License.\n\t*/\n", "import RulesEngine from \"../src/index\";\n\timport { RuleSet } from \"../src/types/schema\";\n\tconst RULE_SET: RuleSet = {\n\t  version: 1.1,\n\t  rules: [\n\t    {\n\t      condition: {\n\t        type: \"matcher\",\n\t        definition: {\n\t          key: \"membershipPoint\",\n", "          matcher: \"ge\",\n\t          values: [6000, 3000],\n\t        },\n\t      },\n\t      consequences: [\n\t        {\n\t          id: \"b2023\",\n\t          type: \"data\",\n\t          detail: {\n\t            html: \"<h1> You can increase your membership point by using our promo benefits, sign up now!</h1>\",\n", "          },\n\t        },\n\t      ],\n\t    },\n\t  ],\n\t};\n\tdescribe(\"matcher type - greater than equals  (ge)\", () => {\n\t  let ruleset;\n\t  beforeEach(() => {\n\t    ruleset = RulesEngine(RULE_SET);\n", "  });\n\t  it(\"returns consequence  when the context key's values is greater than or equal to rule's condition definition values\", () => {\n\t    const result = ruleset.execute({\n\t      country: \"USA\",\n\t      city: \"Salt Lake City\",\n\t      state: \"UT\",\n\t      membershipPoint: 6000,\n\t    });\n\t    expect(result).toEqual([RULE_SET.rules[0].consequences]);\n\t  });\n", "  it(\"returns consequence  when the context key's values is  greater than or equal to rule's condition definition values\", () => {\n\t    const result = ruleset.execute({\n\t      country: \"USA\",\n\t      city: \"Salt Lake City\",\n\t      state: \"UT\",\n\t      membershipPoint: 3000,\n\t    });\n\t    expect(result).toEqual([RULE_SET.rules[0].consequences]);\n\t  });\n\t  it(\"returns empty consequence when the context key's values is  null\", () => {\n", "    const result = ruleset.execute({\n\t      country: \"USA\",\n\t      city: \"Salt Lake City\",\n\t      state: \"UT\",\n\t      membershipPoint: null,\n\t    });\n\t    expect(result).toEqual([]);\n\t  });\n\t  it(\"returns  empty consequence when the  context key's values is undefined\", () => {\n\t    const result = ruleset.execute({\n", "      country: \"USA\",\n\t      city: \"Salt Lake City\",\n\t      state: \"UT\",\n\t      membershipPoint: undefined,\n\t    });\n\t    expect(result).toEqual([]);\n\t  });\n\t});\n"]}
{"filename": "test/equals.spec.ts", "chunked_list": ["/*\n\tCopyright 2023 Adobe. All rights reserved.\n\tThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n\tyou may not use this file except in compliance with the License. You may obtain a copy\n\tof the License at http://www.apache.org/licenses/LICENSE-2.0\n\tUnless required by applicable law or agreed to in writing, software distributed under\n\tthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n\tOF ANY KIND, either express or implied. See the License for the specific language\n\tgoverning permissions and limitations under the License.\n\t*/\n", "import RulesEngine from \"../src/index\";\n\timport { RuleSet } from \"../src/types/schema\";\n\tconst RULE_DEFINITION: RuleSet = {\n\t  version: 1,\n\t  rules: [\n\t    {\n\t      condition: {\n\t        type: \"matcher\",\n\t        definition: {\n\t          key: \"browser\",\n", "          matcher: \"eq\",\n\t          values: [\"firefox\", \"chrome\"],\n\t        },\n\t      },\n\t      consequences: [\n\t        {\n\t          id: \"2222222\",\n\t          type: \"data\",\n\t          detail: {\n\t            html: \"<h1>Hello World!</h1>\",\n", "          },\n\t        },\n\t      ],\n\t    },\n\t  ],\n\t};\n\tdescribe(\"matcher type - equals (eq)\", () => {\n\t  let ruleset;\n\t  beforeEach(() => {\n\t    ruleset = RulesEngine(RULE_DEFINITION);\n", "  });\n\t  it(\"version\", () => {\n\t    expect(ruleset.getVersion()).toBe(1);\n\t  });\n\t  it(\"rules count\", () => {\n\t    expect(ruleset.numRules()).toBe(1);\n\t  });\n\t  it(\"returns consequences when any of the values equals the relevant key:value in context\", () => {\n\t    const result = ruleset.execute({\n\t      browser: \"firefox\",\n", "      timeSpentOnPage: 5,\n\t      os: \"windows\",\n\t    });\n\t    expect(result).toEqual([RULE_DEFINITION.rules[0].consequences]);\n\t  });\n\t  it(\"returns empty consequence when condition doesn't match meaning none of browser values matching the given context value of browser\", () => {\n\t    const result = ruleset.execute({\n\t      browser: \"safari\",\n\t      timeSpentOnPage: 5,\n\t      os: \"windows\",\n", "    });\n\t    expect(result).toEqual([]);\n\t  });\n\t});\n"]}
{"filename": "test/platform.spec.ts", "chunked_list": ["/*\n\tCopyright 2023 Adobe. All rights reserved.\n\tThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n\tyou may not use this file except in compliance with the License. You may obtain a copy\n\tof the License at http://www.apache.org/licenses/LICENSE-2.0\n\tUnless required by applicable law or agreed to in writing, software distributed under\n\tthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n\tOF ANY KIND, either express or implied. See the License for the specific language\n\tgoverning permissions and limitations under the License.\n\t*/\n", "import RulesEngine from \"../src/index\";\n\timport { Consequence, RuleSet } from \"../src/types/schema\";\n\tlet CONSEQUENCE: Consequence = {\n\t  id: \"27f487bf-e108-4e02-bf10-d2c094812291\",\n\t  type: \"cjmiam\",\n\t  detail: {\n\t    mobileParameters: {\n\t      verticalAlign: \"top\",\n\t      dismissAnimation: \"top\",\n\t      verticalInset: 2,\n", "      backdropOpacity: 0.2,\n\t      gestures: {\n\t        swipeUp: \"adbinapp://dismiss?interaction=swipeUp\",\n\t      },\n\t      cornerRadius: 15,\n\t      horizontalInset: 0,\n\t      uiTakeover: false,\n\t      horizontalAlign: \"center\",\n\t      displayAnimation: \"top\",\n\t      width: 95,\n", "      backdropColor: \"#000000\",\n\t      height: 17,\n\t    },\n\t    html: '<!doctype html>\\n<html><head>\\n    <meta type=\"templateProperties\" name=\"banner\" label=\"adobe-label:banner\" icon=\"adobe-icon:banner\">\\n    <meta type=\"templateZone\" name=\"default\" label=\"Default\" classname=\"body\" definition=\"[&quot;Image&quot;, &quot;Text&quot;, &quot;CloseBtn&quot;]\">\\n\\n    <meta type=\"templateDefaultAnimations\" displayanimation=\"top\" dismissanimation=\"top\">\\n    <meta type=\"templateDefaultSize\" width=\"95\" height=\"17\">\\n    <meta type=\"templateDefaultPosition\" verticalalign=\"top\" verticalinset=\"2\" horizontalalign=\"center\" horizontalinset=\"0\">\\n    <meta type=\"templateDefaultUiTakeover\" enable=\"false\">\\n\\n    <meta type=\"templateVariation\" default=\"true\" name=\"top\" label=\"adobe-label:banner-variation-top\" classname=\"variationTop\">\\n    <meta type=\"templateVariation\" name=\"bottom\" label=\"adobe-label:banner-variation-bottom\" classname=\"variationBottom\">\\n\\n    <meta type=\"templateDefaultGesture\" variation=\"top\" swipeup=\"adbinapp://dismiss?interaction=swipeUp\">\\n    <meta type=\"templateDefaultAnimations\" variation=\"bottom\" displayanimation=\"bottom\" dismissanimation=\"bottom\">\\n    <meta type=\"templateDefaultPosition\" variation=\"bottom\" verticalalign=\"bottom\">\\n    <meta type=\"templateDefaultGesture\" variation=\"bottom\" swipedown=\"adbinapp://dismiss?interaction=swipeDown\">\\n\\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\\n    <meta charset=\"UTF-8\">\\n    <style>\\n      html,\\n      body {\\n        margin: 0;\\n        padding: 0;\\n        text-align: center;\\n        width: 100%;\\n        height: 100%;\\n        font-family: adobe-clean, \\'Source Sans Pro\\', -apple-system, BlinkMacSystemFont, \\'Segoe UI\\',\\n          Roboto, sans-serif;\\n      }\\n\\n      h3 {\\n        margin: 0.1rem auto;\\n      }\\n      p {\\n        margin: 0;\\n      }\\n\\n      a {\\n        text-decoration: none;\\n      }\\n\\n      .wrapper {\\n        background-color: #fff;\\n        border-radius: 0.3125rem;\\n        color: #333333;\\n        width: 100%;\\n        min-height: 100%;\\n        display: flex;\\n        justify-content: center;\\n        flex-direction: column;\\n        position: relative;\\n        background-size: \\'cover\\';\\n      }\\n\\n      .content {\\n        height: 100vh;\\n        width: 100vw;\\n      }\\n\\n      .text {\\n        flex-grow: 1;\\n        text-align: left;\\n        line-height: 1.25rem;\\n        font-size: 0.875rem;\\n        color: #333333;\\n        letter-spacing: 0;\\n      }\\n\\n      .text:first-child {\\n        line-height: 1.3125rem;\\n        font-size: 1.025rem;\\n      }\\n\\n      .btnClose {\\n        color: #000000;\\n      }\\n\\n      .closeBtn {\\n        align-self: flex-start;\\n        order: 999;\\n      }\\n      .closeBtn img {\\n        width: 100%;\\n        height: 100%;\\n      }\\n\\n      .image {\\n        height: 100%;\\n        padding-right: 0.8rem;\\n        align-items: center;\\n        flex-grow: 0;\\n        display: flex;\\n      }\\n      .image img {\\n        height: 100%;\\n        max-width: 100%;\\n      }\\n\\n      .image.empty-image {\\n        display: none;\\n      }\\n\\n      .empty-image ~ .text {\\n        flex-grow: 1;\\n      }\\n\\n      .body {\\n        flex-grow: 1;\\n        width: 100%;\\n        height: 100%;\\n        display: flex;\\n        flex-direction: row;\\n        padding: 0.8rem;\\n        box-sizing: border-box;\\n        align-items: center;\\n        justify-content: space-between;\\n      }\\n\\n      .buttons {\\n        width: 100%;\\n        display: flex;\\n        flex-direction: column;\\n        font-size: 1rem;\\n        line-height: 1.3rem;\\n        text-decoration: none;\\n        text-align: center;\\n        box-sizing: border-box;\\n        padding: 0.8rem;\\n        padding-top: 0.4rem;\\n      }\\n\\n      .button {\\n        flex-grow: 1;\\n        background-color: #1473e6;\\n        color: #ffffff;\\n        border-radius: 0.25rem;\\n        cursor: pointer;\\n        padding: 0.3rem;\\n        gap: 0.5rem;\\n      }\\n    </style>\\n    <style type=\"text/css\" id=\"editor-styles\">\\n\\n</style>\\n  </head>\\n\\n  <body>\\n    <div class=\"wrapper\">\\n      <div class=\"content\">\\n        <div class=\"body\"><div class=\"image\" data-uuid=\"8163d13c-1e4e-4b07-94c7-18271bc02099\"><img src=\"https://exc-unifiedcontent.experience-stage.adobe.net/solutions/cjm-message-ui/static-assets/inapp/InAppBlockImageDefault.svg\" alt=\"Hello World\"></div><div class=\"text\" data-uuid=\"ebe691ce-3c1e-4f3e-87bd-010bc4a4033a\"><h3>Lion king</h3><p>Hakuna Matata! What a wonderful phrase Hakuna Matata!iption text</p></div><div class=\"closeBtn\" data-uuid=\"771eff8c-e85a-4072-8988-51f2008b8381\" data-btn-style=\"circle\"><a aria-label=\"Close\" class=\"btnClose\" href=\"adbinapp://dismiss?interaction=cancel\"><svg xmlns=\"http://www.w3.org/2000/svg\" height=\"18\" viewbox=\"0 0 18 18\" width=\"18\" class=\"close\">\\n  <rect id=\"Canvas\" fill=\"#ffffff\" opacity=\"0\" width=\"18\" height=\"18\"></rect>\\n  <path fill=\"currentColor\" d=\"M14.657,3.343a8,8,0,1,0-.00021,11.31371l.00021-.00021A8,8,0,0,0,14.657,3.343Zm-1.3435,9.265-.707.7055a.6.6,0,0,1-.84853.00147l-.00147-.00147L9,10.5555l-2.758,2.758a.6.6,0,0,1-.84853.00147L5.392,13.3135l-.7045-.7075a.6.6,0,0,1-.00147-.84853L4.6875,11.756,7.4445,9,4.6875,6.242A.6.6,0,0,1,4.686,5.39347L4.6875,5.392l.707-.707A.6.6,0,0,1,6.243,4.68353L6.2445,4.685,9,7.444l2.758-2.7575a.6.6,0,0,1,.84853-.00147l.00147.00147.707.707a.6.6,0,0,1,.00147.84853L13.315,6.2435,10.5555,9l2.758,2.758a.6.6,0,0,1,.00147.84853Z\"></path>\\n</svg></a></div></div>\\n      </div>\\n    </div>\\n  \\n\\n</body></html>',\n\t    remoteAssets: [\n\t      \"https://exc-unifiedcontent.experience-stage.adobe.net/solutions/cjm-message-ui/static-assets/inapp/InAppBlockImageDefault.svg\",\n\t    ],\n\t  },\n\t};\n\tconst RULE_SET: RuleSet = {\n", "  version: 1,\n\t  rules: [\n\t    {\n\t      condition: {\n\t        definition: {\n\t          conditions: [\n\t            {\n\t              definition: {\n\t                conditions: [\n\t                  {\n", "                    definition: {\n\t                      key: \"~type\",\n\t                      matcher: \"eq\",\n\t                      values: [\"com.adobe.eventType.edge\"],\n\t                    },\n\t                    type: \"matcher\",\n\t                  },\n\t                  {\n\t                    definition: {\n\t                      key: \"~source\",\n", "                      matcher: \"eq\",\n\t                      values: [\"com.adobe.eventSource.requestContent\"],\n\t                    },\n\t                    type: \"matcher\",\n\t                  },\n\t                ],\n\t                logic: \"and\",\n\t              },\n\t              type: \"group\",\n\t            },\n", "            {\n\t              definition: {\n\t                conditions: [\n\t                  {\n\t                    definition: {\n\t                      key: \"xdm.eventType\",\n\t                      matcher: \"eq\",\n\t                      values: [\n\t                        \"advertising.clicks\",\n\t                        \"advertising.completes\",\n", "                        \"application.launch\",\n\t                        \"application.close\",\n\t                      ],\n\t                    },\n\t                    type: \"matcher\",\n\t                  },\n\t                  {\n\t                    definition: { key: \"xdm.eventType\", matcher: \"eq\" },\n\t                    type: \"matcher\",\n\t                  },\n", "                  {\n\t                    definition: {\n\t                      key: \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.runmode\",\n\t                      matcher: \"eq\",\n\t                      values: [\"Application\"],\n\t                    },\n\t                    type: \"matcher\",\n\t                  },\n\t                ],\n\t                logic: \"or\",\n", "              },\n\t              type: \"group\",\n\t            },\n\t          ],\n\t          logic: \"and\",\n\t        },\n\t        type: \"group\",\n\t      },\n\t      consequences: [CONSEQUENCE],\n\t    },\n", "  ],\n\t};\n\tdescribe(\"( Sent data to Platform event happens) AND (( XDM event type is advertising.clicks, advertising.completes, application.launch, or application.close ) OR ( XDM event type is empty ) OR ( Run mode is Application ))\", () => {\n\t  let ruleset;\n\t  beforeEach(() => {\n\t    ruleset = RulesEngine(RULE_SET);\n\t  });\n\t  it(\"Sent data to Platform\", () => {\n\t    const result = ruleset.execute({\n\t      \"~type\": \"com.adobe.eventType.edge\",\n", "      \"~source\": \"com.adobe.eventSource.requestContent\",\n\t      \"xdm.eventType\": \"Advertising.clicks\",\n\t      \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.runmode\":\n\t        \"Application\",\n\t    });\n\t    expect(result).toEqual([RULE_SET.rules[0].consequences]);\n\t  });\n\t  it(\"shouldn't display message for not equals ~type value\", () => {\n\t    const result = ruleset.execute({\n\t      \"~type\": \"com.adobe.eventType.generic.track\",\n", "      \"~source\": \"com.adobe.eventSource.requestContent\",\n\t      \"xdm.eventType\": \"application.launch\",\n\t      \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.runmode\":\n\t        \"Application\",\n\t    });\n\t    expect(result).toEqual([]);\n\t  });\n\t  it(\"shouldn't display message for not supported values\", () => {\n\t    const result = ruleset.execute({\n\t      \"~type\": new Date(),\n", "      \"~source\": \"com.adobe.eventSource.requestContent\",\n\t      \"xdm.eventType\": \"application.launch\",\n\t      \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.runmode\":\n\t        \"Application\",\n\t    });\n\t    expect(result).toEqual([]);\n\t  });\n\t  it(\"shouldn't display message for undefined\", () => {\n\t    const result = ruleset.execute({\n\t      \"~type\": undefined,\n", "      \"~source\": \"com.adobe.eventSource.requestContent\",\n\t      \"xdm.eventType\": \"application.launch\",\n\t      \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.runmode\":\n\t        \"Application\",\n\t    });\n\t    expect(result).toEqual([]);\n\t  });\n\t  it(\"shouldn't display message for null\", () => {\n\t    const result = ruleset.execute({\n\t      \"~type\": null,\n", "      \"~source\": \"com.adobe.eventSource.requestContent\",\n\t      \"xdm.eventType\": \"application.launch\",\n\t      \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.runmode\":\n\t        \"Application\",\n\t    });\n\t    expect(result).toEqual([]);\n\t  });\n\t});\n"]}
{"filename": "test/notEquals.spec.ts", "chunked_list": ["/*\n\tCopyright 2023 Adobe. All rights reserved.\n\tThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n\tyou may not use this file except in compliance with the License. You may obtain a copy\n\tof the License at http://www.apache.org/licenses/LICENSE-2.0\n\tUnless required by applicable law or agreed to in writing, software distributed under\n\tthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n\tOF ANY KIND, either express or implied. See the License for the specific language\n\tgoverning permissions and limitations under the License.\n\t*/\n", "import RulesEngine from \"../src/index\";\n\timport { RuleSet } from \"../src/types/schema\";\n\tconst RULE_DEFINITION: RuleSet = {\n\t  version: 1,\n\t  rules: [\n\t    {\n\t      condition: {\n\t        type: \"matcher\",\n\t        definition: {\n\t          key: \"browser\",\n", "          matcher: \"ne\",\n\t          values: [\"firefox\", \"chrome\"],\n\t        },\n\t      },\n\t      consequences: [\n\t        {\n\t          id: \"2222222\",\n\t          type: \"data\",\n\t          detail: {\n\t            html: \"<h1>Hello World!</h1>\",\n", "          },\n\t        },\n\t      ],\n\t    },\n\t  ],\n\t};\n\tdescribe(\"matcher type - equals (ne)\", () => {\n\t  let ruleset;\n\t  beforeEach(() => {\n\t    ruleset = RulesEngine(RULE_DEFINITION);\n", "  });\n\t  it(\"returns consequences when any of the values not equals the relevant key:value in context\", () => {\n\t    const result = ruleset.execute({\n\t      browser: \"safari\",\n\t      timeSpentOnPage: 5,\n\t      os: \"windows\",\n\t    });\n\t    expect(result).toEqual([RULE_DEFINITION.rules[0].consequences]);\n\t  });\n\t  it(\"returns empty consequence when condition values matching the given context value of browser\", () => {\n", "    const result = ruleset.execute({\n\t      browser: \"CHROME\",\n\t      timeSpentOnPage: 5,\n\t      os: \"windows\",\n\t    });\n\t    expect(result).toEqual([]);\n\t  });\n\t  it(\"returns empty consequence when undefined value passed\", () => {\n\t    const result = ruleset.execute({\n\t      browser: undefined,\n", "      timeSpentOnPage: 5,\n\t      os: \"windows\",\n\t    });\n\t    expect(result).toEqual([]);\n\t  });\n\t  it(\"returns empty consequence when object value passed\", () => {\n\t    const result = ruleset.execute({\n\t      browser: new Date(),\n\t      timeSpentOnPage: 5,\n\t      os: \"windows\",\n", "    });\n\t    expect(result).toEqual([]);\n\t  });\n\t});\n"]}
{"filename": "test/lessThanEquals.spec.ts", "chunked_list": ["/*\n\tCopyright 2023 Adobe. All rights reserved.\n\tThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n\tyou may not use this file except in compliance with the License. You may obtain a copy\n\tof the License at http://www.apache.org/licenses/LICENSE-2.0\n\tUnless required by applicable law or agreed to in writing, software distributed under\n\tthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n\tOF ANY KIND, either express or implied. See the License for the specific language\n\tgoverning permissions and limitations under the License.\n\t*/\n", "import RulesEngine from \"../src/index\";\n\timport { RuleSet } from \"../src/types/schema\";\n\tconst RULE_SET: RuleSet = {\n\t  version: 1.1,\n\t  rules: [\n\t    {\n\t      condition: {\n\t        type: \"matcher\",\n\t        definition: {\n\t          key: \"membershipPoint\",\n", "          matcher: \"le\",\n\t          values: [6000, 3000],\n\t        },\n\t      },\n\t      consequences: [\n\t        {\n\t          id: \"b2023\",\n\t          type: \"data\",\n\t          detail: {\n\t            html: \"<h1> You can increase your membership point by using our promo benefits, sign up now!</h1>\",\n", "          },\n\t        },\n\t      ],\n\t    },\n\t  ],\n\t};\n\tdescribe(\"matcher type - lesser than equals  (le)\", () => {\n\t  let ruleset;\n\t  beforeEach(() => {\n\t    ruleset = RulesEngine(RULE_SET);\n", "  });\n\t  it(\"returns consequence  when the context key's values is lesser than or equal to rule's condition definition values\", () => {\n\t    const result = ruleset.execute({\n\t      country: \"USA\",\n\t      city: \"Salt Lake City\",\n\t      state: \"UT\",\n\t      membershipPoint: 6000,\n\t    });\n\t    expect(result).toEqual([RULE_SET.rules[0].consequences]);\n\t  });\n", "  it(\"returns consequence  when the context key's values is  lesser than or equal to any rule's condition definition values\", () => {\n\t    const result = ruleset.execute({\n\t      country: \"USA\",\n\t      city: \"Salt Lake City\",\n\t      state: \"UT\",\n\t      membershipPoint: 4000,\n\t    });\n\t    expect(result).toEqual([RULE_SET.rules[0].consequences]);\n\t  });\n\t  it(\"returns empty consequence when the context key's values is  null\", () => {\n", "    const result = ruleset.execute({\n\t      country: \"USA\",\n\t      city: \"Salt Lake City\",\n\t      state: \"UT\",\n\t      membershipPoint: null,\n\t    });\n\t    expect(result).toEqual([]);\n\t  });\n\t  it(\"returns  empty consequence when the  context key's values is undefined\", () => {\n\t    const result = ruleset.execute({\n", "      country: \"USA\",\n\t      city: \"Salt Lake City\",\n\t      state: \"UT\",\n\t      membershipPoint: undefined,\n\t    });\n\t    expect(result).toEqual([]);\n\t  });\n\t});\n"]}
{"filename": "test/lessThan.spec.ts", "chunked_list": ["/*\n\tCopyright 2023 Adobe. All rights reserved.\n\tThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n\tyou may not use this file except in compliance with the License. You may obtain a copy\n\tof the License at http://www.apache.org/licenses/LICENSE-2.0\n\tUnless required by applicable law or agreed to in writing, software distributed under\n\tthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n\tOF ANY KIND, either express or implied. See the License for the specific language\n\tgoverning permissions and limitations under the License.\n\t*/\n", "import RulesEngine from \"../src/index\";\n\timport { RuleSet } from \"../src/types/schema\";\n\tconst RULE_SET: RuleSet = {\n\t  version: 1.1,\n\t  rules: [\n\t    {\n\t      condition: {\n\t        type: \"matcher\",\n\t        definition: {\n\t          key: \"membershipPoint\",\n", "          matcher: \"lt\",\n\t          values: [6000, 3000],\n\t        },\n\t      },\n\t      consequences: [\n\t        {\n\t          id: \"b2023\",\n\t          type: \"data\",\n\t          detail: {\n\t            html: \"<h1> You can increase your membership point by using our promo benefits, sign up now!</h1>\",\n", "          },\n\t        },\n\t      ],\n\t    },\n\t  ],\n\t};\n\tdescribe(\"matcher type - less than  (lt)\", () => {\n\t  let ruleset;\n\t  beforeEach(() => {\n\t    ruleset = RulesEngine(RULE_SET);\n", "  });\n\t  it(\"returns consequence  when the context key's value is  lesser than rule's condition definition values\", () => {\n\t    const result = ruleset.execute({\n\t      country: \"USA\",\n\t      city: \"Salt Lake City\",\n\t      state: \"UT\",\n\t      membershipPoint: 4000,\n\t    });\n\t    expect(result).toEqual([RULE_SET.rules[0].consequences]);\n\t  });\n", "  it(\"returns no consequence  when the context key's value is not lesser than rule's condition definition values\", () => {\n\t    const result = ruleset.execute({\n\t      country: \"USA\",\n\t      city: \"Salt Lake City\",\n\t      state: \"UT\",\n\t      membershipPoint: 6000,\n\t    });\n\t    expect(result).toEqual([]);\n\t  });\n\t  it(\"returns consequence  when the context key's value is  lesser than rule's condition definition values\", () => {\n", "    const result = ruleset.execute({\n\t      country: \"USA\",\n\t      city: \"Salt Lake City\",\n\t      state: \"UT\",\n\t      membershipPoint: 5999,\n\t    });\n\t    expect(result).toEqual([RULE_SET.rules[0].consequences]);\n\t  });\n\t  it(\"returns empty consequence when the input context key's value is  null\", () => {\n\t    const result = ruleset.execute({\n", "      country: \"USA\",\n\t      city: \"Salt Lake City\",\n\t      state: \"UT\",\n\t      membershipPoint: null,\n\t    });\n\t    expect(result).toEqual([]);\n\t  });\n\t  it(\"returns  empty consequence when the input context key's value is undefined\", () => {\n\t    const result = ruleset.execute({\n\t      country: \"USA\",\n", "      city: \"Salt Lake City\",\n\t      state: \"UT\",\n\t      membershipPoint: undefined,\n\t    });\n\t    expect(result).toEqual([]);\n\t  });\n\t  it(\"returns empty consequence when the input context key's value is not less than any rule's condition definition values\", () => {\n\t    const result = ruleset.execute({\n\t      country: \"USA\",\n\t      city: \"Salt Lake City\",\n", "      state: \"UT\",\n\t      membershipPoint: 7000,\n\t    });\n\t    expect(result).toEqual([]);\n\t  });\n\t});\n"]}
{"filename": "test/greaterThan.spec.ts", "chunked_list": ["/*\n\tCopyright 2023 Adobe. All rights reserved.\n\tThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n\tyou may not use this file except in compliance with the License. You may obtain a copy\n\tof the License at http://www.apache.org/licenses/LICENSE-2.0\n\tUnless required by applicable law or agreed to in writing, software distributed under\n\tthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n\tOF ANY KIND, either express or implied. See the License for the specific language\n\tgoverning permissions and limitations under the License.\n\t*/\n", "import RulesEngine from \"../src/index\";\n\timport { RuleSet } from \"../src/types/schema\";\n\tconst RULE_SET: RuleSet = {\n\t  version: 1.1,\n\t  rules: [\n\t    {\n\t      condition: {\n\t        type: \"matcher\",\n\t        definition: {\n\t          key: \"membershipPoint\",\n", "          matcher: \"gt\",\n\t          values: [6000, 3000],\n\t        },\n\t      },\n\t      consequences: [\n\t        {\n\t          id: \"b2023\",\n\t          type: \"data\",\n\t          detail: {\n\t            html: \"<h1> You can increase your membership point by using our promo benefits, sign up now!</h1>\",\n", "          },\n\t        },\n\t      ],\n\t    },\n\t  ],\n\t};\n\tdescribe(\"matcher type - greater than  (gt)\", () => {\n\t  let ruleset;\n\t  beforeEach(() => {\n\t    ruleset = RulesEngine(RULE_SET);\n", "  });\n\t  it(\"returns consequence  when the context key's value is  greater than rule's condition definition values\", () => {\n\t    const result = ruleset.execute({\n\t      country: \"USA\",\n\t      city: \"Salt Lake City\",\n\t      state: \"UT\",\n\t      membershipPoint: 4000,\n\t    });\n\t    expect(result).toEqual([RULE_SET.rules[0].consequences]);\n\t  });\n", "  it(\"returns consequence  when the context key's value is greater than rule's condition definition values\", () => {\n\t    const result = ruleset.execute({\n\t      country: \"USA\",\n\t      city: \"Salt Lake City\",\n\t      state: \"UT\",\n\t      membershipPoint: 6000,\n\t    });\n\t    expect(result).toEqual([RULE_SET.rules[0].consequences]);\n\t  });\n\t  it(\"returns empty consequence when the input context key's value is  null\", () => {\n", "    const result = ruleset.execute({\n\t      country: \"USA\",\n\t      city: \"Salt Lake City\",\n\t      state: \"UT\",\n\t      membershipPoint: null,\n\t    });\n\t    expect(result).toEqual([]);\n\t  });\n\t  it(\"returns  empty consequence when the input context key's value is undefined\", () => {\n\t    const result = ruleset.execute({\n", "      country: \"USA\",\n\t      city: \"Salt Lake City\",\n\t      state: \"UT\",\n\t      membershipPoint: undefined,\n\t    });\n\t    expect(result).toEqual([]);\n\t  });\n\t  it(\"returns empty consequence when the input context key's value is not greater than any rule's condition definition values\", () => {\n\t    const result = ruleset.execute({\n\t      country: \"USA\",\n", "      city: \"Salt Lake City\",\n\t      state: \"UT\",\n\t      membershipPoint: 2000,\n\t    });\n\t    expect(result).toEqual([]);\n\t  });\n\t  it(\"returns empty consequence when the input context key's value is not greater than any rule's condition definition values\", () => {\n\t    const result = ruleset.execute({\n\t      country: \"USA\",\n\t      city: \"Salt Lake City\",\n", "      state: \"UT\",\n\t      membershipPoint: 3000,\n\t    });\n\t    expect(result).toEqual([]);\n\t  });\n\t});\n"]}
{"filename": "test/simple-group-or.spec.ts", "chunked_list": ["/*\n\tCopyright 2023 Adobe. All rights reserved.\n\tThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n\tyou may not use this file except in compliance with the License. You may obtain a copy\n\tof the License at http://www.apache.org/licenses/LICENSE-2.0\n\tUnless required by applicable law or agreed to in writing, software distributed under\n\tthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n\tOF ANY KIND, either express or implied. See the License for the specific language\n\tgoverning permissions and limitations under the License.\n\t*/\n", "import RulesEngine from \"../src/index\";\n\timport { RuleSet } from \"../src/types/schema\";\n\tconst RULE_DEFINITION: RuleSet = {\n\t  version: 1,\n\t  rules: [\n\t    {\n\t      condition: {\n\t        type: \"group\",\n\t        definition: {\n\t          logic: \"or\",\n", "          conditions: [\n\t            {\n\t              type: \"matcher\",\n\t              definition: {\n\t                key: \"key1\",\n\t                matcher: \"eq\",\n\t                values: [\"value1\", \"value2\"],\n\t              },\n\t            },\n\t            {\n", "              type: \"matcher\",\n\t              definition: {\n\t                key: \"key3\",\n\t                matcher: \"eq\",\n\t                values: [\"value5\", \"value6\"],\n\t              },\n\t            },\n\t          ],\n\t        },\n\t      },\n", "      consequences: [\n\t        {\n\t          id: \"2222222\",\n\t          type: \"data\",\n\t          detail: {\n\t            html: \"<h1>Hello World!</h1>\",\n\t          },\n\t        },\n\t      ],\n\t    },\n", "  ],\n\t};\n\tdescribe(\"simple group-or\", () => {\n\t  let ruleset;\n\t  beforeEach(() => {\n\t    ruleset = RulesEngine(RULE_DEFINITION);\n\t  });\n\t  it(\"execute both conditions true\", () => {\n\t    const result = ruleset.execute({\n\t      key1: \"value1\",\n", "      key2: \"value2\",\n\t      key3: \"value5\",\n\t    });\n\t    expect(result).toEqual([RULE_DEFINITION.rules[0].consequences]);\n\t  });\n\t  it(\"execute first condition true\", () => {\n\t    const result = ruleset.execute({\n\t      key1: \"value1\",\n\t      key2: \"value2\",\n\t      key3: \"valueX\",\n", "    });\n\t    expect(result).toEqual([RULE_DEFINITION.rules[0].consequences]);\n\t  });\n\t  it(\"execute second condition true\", () => {\n\t    const result = ruleset.execute({\n\t      key1: \"valueX\",\n\t      key2: \"value2\",\n\t      key3: \"value5\",\n\t    });\n\t    expect(result).toEqual([RULE_DEFINITION.rules[0].consequences]);\n", "  });\n\t  it(\"execute both conditions false\", () => {\n\t    const result = ruleset.execute({\n\t      key1: \"valueX\",\n\t      key2: \"value2\",\n\t      key3: \"valueX\",\n\t    });\n\t    expect(result).toEqual([]);\n\t  });\n\t});\n"]}
{"filename": "test/historical-query.spec.ts", "chunked_list": ["/*\n\tCopyright 2023 Adobe. All rights reserved.\n\tThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n\tyou may not use this file except in compliance with the License. You may obtain a copy\n\tof the License at http://www.apache.org/licenses/LICENSE-2.0\n\tUnless required by applicable law or agreed to in writing, software distributed under\n\tthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n\tOF ANY KIND, either express or implied. See the License for the specific language\n\tgoverning permissions and limitations under the License.\n\t*/\n", "import RulesEngine from \"../src\";\n\timport { Consequence } from \"../src/types/schema\";\n\timport { RuleSet } from \"../types/types/schema\";\n\tlet CONSEQUENCE: Consequence = {\n\t  id: \"6df71dd7-a24f-4944-9787-49345c417b01\",\n\t  type: \"cjmiam\",\n\t  detail: {\n\t    mobileParameters: {\n\t      verticalAlign: \"center\",\n\t      dismissAnimation: \"bottom\",\n", "      verticalInset: 0,\n\t      backdropOpacity: 0.2,\n\t      gestures: {},\n\t      cornerRadius: 15,\n\t      horizontalInset: 0,\n\t      uiTakeover: true,\n\t      horizontalAlign: \"center\",\n\t      displayAnimation: \"bottom\",\n\t      width: 100,\n\t      backdropColor: \"#000000\",\n", "      height: 100,\n\t    },\n\t    html: \"<div>Hello</div>\",\n\t    remoteAssets: [\n\t      \"https://exc-unifiedcontent.experience-stage.adobe.net/solutions/cjm-message-ui/static-assets/inapp/InAppBlockImageDefault.svg\",\n\t    ],\n\t  },\n\t};\n\tdescribe(\"rules from AJO\", () => {\n\t  it(\"supports historical condition for searchType ANY\", () => {\n", "    expect(\n\t      RulesEngine({\n\t        version: 1,\n\t        rules: [\n\t          {\n\t            condition: {\n\t              definition: {\n\t                conditions: [\n\t                  {\n\t                    definition: {\n", "                      conditions: [\n\t                        {\n\t                          definition: {\n\t                            events: [\n\t                              {\n\t                                type: \"display\",\n\t                                id: \"6cd5a8ed-e183-48b7-a0ef-657a4467df74#0477a309-6f63-4638-b729-ab51cf5dd3aa\",\n\t                              },\n\t                            ],\n\t                            matcher: \"eq\",\n", "                            value: 1,\n\t                            from: 1681321309855,\n\t                            to: 1996681309855,\n\t                          },\n\t                          type: \"historical\",\n\t                        },\n\t                      ],\n\t                      logic: \"and\",\n\t                    },\n\t                    type: \"group\",\n", "                  },\n\t                ],\n\t                logic: \"and\",\n\t              },\n\t              type: \"group\",\n\t            },\n\t            consequences: [CONSEQUENCE],\n\t          },\n\t        ],\n\t      }).execute({\n", "        events: {\n\t          display: {\n\t            \"6cd5a8ed-e183-48b7-a0ef-657a4467df74#0477a309-6f63-4638-b729-ab51cf5dd3aa\":\n\t              {\n\t                event: {\n\t                  type: \"display\",\n\t                  id: \"6cd5a8ed-e183-48b7-a0ef-657a4467df74#0477a309-6f63-4638-b729-ab51cf5dd3aa\",\n\t                },\n\t                timestamp: 1681321319855,\n\t                count: 1,\n", "              },\n\t          },\n\t        },\n\t      })\n\t    ).toEqual([[CONSEQUENCE]]);\n\t  });\n\t  it(\"Should return empty consequence for historical condition when count doesn't match with matcher provided\", () => {\n\t    expect(\n\t      RulesEngine({\n\t        version: 1,\n", "        rules: [\n\t          {\n\t            condition: {\n\t              definition: {\n\t                conditions: [\n\t                  {\n\t                    definition: {\n\t                      conditions: [\n\t                        {\n\t                          definition: {\n", "                            events: [\n\t                              {\n\t                                type: \"display\",\n\t                                id: \"6cd5a8ed-e183-48b7-a0ef-657a4467df74#0477a309-6f63-4638-b729-ab51cf5dd3aa\",\n\t                              },\n\t                            ],\n\t                            matcher: \"gt\",\n\t                            value: 1,\n\t                            from: 1681321309855,\n\t                            to: 1996681309855,\n", "                          },\n\t                          type: \"historical\",\n\t                        },\n\t                      ],\n\t                      logic: \"and\",\n\t                    },\n\t                    type: \"group\",\n\t                  },\n\t                ],\n\t                logic: \"and\",\n", "              },\n\t              type: \"group\",\n\t            },\n\t            consequences: [CONSEQUENCE],\n\t          },\n\t        ],\n\t      }).execute({\n\t        events: {\n\t          display: {\n\t            \"6cd5a8ed-e183-48b7-a0ef-657a4467df74#0477a309-6f63-4638-b729-ab51cf5dd3aa\":\n", "              {\n\t                event: {\n\t                  type: \"display\",\n\t                  id: \"6cd5a8ed-e183-48b7-a0ef-657a4467df74#0477a309-6f63-4638-b729-ab51cf5dd3aa\",\n\t                },\n\t                timestamp: 1681321319855,\n\t                count: 1,\n\t              },\n\t          },\n\t        },\n", "      })\n\t    ).toEqual([]);\n\t  });\n\t  it(\"should return consequence in case count of an event is greater than one and the event is in the date range for ordered search type\", () => {\n\t    expect(\n\t      RulesEngine({\n\t        version: 1,\n\t        rules: [\n\t          {\n\t            condition: {\n", "              definition: {\n\t                conditions: [\n\t                  {\n\t                    definition: {\n\t                      conditions: [\n\t                        {\n\t                          definition: {\n\t                            events: [\n\t                              {\n\t                                type: \"display\",\n", "                                id: \"6cd5a8ed-e183-48b7-a0ef-657a4467df74#0477a309-6f63-4638-b729-ab51cf5dd3aa\",\n\t                              },\n\t                              {\n\t                                type: \"interact\",\n\t                                id: \"6cd5a8ed-e183-48b7-a0ef-657a4467df74#0477a309-6f63-4638-b729-ab51cf5dd3bb\",\n\t                              },\n\t                            ],\n\t                            matcher: \"ge\",\n\t                            value: 1,\n\t                            from: 1681321309855,\n", "                            to: 1996681309855,\n\t                            searchType: \"ordered\",\n\t                          },\n\t                          type: \"historical\",\n\t                        },\n\t                      ],\n\t                      logic: \"and\",\n\t                    },\n\t                    type: \"group\",\n\t                  },\n", "                ],\n\t                logic: \"and\",\n\t              },\n\t              type: \"group\",\n\t            },\n\t            consequences: [CONSEQUENCE],\n\t          },\n\t        ],\n\t      }).execute({\n\t        events: {\n", "          display: {\n\t            \"6cd5a8ed-e183-48b7-a0ef-657a4467df74#0477a309-6f63-4638-b729-ab51cf5dd3aa\":\n\t              {\n\t                event: {\n\t                  type: \"display\",\n\t                  id: \"6cd5a8ed-e183-48b7-a0ef-657a4467df74#0477a309-6f63-4638-b729-ab51cf5dd3aa\",\n\t                },\n\t                timestamp: 1681321319855,\n\t                count: 1,\n\t              },\n", "          },\n\t          interact: {\n\t            \"6cd5a8ed-e183-48b7-a0ef-657a4467df74#0477a309-6f63-4638-b729-ab51cf5dd3bb\":\n\t              {\n\t                event: {\n\t                  type: \"interact\",\n\t                  id: \"6cd5a8ed-e183-48b7-a0ef-657a4467df74#0477a309-6f63-4638-b729-ab51cf5dd3bb\",\n\t                },\n\t                timestamp: 1681321339855,\n\t                count: 1,\n", "              },\n\t          },\n\t        },\n\t      })\n\t    ).toEqual([[CONSEQUENCE]]);\n\t  });\n\t  it(\"Should return 0 if the count for any event is ever zero for ordered search type\", () => {\n\t    expect(\n\t      RulesEngine({\n\t        version: 1,\n", "        rules: [\n\t          {\n\t            condition: {\n\t              definition: {\n\t                conditions: [\n\t                  {\n\t                    definition: {\n\t                      conditions: [\n\t                        {\n\t                          definition: {\n", "                            events: [\n\t                              {\n\t                                type: \"display\",\n\t                                id: \"6cd5a8ed-e183-48b7-a0ef-657a4467df74#0477a309-6f63-4638-b729-ab51cf5dd3aa\",\n\t                              },\n\t                              {\n\t                                type: \"interact\",\n\t                                id: \"6cd5a8ed-e183-48b7-a0ef-657a4467df74#0477a309-6f63-4638-b729-ab51cf5dd3bb\",\n\t                              },\n\t                            ],\n", "                            matcher: \"eq\",\n\t                            value: 1,\n\t                            from: 1681321309855,\n\t                            to: 1996681309855,\n\t                            searchType: \"ordered\",\n\t                          },\n\t                          type: \"historical\",\n\t                        },\n\t                      ],\n\t                      logic: \"and\",\n", "                    },\n\t                    type: \"group\",\n\t                  },\n\t                ],\n\t                logic: \"and\",\n\t              },\n\t              type: \"group\",\n\t            },\n\t            consequences: [CONSEQUENCE],\n\t          },\n", "        ],\n\t      }).execute({\n\t        events: {\n\t          display: {\n\t            \"6cd5a8ed-e183-48b7-a0ef-657a4467df74#0477a309-6f63-4638-b729-ab51cf5dd3aa\":\n\t              {\n\t                event: {\n\t                  type: \"display\",\n\t                  id: \"6cd5a8ed-e183-48b7-a0ef-657a4467df74#0477a309-6f63-4638-b729-ab51cf5dd3aa\",\n\t                },\n", "                timestamp: 1681321319855,\n\t                count: 1,\n\t              },\n\t          },\n\t        },\n\t      })\n\t    ).toEqual([]);\n\t  });\n\t  it(\"distinguishes between display and interact events with the same id\", () => {\n\t    const displayRuleset = {\n", "      version: 1,\n\t      rules: [\n\t        {\n\t          condition: {\n\t            definition: {\n\t              conditions: [\n\t                {\n\t                  definition: {\n\t                    conditions: [\n\t                      {\n", "                        definition: {\n\t                          events: [\n\t                            {\n\t                              type: \"display\",\n\t                              id: \"6cd5a8ed\",\n\t                            },\n\t                          ],\n\t                          matcher: \"ge\",\n\t                          value: 1,\n\t                        },\n", "                        type: \"historical\",\n\t                      },\n\t                    ],\n\t                    logic: \"and\",\n\t                  },\n\t                  type: \"group\",\n\t                },\n\t              ],\n\t              logic: \"and\",\n\t            },\n", "            type: \"group\",\n\t          },\n\t          consequences: [CONSEQUENCE],\n\t        },\n\t      ],\n\t    };\n\t    const interactRuleset: RuleSet = {\n\t      version: 1,\n\t      rules: [\n\t        {\n", "          condition: {\n\t            definition: {\n\t              conditions: [\n\t                {\n\t                  definition: {\n\t                    conditions: [\n\t                      {\n\t                        definition: {\n\t                          events: [\n\t                            {\n", "                              type: \"interact\",\n\t                              id: \"6cd5a8ed\",\n\t                            },\n\t                          ],\n\t                          matcher: \"ge\",\n\t                          value: 1,\n\t                        },\n\t                        type: \"historical\",\n\t                      },\n\t                    ],\n", "                    logic: \"and\",\n\t                  },\n\t                  type: \"group\",\n\t                },\n\t              ],\n\t              logic: \"and\",\n\t            },\n\t            type: \"group\",\n\t          },\n\t          consequences: [CONSEQUENCE],\n", "        },\n\t      ],\n\t    };\n\t    expect(\n\t      RulesEngine(displayRuleset).execute({\n\t        events: {\n\t          interact: {\n\t            \"6cd5a8ed\": {\n\t              event: {\n\t                type: \"interact\",\n", "                id: \"6cd5a8ed\",\n\t              },\n\t              timestamp: 1681321939855,\n\t              count: 1,\n\t            },\n\t          },\n\t        },\n\t      })\n\t    ).toEqual([]);\n\t    expect(\n", "      RulesEngine(displayRuleset).execute({\n\t        events: {\n\t          display: {\n\t            \"6cd5a8ed\": {\n\t              event: {\n\t                type: \"display\",\n\t                id: \"6cd5a8ed\",\n\t              },\n\t              timestamp: 1681321939855,\n\t              count: 1,\n", "            },\n\t          },\n\t        },\n\t      })\n\t    ).toEqual([[CONSEQUENCE]]);\n\t    expect(\n\t      RulesEngine(interactRuleset).execute({\n\t        events: {\n\t          display: {\n\t            \"6cd5a8ed\": {\n", "              event: {\n\t                type: \"display\",\n\t                id: \"6cd5a8ed\",\n\t              },\n\t              timestamp: 1681321939855,\n\t              count: 1,\n\t            },\n\t          },\n\t        },\n\t      })\n", "    ).toEqual([]);\n\t    expect(\n\t      RulesEngine(interactRuleset).execute({\n\t        events: {\n\t          interact: {\n\t            \"6cd5a8ed\": {\n\t              event: {\n\t                type: \"interact\",\n\t                id: \"6cd5a8ed\",\n\t              },\n", "              timestamp: 1681321939855,\n\t              count: 1,\n\t            },\n\t          },\n\t        },\n\t      })\n\t    ).toEqual([[CONSEQUENCE]]);\n\t  });\n\t});\n"]}
{"filename": "test/applicationUpgrade.spec.ts", "chunked_list": ["/*\n\tCopyright 2023 Adobe. All rights reserved.\n\tThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n\tyou may not use this file except in compliance with the License. You may obtain a copy\n\tof the License at http://www.apache.org/licenses/LICENSE-2.0\n\tUnless required by applicable law or agreed to in writing, software distributed under\n\tthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n\tOF ANY KIND, either express or implied. See the License for the specific language\n\tgoverning permissions and limitations under the License.\n\t*/\n", "import RulesEngine from \"../src/index\";\n\timport { Consequence, RuleSet } from \"../src/types/schema\";\n\tlet CONSEQUENCE: Consequence = {\n\t  id: \"277680bc-b3db-4c94-8e0e-e1a7ce9573ab\",\n\t  type: \"cjmiam\",\n\t  detail: {\n\t    mobileParameters: {\n\t      verticalAlign: \"center\",\n\t      dismissAnimation: \"bottom\",\n\t      verticalInset: 0,\n", "      backdropOpacity: 0.2,\n\t      cornerRadius: 15,\n\t      gestures: {},\n\t      horizontalInset: 0,\n\t      uiTakeover: true,\n\t      horizontalAlign: \"center\",\n\t      width: 100,\n\t      displayAnimation: \"bottom\",\n\t      backdropColor: \"#000000\",\n\t      height: 100,\n", "    },\n\t    html: '<!doctype html>\\n<html><head>\\n    <meta type=\"templateProperties\" name=\"fullscreen\" label=\"adobe-label:fullscreen\" icon=\"adobe-icon:fullscreen\">\\n    <meta type=\"templateZone\" name=\"default\" label=\"Default\" classname=\"body\" definition=\"[&quot;CloseBtn&quot;, &quot;Image&quot;, &quot;Text&quot;, &quot;Buttons&quot;]\">\\n\\n    <meta type=\"templateDefaultAnimations\" displayanimation=\"bottom\" dismissanimation=\"bottom\">\\n    <meta type=\"templateDefaultSize\" width=\"100\" height=\"100\">\\n    <meta type=\"templateDefaultPosition\" verticalalign=\"center\" verticalinset=\"0\" horizontalalign=\"center\" horizontalinset=\"0\">\\n    <meta type=\"templateDefaultGesture\">\\n    <meta type=\"templateDefaultUiTakeover\" enable=\"true\">\\n\\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\\n    <meta charset=\"UTF-8\">\\n    <style>\\n      html,\\n      body {\\n        margin: 0;\\n        padding: 0;\\n        text-align: center;\\n        width: 100%;\\n        height: 100%;\\n        font-family: adobe-clean, \\'Source Sans Pro\\', -apple-system, BlinkMacSystemFont, \\'Segoe UI\\',\\n          Roboto, sans-serif;\\n      }\\n\\n      h3 {\\n        margin: 0.4rem auto;\\n      }\\n      p {\\n        margin: 0.4rem auto;\\n      }\\n\\n      .body {\\n        display: flex;\\n        flex-direction: column;\\n        background-color: #fff;\\n        border-radius: 0.3rem;\\n        color: #333333;\\n        width: 100vw;\\n        height: 100vh;\\n        text-align: center;\\n        align-items: center;\\n        background-size: \\'cover\\';\\n      }\\n\\n      .content {\\n        width: 100%;\\n        height: 100%;\\n        display: flex;\\n        justify-content: center;\\n        flex-direction: column;\\n        position: relative;\\n      }\\n\\n      a {\\n        text-decoration: none;\\n      }\\n\\n      .image {\\n        height: 1rem;\\n        flex-grow: 4;\\n        flex-shrink: 1;\\n        display: flex;\\n        justify-content: center;\\n        width: 90%;\\n        flex-direction: column;\\n        align-items: center;\\n      }\\n      .image img {\\n        max-height: 100%;\\n        max-width: 100%;\\n      }\\n\\n      .image.empty-image {\\n        display: none;\\n      }\\n\\n      .empty-image ~ .text {\\n        flex-grow: 1;\\n      }\\n\\n      .text {\\n        text-align: center;\\n        color: #333333;\\n        line-height: 1.25rem;\\n        font-size: 0.875rem;\\n        padding: 0 0.8rem;\\n        width: 100%;\\n        box-sizing: border-box;\\n      }\\n      .title {\\n        line-height: 1.3125rem;\\n        font-size: 1.025rem;\\n      }\\n\\n      .buttons {\\n        width: 100%;\\n        display: flex;\\n        flex-direction: column;\\n        font-size: 1rem;\\n        line-height: 1.3rem;\\n        text-decoration: none;\\n        text-align: center;\\n        box-sizing: border-box;\\n        padding: 0.8rem;\\n        padding-top: 0.4rem;\\n        gap: 0.3125rem;\\n      }\\n\\n      .button {\\n        flex-grow: 1;\\n        background-color: #1473e6;\\n        color: #ffffff;\\n        border-radius: 0.25rem;\\n        cursor: pointer;\\n        padding: 0.3rem;\\n        gap: 0.5rem;\\n      }\\n\\n      .btnClose {\\n        color: #000000;\\n      }\\n\\n      .closeBtn {\\n        align-self: flex-end;\\n        width: 1.8rem;\\n        height: 1.8rem;\\n        margin-top: 1rem;\\n        margin-right: 0.3rem;\\n      }\\n      .closeBtn img {\\n        width: 100%;\\n        height: 100%;\\n      }\\n    </style>\\n    <style type=\"text/css\" id=\"editor-styles\">\\n\\n</style>\\n  </head>\\n\\n  <body>\\n    <div class=\"body\"><div class=\"closeBtn\" data-uuid=\"f8d5170b-7ce5-465e-8ded-d2f906dbeea7\" data-btn-style=\"plain\"><a aria-label=\"Close\" class=\"btnClose\" href=\"adbinapp://dismiss?interaction=cancel\"><svg xmlns=\"http://www.w3.org/2000/svg\" height=\"18\" viewbox=\"0 0 18 18\" width=\"18\" class=\"close\">\\n  <rect id=\"Canvas\" fill=\"#ffffff\" opacity=\"0\" width=\"18\" height=\"18\"></rect>\\n  <path fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\" d=\"M13.2425,3.343,9,7.586,4.7575,3.343a.5.5,0,0,0-.707,0L3.343,4.05a.5.5,0,0,0,0,.707L7.586,9,3.343,13.2425a.5.5,0,0,0,0,.707l.707.7075a.5.5,0,0,0,.707,0L9,10.414l4.2425,4.243a.5.5,0,0,0,.707,0l.7075-.707a.5.5,0,0,0,0-.707L10.414,9l4.243-4.2425a.5.5,0,0,0,0-.707L13.95,3.343a.5.5,0,0,0-.70711-.00039Z\"></path>\\n</svg></a></div><div class=\"image\" data-uuid=\"fddf159f-1bd3-4a8d-8ce3-1a28cd6064d6\"><img src=\"https://exc-unifiedcontent.experience-stage.adobe.net/solutions/cjm-message-ui/static-assets/inapp/InAppBlockImageDefault.svg\" alt=\"\"></div><div class=\"text\" data-uuid=\"9acbccba-029e-4405-92bf-bb74dcd88758\"><h3>Spring</h3><p>If winter comes, can spring be far behind? </p></div><div class=\"buttons\" data-uuid=\"666bda3d-1a69-4fbb-bf1e-8d95d85940d5\"><a class=\"button\" data-uuid=\"e51c4131-d3a3-4b83-9948-9f128471adb3\" href=\"adbinapp://dismiss?interaction=clicked\">Button</a></div></div>\\n  \\n\\n</body></html>',\n\t    remoteAssets: [\n\t      \"https://exc-unifiedcontent.experience-stage.adobe.net/solutions/cjm-message-ui/static-assets/inapp/InAppBlockImageDefault.svg\",\n\t    ],\n\t  },\n\t};\n\tconst RULE_SET: RuleSet = {\n\t  version: 1,\n\t  rules: [\n", "    {\n\t      condition: {\n\t        definition: {\n\t          conditions: [\n\t            {\n\t              definition: {\n\t                conditions: [\n\t                  {\n\t                    definition: {\n\t                      key: \"~type\",\n", "                      matcher: \"eq\",\n\t                      values: [\"com.adobe.eventType.lifecycle\"],\n\t                    },\n\t                    type: \"matcher\",\n\t                  },\n\t                  {\n\t                    definition: {\n\t                      key: \"~source\",\n\t                      matcher: \"eq\",\n\t                      values: [\"com.adobe.eventSource.applicationLaunch\"],\n", "                    },\n\t                    type: \"matcher\",\n\t                  },\n\t                  {\n\t                    definition: {\n\t                      key: \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.upgradeevent\",\n\t                      matcher: \"ex\",\n\t                    },\n\t                    type: \"matcher\",\n\t                  },\n", "                ],\n\t                logic: \"and\",\n\t              },\n\t              type: \"group\",\n\t            },\n\t            {\n\t              definition: {\n\t                key: \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.dayssincelastupgrade\",\n\t                matcher: \"ge\",\n\t                values: [2],\n", "              },\n\t              type: \"matcher\",\n\t            },\n\t            {\n\t              definition: {\n\t                key: \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.dayssincelastuse\",\n\t                matcher: \"le\",\n\t                values: [1],\n\t              },\n\t              type: \"matcher\",\n", "            },\n\t          ],\n\t          logic: \"and\",\n\t        },\n\t        type: \"group\",\n\t      },\n\t      consequences: [CONSEQUENCE],\n\t    },\n\t  ],\n\t};\n", "describe(\"( Application upgrade event happens) AND ( Days since upgrade ≥ 2 ) AND ( Days since last use is less than or equal to 1 ) \", () => {\n\t  let ruleset;\n\t  beforeEach(() => {\n\t    ruleset = RulesEngine(RULE_SET);\n\t  });\n\t  it(\"should return consequence when all the conditions are met\", () => {\n\t    const result = ruleset.execute({\n\t      \"~type\": \"com.adobe.eventType.lifecycle\",\n\t      \"~source\": \"com.adobe.eventSource.applicationLaunch\",\n\t      \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.upgradeevent\":\n", "        true,\n\t      \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.dayssincelastupgrade\": 12,\n\t      \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.dayssincelastuse\": 0,\n\t    });\n\t    expect(result).toEqual([RULE_SET.rules[0].consequences]);\n\t  });\n\t  it(\"shouldn't return consequence when any of the conditions are not met, here less than equals is not satisfied\", () => {\n\t    const result = ruleset.execute({\n\t      \"~type\": \"com.adobe.eventType.lifecycle\",\n\t      \"~source\": \"com.adobe.eventSource.applicationLaunch\",\n", "      \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.upgradeevent\":\n\t        true,\n\t      \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.dayssincelastupgrade\": 1,\n\t      \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.dayssincelastuse\": 8,\n\t    });\n\t    expect(result).toEqual([]);\n\t  });\n\t  it(\"shouldn't return consequence when any of the conditions are not met, here greater than equals is not satisfied\", () => {\n\t    const result = ruleset.execute({\n\t      \"~type\": \"com.adobe.eventType.lifecycle\",\n", "      \"~source\": \"com.adobe.eventSource.applicationLaunch\",\n\t      \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.upgradeevent\":\n\t        true,\n\t      \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.dayssincelastupgrade\": 12,\n\t      \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.dayssincelastuse\": 8,\n\t    });\n\t    expect(result).toEqual([]);\n\t  });\n\t});\n"]}
{"filename": "test/demo.spec.ts", "chunked_list": ["/*\n\tCopyright 2023 Adobe. All rights reserved.\n\tThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n\tyou may not use this file except in compliance with the License. You may obtain a copy\n\tof the License at http://www.apache.org/licenses/LICENSE-2.0\n\tUnless required by applicable law or agreed to in writing, software distributed under\n\tthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n\tOF ANY KIND, either express or implied. See the License for the specific language\n\tgoverning permissions and limitations under the License.\n\t*/\n", "import RulesEngine from \"../src/index\";\n\timport { Consequence, RuleSet } from \"../src/types/schema\";\n\tlet CONSEQUENCE: Consequence = {\n\t  id: \"e16cc85b-8bf3-4c70-83a2-883fd934b9fc\",\n\t  type: \"cjmiam\",\n\t  detail: {\n\t    mobileParameters: {\n\t      verticalAlign: \"center\",\n\t      dismissAnimation: \"top\",\n\t      verticalInset: 0,\n", "      backdropOpacity: 0.2,\n\t      cornerRadius: 15,\n\t      gestures: {\n\t        swipeUp: \"adbinapp://dismiss?interaction=swipeUp\",\n\t        swipeDown: \"adbinapp://dismiss?interaction=swipeDown\",\n\t        swipeLeft: \"adbinapp://dismiss?interaction=swipeLeft\",\n\t        swipeRight: \"adbinapp://dismiss?interaction=swipeRight\",\n\t        tapBackground: \"adbinapp://dismiss?interaction=tapBackground\",\n\t      },\n\t      horizontalInset: 0,\n", "      uiTakeover: true,\n\t      horizontalAlign: \"center\",\n\t      width: 80,\n\t      displayAnimation: \"top\",\n\t      backdropColor: \"#000000\",\n\t      height: 60,\n\t    },\n\t    html: '<!doctype html>\\n<html><head>\\n    <meta type=\"templateProperties\" name=\"modal\" label=\"adobe-label:modal\" icon=\"adobe-icon:modal\">\\n    <meta type=\"templateZone\" name=\"default\" label=\"Default\" classname=\"body\" definition=\"[&quot;CloseBtn&quot;, &quot;Image&quot;, &quot;Text&quot;, &quot;Buttons&quot;]\">\\n\\n    <meta type=\"templateDefaultAnimations\" displayanimation=\"top\" dismissanimation=\"top\">\\n    <meta type=\"templateDefaultSize\" width=\"80\" height=\"60\">\\n    <meta type=\"templateDefaultPosition\" verticalalign=\"center\" verticalinset=\"0\" horizontalalign=\"center\" horizontalinset=\"0\">\\n    <meta type=\"templateDefaultGesture\" swipeup=\"adbinapp://dismiss?interaction=swipeUp\" swipedown=\"adbinapp://dismiss?interaction=swipeDown\" swipeleft=\"adbinapp://dismiss?interaction=swipeLeft\" swiperight=\"adbinapp://dismiss?interaction=swipeRight\" tapbackground=\"adbinapp://dismiss?interaction=tapBackground\">\\n    <meta type=\"templateDefaultUiTakeover\" enable=\"true\">\\n\\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\\n    <meta charset=\"UTF-8\">\\n    <style>\\n      html,\\n      body {\\n        margin: 0;\\n        padding: 0;\\n        text-align: center;\\n        width: 100%;\\n        height: 100%;\\n        font-family: adobe-clean, \\'Source Sans Pro\\', -apple-system, BlinkMacSystemFont, \\'Segoe UI\\',\\n          Roboto, sans-serif;\\n      }\\n      h3 {\\n        margin: 0.4rem auto;\\n      }\\n      p {\\n        margin: 0.4rem auto;\\n      }\\n\\n      .body {\\n        display: flex;\\n        flex-direction: column;\\n        background-color: #fff;\\n        border-radius: 0.3rem;\\n        color: #333333;\\n        width: 100vw;\\n        height: 100vh;\\n        text-align: center;\\n        align-items: center;\\n        background-size: \\'cover\\';\\n      }\\n\\n      .content {\\n        width: 100%;\\n        height: 100%;\\n        display: flex;\\n        justify-content: center;\\n        flex-direction: column;\\n        position: relative;\\n      }\\n\\n      a {\\n        text-decoration: none;\\n      }\\n\\n      .image {\\n        height: 1rem;\\n        flex-grow: 4;\\n        flex-shrink: 1;\\n        display: flex;\\n        justify-content: center;\\n        width: 90%;\\n        flex-direction: column;\\n        align-items: center;\\n      }\\n      .image img {\\n        max-height: 100%;\\n        max-width: 100%;\\n      }\\n\\n      .image.empty-image {\\n        display: none;\\n      }\\n\\n      .empty-image ~ .text {\\n        flex-grow: 1;\\n      }\\n\\n      .text {\\n        text-align: center;\\n        color: #333333;\\n        line-height: 1.25rem;\\n        font-size: 0.875rem;\\n        padding: 0 0.8rem;\\n        width: 100%;\\n        box-sizing: border-box;\\n      }\\n      .title {\\n        line-height: 1.3125rem;\\n        font-size: 1.025rem;\\n      }\\n\\n      .buttons {\\n        width: 100%;\\n        display: flex;\\n        flex-direction: column;\\n        font-size: 1rem;\\n        line-height: 1.3rem;\\n        text-decoration: none;\\n        text-align: center;\\n        box-sizing: border-box;\\n        padding: 0.8rem;\\n        padding-top: 0.4rem;\\n        gap: 0.3125rem;\\n      }\\n\\n      .button {\\n        flex-grow: 1;\\n        background-color: #1473e6;\\n        color: #ffffff;\\n        border-radius: 0.25rem;\\n        cursor: pointer;\\n        padding: 0.3rem;\\n        gap: 0.5rem;\\n      }\\n\\n      .btnClose {\\n        color: #000000;\\n      }\\n\\n      .closeBtn {\\n        align-self: flex-end;\\n        color: #000000;\\n        width: 1.8rem;\\n        height: 1.8rem;\\n        margin-top: 1rem;\\n        margin-right: 0.3rem;\\n      }\\n      .closeBtn img {\\n        width: 100%;\\n        height: 100%;\\n      }\\n    </style>\\n    <style type=\"text/css\" id=\"editor-styles\">\\n\\n</style>\\n  </head>\\n\\n  <body>\\n    <div class=\"body\"><div class=\"closeBtn\" data-uuid=\"03148dd9-caf4-4975-b50d-8fbf9fd0dadd\" data-btn-style=\"plain\"><a aria-label=\"Close\" class=\"btnClose\" href=\"adbinapp://dismiss?interaction=cancel\"><svg xmlns=\"http://www.w3.org/2000/svg\" height=\"18\" viewbox=\"0 0 18 18\" width=\"18\" class=\"close\">\\n  <rect id=\"Canvas\" fill=\"#ffffff\" opacity=\"0\" width=\"18\" height=\"18\"></rect>\\n  <path fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\" d=\"M13.2425,3.343,9,7.586,4.7575,3.343a.5.5,0,0,0-.707,0L3.343,4.05a.5.5,0,0,0,0,.707L7.586,9,3.343,13.2425a.5.5,0,0,0,0,.707l.707.7075a.5.5,0,0,0,.707,0L9,10.414l4.2425,4.243a.5.5,0,0,0,.707,0l.7075-.707a.5.5,0,0,0,0-.707L10.414,9l4.243-4.2425a.5.5,0,0,0,0-.707L13.95,3.343a.5.5,0,0,0-.70711-.00039Z\"></path>\\n</svg></a></div><div class=\"image\" data-uuid=\"8874c864-bbf8-4c9b-9396-fef071913e62\"><img src=\"https://exc-unifiedcontent.experience-stage.adobe.net/solutions/cjm-message-ui/static-assets/inapp/InAppBlockImageDefault.svg\" alt=\"\"></div><div class=\"text\" data-uuid=\"d4399240-66ac-4b2c-bcd9-a6fd79957721\"><h3>PB Shelley</h3><p>“If Winter comes, can Spring be far behind?”</p></div><div class=\"buttons\" data-uuid=\"40947731-7821-4e11-833b-c28e80d9c4f1\"><a class=\"button\" data-uuid=\"3c7f0a4e-0108-4b1f-ae23-859870bf56b4\" href=\"adbinapp://dismiss?interaction=clicked\">Click</a></div></div>\\n  \\n\\n</body></html>',\n\t    remoteAssets: [\n\t      \"https://exc-unifiedcontent.experience-stage.adobe.net/solutions/cjm-message-ui/static-assets/inapp/InAppBlockImageDefault.svg\",\n", "    ],\n\t  },\n\t};\n\tconst RULE_SET: RuleSet = {\n\t  version: 1,\n\t  rules: [\n\t    {\n\t      condition: {\n\t        definition: {\n\t          conditions: [\n", "            {\n\t              definition: {\n\t                conditions: [\n\t                  {\n\t                    definition: {\n\t                      key: \"~type\",\n\t                      matcher: \"eq\",\n\t                      values: [\"com.adobe.eventType.generic.track\"],\n\t                    },\n\t                    type: \"matcher\",\n", "                  },\n\t                  {\n\t                    definition: {\n\t                      key: \"~source\",\n\t                      matcher: \"eq\",\n\t                      values: [\"com.adobe.eventSource.requestContent\"],\n\t                    },\n\t                    type: \"matcher\",\n\t                  },\n\t                  {\n", "                    definition: { key: \"state\", matcher: \"ex\" },\n\t                    type: \"matcher\",\n\t                  },\n\t                ],\n\t                logic: \"and\",\n\t              },\n\t              type: \"group\",\n\t            },\n\t            {\n\t              definition: {\n", "                key: \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.osversion\",\n\t                matcher: \"sw\",\n\t                values: [\n\t                  \"13.2.1 (22D68)\",\n\t                  \"macOS Monterey\",\n\t                  \"macOS Ventura (version 13)\",\n\t                ],\n\t              },\n\t              type: \"matcher\",\n\t            },\n", "            {\n\t              definition: {\n\t                key: \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.carriername\",\n\t                matcher: \"ne\",\n\t                values: [\"T-Mobile\"],\n\t              },\n\t              type: \"matcher\",\n\t            },\n\t            {\n\t              definition: {\n", "                conditions: [\n\t                  {\n\t                    definition: {\n\t                      key: \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.dayssincefirstuse\",\n\t                      matcher: \"le\",\n\t                      values: [10],\n\t                    },\n\t                    type: \"matcher\",\n\t                  },\n\t                  {\n", "                    definition: {\n\t                      key: \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.dayssincelastupgrade\",\n\t                      matcher: \"ge\",\n\t                      values: [1],\n\t                    },\n\t                    type: \"matcher\",\n\t                  },\n\t                ],\n\t                logic: \"or\",\n\t              },\n", "              type: \"group\",\n\t            },\n\t          ],\n\t          logic: \"and\",\n\t        },\n\t        type: \"group\",\n\t      },\n\t      consequences: [CONSEQUENCE],\n\t    },\n\t  ],\n", "};\n\t/*\n\t( Track state event happens) \n\t AND ( OS version starts with 13.2.1 (22D68), macOS Monterey, or macOS Ventura (version 13) )\n\t AND ( Carrier name does not equal T-Mobile ) \n\t AND(( Days since first use is less than or equal to 10 ) OR ( Days since upgrade ≥ 1 ))\n\t*/\n\tdescribe(\"Track state event happens \", () => {\n\t  let ruleset;\n\t  beforeEach(() => {\n", "    ruleset = RulesEngine(RULE_SET);\n\t  });\n\t  it(\"should return consequence when OS version starts conditions are met\", () => {\n\t    const result = ruleset.execute({\n\t      \"~type\": \"com.adobe.eventType.generic.track\",\n\t      \"~source\": \"com.adobe.eventSource.requestContent\",\n\t      state: \"[]\",\n\t      \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.osversion\":\n\t        \"macOS Monterey\",\n\t      \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.carriername\":\n", "        \"Verizon\",\n\t      \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.dayssincefirstuse\": 10,\n\t      \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.dayssincelastupgrade\": 2,\n\t    });\n\t    expect(result).toEqual([RULE_SET.rules[0].consequences]);\n\t  });\n\t});\n"]}
{"filename": "test/genericPii.spec.ts", "chunked_list": ["/*\n\tCopyright 2023 Adobe. All rights reserved.\n\tThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n\tyou may not use this file except in compliance with the License. You may obtain a copy\n\tof the License at http://www.apache.org/licenses/LICENSE-2.0\n\tUnless required by applicable law or agreed to in writing, software distributed under\n\tthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n\tOF ANY KIND, either express or implied. See the License for the specific language\n\tgoverning permissions and limitations under the License.\n\t*/\n", "import RulesEngine from \"../src/index\";\n\timport { Consequence, RuleSet } from \"../src/types/schema\";\n\tlet CONSEQUENCE: Consequence = {\n\t  id: \"48a8f9b2-1c6a-4523-b00d-c74e045a0bbd\",\n\t  type: \"cjmiam\",\n\t  detail: {\n\t    mobileParameters: {\n\t      verticalAlign: \"top\",\n\t      dismissAnimation: \"top\",\n\t      verticalInset: 2,\n", "      backdropOpacity: 0.2,\n\t      cornerRadius: 15,\n\t      gestures: {\n\t        swipeUp: \"adbinapp://dismiss?interaction=swipeUp\",\n\t      },\n\t      horizontalInset: 0,\n\t      uiTakeover: false,\n\t      horizontalAlign: \"center\",\n\t      width: 95,\n\t      displayAnimation: \"top\",\n", "      backdropColor: \"#000000\",\n\t      height: 17,\n\t    },\n\t    html: '<!doctype html>\\n<html><head>\\n    <meta type=\"templateProperties\" name=\"banner\" label=\"adobe-label:banner\" icon=\"adobe-icon:banner\">\\n    <meta type=\"templateZone\" name=\"default\" label=\"Default\" classname=\"body\" definition=\"[&quot;Image&quot;, &quot;Text&quot;, &quot;CloseBtn&quot;]\">\\n\\n    <meta type=\"templateDefaultAnimations\" displayanimation=\"top\" dismissanimation=\"top\">\\n    <meta type=\"templateDefaultSize\" width=\"95\" height=\"17\">\\n    <meta type=\"templateDefaultPosition\" verticalalign=\"top\" verticalinset=\"2\" horizontalalign=\"center\" horizontalinset=\"0\">\\n    <meta type=\"templateDefaultUiTakeover\" enable=\"false\">\\n\\n    <meta type=\"templateVariation\" default=\"true\" name=\"top\" label=\"adobe-label:banner-variation-top\" classname=\"variationTop\">\\n    <meta type=\"templateVariation\" name=\"bottom\" label=\"adobe-label:banner-variation-bottom\" classname=\"variationBottom\">\\n\\n    <meta type=\"templateDefaultGesture\" variation=\"top\" swipeup=\"adbinapp://dismiss?interaction=swipeUp\">\\n    <meta type=\"templateDefaultAnimations\" variation=\"bottom\" displayanimation=\"bottom\" dismissanimation=\"bottom\">\\n    <meta type=\"templateDefaultPosition\" variation=\"bottom\" verticalalign=\"bottom\">\\n    <meta type=\"templateDefaultGesture\" variation=\"bottom\" swipedown=\"adbinapp://dismiss?interaction=swipeDown\">\\n\\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\\n    <meta charset=\"UTF-8\">\\n    <style>\\n      html,\\n      body {\\n        margin: 0;\\n        padding: 0;\\n        text-align: center;\\n        width: 100%;\\n        height: 100%;\\n        font-family: adobe-clean, \\'Source Sans Pro\\', -apple-system, BlinkMacSystemFont, \\'Segoe UI\\',\\n          Roboto, sans-serif;\\n      }\\n\\n      h3 {\\n        margin: 0.1rem auto;\\n      }\\n      p {\\n        margin: 0;\\n      }\\n\\n      a {\\n        text-decoration: none;\\n      }\\n\\n      .wrapper {\\n        background-color: #fff;\\n        border-radius: 0.3125rem;\\n        color: #333333;\\n        width: 100%;\\n        min-height: 100%;\\n        display: flex;\\n        justify-content: center;\\n        flex-direction: column;\\n        position: relative;\\n        background-size: \\'cover\\';\\n      }\\n\\n      .content {\\n        height: 100vh;\\n        width: 100vw;\\n      }\\n\\n      .text {\\n        flex-grow: 1;\\n        text-align: left;\\n        line-height: 1.25rem;\\n        font-size: 0.875rem;\\n        color: #333333;\\n        letter-spacing: 0;\\n      }\\n\\n      .text:first-child {\\n        line-height: 1.3125rem;\\n        font-size: 1.025rem;\\n      }\\n\\n      .btnClose {\\n        color: #000000;\\n      }\\n\\n      .closeBtn {\\n        align-self: flex-start;\\n        order: 999;\\n      }\\n      .closeBtn img {\\n        width: 100%;\\n        height: 100%;\\n      }\\n\\n      .image {\\n        height: 100%;\\n        padding-right: 0.8rem;\\n        align-items: center;\\n        flex-grow: 0;\\n        display: flex;\\n      }\\n      .image img {\\n        height: 100%;\\n        max-width: 100%;\\n      }\\n\\n      .image.empty-image {\\n        display: none;\\n      }\\n\\n      .empty-image ~ .text {\\n        flex-grow: 1;\\n      }\\n\\n      .body {\\n        flex-grow: 1;\\n        width: 100%;\\n        height: 100%;\\n        display: flex;\\n        flex-direction: row;\\n        padding: 0.8rem;\\n        box-sizing: border-box;\\n        align-items: center;\\n        justify-content: space-between;\\n      }\\n\\n      .buttons {\\n        width: 100%;\\n        display: flex;\\n        flex-direction: column;\\n        font-size: 1rem;\\n        line-height: 1.3rem;\\n        text-decoration: none;\\n        text-align: center;\\n        box-sizing: border-box;\\n        padding: 0.8rem;\\n        padding-top: 0.4rem;\\n      }\\n\\n      .button {\\n        flex-grow: 1;\\n        background-color: #1473e6;\\n        color: #ffffff;\\n        border-radius: 0.25rem;\\n        cursor: pointer;\\n        padding: 0.3rem;\\n        gap: 0.5rem;\\n      }\\n    </style>\\n    <style type=\"text/css\" id=\"editor-styles\">\\n\\n</style>\\n  </head>\\n\\n  <body>\\n    <div class=\"wrapper\">\\n      <div class=\"content\">\\n        <div class=\"body\"><div class=\"image\" data-uuid=\"8163d13c-1e4e-4b07-94c7-18271bc02099\"><img src=\"https://exc-unifiedcontent.experience-stage.adobe.net/solutions/cjm-message-ui/static-assets/inapp/InAppBlockImageDefault.svg\" alt=\"Hello World\"></div><div class=\"text\" data-uuid=\"ebe691ce-3c1e-4f3e-87bd-010bc4a4033a\"><h3>Lion king</h3><p>Hakuna Matata! What a wonderful phrase Hakuna Matata!iption text</p></div><div class=\"closeBtn\" data-uuid=\"771eff8c-e85a-4072-8988-51f2008b8381\" data-btn-style=\"circle\"><a aria-label=\"Close\" class=\"btnClose\" href=\"adbinapp://dismiss?interaction=cancel\"><svg xmlns=\"http://www.w3.org/2000/svg\" height=\"18\" viewbox=\"0 0 18 18\" width=\"18\" class=\"close\">\\n  <rect id=\"Canvas\" fill=\"#ffffff\" opacity=\"0\" width=\"18\" height=\"18\"></rect>\\n  <path fill=\"currentColor\" d=\"M14.657,3.343a8,8,0,1,0-.00021,11.31371l.00021-.00021A8,8,0,0,0,14.657,3.343Zm-1.3435,9.265-.707.7055a.6.6,0,0,1-.84853.00147l-.00147-.00147L9,10.5555l-2.758,2.758a.6.6,0,0,1-.84853.00147L5.392,13.3135l-.7045-.7075a.6.6,0,0,1-.00147-.84853L4.6875,11.756,7.4445,9,4.6875,6.242A.6.6,0,0,1,4.686,5.39347L4.6875,5.392l.707-.707A.6.6,0,0,1,6.243,4.68353L6.2445,4.685,9,7.444l2.758-2.7575a.6.6,0,0,1,.84853-.00147l.00147.00147.707.707a.6.6,0,0,1,.00147.84853L13.315,6.2435,10.5555,9l2.758,2.758a.6.6,0,0,1,.00147.84853Z\"></path>\\n</svg></a></div></div>\\n      </div>\\n    </div>\\n  \\n\\n</body></html>',\n\t    remoteAssets: [\n\t      \"https://exc-unifiedcontent.experience-stage.adobe.net/solutions/cjm-message-ui/static-assets/inapp/InAppBlockImageDefault.svg\",\n\t    ],\n\t  },\n\t};\n\tconst RULE_SET: RuleSet = {\n", "  version: 1,\n\t  rules: [\n\t    {\n\t      condition: {\n\t        definition: {\n\t          conditions: [\n\t            {\n\t              definition: {\n\t                conditions: [\n\t                  {\n", "                    definition: {\n\t                      key: \"~type\",\n\t                      matcher: \"eq\",\n\t                      values: [\"com.adobe.eventType.generic.pii\"],\n\t                    },\n\t                    type: \"matcher\",\n\t                  },\n\t                  {\n\t                    definition: {\n\t                      key: \"~source\",\n", "                      matcher: \"eq\",\n\t                      values: [\"com.adobe.eventSource.requestContent\"],\n\t                    },\n\t                    type: \"matcher\",\n\t                  },\n\t                ],\n\t                logic: \"and\",\n\t              },\n\t              type: \"group\",\n\t            },\n", "            {\n\t              definition: {\n\t                conditions: [\n\t                  {\n\t                    definition: {\n\t                      key: \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.osversion\",\n\t                      matcher: \"ne\",\n\t                      values: [\n\t                        \"Apple macOS\",\n\t                        \"Linux Operating System\",\n", "                        \"Microsoft Windows\",\n\t                      ],\n\t                    },\n\t                    type: \"matcher\",\n\t                  },\n\t                  {\n\t                    definition: {\n\t                      key: \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.dayssincelastupgrade\",\n\t                      matcher: \"eq\",\n\t                      values: [52],\n", "                    },\n\t                    type: \"matcher\",\n\t                  },\n\t                  {\n\t                    definition: {\n\t                      key: \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.carriername\",\n\t                      matcher: \"eq\",\n\t                      values: [\"T-Mobile\"],\n\t                    },\n\t                    type: \"matcher\",\n", "                  },\n\t                ],\n\t                logic: \"or\",\n\t              },\n\t              type: \"group\",\n\t            },\n\t          ],\n\t          logic: \"and\",\n\t        },\n\t        type: \"group\",\n", "      },\n\t      consequences: [CONSEQUENCE],\n\t    },\n\t  ],\n\t};\n\tdescribe(\"( Collect PII event happens) AND (( OS version ≠ Apple macOS, Linux Operating System, or Microsoft Windows ) OR ( Days since upgrade = 52 ) OR ( Carrier name equals T-Mobile ))\", () => {\n\t  let ruleset;\n\t  beforeEach(() => {\n\t    ruleset = RulesEngine(RULE_SET);\n\t  });\n", "  it(\"display message when condition values doesn't match the given context value of osversion\", () => {\n\t    const result = ruleset.execute({\n\t      \"~type\": \"com.adobe.eventType.generic.pii\",\n\t      \"~source\": \"com.adobe.eventSource.requestContent\",\n\t      \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.osversion\":\n\t        \"Google's Android OS\",\n\t      \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.dayssincelastupgrade\": 52,\n\t      \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.carriername\":\n\t        \"T-Mobile\",\n\t    });\n", "    expect(result).toEqual([RULE_SET.rules[0].consequences]);\n\t  });\n\t  it(\"shouldn't display message when condition values matching the given context value of osversion\", () => {\n\t    const result = ruleset.execute({\n\t      \"~type\": \"com.adobe.eventType.generic.pii\",\n\t      \"~source\": \"com.adobe.eventSource.requestContent\",\n\t      \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.osversion\":\n\t        \"Apple macOS\",\n\t      \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.dayssincelastupgrade\": 53,\n\t      \"~state.com.adobe.module.lifecycle/lifecyclecontextdata.carriername\":\n", "        \"Mint Mobile\",\n\t    });\n\t    expect(result).toEqual([]);\n\t  });\n\t});\n"]}
{"filename": "src/model.ts", "chunked_list": ["/*\n\tCopyright 2023 Adobe. All rights reserved.\n\tThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n\tyou may not use this file except in compliance with the License. You may obtain a copy\n\tof the License at http://www.apache.org/licenses/LICENSE-2.0\n\tUnless required by applicable law or agreed to in writing, software distributed under\n\tthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n\tOF ANY KIND, either express or implied. See the License for the specific language\n\tgoverning permissions and limitations under the License.\n\t*/\n", "import { getMatcher } from \"./matchers\";\n\timport {\n\t  Context,\n\t  Evaluable,\n\t  ExecutableRule,\n\t  ExecutableRuleSet,\n\t} from \"./types/engine\";\n\timport { Consequence } from \"./types/schema\";\n\timport {\n\t  LogicType,\n", "  SupportedCondition,\n\t  SupportedLogic,\n\t  SupportedMatcher,\n\t  SearchType,\n\t  SupportedSearchType,\n\t} from \"./types/enums\";\n\timport {\n\t  checkForHistoricalMatcher,\n\t  queryAndCountAnyEvent,\n\t  queryAndCountOrderedEvent,\n", "} from \"./historical\";\n\tfunction evaluateAnd(context: Context, conditions: Array<Evaluable>): boolean {\n\t  let result = true;\n\t  for (let i = 0; i < conditions.length; i += 1) {\n\t    result = result && conditions[i].evaluate(context);\n\t  }\n\t  return result;\n\t}\n\tfunction evaluateOr(context: Context, conditions: Array<Evaluable>): boolean {\n\t  let result = false;\n", "  for (let i = 0; i < conditions.length; i += 1) {\n\t    result = result || conditions[i].evaluate(context);\n\t    if (result) {\n\t      return true;\n\t    }\n\t  }\n\t  return false;\n\t}\n\texport function createRules(\n\t  version: number,\n", "  rules: Array<ExecutableRule>\n\t): ExecutableRuleSet {\n\t  return { version, rules };\n\t}\n\texport function createRule(\n\t  condition: Evaluable,\n\t  consequences: Array<Consequence>\n\t): ExecutableRule {\n\t  return {\n\t    execute: (context: Context) => {\n", "      if (condition.evaluate(context)) {\n\t        return consequences;\n\t      }\n\t      return [];\n\t    },\n\t    toString: () => {\n\t      return `Rule{condition=${condition}, consequences=${consequences}}`;\n\t    },\n\t  };\n\t}\n", "export function createCondition(\n\t  type: SupportedCondition,\n\t  definition: Evaluable\n\t): Evaluable {\n\t  return {\n\t    evaluate: (context) => {\n\t      return definition.evaluate(context);\n\t    },\n\t    toString() {\n\t      return `Condition{type=${type}, definition=${definition}}`;\n", "    },\n\t  };\n\t}\n\texport function createConsequence(\n\t  id: string,\n\t  type: string,\n\t  detail: any\n\t): Consequence {\n\t  return { id, type, detail };\n\t}\n", "export function createGroupDefinition(\n\t  logic: SupportedLogic,\n\t  conditions: Array<Evaluable>\n\t): Evaluable {\n\t  return {\n\t    evaluate: (context) => {\n\t      if (LogicType.AND === logic) {\n\t        return evaluateAnd(context, conditions);\n\t      }\n\t      if (LogicType.OR === logic) {\n", "        return evaluateOr(context, conditions);\n\t      }\n\t      return false;\n\t    },\n\t  };\n\t}\n\texport function createMatcherDefinition(\n\t  key: string,\n\t  matcherKey: SupportedMatcher,\n\t  values?: Array<any>\n", "): Evaluable {\n\t  return {\n\t    evaluate: (context) => {\n\t      const matcher = getMatcher(matcherKey);\n\t      if (!matcher) {\n\t        return false;\n\t      }\n\t      return matcher.matches(context, key, values);\n\t    },\n\t  };\n", "}\n\texport function createHistoricalDefinition(\n\t  events: Array<any>,\n\t  matcherKey: SupportedMatcher,\n\t  value: number,\n\t  from?: number,\n\t  to?: number,\n\t  searchType?: SupportedSearchType\n\t): Evaluable {\n\t  return {\n", "    evaluate: (context) => {\n\t      let eventCount;\n\t      if (SearchType.ORDERED === searchType) {\n\t        eventCount = queryAndCountOrderedEvent(events, context, from, to);\n\t      } else {\n\t        eventCount = queryAndCountAnyEvent(events, context, from, to);\n\t      }\n\t      return checkForHistoricalMatcher(eventCount, matcherKey, value);\n\t    },\n\t  };\n", "}\n"]}
{"filename": "src/parser.ts", "chunked_list": ["/*\n\tCopyright 2023 Adobe. All rights reserved.\n\tThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n\tyou may not use this file except in compliance with the License. You may obtain a copy\n\tof the License at http://www.apache.org/licenses/LICENSE-2.0\n\tUnless required by applicable law or agreed to in writing, software distributed under\n\tthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n\tOF ANY KIND, either express or implied. See the License for the specific language\n\tgoverning permissions and limitations under the License.\n\t*/\n", "import {\n\t  createCondition,\n\t  createConsequence,\n\t  createGroupDefinition,\n\t  createHistoricalDefinition,\n\t  createMatcherDefinition,\n\t  createRule,\n\t  createRules,\n\t} from \"./model\";\n\timport {\n", "  Consequence,\n\t  GroupCondition,\n\t  GroupDefinition,\n\t  HistoricalCondition,\n\t  HistoricalDefinition,\n\t  MatcherCondition,\n\t  MatcherDefinition,\n\t  Rule,\n\t  RuleSet,\n\t} from \"./types/schema\";\n", "import { Evaluable, ExecutableRule, ExecutableRuleSet } from \"./types/engine\";\n\timport { ConditionType } from \"./types/enums\";\n\tfunction parseMatcherDefinition(definition: MatcherDefinition): Evaluable {\n\t  const { key, matcher, values } = definition;\n\t  return createMatcherDefinition(key, matcher, values);\n\t}\n\tfunction parseGroupDefinition(definition: GroupDefinition): Evaluable {\n\t  const { logic, conditions } = definition;\n\t  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t  return createGroupDefinition(logic, conditions.map(parseCondition));\n", "}\n\tfunction parseHistoricalDefinition(\n\t  definition: HistoricalDefinition\n\t): Evaluable {\n\t  const { events, from, to, matcher, value, searchType } = definition;\n\t  return createHistoricalDefinition(\n\t    events,\n\t    matcher,\n\t    value,\n\t    from,\n", "    to,\n\t    searchType\n\t  );\n\t}\n\tfunction parseCondition(\n\t  condition: MatcherCondition | GroupCondition | HistoricalCondition\n\t): Evaluable {\n\t  const { type, definition } = condition;\n\t  if (ConditionType.MATCHER === type) {\n\t    return createCondition(\n", "      type,\n\t      parseMatcherDefinition(<MatcherDefinition>definition)\n\t    );\n\t  }\n\t  if (ConditionType.GROUP === type) {\n\t    return createCondition(\n\t      type,\n\t      parseGroupDefinition(<GroupDefinition>definition)\n\t    );\n\t  }\n", "  if (ConditionType.HISTORICAL === type) {\n\t    return createCondition(\n\t      type,\n\t      parseHistoricalDefinition(<HistoricalDefinition>definition)\n\t    );\n\t  }\n\t  throw new Error(\"Can not parse condition\");\n\t}\n\tfunction parseConsequence(consequence: Consequence): Consequence {\n\t  const { id, type, detail } = consequence;\n", "  return createConsequence(id, type, detail);\n\t}\n\tfunction parseRule(rule: Rule): ExecutableRule {\n\t  const { condition, consequences } = rule;\n\t  return createRule(\n\t    parseCondition(condition),\n\t    consequences.map(parseConsequence)\n\t  );\n\t}\n\texport function parseRules(ruleset: RuleSet): ExecutableRuleSet {\n", "  const { version, rules } = ruleset;\n\t  return createRules(version, rules.map(parseRule));\n\t}\n"]}
{"filename": "src/historical.spec.ts", "chunked_list": ["/*\n\tCopyright 2023 Adobe. All rights reserved.\n\tThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n\tyou may not use this file except in compliance with the License. You may obtain a copy\n\tof the License at http://www.apache.org/licenses/LICENSE-2.0\n\tUnless required by applicable law or agreed to in writing, software distributed under\n\tthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n\tOF ANY KIND, either express or implied. See the License for the specific language\n\tgoverning permissions and limitations under the License.\n\t*/\n", "import {\n\t  checkForHistoricalMatcher,\n\t  queryAndCountAnyEvent,\n\t  queryAndCountOrderedEvent,\n\t} from \"./historical\";\n\timport { MatcherType } from \"./types/enums\";\n\tdescribe(\"test helper functions\", () => {\n\t  it(\"should return a count of the number of events that match\", () => {\n\t    const events = [\n\t      {\n", "        type: \"display\",\n\t        id: \"abc\",\n\t      },\n\t      {\n\t        type: \"display\",\n\t        id: \"def\",\n\t      },\n\t    ];\n\t    const context = {\n\t      events: {\n", "        display: {\n\t          abc: {\n\t            event: {\n\t              type: \"display\",\n\t              id: \"abc\",\n\t            },\n\t            timestamp: 1609086720000,\n\t            count: 2,\n\t          },\n\t          def: {\n", "            event: {\n\t              type: \"display\",\n\t              id: \"def\",\n\t            },\n\t            timestamp: 1609086720000,\n\t            count: 6,\n\t          },\n\t        },\n\t      },\n\t    };\n", "    const from = 1609086720000;\n\t    const to = 1609086720000;\n\t    const result = queryAndCountAnyEvent(events, context, from, to);\n\t    expect(result).toBe(8);\n\t  });\n\t  it(\"should return total count of the number of events even if the `to` and `from` is undefined\", () => {\n\t    const events = [\n\t      {\n\t        type: \"display\",\n\t        id: \"abc\",\n", "      },\n\t      {\n\t        type: \"display\",\n\t        id: \"def\",\n\t      },\n\t    ];\n\t    const context = {\n\t      events: {\n\t        display: {\n\t          abc: {\n", "            event: {\n\t              type: \"display\",\n\t              id: \"abc\",\n\t            },\n\t            timestamp: 1609086720000,\n\t            count: 2,\n\t          },\n\t          def: {\n\t            event: {\n\t              type: \"display\",\n", "              id: \"def\",\n\t            },\n\t            timestamp: 1609086720000,\n\t            count: 6,\n\t          },\n\t        },\n\t      },\n\t    };\n\t    const from = undefined;\n\t    const to = undefined;\n", "    const result = queryAndCountAnyEvent(events, context, from, to);\n\t    expect(result).toBe(8);\n\t  });\n\t  it(\"returns 1 (true )If all the events are ordered and within the time range\", () => {\n\t    jest.setTimeout(10000);\n\t    const events = [\n\t      { type: \"display\", id: \"A\" },\n\t      { type: \"display\", id: \"B\" },\n\t      { type: \"display\", id: \"C\" },\n\t    ];\n", "    const context = {\n\t      events: {\n\t        display: {\n\t          A: { count: 1, timestamp: 1 },\n\t          B: { count: 1, timestamp: 2 },\n\t          C: { count: 1, timestamp: 3 },\n\t        },\n\t      },\n\t    };\n\t    const from = 0;\n", "    const to = 4;\n\t    const result = queryAndCountOrderedEvent(events, context, from, to);\n\t    expect(result).toBe(1);\n\t  });\n\t  it(\"returns 0 If any of the events are ordered but not within the time range\", () => {\n\t    jest.setTimeout(10000);\n\t    const events = [\n\t      { type: \"display\", id: \"A\" },\n\t      { type: \"display\", id: \"B\" },\n\t      { type: \"display\", id: \"C\" },\n", "    ];\n\t    const context = {\n\t      events: {\n\t        display: {\n\t          A: { count: 1, timestamp: 1 },\n\t          B: { count: 1, timestamp: 2 },\n\t          C: { count: 1, timestamp: 3 },\n\t        },\n\t      },\n\t    };\n", "    const from = 0;\n\t    const to = 2;\n\t    const result = queryAndCountOrderedEvent(events, context, from, to);\n\t    expect(result).toBe(0);\n\t  });\n\t  it(\"should verify if the event count matches MatcherType.GREATER_THAN\", () => {\n\t    const eventCount = 1;\n\t    const matcherKey = MatcherType.GREATER_THAN;\n\t    const value = 1;\n\t    const result = checkForHistoricalMatcher(eventCount, matcherKey, value);\n", "    expect(result).toEqual(false);\n\t  });\n\t  it(\"should verify if the event count matches MatcherType.EQUALS\", () => {\n\t    const eventCount = 1;\n\t    const matcherKey = MatcherType.EQUALS;\n\t    const value = 1;\n\t    const result = checkForHistoricalMatcher(eventCount, matcherKey, value);\n\t    expect(result).toEqual(true);\n\t  });\n\t  it(\"should verify if the event count matches MatcherType.GREATER_THAN_OR_EQUAL_TO\", () => {\n", "    const eventCount = 1;\n\t    const matcherKey = MatcherType.GREATER_THAN_OR_EQUAL_TO;\n\t    const value = 1;\n\t    const result = checkForHistoricalMatcher(eventCount, matcherKey, value);\n\t    expect(result).toEqual(true);\n\t  });\n\t  it(\"should verify if the event count matches MatcherType.LESS_THAN\", () => {\n\t    const eventCount = 1;\n\t    const matcherKey = MatcherType.LESS_THAN;\n\t    const value = 2;\n", "    const result = checkForHistoricalMatcher(eventCount, matcherKey, value);\n\t    expect(result).toEqual(true);\n\t  });\n\t  it(\"should verify if the event count matches MatcherType.LESS_THAN_OR_EQUAL_TO\", () => {\n\t    const eventCount = 2;\n\t    const matcherKey = MatcherType.LESS_THAN_OR_EQUAL_TO;\n\t    const value = 2;\n\t    const result = checkForHistoricalMatcher(eventCount, matcherKey, value);\n\t    expect(result).toEqual(true);\n\t  });\n", "  it(\"should verify if the event count matches MatcherType.NOT_EQUALS\", () => {\n\t    const eventCount = 2;\n\t    const matcherKey = MatcherType.NOT_EQUALS;\n\t    const value = 1;\n\t    const result = checkForHistoricalMatcher(eventCount, matcherKey, value);\n\t    expect(result).toEqual(true);\n\t  });\n\t  it(\"should verify for not supported matcher example MatcherType.EX\", () => {\n\t    const eventCount = 2;\n\t    const matcherKey = MatcherType.EXISTS;\n", "    const value = 1;\n\t    const result = checkForHistoricalMatcher(eventCount, matcherKey, value);\n\t    expect(result).toEqual(false);\n\t  });\n\t});\n"]}
{"filename": "src/index.ts", "chunked_list": ["/*\n\tCopyright 2023 Adobe. All rights reserved.\n\tThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n\tyou may not use this file except in compliance with the License. You may obtain a copy\n\tof the License at http://www.apache.org/licenses/LICENSE-2.0\n\tUnless required by applicable law or agreed to in writing, software distributed under\n\tthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n\tOF ANY KIND, either express or implied. See the License for the specific language\n\tgoverning permissions and limitations under the License.\n\t*/\n", "import { parseRules } from \"./parser\";\n\timport { Consequence, RuleSet } from \"./types/schema\";\n\timport { Context, ExecutableRule } from \"./types/engine\";\n\texport default function RulesEngine(ruleset: RuleSet) {\n\t  const { version, rules } = parseRules(ruleset);\n\t  return {\n\t    execute: (context: Context): Array<Consequence[]> =>\n\t      rules\n\t        .map((rule: ExecutableRule) => rule.execute(context))\n\t        .filter((arr: Array<Consequence>) => arr.length > 0),\n", "    getVersion: (): number => version,\n\t    numRules: (): number => rules.length,\n\t  };\n\t}\n"]}
{"filename": "src/historical.ts", "chunked_list": ["/*\n\tCopyright 2023 Adobe. All rights reserved.\n\tThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n\tyou may not use this file except in compliance with the License. You may obtain a copy\n\tof the License at http://www.apache.org/licenses/LICENSE-2.0\n\tUnless required by applicable law or agreed to in writing, software distributed under\n\tthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n\tOF ANY KIND, either express or implied. See the License for the specific language\n\tgoverning permissions and limitations under the License.\n\t*/\n", "import { MatcherType, SupportedMatcher } from \"./types/enums\";\n\timport { Context } from \"./types/engine\";\n\timport { HistoricalEvent } from \"./types/schema\";\n\timport { isUndefined } from \"./utils/isUndefined\";\n\texport function checkForHistoricalMatcher(\n\t  eventCount: number,\n\t  matcherKey: SupportedMatcher,\n\t  value: number\n\t) {\n\t  switch (matcherKey) {\n", "    case MatcherType.GREATER_THAN:\n\t      return eventCount > value;\n\t    case MatcherType.GREATER_THAN_OR_EQUAL_TO:\n\t      return eventCount >= value;\n\t    case MatcherType.LESS_THAN:\n\t      return eventCount < value;\n\t    case MatcherType.LESS_THAN_OR_EQUAL_TO:\n\t      return eventCount <= value;\n\t    case MatcherType.EQUALS:\n\t      return eventCount === value;\n", "    case MatcherType.NOT_EQUALS:\n\t      return eventCount !== value;\n\t    default:\n\t      return false;\n\t  }\n\t}\n\t/**\n\t * This function is used to query and count any event\n\t * @param events\n\t * @param context\n", " * @param from\n\t * @param to\n\t * @returns countTotal\n\t */\n\texport function queryAndCountAnyEvent(\n\t  events: Array<HistoricalEvent>,\n\t  context: Context,\n\t  from?: any,\n\t  to?: any\n\t) {\n", "  return events.reduce((countTotal, event) => {\n\t    const eventsOfType = context.events[event.type];\n\t    if (!eventsOfType) {\n\t      return countTotal;\n\t    }\n\t    const contextEvent = eventsOfType[event.id];\n\t    if (!contextEvent) {\n\t      return countTotal;\n\t    }\n\t    const { count: eventCount = 1 } = contextEvent;\n", "    if (\n\t      isUndefined(from) ||\n\t      isUndefined(to) ||\n\t      (contextEvent.timestamp >= from && contextEvent.timestamp <= to)\n\t    ) {\n\t      return countTotal + eventCount;\n\t    }\n\t    return countTotal;\n\t  }, 0);\n\t}\n", "/**\n\t * Iterates through the events in the query.\n\t * If the event doesn't exist or has no count, return 0.\n\t * If the event is in the right order, update the previousEventTimestamp.\n\t * If the event is not in the right order, return 0\n\t * If all events are in the right order, return 1\n\t * @param events\n\t * @param context\n\t * @param from\n\t * @param to\n", " * @returns {number}\n\t */\n\texport function queryAndCountOrderedEvent(\n\t  events: Array<HistoricalEvent>,\n\t  context: Context,\n\t  from?: any,\n\t  to?: any\n\t) {\n\t  let previousEventTimestamp = from;\n\t  const sameSequence = events.every((event) => {\n", "    const eventsOfType = context.events[event.type];\n\t    if (!eventsOfType) {\n\t      return false;\n\t    }\n\t    const contextEvent = eventsOfType[event.id];\n\t    if (\n\t      contextEvent === null ||\n\t      isUndefined(contextEvent) ||\n\t      contextEvent.count === 0\n\t    ) {\n", "      return false;\n\t    }\n\t    const ordered =\n\t      (isUndefined(previousEventTimestamp) ||\n\t        contextEvent.timestamp >= previousEventTimestamp) &&\n\t      (isUndefined(to) || contextEvent.timestamp <= to);\n\t    previousEventTimestamp = contextEvent.timestamp;\n\t    return ordered;\n\t  });\n\t  return sameSequence ? 1 : 0;\n", "}\n"]}
{"filename": "src/utils/isObjectOrUndefined.ts", "chunked_list": ["/*\n\tCopyright 2023 Adobe. All rights reserved.\n\tThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n\tyou may not use this file except in compliance with the License. You may obtain a copy\n\tof the License at http://www.apache.org/licenses/LICENSE-2.0\n\tUnless required by applicable law or agreed to in writing, software distributed under\n\tthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n\tOF ANY KIND, either express or implied. See the License for the specific language\n\tgoverning permissions and limitations under the License.\n\t*/\n", "export function isObjectOrUndefined(value: any): boolean {\n\t  return typeof value === \"object\" || typeof value === \"undefined\";\n\t}\n"]}
{"filename": "src/utils/isNumber.ts", "chunked_list": ["/*\n\tCopyright 2023 Adobe. All rights reserved.\n\tThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n\tyou may not use this file except in compliance with the License. You may obtain a copy\n\tof the License at http://www.apache.org/licenses/LICENSE-2.0\n\tUnless required by applicable law or agreed to in writing, software distributed under\n\tthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n\tOF ANY KIND, either express or implied. See the License for the specific language\n\tgoverning permissions and limitations under the License.\n\t*/\n", "export function isNumber(value: any): boolean {\n\t  return typeof value === \"number\";\n\t}\n"]}
{"filename": "src/utils/isObjectOrUndefined.spec.ts", "chunked_list": ["/*\n\tCopyright 2023 Adobe. All rights reserved.\n\tThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n\tyou may not use this file except in compliance with the License. You may obtain a copy\n\tof the License at http://www.apache.org/licenses/LICENSE-2.0\n\tUnless required by applicable law or agreed to in writing, software distributed under\n\tthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n\tOF ANY KIND, either express or implied. See the License for the specific language\n\tgoverning permissions and limitations under the License.\n\t*/\n", "import { isObjectOrUndefined } from \"./isObjectOrUndefined\";\n\tdescribe(\"isObjectOrUndefined\", () => {\n\t  it(\"returns false when passed a string\", () => {\n\t    expect(isObjectOrUndefined(\"firefox\")).toBe(false);\n\t  });\n\t  it(\"returns false when passed a number\", () => {\n\t    expect(isObjectOrUndefined(2023)).toBe(false);\n\t  });\n\t  it(\"returns true when passed an object\", () => {\n\t    expect(isObjectOrUndefined({ prop: \"value\" })).toBe(true);\n", "  });\n\t  it(\"returns true for null\", () => {\n\t    expect(isObjectOrUndefined(null)).toBe(true);\n\t  });\n\t  it(\"returns true for undefined\", () => {\n\t    expect(isObjectOrUndefined(undefined)).toBe(true);\n\t  });\n\t});\n"]}
{"filename": "src/utils/isUndefined.spec.ts", "chunked_list": ["/*\n\tCopyright 2023 Adobe. All rights reserved.\n\tThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n\tyou may not use this file except in compliance with the License. You may obtain a copy\n\tof the License at http://www.apache.org/licenses/LICENSE-2.0\n\tUnless required by applicable law or agreed to in writing, software distributed under\n\tthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n\tOF ANY KIND, either express or implied. See the License for the specific language\n\tgoverning permissions and limitations under the License.\n\t*/\n", "import { isUndefined } from \"./isUndefined\";\n\tdescribe(\"isUndefined\", () => {\n\t  it(\"returns false when passed a string\", () => {\n\t    expect(isUndefined(\"firefox\")).toBe(false);\n\t  });\n\t  it(\"returns false when passed a number\", () => {\n\t    expect(isUndefined(2023)).toBe(false);\n\t  });\n\t  it(\"returns false when passed an object\", () => {\n\t    expect(isUndefined({ prop: \"value\" })).toBe(false);\n", "  });\n\t  it(\"returns false for null\", () => {\n\t    expect(isUndefined(null)).toBe(false);\n\t  });\n\t  it(\"returns true for undefined\", () => {\n\t    expect(isUndefined(undefined)).toBe(true);\n\t  });\n\t});\n"]}
{"filename": "src/utils/isNumber.spec.ts", "chunked_list": ["/*\n\tCopyright 2023 Adobe. All rights reserved.\n\tThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n\tyou may not use this file except in compliance with the License. You may obtain a copy\n\tof the License at http://www.apache.org/licenses/LICENSE-2.0\n\tUnless required by applicable law or agreed to in writing, software distributed under\n\tthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n\tOF ANY KIND, either express or implied. See the License for the specific language\n\tgoverning permissions and limitations under the License.\n\t*/\n", "import { isNumber } from \"./isNumber\";\n\tdescribe(\"isNumber\", () => {\n\t  it(\"returns true for a given number\", () => {\n\t    const result = isNumber(2023);\n\t    expect(result).toBe(true);\n\t  });\n\t  it(\"returns false for a non-number value\", () => {\n\t    const result = isNumber(\"this is not a number\");\n\t    expect(result).toBe(false);\n\t  });\n", "  it(\"returns false for null\", () => {\n\t    const result = isNumber(null);\n\t    expect(result).toBe(false);\n\t  });\n\t  it(\"returns false for undefined\", () => {\n\t    const result = isNumber(undefined);\n\t    expect(result).toBe(false);\n\t  });\n\t});\n"]}
{"filename": "src/utils/isUndefined.ts", "chunked_list": ["/*\n\tCopyright 2023 Adobe. All rights reserved.\n\tThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n\tyou may not use this file except in compliance with the License. You may obtain a copy\n\tof the License at http://www.apache.org/licenses/LICENSE-2.0\n\tUnless required by applicable law or agreed to in writing, software distributed under\n\tthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n\tOF ANY KIND, either express or implied. See the License for the specific language\n\tgoverning permissions and limitations under the License.\n\t*/\n", "export function isUndefined(value: any): boolean {\n\t  return typeof value === \"undefined\";\n\t}\n"]}
{"filename": "src/matchers/lessThan.ts", "chunked_list": ["/*\n\tCopyright 2023 Adobe. All rights reserved.\n\tThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n\tyou may not use this file except in compliance with the License. You may obtain a copy\n\tof the License at http://www.apache.org/licenses/LICENSE-2.0\n\tUnless required by applicable law or agreed to in writing, software distributed under\n\tthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n\tOF ANY KIND, either express or implied. See the License for the specific language\n\tgoverning permissions and limitations under the License.\n\t*/\n", "import { Matcher } from \"../types/engine\";\n\timport { isNumber } from \"../utils/isNumber\";\n\texport function createLessThan(): Matcher {\n\t  return {\n\t    matches: (context, key, values = []) => {\n\t      const needle = context[key];\n\t      if (!isNumber(needle)) {\n\t        return false;\n\t      }\n\t      for (let i = 0; i < values.length; i += 1) {\n", "        if (isNumber(values[i]) && needle < values[i]) {\n\t          return true;\n\t        }\n\t      }\n\t      return false;\n\t    },\n\t  };\n\t}\n"]}
{"filename": "src/matchers/exists.ts", "chunked_list": ["/*\n\tCopyright 2023 Adobe. All rights reserved.\n\tThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n\tyou may not use this file except in compliance with the License. You may obtain a copy\n\tof the License at http://www.apache.org/licenses/LICENSE-2.0\n\tUnless required by applicable law or agreed to in writing, software distributed under\n\tthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n\tOF ANY KIND, either express or implied. See the License for the specific language\n\tgoverning permissions and limitations under the License.\n\t*/\n", "import { Matcher } from \"../types/engine\";\n\texport function createExists(): Matcher {\n\t  return {\n\t    matches: (context, key) => {\n\t      return typeof context[key] !== \"undefined\" && context[key] !== null;\n\t    },\n\t  };\n\t}\n"]}
{"filename": "src/matchers/startsWith.ts", "chunked_list": ["/*\n\tCopyright 2023 Adobe. All rights reserved.\n\tThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n\tyou may not use this file except in compliance with the License. You may obtain a copy\n\tof the License at http://www.apache.org/licenses/LICENSE-2.0\n\tUnless required by applicable law or agreed to in writing, software distributed under\n\tthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n\tOF ANY KIND, either express or implied. See the License for the specific language\n\tgoverning permissions and limitations under the License.\n\t*/\n", "import { Matcher } from \"../types/engine\";\n\timport { isObjectOrUndefined } from \"../utils/isObjectOrUndefined\";\n\texport function createStartsWith(): Matcher {\n\t  return {\n\t    matches: (context, key, values = []) => {\n\t      if (isObjectOrUndefined(context[key])) {\n\t        return false;\n\t      }\n\t      const contextValue: string = String(context[key]).toLowerCase();\n\t      for (let i = 0; i < values.length; i += 1) {\n", "        if (\n\t          !isObjectOrUndefined(values[i]) &&\n\t          contextValue.startsWith(String(values[i]).toLowerCase())\n\t        ) {\n\t          return true;\n\t        }\n\t      }\n\t      return false;\n\t    },\n\t  };\n", "}\n"]}
{"filename": "src/matchers/notexists.ts", "chunked_list": ["/*\n\tCopyright 2023 Adobe. All rights reserved.\n\tThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n\tyou may not use this file except in compliance with the License. You may obtain a copy\n\tof the License at http://www.apache.org/licenses/LICENSE-2.0\n\tUnless required by applicable law or agreed to in writing, software distributed under\n\tthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n\tOF ANY KIND, either express or implied. See the License for the specific language\n\tgoverning permissions and limitations under the License.\n\t*/\n", "import { Matcher } from \"../types/engine\";\n\texport function createNotExists(): Matcher {\n\t  return {\n\t    matches: (context, key) => {\n\t      return typeof context[key] === \"undefined\" || context[key] === null;\n\t    },\n\t  };\n\t}\n"]}
{"filename": "src/matchers/greaterThan.ts", "chunked_list": ["/*\n\tCopyright 2023 Adobe. All rights reserved.\n\tThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n\tyou may not use this file except in compliance with the License. You may obtain a copy\n\tof the License at http://www.apache.org/licenses/LICENSE-2.0\n\tUnless required by applicable law or agreed to in writing, software distributed under\n\tthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n\tOF ANY KIND, either express or implied. See the License for the specific language\n\tgoverning permissions and limitations under the License.\n\t*/\n", "import { Matcher } from \"../types/engine\";\n\timport { isNumber } from \"../utils/isNumber\";\n\texport function createGreaterThan(): Matcher {\n\t  return {\n\t    matches: (context, key, values = []) => {\n\t      const needle = context[key];\n\t      if (!isNumber(needle)) {\n\t        return false;\n\t      }\n\t      for (let i = 0; i < values.length; i += 1) {\n", "        if (isNumber(values[i]) && needle > values[i]) {\n\t          return true;\n\t        }\n\t      }\n\t      return false;\n\t    },\n\t  };\n\t}\n"]}
{"filename": "src/matchers/lessThanEquals.ts", "chunked_list": ["/*\n\tCopyright 2023 Adobe. All rights reserved.\n\tThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n\tyou may not use this file except in compliance with the License. You may obtain a copy\n\tof the License at http://www.apache.org/licenses/LICENSE-2.0\n\tUnless required by applicable law or agreed to in writing, software distributed under\n\tthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n\tOF ANY KIND, either express or implied. See the License for the specific language\n\tgoverning permissions and limitations under the License.\n\t*/\n", "import { Matcher } from \"../types/engine\";\n\timport { isNumber } from \"../utils/isNumber\";\n\texport function createLessThanEquals(): Matcher {\n\t  return {\n\t    matches: (context, key, values = []) => {\n\t      const needle = context[key];\n\t      if (!isNumber(needle)) {\n\t        return false;\n\t      }\n\t      for (let i = 0; i < values.length; i += 1) {\n", "        if (isNumber(values[i]) && needle <= values[i]) {\n\t          return true;\n\t        }\n\t      }\n\t      return false;\n\t    },\n\t  };\n\t}\n"]}
{"filename": "src/matchers/endsWith.ts", "chunked_list": ["/*\n\tCopyright 2023 Adobe. All rights reserved.\n\tThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n\tyou may not use this file except in compliance with the License. You may obtain a copy\n\tof the License at http://www.apache.org/licenses/LICENSE-2.0\n\tUnless required by applicable law or agreed to in writing, software distributed under\n\tthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n\tOF ANY KIND, either express or implied. See the License for the specific language\n\tgoverning permissions and limitations under the License.\n\t*/\n", "import { isObjectOrUndefined } from \"../utils/isObjectOrUndefined\";\n\timport { Matcher } from \"../types/engine\";\n\texport function createEndsWith(): Matcher {\n\t  return {\n\t    matches: (context, key, values = []) => {\n\t      if (isObjectOrUndefined(context[key])) {\n\t        return false;\n\t      }\n\t      const contextValue: string = String(context[key]).toLowerCase();\n\t      for (let i = 0; i < values.length; i += 1) {\n", "        if (\n\t          !isObjectOrUndefined(values[i]) &&\n\t          contextValue.endsWith(values[i].toLowerCase())\n\t        ) {\n\t          return true;\n\t        }\n\t      }\n\t      return false;\n\t    },\n\t  };\n", "}\n"]}
{"filename": "src/matchers/notEquals.ts", "chunked_list": ["/*\n\tCopyright 2023 Adobe. All rights reserved.\n\tThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n\tyou may not use this file except in compliance with the License. You may obtain a copy\n\tof the License at http://www.apache.org/licenses/LICENSE-2.0\n\tUnless required by applicable law or agreed to in writing, software distributed under\n\tthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n\tOF ANY KIND, either express or implied. See the License for the specific language\n\tgoverning permissions and limitations under the License.\n\t*/\n", "import { Matcher } from \"../types/engine\";\n\timport { isObjectOrUndefined } from \"../utils/isObjectOrUndefined\";\n\texport function createNotEquals(): Matcher {\n\t  return {\n\t    matches: (context, key, values = []) => {\n\t      if (isObjectOrUndefined(context[key])) {\n\t        return false;\n\t      }\n\t      const contextValue: string = String(context[key]).toLowerCase();\n\t      for (let i = 0; i < values.length; i += 1) {\n", "        if (\n\t          !isObjectOrUndefined(values[i]) &&\n\t          contextValue === String(values[i]).toLowerCase()\n\t        ) {\n\t          return false;\n\t        }\n\t      }\n\t      return true;\n\t    },\n\t  };\n", "}\n"]}
{"filename": "src/matchers/notContains.ts", "chunked_list": ["/*\n\tCopyright 2023 Adobe. All rights reserved.\n\tThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n\tyou may not use this file except in compliance with the License. You may obtain a copy\n\tof the License at http://www.apache.org/licenses/LICENSE-2.0\n\tUnless required by applicable law or agreed to in writing, software distributed under\n\tthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n\tOF ANY KIND, either express or implied. See the License for the specific language\n\tgoverning permissions and limitations under the License.\n\t*/\n", "import { Matcher } from \"../types/engine\";\n\timport { isObjectOrUndefined } from \"../utils/isObjectOrUndefined\";\n\texport function createNotContains(): Matcher {\n\t  return {\n\t    matches: (context, key, values = []) => {\n\t      if (isObjectOrUndefined(context[key])) {\n\t        return false;\n\t      }\n\t      const contextValue: string = String(context[key]).toLowerCase();\n\t      for (let i = 0; i < values.length; i += 1) {\n", "        if (\n\t          !isObjectOrUndefined(values[i]) &&\n\t          contextValue.indexOf(String(values[i]).toLowerCase()) !== -1\n\t        ) {\n\t          return false;\n\t        }\n\t      }\n\t      return true;\n\t    },\n\t  };\n", "}\n"]}
{"filename": "src/matchers/equals.ts", "chunked_list": ["/*\n\tCopyright 2023 Adobe. All rights reserved.\n\tThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n\tyou may not use this file except in compliance with the License. You may obtain a copy\n\tof the License at http://www.apache.org/licenses/LICENSE-2.0\n\tUnless required by applicable law or agreed to in writing, software distributed under\n\tthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n\tOF ANY KIND, either express or implied. See the License for the specific language\n\tgoverning permissions and limitations under the License.\n\t*/\n", "import { isObjectOrUndefined } from \"../utils/isObjectOrUndefined\";\n\timport { Matcher } from \"../types/engine\";\n\texport function createEquals(): Matcher {\n\t  return {\n\t    matches: (context, key, values = []) => {\n\t      if (isObjectOrUndefined(context[key])) {\n\t        return false;\n\t      }\n\t      const contextValue: string = String(context[key]).toLowerCase();\n\t      for (let i = 0; i < values.length; i += 1) {\n", "        if (\n\t          !isObjectOrUndefined(values[i]) &&\n\t          contextValue === String(values[i]).toLowerCase()\n\t        ) {\n\t          return true;\n\t        }\n\t      }\n\t      return false;\n\t    },\n\t  };\n", "}\n"]}
{"filename": "src/matchers/index.ts", "chunked_list": ["/*\n\tCopyright 2023 Adobe. All rights reserved.\n\tThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n\tyou may not use this file except in compliance with the License. You may obtain a copy\n\tof the License at http://www.apache.org/licenses/LICENSE-2.0\n\tUnless required by applicable law or agreed to in writing, software distributed under\n\tthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n\tOF ANY KIND, either express or implied. See the License for the specific language\n\tgoverning permissions and limitations under the License.\n\t*/\n", "import { Matcher } from \"../types/engine\";\n\timport { MatcherType, SupportedMatcher } from \"../types/enums\";\n\timport { createEquals } from \"./equals\";\n\timport { createNotEquals } from \"./notEquals\";\n\timport { createExists } from \"./exists\";\n\timport { createNotExists } from \"./notexists\";\n\timport { createGreaterThan } from \"./greaterThan\";\n\timport { createGreaterThanEquals } from \"./greaterThanEquals\";\n\timport { createLessThan } from \"./lessThan\";\n\timport { createLessThanEquals } from \"./lessThanEquals\";\n", "import { createContains } from \"./contains\";\n\timport { createNotContains } from \"./notContains\";\n\timport { createStartsWith } from \"./startsWith\";\n\timport { createEndsWith } from \"./endsWith\";\n\tconst MATCHERS: { [key: string]: Matcher } = {\n\t  [MatcherType.EQUALS]: createEquals(),\n\t  [MatcherType.NOT_EQUALS]: createNotEquals(),\n\t  [MatcherType.EXISTS]: createExists(),\n\t  [MatcherType.NOT_EXISTS]: createNotExists(),\n\t  [MatcherType.GREATER_THAN]: createGreaterThan(),\n", "  [MatcherType.GREATER_THAN_OR_EQUAL_TO]: createGreaterThanEquals(),\n\t  [MatcherType.LESS_THAN]: createLessThan(),\n\t  [MatcherType.LESS_THAN_OR_EQUAL_TO]: createLessThanEquals(),\n\t  [MatcherType.CONTAINS]: createContains(),\n\t  [MatcherType.NOT_CONTAINS]: createNotContains(),\n\t  [MatcherType.STARTS_WITH]: createStartsWith(),\n\t  [MatcherType.ENDS_WITH]: createEndsWith(),\n\t};\n\texport function getMatcher(key: SupportedMatcher): Matcher {\n\t  return MATCHERS[key];\n", "}\n"]}
{"filename": "src/matchers/contains.ts", "chunked_list": ["/*\n\tCopyright 2023 Adobe. All rights reserved.\n\tThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n\tyou may not use this file except in compliance with the License. You may obtain a copy\n\tof the License at http://www.apache.org/licenses/LICENSE-2.0\n\tUnless required by applicable law or agreed to in writing, software distributed under\n\tthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n\tOF ANY KIND, either express or implied. See the License for the specific language\n\tgoverning permissions and limitations under the License.\n\t*/\n", "import { isObjectOrUndefined } from \"../utils/isObjectOrUndefined\";\n\timport { Matcher } from \"../types/engine\";\n\texport function createContains(): Matcher {\n\t  return {\n\t    matches: (context, key, values = []) => {\n\t      if (isObjectOrUndefined(context[key])) {\n\t        return false;\n\t      }\n\t      const contextValue: string = String(context[key]).toLowerCase();\n\t      for (let i = 0; i < values.length; i += 1) {\n", "        if (\n\t          !isObjectOrUndefined(values[i]) &&\n\t          contextValue.indexOf(String(values[i]).toLowerCase()) !== -1\n\t        ) {\n\t          return true;\n\t        }\n\t      }\n\t      return false;\n\t    },\n\t  };\n", "}\n"]}
{"filename": "src/matchers/greaterThanEquals.ts", "chunked_list": ["/*\n\tCopyright 2023 Adobe. All rights reserved.\n\tThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n\tyou may not use this file except in compliance with the License. You may obtain a copy\n\tof the License at http://www.apache.org/licenses/LICENSE-2.0\n\tUnless required by applicable law or agreed to in writing, software distributed under\n\tthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n\tOF ANY KIND, either express or implied. See the License for the specific language\n\tgoverning permissions and limitations under the License.\n\t*/\n", "import { Matcher } from \"../types/engine\";\n\timport { isNumber } from \"../utils/isNumber\";\n\texport function createGreaterThanEquals(): Matcher {\n\t  return {\n\t    matches: (context, key, values = []) => {\n\t      const needle = context[key];\n\t      if (!isNumber(needle)) {\n\t        return false;\n\t      }\n\t      for (let i = 0; i < values.length; i += 1) {\n", "        if (isNumber(values[i]) && needle >= values[i]) {\n\t          return true;\n\t        }\n\t      }\n\t      return false;\n\t    },\n\t  };\n\t}\n"]}
{"filename": "src/types/schema.ts", "chunked_list": ["/*\n\tCopyright 2023 Adobe. All rights reserved.\n\tThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n\tyou may not use this file except in compliance with the License. You may obtain a copy\n\tof the License at http://www.apache.org/licenses/LICENSE-2.0\n\tUnless required by applicable law or agreed to in writing, software distributed under\n\tthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n\tOF ANY KIND, either express or implied. See the License for the specific language\n\tgoverning permissions and limitations under the License.\n\t*/\n", "import {\n\t  ConditionType,\n\t  SupportedLogic,\n\t  SupportedMatcher,\n\t  SupportedSearchType,\n\t} from \"./enums\";\n\texport interface RuleSet {\n\t  version: number;\n\t  rules: Array<Rule>;\n\t}\n", "export interface Rule {\n\t  condition: GroupCondition | MatcherCondition | HistoricalCondition;\n\t  consequences: Array<Consequence>;\n\t}\n\texport interface GroupCondition {\n\t  definition: GroupDefinition;\n\t  type: typeof ConditionType.GROUP;\n\t}\n\texport interface MatcherCondition {\n\t  definition: MatcherDefinition;\n", "  type: typeof ConditionType.MATCHER;\n\t}\n\texport interface HistoricalCondition {\n\t  definition: HistoricalDefinition;\n\t  type: typeof ConditionType.HISTORICAL;\n\t}\n\texport interface MatcherDefinition {\n\t  key: string;\n\t  matcher: SupportedMatcher;\n\t  values?: Array<any>;\n", "}\n\texport interface HistoricalEvent {\n\t  id: string;\n\t  type: string;\n\t}\n\texport interface HistoricalDefinition {\n\t  events: Array<HistoricalEvent>;\n\t  from?: number;\n\t  to?: number;\n\t  matcher: SupportedMatcher;\n", "  value: number;\n\t  searchType?: SupportedSearchType;\n\t}\n\texport interface GroupDefinition {\n\t  conditions: Array<MatcherCondition | GroupCondition | HistoricalCondition>;\n\t  logic: SupportedLogic;\n\t}\n\texport interface Consequence {\n\t  type: string;\n\t  detail: any;\n", "  id: string;\n\t}\n"]}
{"filename": "src/types/engine.ts", "chunked_list": ["/*\n\tCopyright 2023 Adobe. All rights reserved.\n\tThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n\tyou may not use this file except in compliance with the License. You may obtain a copy\n\tof the License at http://www.apache.org/licenses/LICENSE-2.0\n\tUnless required by applicable law or agreed to in writing, software distributed under\n\tthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n\tOF ANY KIND, either express or implied. See the License for the specific language\n\tgoverning permissions and limitations under the License.\n\t*/\n", "import { Consequence } from \"./schema\";\n\texport interface Context {\n\t  [key: string]: any;\n\t}\n\texport interface Matcher {\n\t  matches(context: Context, key: string, values?: Array<any>): boolean;\n\t}\n\texport interface Evaluable {\n\t  evaluate(context: Context): boolean;\n\t  toString?(): string;\n", "}\n\texport interface ExecutableRule {\n\t  execute(context: Context): Array<Consequence>;\n\t  toString?(): string;\n\t}\n\texport interface ExecutableRuleSet {\n\t  version: number;\n\t  rules: Array<ExecutableRule>;\n\t}\n"]}
{"filename": "src/types/enums.ts", "chunked_list": ["/*\n\tCopyright 2023 Adobe. All rights reserved.\n\tThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n\tyou may not use this file except in compliance with the License. You may obtain a copy\n\tof the License at http://www.apache.org/licenses/LICENSE-2.0\n\tUnless required by applicable law or agreed to in writing, software distributed under\n\tthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n\tOF ANY KIND, either express or implied. See the License for the specific language\n\tgoverning permissions and limitations under the License.\n\t*/\n", "export const ConditionType = {\n\t  MATCHER: \"matcher\",\n\t  GROUP: \"group\",\n\t  HISTORICAL: \"historical\",\n\t};\n\texport const MatcherType = {\n\t  EQUALS: \"eq\",\n\t  NOT_EQUALS: \"ne\",\n\t  EXISTS: \"ex\",\n\t  NOT_EXISTS: \"nx\",\n", "  GREATER_THAN: \"gt\",\n\t  GREATER_THAN_OR_EQUAL_TO: \"ge\",\n\t  LESS_THAN: \"lt\",\n\t  LESS_THAN_OR_EQUAL_TO: \"le\",\n\t  CONTAINS: \"co\",\n\t  NOT_CONTAINS: \"nc\",\n\t  STARTS_WITH: \"sw\",\n\t  ENDS_WITH: \"ew\",\n\t};\n\texport const LogicType = {\n", "  AND: \"and\",\n\t  OR: \"or\",\n\t};\n\texport const SearchType = {\n\t  ANY: \"any\",\n\t  ORDERED: \"ordered\",\n\t};\n\texport type SupportedCondition =\n\t  | typeof ConditionType.MATCHER\n\t  | typeof ConditionType.GROUP\n", "  | typeof ConditionType.HISTORICAL;\n\texport type SupportedMatcher =\n\t  | typeof MatcherType.EQUALS\n\t  | typeof MatcherType.NOT_EQUALS\n\t  | typeof MatcherType.EXISTS\n\t  | typeof MatcherType.NOT_EXISTS\n\t  | typeof MatcherType.GREATER_THAN\n\t  | typeof MatcherType.GREATER_THAN_OR_EQUAL_TO\n\t  | typeof MatcherType.LESS_THAN\n\t  | typeof MatcherType.LESS_THAN_OR_EQUAL_TO\n", "  | typeof MatcherType.CONTAINS\n\t  | typeof MatcherType.NOT_CONTAINS\n\t  | typeof MatcherType.STARTS_WITH\n\t  | typeof MatcherType.ENDS_WITH;\n\texport type SupportedSearchType =\n\t  | typeof SearchType.ANY\n\t  | typeof SearchType.ORDERED;\n\texport type SupportedLogic = typeof LogicType.AND | typeof LogicType.OR;\n"]}
