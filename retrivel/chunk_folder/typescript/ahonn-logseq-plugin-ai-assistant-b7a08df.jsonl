{"filename": "vite.config.ts", "chunked_list": ["import reactPlugin from \"@vitejs/plugin-react\";\n\timport { defineConfig } from \"vite\";\n\timport logseqDevPlugin from \"vite-plugin-logseq\";\n\t// https://vitejs.dev/config/\n\texport default defineConfig({\n\t  plugins: [logseqDevPlugin(), reactPlugin()],\n\t  // Makes HMR available for development\n\t  build: {\n\t    target: \"esnext\",\n\t    minify: \"esbuild\",\n", "  },\n\t});\n"]}
{"filename": "src/utils.ts", "chunked_list": ["import { BlockEntity } from '@logseq/libs/dist/LSPlugin.user';\n\texport async function getBlockContent(block: BlockEntity) {\n\t  let content = block.content ?? '';\n\t  const childrens = [block.children];\n\t  let level = 1;\n\t  while (childrens.length > 0) {\n\t    const children = childrens.shift();\n\t    for (const child of children!) {\n\t      content += '\\n' + '\\t'.repeat(level) + '- ' + (child as BlockEntity).content;\n\t    }\n", "    level += 1;\n\t  }\n\t  return content;\n\t}\n"]}
{"filename": "src/settings.ts", "chunked_list": ["import { SettingSchemaDesc } from '@logseq/libs/dist/LSPlugin.user';\n\timport { IPrompt } from './prompts/type';\n\texport interface ISettings {\n\t  apiKey: string;\n\t  basePath: string;\n\t  model: string;\n\t  tag: string;\n\t  customPrompts: {\n\t    enable: boolean;\n\t    prompts: IPrompt[];\n", "  };\n\t}\n\tconst settings: SettingSchemaDesc[] = [\n\t  {\n\t    key: 'apiKey',\n\t    type: 'string',\n\t    title: 'API Key',\n\t    description: 'Enter your OpenAI API key.',\n\t    default: '',\n\t  },\n", "  {\n\t    key: 'basePath',\n\t    type: 'string',\n\t    title: 'openApi basePath',\n\t    description: 'Enter your openApi proxy basePath',\n\t    default: 'https://api.openai.com/v1',\n\t  },\n\t  {\n\t    key: 'model',\n\t    type: 'string',\n", "    title: 'Model',\n\t    description: 'Choose the OpenAI model (e.g., \"gpt-3.5-turbo\").',\n\t    default: 'gpt-3.5-turbo',\n\t  },\n\t  {\n\t    key: 'tag',\n\t    type: 'string',\n\t    title: 'Tag',\n\t    description: 'Add specific tags to AI-generated content',\n\t    default: '[[ðŸ¤–]]'\n", "  },\n\t  {\n\t    key: 'customPrompts',\n\t    type: 'object',\n\t    title: 'Custom Prompts',\n\t    description: 'Enable and manage custom prompts.',\n\t    default: {\n\t      enable: false,\n\t      prompts: [],\n\t    },\n", "  },\n\t];\n\texport default settings;\n"]}
{"filename": "src/prompts/make-shorter.ts", "chunked_list": ["import { IPrompt, PromptOutputType } from \"./type\";\n\texport const makeShorter: IPrompt = {\n\t  name: 'Make Shorter',\n\t  prompt: `\n\t    Please shorten the following text while maintaining its key points:\n\t    \"\"\"\n\t    {content}\n\t    \"\"\"\n\t  `,\n\t  output: PromptOutputType.replace,\n", "};\n"]}
{"filename": "src/prompts/change-tone-to-casual.ts", "chunked_list": ["import { IPrompt, PromptOutputType } from \"./type\";\n\texport const ChangeToneToCasual: IPrompt = {\n\t  name: 'Change Tone to Casual',\n\t  prompt: `\n\t    Please rewrite the following text with a casual tone:\n\t    \"\"\"\n\t    {content}\n\t    \"\"\"\n\t  `,\n\t  output: PromptOutputType.replace,\n", "};\n"]}
{"filename": "src/prompts/make-longer.ts", "chunked_list": ["import { IPrompt, PromptOutputType } from \"./type\";\n\texport const makeLonger: IPrompt = {\n\t  name: 'Make Longer',\n\t  prompt: `\n\t    Please expand the following text, providing more details and depth:\n\t    \"\"\"\n\t    {content}\n\t    \"\"\"\n\t  `,\n\t  output: PromptOutputType.replace,\n", "};\n"]}
{"filename": "src/prompts/summarize.ts", "chunked_list": ["import { IPrompt, PromptOutputType } from './type';\n\texport const Summarize: IPrompt = {\n\t  name: 'Summarize',\n\t  prompt: `\n\t    Please provide a concise summary of the following text:\n\t    \"\"\"\n\t    {content}\n\t    \"\"\"\n\t  `,\n\t  output: PromptOutputType.property,\n", "};\n"]}
{"filename": "src/prompts/change-tone-to-professional.ts", "chunked_list": ["import { IPrompt, PromptOutputType } from './type';\n\texport const ChangeToneToProfessional: IPrompt = {\n\t  name: 'Change Tone to Professional',\n\t  prompt: `\n\t    Please rewrite the following text with a more professional tone:\n\t    \"\"\"\n\t    {content}\n\t    \"\"\"\n\t  `,\n\t  output: PromptOutputType.replace,\n", "};\n"]}
{"filename": "src/prompts/ask-ai.ts", "chunked_list": ["import { IPrompt, PromptOutputType } from './type';\n\texport const AskAI: IPrompt = {\n\t  name: 'Ask AI',\n\t  prompt: `\n\t    I have a question:\n\t    \"\"\"\n\t    {content}\n\t    \"\"\"\n\t    Please provide a helpful answer.\n\t  `,\n", "  output: PromptOutputType.insert,\n\t};\n"]}
{"filename": "src/prompts/generate-ideas.ts", "chunked_list": ["import { IPrompt, PromptOutputType } from \"./type\";\n\texport const GenerateIdeas: IPrompt = {\n\t  name: 'Generate Ideas',\n\t  prompt: `\n\t    Please creative ideas related to the following topic:\n\t    \"\"\"\n\t    {content}\n\t    \"\"\"\n\t  `,\n\t  output: PromptOutputType.insert,\n", "  format: [],\n\t};\n"]}
{"filename": "src/prompts/index.ts", "chunked_list": ["export * from './ask-ai';\n\texport * from './change-tone-to-casual';\n\texport * from './change-tone-to-confident';\n\texport * from './change-tone-to-friendly';\n\texport * from './change-tone-to-professional';\n\texport * from './explain-this';\n\texport * from './generate-ideas';\n\texport * from './make-longer';\n\texport * from './make-shorter';\n\texport * from './summarize';\n"]}
{"filename": "src/prompts/type.ts", "chunked_list": ["export interface IPrompt {\n\t  name: string;\n\t  prompt: string;\n\t  output: PromptOutputType;\n\t  format?: string | [] | { [key: string]: string };\n\t}\n\texport enum PromptOutputType {\n\t  property = 'property',\n\t  replace = 'replace',\n\t  insert = 'insert',\n", "}\n"]}
{"filename": "src/prompts/explain-this.ts", "chunked_list": ["import { IPrompt, PromptOutputType } from \"./type\";\n\texport const ExplainThis: IPrompt = {\n\t  name: 'Explain This',\n\t  prompt: `\n\t    Please provide a clear explanation for the following text or code snippet:\n\t    \"\"\"\n\t    {content}\n\t    \"\"\"\n\t  `,\n\t  output: PromptOutputType.insert,\n", "};\n"]}
{"filename": "src/prompts/change-tone-to-friendly.ts", "chunked_list": ["import { IPrompt, PromptOutputType } from \"./type\";\n\texport const ChangeToneToFriendly: IPrompt = {\n\t  name: 'Change Tone to Friendly',\n\t  prompt: `\n\t    Please rewrite the following text with a friendly tone:\n\t    \"\"\"\n\t    {content}\n\t    \"\"\"\n\t  `,\n\t  output: PromptOutputType.replace,\n", "};\n"]}
{"filename": "src/prompts/change-tone-to-confident.ts", "chunked_list": ["import { IPrompt, PromptOutputType } from \"./type\";\n\texport const ChangeToneToConfident: IPrompt = {\n\t  name: 'Change Tone to Confident',\n\t  prompt: `\n\t    Please rewrite the following text with a confident tone:\n\t    \"\"\"\n\t    {content}\n\t    \"\"\"\n\t  `,\n\t  output: PromptOutputType.replace,\n", "};\n"]}
